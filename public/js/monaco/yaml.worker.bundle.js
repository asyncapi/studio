!(function(e) {
  var t = {};
  function n(r) {
    if (t[r]) return t[r].exports;
    var i = (t[r] = { i: r, l: !1, exports: {} });
    return e[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports;
  }
  (n.m = e),
    (n.c = t),
    (n.d = function(e, t, r) {
      n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r });
    }),
    (n.r = function(e) {
      'undefined' != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(e, '__esModule', { value: !0 });
    }),
    (n.t = function(e, t) {
      if ((1 & t && (e = n(e)), 8 & t)) return e;
      if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
      var r = Object.create(null);
      if (
        (n.r(r),
        Object.defineProperty(r, 'default', { enumerable: !0, value: e }),
        2 & t && 'string' != typeof e)
      )
        for (var i in e)
          n.d(
            r,
            i,
            function(t) {
              return e[t];
            }.bind(null, i),
          );
      return r;
    }),
    (n.n = function(e) {
      var t =
        e && e.__esModule
          ? function() {
              return e.default;
            }
          : function() {
              return e;
            };
      return n.d(t, 'a', t), t;
    }),
    (n.o = function(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (n.p = ''),
    n((n.s = 78));
})([
  function(e, t, n) {
    'use strict';
    (function(e, r) {
      var i;
      n.d(t, 'a', function() {
        return g;
      }),
        n.d(t, 'd', function() {
          return C;
        }),
        n.d(t, 'b', function() {
          return b;
        }),
        n.d(t, 'c', function() {
          return x;
        }),
        n.d(t, 'e', function() {
          return A;
        });
      let a = !1,
        o = !1,
        s = !1,
        u = !1,
        c = !1,
        l = !1,
        p = !1,
        f = void 0,
        h = 'en',
        d = void 0,
        m = void 0;
      const g = 'object' == typeof self ? self : 'object' == typeof e ? e : {};
      let y = void 0;
      void 0 !== g.vscode && void 0 !== g.vscode.process
        ? (y = g.vscode.process)
        : void 0 !== r && (y = r);
      const v =
          'string' ==
            typeof (null === (i = null == y ? void 0 : y.versions) ||
            void 0 === i
              ? void 0
              : i.electron) && 'renderer' === y.type,
        D = v && (null == y ? void 0 : y.sandboxed);
      (() => {
        if (D) return 'bypassHeatCheck';
        const e = null == y ? void 0 : y.env.VSCODE_BROWSER_CODE_LOADING;
      })();
      if ('object' != typeof navigator || v)
        if ('object' == typeof y) {
          (a = 'win32' === y.platform),
            (o = 'darwin' === y.platform),
            (s = 'linux' === y.platform),
            (u = s && !!y.env.SNAP && !!y.env.SNAP_REVISION),
            (f = 'en'),
            (h = 'en');
          const e = y.env.VSCODE_NLS_CONFIG;
          if (e)
            try {
              const t = JSON.parse(e),
                n = t.availableLanguages['*'];
              (f = t.locale), (h = n || 'en'), (d = t._translationsConfigFile);
            } catch (e) {}
          c = !0;
        } else console.error('Unable to resolve platform.');
      else
        (m = navigator.userAgent),
          (a = m.indexOf('Windows') >= 0),
          (o = m.indexOf('Macintosh') >= 0),
          (p =
            (m.indexOf('Macintosh') >= 0 ||
              m.indexOf('iPad') >= 0 ||
              m.indexOf('iPhone') >= 0) &&
            !!navigator.maxTouchPoints &&
            navigator.maxTouchPoints > 0),
          (s = m.indexOf('Linux') >= 0),
          (l = !0),
          (f = navigator.language),
          (h = f);
      let E = 0;
      o ? (E = 1) : a ? (E = 3) : s && (E = 2);
      const C = a,
        b = o,
        x = l,
        A = (function() {
          if (g.setImmediate) return g.setImmediate.bind(g);
          if ('function' == typeof g.postMessage && !g.importScripts) {
            let e = [];
            g.addEventListener('message', t => {
              if (t.data && t.data.vscodeSetImmediateId)
                for (let n = 0, r = e.length; n < r; n++) {
                  const r = e[n];
                  if (r.id === t.data.vscodeSetImmediateId)
                    return e.splice(n, 1), void r.callback();
                }
            });
            let t = 0;
            return n => {
              const r = ++t;
              e.push({ id: r, callback: n }),
                g.postMessage({ vscodeSetImmediateId: r }, '*');
            };
          }
          if ('function' == typeof (null == y ? void 0 : y.nextTick))
            return y.nextTick.bind(y);
          const e = Promise.resolve();
          return t => e.then(t);
        })();
    }.call(this, n(7), n(2)));
  },
  function(e, t, n) {
    'use strict';
    (function(e) {
      n.d(t, 'a', function() {
        return a;
      }),
        n.d(t, 'b', function() {
          return o;
        }),
        n.d(t, 'c', function() {
          return s;
        });
      var r = n(0);
      let i;
      if (void 0 !== r.a.vscode && void 0 !== r.a.vscode.process) {
        const e = r.a.vscode.process;
        i = {
          get platform() {
            return e.platform;
          },
          get env() {
            return e.env;
          },
          cwd: () => e.cwd(),
          nextTick: e => Object(r.e)(e),
        };
      } else
        i =
          void 0 !== e
            ? {
                get platform() {
                  return e.platform;
                },
                get env() {
                  return e.env;
                },
                cwd: () => e.env.VSCODE_CWD || e.cwd(),
                nextTick: t => e.nextTick(t),
              }
            : {
                get platform() {
                  return r.d ? 'win32' : r.b ? 'darwin' : 'linux';
                },
                nextTick: e => Object(r.e)(e),
                get env() {
                  return {};
                },
                cwd: () => '/',
              };
      const a = i.cwd,
        o = i.env,
        s = i.platform;
    }.call(this, n(2)));
  },
  function(e, t) {
    var n,
      r,
      i = (e.exports = {});
    function a() {
      throw new Error('setTimeout has not been defined');
    }
    function o() {
      throw new Error('clearTimeout has not been defined');
    }
    function s(e) {
      if (n === setTimeout) return setTimeout(e, 0);
      if ((n === a || !n) && setTimeout)
        return (n = setTimeout), setTimeout(e, 0);
      try {
        return n(e, 0);
      } catch (t) {
        try {
          return n.call(null, e, 0);
        } catch (t) {
          return n.call(this, e, 0);
        }
      }
    }
    !(function() {
      try {
        n = 'function' == typeof setTimeout ? setTimeout : a;
      } catch (e) {
        n = a;
      }
      try {
        r = 'function' == typeof clearTimeout ? clearTimeout : o;
      } catch (e) {
        r = o;
      }
    })();
    var u,
      c = [],
      l = !1,
      p = -1;
    function f() {
      l &&
        u &&
        ((l = !1), u.length ? (c = u.concat(c)) : (p = -1), c.length && h());
    }
    function h() {
      if (!l) {
        var e = s(f);
        l = !0;
        for (var t = c.length; t; ) {
          for (u = c, c = []; ++p < t; ) u && u[p].run();
          (p = -1), (t = c.length);
        }
        (u = null),
          (l = !1),
          (function(e) {
            if (r === clearTimeout) return clearTimeout(e);
            if ((r === o || !r) && clearTimeout)
              return (r = clearTimeout), clearTimeout(e);
            try {
              r(e);
            } catch (t) {
              try {
                return r.call(null, e);
              } catch (t) {
                return r.call(this, e);
              }
            }
          })(e);
      }
    }
    function d(e, t) {
      (this.fun = e), (this.array = t);
    }
    function m() {}
    (i.nextTick = function(e) {
      var t = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
      c.push(new d(e, t)), 1 !== c.length || l || s(h);
    }),
      (d.prototype.run = function() {
        this.fun.apply(null, this.array);
      }),
      (i.title = 'browser'),
      (i.browser = !0),
      (i.env = {}),
      (i.argv = []),
      (i.version = ''),
      (i.versions = {}),
      (i.on = m),
      (i.addListener = m),
      (i.once = m),
      (i.off = m),
      (i.removeListener = m),
      (i.removeAllListeners = m),
      (i.emit = m),
      (i.prependListener = m),
      (i.prependOnceListener = m),
      (i.listeners = function(e) {
        return [];
      }),
      (i.binding = function(e) {
        throw new Error('process.binding is not supported');
      }),
      (i.cwd = function() {
        return '/';
      }),
      (i.chdir = function(e) {
        throw new Error('process.chdir is not supported');
      }),
      (i.umask = function() {
        return 0;
      });
  },
  function(e, t, n) {
    'use strict';
    var r = n(18),
      i = [
        'kind',
        'resolve',
        'construct',
        'instanceOf',
        'predicate',
        'represent',
        'defaultStyle',
        'styleAliases',
      ],
      a = ['scalar', 'sequence', 'mapping'];
    e.exports = function(e, t) {
      var n, o;
      if (
        ((t = t || {}),
        Object.keys(t).forEach(function(t) {
          if (-1 === i.indexOf(t))
            throw new r(
              'Unknown option "' +
                t +
                '" is met in definition of "' +
                e +
                '" YAML type.',
            );
        }),
        (this.tag = e),
        (this.kind = t.kind || null),
        (this.resolve =
          t.resolve ||
          function() {
            return !0;
          }),
        (this.construct =
          t.construct ||
          function(e) {
            return e;
          }),
        (this.instanceOf = t.instanceOf || null),
        (this.predicate = t.predicate || null),
        (this.represent = t.represent || null),
        (this.defaultStyle = t.defaultStyle || null),
        (this.styleAliases =
          ((n = t.styleAliases || null),
          (o = {}),
          null !== n &&
            Object.keys(n).forEach(function(e) {
              n[e].forEach(function(t) {
                o[String(t)] = e;
              });
            }),
          o)),
        -1 === a.indexOf(this.kind))
      )
        throw new r(
          'Unknown kind "' +
            this.kind +
            '" is specified for "' +
            e +
            '" YAML type.',
        );
    };
  },
  function(e, t, n) {
    'use strict';
    function r(e) {
      for (var n in e) t.hasOwnProperty(n) || (t[n] = e[n]);
    }
    Object.defineProperty(t, '__esModule', { value: !0 });
    var i = n(32);
    (t.load = i.load),
      (t.loadAll = i.loadAll),
      (t.safeLoad = i.safeLoad),
      (t.safeLoadAll = i.safeLoadAll);
    var a = n(55);
    (t.dump = a.dump),
      (t.safeDump = a.safeDump),
      (t.YAMLException = n(16)),
      r(n(20)),
      r(n(56));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(16);
    var i = [
        'kind',
        'resolve',
        'construct',
        'instanceOf',
        'predicate',
        'represent',
        'defaultStyle',
        'styleAliases',
      ],
      a = ['scalar', 'sequence', 'mapping'];
    t.Type = class {
      constructor(e, t) {
        var n, o;
        if (
          ((t = t || {}),
          Object.keys(t).forEach(function(t) {
            if (-1 === i.indexOf(t))
              throw new r(
                'Unknown option "' +
                  t +
                  '" is met in definition of "' +
                  e +
                  '" YAML type.',
              );
          }),
          (this.tag = e),
          (this.kind = t.kind || null),
          (this.resolve =
            t.resolve ||
            function() {
              return !0;
            }),
          (this.construct =
            t.construct ||
            function(e) {
              return e;
            }),
          (this.instanceOf = t.instanceOf || null),
          (this.predicate = t.predicate || null),
          (this.represent = t.represent || null),
          (this.defaultStyle = t.defaultStyle || null),
          (this.styleAliases =
            ((n = t.styleAliases || null),
            (o = {}),
            null !== n &&
              Object.keys(n).forEach(function(e) {
                n[e].forEach(function(t) {
                  o[String(t)] = e;
                });
              }),
            o)),
          -1 === a.indexOf(this.kind))
        )
          throw new r(
            'Unknown kind "' +
              this.kind +
              '" is specified for "' +
              e +
              '" YAML type.',
          );
      }
    };
  },
  function(e, t, n) {
    'use strict';
    n.r(t),
      n.d(t, 'initialize', function() {
        return Ut;
      });
    const r = new (class {
      constructor() {
        (this.listeners = []),
          (this.unexpectedErrorHandler = function(e) {
            setTimeout(() => {
              if (e.stack) throw new Error(e.message + '\n\n' + e.stack);
              throw e;
            }, 0);
          });
      }
      emit(e) {
        this.listeners.forEach(t => {
          t(e);
        });
      }
      onUnexpectedError(e) {
        this.unexpectedErrorHandler(e), this.emit(e);
      }
      onUnexpectedExternalError(e) {
        this.unexpectedErrorHandler(e);
      }
    })();
    function i(e) {
      o(e) || r.onUnexpectedError(e);
    }
    function a(e) {
      if (e instanceof Error) {
        let { name: t, message: n } = e;
        return {
          $isError: !0,
          name: t,
          message: n,
          stack: e.stacktrace || e.stack,
        };
      }
      return e;
    }
    function o(e) {
      return (
        e instanceof Error && 'Canceled' === e.name && 'Canceled' === e.message
      );
    }
    var s;
    !(function(e) {
      e.is = function(e) {
        return (
          e && 'object' == typeof e && 'function' == typeof e[Symbol.iterator]
        );
      };
      const t = Object.freeze([]);
      (e.empty = function() {
        return t;
      }),
        (e.single = function*(e) {
          yield e;
        }),
        (e.from = function(e) {
          return e || t;
        }),
        (e.isEmpty = function(e) {
          return !e || !0 === e[Symbol.iterator]().next().done;
        }),
        (e.first = function(e) {
          return e[Symbol.iterator]().next().value;
        }),
        (e.some = function(e, t) {
          for (const n of e) if (t(n)) return !0;
          return !1;
        }),
        (e.find = function(e, t) {
          for (const n of e) if (t(n)) return n;
        }),
        (e.filter = function*(e, t) {
          for (const n of e) t(n) && (yield n);
        }),
        (e.map = function*(e, t) {
          let n = 0;
          for (const r of e) yield t(r, n++);
        }),
        (e.concat = function*(...e) {
          for (const t of e) for (const e of t) yield e;
        }),
        (e.concatNested = function*(e) {
          for (const t of e) for (const e of t) yield e;
        }),
        (e.reduce = function(e, t, n) {
          let r = n;
          for (const n of e) r = t(r, n);
          return r;
        }),
        (e.slice = function*(e, t, n = e.length) {
          for (
            t < 0 && (t += e.length),
              n < 0 ? (n += e.length) : n > e.length && (n = e.length);
            t < n;
            t++
          )
            yield e[t];
        }),
        (e.consume = function(t, n = Number.POSITIVE_INFINITY) {
          const r = [];
          if (0 === n) return [r, t];
          const i = t[Symbol.iterator]();
          for (let t = 0; t < n; t++) {
            const t = i.next();
            if (t.done) return [r, e.empty()];
            r.push(t.value);
          }
          return [r, { [Symbol.iterator]: () => i }];
        }),
        (e.equals = function(e, t, n = (e, t) => e === t) {
          const r = e[Symbol.iterator](),
            i = t[Symbol.iterator]();
          for (;;) {
            const e = r.next(),
              t = i.next();
            if (e.done !== t.done) return !1;
            if (e.done) return !0;
            if (!n(e.value, t.value)) return !1;
          }
        });
    })(s || (s = {}));
    let u = null;
    function c(e) {
      u && u.markTracked(e);
    }
    function l(e) {
      return u ? (u.trackDisposable(e), e) : e;
    }
    class p extends Error {
      constructor(e) {
        super(
          `Encountered errors while disposing of store. Errors: [${e.join(
            ', ',
          )}]`,
        ),
          (this.errors = e);
      }
    }
    function f(e) {
      if (s.is(e)) {
        let t = [];
        for (const n of e)
          if (n) {
            c(n);
            try {
              n.dispose();
            } catch (e) {
              t.push(e);
            }
          }
        if (1 === t.length) throw t[0];
        if (t.length > 1) throw new p(t);
        return Array.isArray(e) ? [] : e;
      }
      if (e) return c(e), e.dispose(), e;
    }
    function h(...e) {
      return (
        e.forEach(c),
        (function(e) {
          const t = l({
            dispose: () => {
              c(t), e();
            },
          });
          return t;
        })(() => f(e))
      );
    }
    class d {
      constructor() {
        (this._toDispose = new Set()), (this._isDisposed = !1);
      }
      dispose() {
        this._isDisposed || (c(this), (this._isDisposed = !0), this.clear());
      }
      clear() {
        try {
          f(this._toDispose.values());
        } finally {
          this._toDispose.clear();
        }
      }
      add(e) {
        if (!e) return e;
        if (e === this)
          throw new Error('Cannot register a disposable on itself!');
        return (
          c(e),
          this._isDisposed
            ? d.DISABLE_DISPOSED_WARNING ||
              console.warn(
                new Error(
                  'Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!',
                ).stack,
              )
            : this._toDispose.add(e),
          e
        );
      }
    }
    d.DISABLE_DISPOSED_WARNING = !1;
    class m {
      constructor() {
        (this._store = new d()), l(this);
      }
      dispose() {
        c(this), this._store.dispose();
      }
      _register(e) {
        if (e === this)
          throw new Error('Cannot register a disposable on itself!');
        return this._store.add(e);
      }
    }
    m.None = Object.freeze({ dispose() {} });
    var g = n(0);
    function y(e) {
      const t = [];
      for (const n of (function(e) {
        let t = [],
          n = Object.getPrototypeOf(e);
        for (; Object.prototype !== n; )
          (t = t.concat(Object.getOwnPropertyNames(n))),
            (n = Object.getPrototypeOf(n));
        return t;
      })(e))
        'function' == typeof e[n] && t.push(n);
      return t;
    }
    function v(e, t) {
      const n = e =>
        function() {
          const n = Array.prototype.slice.call(arguments, 0);
          return t(e, n);
        };
      let r = {};
      for (const t of e) r[t] = n(t);
      return r;
    }
    class D {
      constructor(e) {
        (this._workerId = -1),
          (this._handler = e),
          (this._lastSentReq = 0),
          (this._pendingReplies = Object.create(null));
      }
      setWorkerId(e) {
        this._workerId = e;
      }
      sendMessage(e, t) {
        let n = String(++this._lastSentReq);
        return new Promise((r, i) => {
          (this._pendingReplies[n] = { resolve: r, reject: i }),
            this._send({
              vsWorker: this._workerId,
              req: n,
              method: e,
              args: t,
            });
        });
      }
      handleMessage(e) {
        e &&
          e.vsWorker &&
          ((-1 !== this._workerId && e.vsWorker !== this._workerId) ||
            this._handleMessage(e));
      }
      _handleMessage(e) {
        if (e.seq) {
          let t = e;
          if (!this._pendingReplies[t.seq])
            return void console.warn('Got reply to unknown seq');
          let n = this._pendingReplies[t.seq];
          if ((delete this._pendingReplies[t.seq], t.err)) {
            let e = t.err;
            return (
              t.err.$isError &&
                ((e = new Error()),
                (e.name = t.err.name),
                (e.message = t.err.message),
                (e.stack = t.err.stack)),
              void n.reject(e)
            );
          }
          return void n.resolve(t.res);
        }
        let t = e,
          n = t.req;
        this._handler.handleMessage(t.method, t.args).then(
          e => {
            this._send({
              vsWorker: this._workerId,
              seq: n,
              res: e,
              err: void 0,
            });
          },
          e => {
            e.detail instanceof Error && (e.detail = a(e.detail)),
              this._send({
                vsWorker: this._workerId,
                seq: n,
                res: void 0,
                err: a(e),
              });
          },
        );
      }
      _send(e) {
        let t = [];
        if (e.req) {
          const n = e;
          for (let e = 0; e < n.args.length; e++)
            n.args[e] instanceof ArrayBuffer && t.push(n.args[e]);
        } else {
          const n = e;
          n.res instanceof ArrayBuffer && t.push(n.res);
        }
        this._handler.sendMessage(e, t);
      }
    }
    class E {
      constructor(e, t) {
        (this._requestHandlerFactory = t),
          (this._requestHandler = null),
          (this._protocol = new D({
            sendMessage: (t, n) => {
              e(t, n);
            },
            handleMessage: (e, t) => this._handleMessage(e, t),
          }));
      }
      onmessage(e) {
        this._protocol.handleMessage(e);
      }
      _handleMessage(e, t) {
        if ('$initialize' === e) return this.initialize(t[0], t[1], t[2], t[3]);
        if (
          !this._requestHandler ||
          'function' != typeof this._requestHandler[e]
        )
          return Promise.reject(
            new Error('Missing requestHandler or method: ' + e),
          );
        try {
          return Promise.resolve(
            this._requestHandler[e].apply(this._requestHandler, t),
          );
        } catch (e) {
          return Promise.reject(e);
        }
      }
      initialize(e, t, n, r) {
        this._protocol.setWorkerId(e);
        const i = v(r, (e, t) => this._protocol.sendMessage(e, t));
        return this._requestHandlerFactory
          ? ((this._requestHandler = this._requestHandlerFactory(i)),
            Promise.resolve(y(this._requestHandler)))
          : (t &&
              (void 0 !== t.baseUrl && delete t.baseUrl,
              void 0 !== t.paths && void 0 !== t.paths.vs && delete t.paths.vs,
              void 0 !== typeof t.trustedTypesPolicy &&
                delete t.trustedTypesPolicy,
              (t.catchError = !0),
              self.require.config(t)),
            new Promise((e, t) => {
              self.require(
                [n],
                n => {
                  (this._requestHandler = n.create(i)),
                    this._requestHandler
                      ? e(y(this._requestHandler))
                      : t(new Error('No RequestHandler!'));
                },
                t,
              );
            }));
      }
    }
    class C {
      constructor(e, t, n, r) {
        (this.originalStart = e),
          (this.originalLength = t),
          (this.modifiedStart = n),
          (this.modifiedLength = r);
      }
      getOriginalEnd() {
        return this.originalStart + this.originalLength;
      }
      getModifiedEnd() {
        return this.modifiedStart + this.modifiedLength;
      }
    }
    function b(e) {
      return 55296 <= e && e <= 56319;
    }
    function x(e) {
      return 56320 <= e && e <= 57343;
    }
    function A(e, t) {
      return t - 56320 + ((e - 55296) << 10) + 65536;
    }
    String.fromCharCode(65279);
    class S {
      constructor() {
        this._data = JSON.parse(
          '[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]',
        );
      }
      static getInstance() {
        return S._INSTANCE || (S._INSTANCE = new S()), S._INSTANCE;
      }
      getGraphemeBreakType(e) {
        if (e < 32) return 10 === e ? 3 : 13 === e ? 2 : 4;
        if (e < 127) return 0;
        const t = this._data,
          n = t.length / 3;
        let r = 1;
        for (; r <= n; )
          if (e < t[3 * r]) r *= 2;
          else {
            if (!(e > t[3 * r + 1])) return t[3 * r + 2];
            r = 2 * r + 1;
          }
        return 0;
      }
    }
    function w(e, t) {
      return ((t << 5) - t + e) | 0;
    }
    function F(e, t) {
      t = w(149417, t);
      for (let n = 0, r = e.length; n < r; n++) t = w(e.charCodeAt(n), t);
      return t;
    }
    function k(e, t, n = 32) {
      const r = n - t;
      return ((e << t) | ((~((1 << r) - 1) & e) >>> r)) >>> 0;
    }
    function T(e, t = 0, n = e.byteLength, r = 0) {
      for (let i = 0; i < n; i++) e[t + i] = r;
    }
    function _(e, t = 32) {
      return e instanceof ArrayBuffer
        ? Array.from(new Uint8Array(e))
            .map(e => e.toString(16).padStart(2, '0'))
            .join('')
        : (function(e, t, n = '0') {
            for (; e.length < t; ) e = n + e;
            return e;
          })((e >>> 0).toString(16), t / 4);
    }
    S._INSTANCE = null;
    class O {
      constructor() {
        (this._h0 = 1732584193),
          (this._h1 = 4023233417),
          (this._h2 = 2562383102),
          (this._h3 = 271733878),
          (this._h4 = 3285377520),
          (this._buff = new Uint8Array(67)),
          (this._buffDV = new DataView(this._buff.buffer)),
          (this._buffLen = 0),
          (this._totalLen = 0),
          (this._leftoverHighSurrogate = 0),
          (this._finished = !1);
      }
      update(e) {
        const t = e.length;
        if (0 === t) return;
        const n = this._buff;
        let r,
          i,
          a = this._buffLen,
          o = this._leftoverHighSurrogate;
        for (
          0 !== o
            ? ((r = o), (i = -1), (o = 0))
            : ((r = e.charCodeAt(0)), (i = 0));
          ;

        ) {
          let s = r;
          if (b(r)) {
            if (!(i + 1 < t)) {
              o = r;
              break;
            }
            {
              const t = e.charCodeAt(i + 1);
              x(t) ? (i++, (s = A(r, t))) : (s = 65533);
            }
          } else x(r) && (s = 65533);
          if (((a = this._push(n, a, s)), i++, !(i < t))) break;
          r = e.charCodeAt(i);
        }
        (this._buffLen = a), (this._leftoverHighSurrogate = o);
      }
      _push(e, t, n) {
        return (
          n < 128
            ? (e[t++] = n)
            : n < 2048
            ? ((e[t++] = 192 | ((1984 & n) >>> 6)),
              (e[t++] = 128 | ((63 & n) >>> 0)))
            : n < 65536
            ? ((e[t++] = 224 | ((61440 & n) >>> 12)),
              (e[t++] = 128 | ((4032 & n) >>> 6)),
              (e[t++] = 128 | ((63 & n) >>> 0)))
            : ((e[t++] = 240 | ((1835008 & n) >>> 18)),
              (e[t++] = 128 | ((258048 & n) >>> 12)),
              (e[t++] = 128 | ((4032 & n) >>> 6)),
              (e[t++] = 128 | ((63 & n) >>> 0))),
          t >= 64 &&
            (this._step(),
            (t -= 64),
            (this._totalLen += 64),
            (e[0] = e[64]),
            (e[1] = e[65]),
            (e[2] = e[66])),
          t
        );
      }
      digest() {
        return (
          this._finished ||
            ((this._finished = !0),
            this._leftoverHighSurrogate &&
              ((this._leftoverHighSurrogate = 0),
              (this._buffLen = this._push(this._buff, this._buffLen, 65533))),
            (this._totalLen += this._buffLen),
            this._wrapUp()),
          _(this._h0) + _(this._h1) + _(this._h2) + _(this._h3) + _(this._h4)
        );
      }
      _wrapUp() {
        (this._buff[this._buffLen++] = 128),
          T(this._buff, this._buffLen),
          this._buffLen > 56 && (this._step(), T(this._buff));
        const e = 8 * this._totalLen;
        this._buffDV.setUint32(56, Math.floor(e / 4294967296), !1),
          this._buffDV.setUint32(60, e % 4294967296, !1),
          this._step();
      }
      _step() {
        const e = O._bigBlock32,
          t = this._buffDV;
        for (let n = 0; n < 64; n += 4) e.setUint32(n, t.getUint32(n, !1), !1);
        for (let t = 64; t < 320; t += 4)
          e.setUint32(
            t,
            k(
              e.getUint32(t - 12, !1) ^
                e.getUint32(t - 32, !1) ^
                e.getUint32(t - 56, !1) ^
                e.getUint32(t - 64, !1),
              1,
            ),
            !1,
          );
        let n,
          r,
          i,
          a = this._h0,
          o = this._h1,
          s = this._h2,
          u = this._h3,
          c = this._h4;
        for (let t = 0; t < 80; t++)
          t < 20
            ? ((n = (o & s) | (~o & u)), (r = 1518500249))
            : t < 40
            ? ((n = o ^ s ^ u), (r = 1859775393))
            : t < 60
            ? ((n = (o & s) | (o & u) | (s & u)), (r = 2400959708))
            : ((n = o ^ s ^ u), (r = 3395469782)),
            (i = (k(a, 5) + n + c + r + e.getUint32(4 * t, !1)) & 4294967295),
            (c = u),
            (u = s),
            (s = k(o, 30)),
            (o = a),
            (a = i);
        (this._h0 = (this._h0 + a) & 4294967295),
          (this._h1 = (this._h1 + o) & 4294967295),
          (this._h2 = (this._h2 + s) & 4294967295),
          (this._h3 = (this._h3 + u) & 4294967295),
          (this._h4 = (this._h4 + c) & 4294967295);
      }
    }
    O._bigBlock32 = new DataView(new ArrayBuffer(320));
    class N {
      constructor(e) {
        this.source = e;
      }
      getElements() {
        const e = this.source,
          t = new Int32Array(e.length);
        for (let n = 0, r = e.length; n < r; n++) t[n] = e.charCodeAt(n);
        return t;
      }
    }
    function B(e, t, n) {
      return new L(new N(e), new N(t)).ComputeDiff(n).changes;
    }
    class I {
      static Assert(e, t) {
        if (!e) throw new Error(t);
      }
    }
    class P {
      static Copy(e, t, n, r, i) {
        for (let a = 0; a < i; a++) n[r + a] = e[t + a];
      }
      static Copy2(e, t, n, r, i) {
        for (let a = 0; a < i; a++) n[r + a] = e[t + a];
      }
    }
    class M {
      constructor() {
        (this.m_changes = []),
          (this.m_originalStart = 1073741824),
          (this.m_modifiedStart = 1073741824),
          (this.m_originalCount = 0),
          (this.m_modifiedCount = 0);
      }
      MarkNextChange() {
        (this.m_originalCount > 0 || this.m_modifiedCount > 0) &&
          this.m_changes.push(
            new C(
              this.m_originalStart,
              this.m_originalCount,
              this.m_modifiedStart,
              this.m_modifiedCount,
            ),
          ),
          (this.m_originalCount = 0),
          (this.m_modifiedCount = 0),
          (this.m_originalStart = 1073741824),
          (this.m_modifiedStart = 1073741824);
      }
      AddOriginalElement(e, t) {
        (this.m_originalStart = Math.min(this.m_originalStart, e)),
          (this.m_modifiedStart = Math.min(this.m_modifiedStart, t)),
          this.m_originalCount++;
      }
      AddModifiedElement(e, t) {
        (this.m_originalStart = Math.min(this.m_originalStart, e)),
          (this.m_modifiedStart = Math.min(this.m_modifiedStart, t)),
          this.m_modifiedCount++;
      }
      getChanges() {
        return (
          (this.m_originalCount > 0 || this.m_modifiedCount > 0) &&
            this.MarkNextChange(),
          this.m_changes
        );
      }
      getReverseChanges() {
        return (
          (this.m_originalCount > 0 || this.m_modifiedCount > 0) &&
            this.MarkNextChange(),
          this.m_changes.reverse(),
          this.m_changes
        );
      }
    }
    class L {
      constructor(e, t, n = null) {
        this.ContinueProcessingPredicate = n;
        const [r, i, a] = L._getElements(e),
          [o, s, u] = L._getElements(t);
        (this._hasStrings = a && u),
          (this._originalStringElements = r),
          (this._originalElementsOrHash = i),
          (this._modifiedStringElements = o),
          (this._modifiedElementsOrHash = s),
          (this.m_forwardHistory = []),
          (this.m_reverseHistory = []);
      }
      static _isStringArray(e) {
        return e.length > 0 && 'string' == typeof e[0];
      }
      static _getElements(e) {
        const t = e.getElements();
        if (L._isStringArray(t)) {
          const e = new Int32Array(t.length);
          for (let n = 0, r = t.length; n < r; n++) e[n] = F(t[n], 0);
          return [t, e, !0];
        }
        return t instanceof Int32Array
          ? [[], t, !1]
          : [[], new Int32Array(t), !1];
      }
      ElementsAreEqual(e, t) {
        return (
          this._originalElementsOrHash[e] === this._modifiedElementsOrHash[t] &&
          (!this._hasStrings ||
            this._originalStringElements[e] === this._modifiedStringElements[t])
        );
      }
      OriginalElementsAreEqual(e, t) {
        return (
          this._originalElementsOrHash[e] === this._originalElementsOrHash[t] &&
          (!this._hasStrings ||
            this._originalStringElements[e] === this._originalStringElements[t])
        );
      }
      ModifiedElementsAreEqual(e, t) {
        return (
          this._modifiedElementsOrHash[e] === this._modifiedElementsOrHash[t] &&
          (!this._hasStrings ||
            this._modifiedStringElements[e] === this._modifiedStringElements[t])
        );
      }
      ComputeDiff(e) {
        return this._ComputeDiff(
          0,
          this._originalElementsOrHash.length - 1,
          0,
          this._modifiedElementsOrHash.length - 1,
          e,
        );
      }
      _ComputeDiff(e, t, n, r, i) {
        const a = [!1];
        let o = this.ComputeDiffRecursive(e, t, n, r, a);
        return (
          i && (o = this.PrettifyChanges(o)), { quitEarly: a[0], changes: o }
        );
      }
      ComputeDiffRecursive(e, t, n, r, i) {
        for (i[0] = !1; e <= t && n <= r && this.ElementsAreEqual(e, n); )
          e++, n++;
        for (; t >= e && r >= n && this.ElementsAreEqual(t, r); ) t--, r--;
        if (e > t || n > r) {
          let i;
          return (
            n <= r
              ? (I.Assert(
                  e === t + 1,
                  'originalStart should only be one more than originalEnd',
                ),
                (i = [new C(e, 0, n, r - n + 1)]))
              : e <= t
              ? (I.Assert(
                  n === r + 1,
                  'modifiedStart should only be one more than modifiedEnd',
                ),
                (i = [new C(e, t - e + 1, n, 0)]))
              : (I.Assert(
                  e === t + 1,
                  'originalStart should only be one more than originalEnd',
                ),
                I.Assert(
                  n === r + 1,
                  'modifiedStart should only be one more than modifiedEnd',
                ),
                (i = [])),
            i
          );
        }
        const a = [0],
          o = [0],
          s = this.ComputeRecursionPoint(e, t, n, r, a, o, i),
          u = a[0],
          c = o[0];
        if (null !== s) return s;
        if (!i[0]) {
          const a = this.ComputeDiffRecursive(e, u, n, c, i);
          let o = [];
          return (
            (o = i[0]
              ? [new C(u + 1, t - (u + 1) + 1, c + 1, r - (c + 1) + 1)]
              : this.ComputeDiffRecursive(u + 1, t, c + 1, r, i)),
            this.ConcatenateChanges(a, o)
          );
        }
        return [new C(e, t - e + 1, n, r - n + 1)];
      }
      WALKTRACE(e, t, n, r, i, a, o, s, u, c, l, p, f, h, d, m, g, y) {
        let v = null,
          D = null,
          E = new M(),
          b = t,
          x = n,
          A = f[0] - m[0] - r,
          S = -1073741824,
          w = this.m_forwardHistory.length - 1;
        do {
          const t = A + e;
          t === b || (t < x && u[t - 1] < u[t + 1])
            ? ((h = (l = u[t + 1]) - A - r),
              l < S && E.MarkNextChange(),
              (S = l),
              E.AddModifiedElement(l + 1, h),
              (A = t + 1 - e))
            : ((h = (l = u[t - 1] + 1) - A - r),
              l < S && E.MarkNextChange(),
              (S = l - 1),
              E.AddOriginalElement(l, h + 1),
              (A = t - 1 - e)),
            w >= 0 &&
              ((e = (u = this.m_forwardHistory[w])[0]),
              (b = 1),
              (x = u.length - 1));
        } while (--w >= -1);
        if (((v = E.getReverseChanges()), y[0])) {
          let e = f[0] + 1,
            t = m[0] + 1;
          if (null !== v && v.length > 0) {
            const n = v[v.length - 1];
            (e = Math.max(e, n.getOriginalEnd())),
              (t = Math.max(t, n.getModifiedEnd()));
          }
          D = [new C(e, p - e + 1, t, d - t + 1)];
        } else {
          (E = new M()),
            (b = a),
            (x = o),
            (A = f[0] - m[0] - s),
            (S = 1073741824),
            (w = g
              ? this.m_reverseHistory.length - 1
              : this.m_reverseHistory.length - 2);
          do {
            const e = A + i;
            e === b || (e < x && c[e - 1] >= c[e + 1])
              ? ((h = (l = c[e + 1] - 1) - A - s),
                l > S && E.MarkNextChange(),
                (S = l + 1),
                E.AddOriginalElement(l + 1, h + 1),
                (A = e + 1 - i))
              : ((h = (l = c[e - 1]) - A - s),
                l > S && E.MarkNextChange(),
                (S = l),
                E.AddModifiedElement(l + 1, h + 1),
                (A = e - 1 - i)),
              w >= 0 &&
                ((i = (c = this.m_reverseHistory[w])[0]),
                (b = 1),
                (x = c.length - 1));
          } while (--w >= -1);
          D = E.getChanges();
        }
        return this.ConcatenateChanges(v, D);
      }
      ComputeRecursionPoint(e, t, n, r, i, a, o) {
        let s = 0,
          u = 0,
          c = 0,
          l = 0,
          p = 0,
          f = 0;
        e--,
          n--,
          (i[0] = 0),
          (a[0] = 0),
          (this.m_forwardHistory = []),
          (this.m_reverseHistory = []);
        const h = t - e + (r - n),
          d = h + 1,
          m = new Int32Array(d),
          g = new Int32Array(d),
          y = r - n,
          v = t - e,
          D = e - n,
          E = t - r,
          b = (v - y) % 2 == 0;
        (m[y] = e), (g[v] = t), (o[0] = !1);
        for (let x = 1; x <= h / 2 + 1; x++) {
          let h = 0,
            A = 0;
          (c = this.ClipDiagonalBound(y - x, x, y, d)),
            (l = this.ClipDiagonalBound(y + x, x, y, d));
          for (let e = c; e <= l; e += 2) {
            (s =
              e === c || (e < l && m[e - 1] < m[e + 1])
                ? m[e + 1]
                : m[e - 1] + 1),
              (u = s - (e - y) - D);
            const n = s;
            for (; s < t && u < r && this.ElementsAreEqual(s + 1, u + 1); )
              s++, u++;
            if (
              ((m[e] = s),
              s + u > h + A && ((h = s), (A = u)),
              !b && Math.abs(e - v) <= x - 1 && s >= g[e])
            )
              return (
                (i[0] = s),
                (a[0] = u),
                n <= g[e] && x <= 1448
                  ? this.WALKTRACE(
                      y,
                      c,
                      l,
                      D,
                      v,
                      p,
                      f,
                      E,
                      m,
                      g,
                      s,
                      t,
                      i,
                      u,
                      r,
                      a,
                      b,
                      o,
                    )
                  : null
              );
          }
          const S = (h - e + (A - n) - x) / 2;
          if (
            null !== this.ContinueProcessingPredicate &&
            !this.ContinueProcessingPredicate(h, S)
          )
            return (
              (o[0] = !0),
              (i[0] = h),
              (a[0] = A),
              S > 0 && x <= 1448
                ? this.WALKTRACE(
                    y,
                    c,
                    l,
                    D,
                    v,
                    p,
                    f,
                    E,
                    m,
                    g,
                    s,
                    t,
                    i,
                    u,
                    r,
                    a,
                    b,
                    o,
                  )
                : (e++, n++, [new C(e, t - e + 1, n, r - n + 1)])
            );
          (p = this.ClipDiagonalBound(v - x, x, v, d)),
            (f = this.ClipDiagonalBound(v + x, x, v, d));
          for (let h = p; h <= f; h += 2) {
            (s =
              h === p || (h < f && g[h - 1] >= g[h + 1])
                ? g[h + 1] - 1
                : g[h - 1]),
              (u = s - (h - v) - E);
            const d = s;
            for (; s > e && u > n && this.ElementsAreEqual(s, u); ) s--, u--;
            if (((g[h] = s), b && Math.abs(h - y) <= x && s <= m[h]))
              return (
                (i[0] = s),
                (a[0] = u),
                d >= m[h] && x <= 1448
                  ? this.WALKTRACE(
                      y,
                      c,
                      l,
                      D,
                      v,
                      p,
                      f,
                      E,
                      m,
                      g,
                      s,
                      t,
                      i,
                      u,
                      r,
                      a,
                      b,
                      o,
                    )
                  : null
              );
          }
          if (x <= 1447) {
            let e = new Int32Array(l - c + 2);
            (e[0] = y - c + 1),
              P.Copy2(m, c, e, 1, l - c + 1),
              this.m_forwardHistory.push(e),
              (e = new Int32Array(f - p + 2)),
              (e[0] = v - p + 1),
              P.Copy2(g, p, e, 1, f - p + 1),
              this.m_reverseHistory.push(e);
          }
        }
        return this.WALKTRACE(
          y,
          c,
          l,
          D,
          v,
          p,
          f,
          E,
          m,
          g,
          s,
          t,
          i,
          u,
          r,
          a,
          b,
          o,
        );
      }
      PrettifyChanges(e) {
        for (let t = 0; t < e.length; t++) {
          const n = e[t],
            r =
              t < e.length - 1
                ? e[t + 1].originalStart
                : this._originalElementsOrHash.length,
            i =
              t < e.length - 1
                ? e[t + 1].modifiedStart
                : this._modifiedElementsOrHash.length,
            a = n.originalLength > 0,
            o = n.modifiedLength > 0;
          for (
            ;
            n.originalStart + n.originalLength < r &&
            n.modifiedStart + n.modifiedLength < i &&
            (!a ||
              this.OriginalElementsAreEqual(
                n.originalStart,
                n.originalStart + n.originalLength,
              )) &&
            (!o ||
              this.ModifiedElementsAreEqual(
                n.modifiedStart,
                n.modifiedStart + n.modifiedLength,
              ));

          )
            n.originalStart++, n.modifiedStart++;
          let s = [null];
          t < e.length - 1 &&
            this.ChangesOverlap(e[t], e[t + 1], s) &&
            ((e[t] = s[0]), e.splice(t + 1, 1), t--);
        }
        for (let t = e.length - 1; t >= 0; t--) {
          const n = e[t];
          let r = 0,
            i = 0;
          if (t > 0) {
            const n = e[t - 1];
            (r = n.originalStart + n.originalLength),
              (i = n.modifiedStart + n.modifiedLength);
          }
          const a = n.originalLength > 0,
            o = n.modifiedLength > 0;
          let s = 0,
            u = this._boundaryScore(
              n.originalStart,
              n.originalLength,
              n.modifiedStart,
              n.modifiedLength,
            );
          for (let e = 1; ; e++) {
            const t = n.originalStart - e,
              c = n.modifiedStart - e;
            if (t < r || c < i) break;
            if (a && !this.OriginalElementsAreEqual(t, t + n.originalLength))
              break;
            if (o && !this.ModifiedElementsAreEqual(c, c + n.modifiedLength))
              break;
            const l =
              (t === r && c === i ? 5 : 0) +
              this._boundaryScore(t, n.originalLength, c, n.modifiedLength);
            l > u && ((u = l), (s = e));
          }
          (n.originalStart -= s), (n.modifiedStart -= s);
          const c = [null];
          t > 0 &&
            this.ChangesOverlap(e[t - 1], e[t], c) &&
            ((e[t - 1] = c[0]), e.splice(t, 1), t++);
        }
        if (this._hasStrings)
          for (let t = 1, n = e.length; t < n; t++) {
            const n = e[t - 1],
              r = e[t],
              i = r.originalStart - n.originalStart - n.originalLength,
              a = n.originalStart,
              o = r.originalStart + r.originalLength,
              s = o - a,
              u = n.modifiedStart,
              c = r.modifiedStart + r.modifiedLength,
              l = c - u;
            if (i < 5 && s < 20 && l < 20) {
              const e = this._findBetterContiguousSequence(a, s, u, l, i);
              if (e) {
                const [t, a] = e;
                (t === n.originalStart + n.originalLength &&
                  a === n.modifiedStart + n.modifiedLength) ||
                  ((n.originalLength = t - n.originalStart),
                  (n.modifiedLength = a - n.modifiedStart),
                  (r.originalStart = t + i),
                  (r.modifiedStart = a + i),
                  (r.originalLength = o - r.originalStart),
                  (r.modifiedLength = c - r.modifiedStart));
              }
            }
          }
        return e;
      }
      _findBetterContiguousSequence(e, t, n, r, i) {
        if (t < i || r < i) return null;
        const a = e + t - i + 1,
          o = n + r - i + 1;
        let s = 0,
          u = 0,
          c = 0;
        for (let t = e; t < a; t++)
          for (let e = n; e < o; e++) {
            const n = this._contiguousSequenceScore(t, e, i);
            n > 0 && n > s && ((s = n), (u = t), (c = e));
          }
        return s > 0 ? [u, c] : null;
      }
      _contiguousSequenceScore(e, t, n) {
        let r = 0;
        for (let i = 0; i < n; i++) {
          if (!this.ElementsAreEqual(e + i, t + i)) return 0;
          r += this._originalStringElements[e + i].length;
        }
        return r;
      }
      _OriginalIsBoundary(e) {
        return (
          e <= 0 ||
          e >= this._originalElementsOrHash.length - 1 ||
          (this._hasStrings && /^\s*$/.test(this._originalStringElements[e]))
        );
      }
      _OriginalRegionIsBoundary(e, t) {
        if (this._OriginalIsBoundary(e) || this._OriginalIsBoundary(e - 1))
          return !0;
        if (t > 0) {
          const n = e + t;
          if (this._OriginalIsBoundary(n - 1) || this._OriginalIsBoundary(n))
            return !0;
        }
        return !1;
      }
      _ModifiedIsBoundary(e) {
        return (
          e <= 0 ||
          e >= this._modifiedElementsOrHash.length - 1 ||
          (this._hasStrings && /^\s*$/.test(this._modifiedStringElements[e]))
        );
      }
      _ModifiedRegionIsBoundary(e, t) {
        if (this._ModifiedIsBoundary(e) || this._ModifiedIsBoundary(e - 1))
          return !0;
        if (t > 0) {
          const n = e + t;
          if (this._ModifiedIsBoundary(n - 1) || this._ModifiedIsBoundary(n))
            return !0;
        }
        return !1;
      }
      _boundaryScore(e, t, n, r) {
        return (
          (this._OriginalRegionIsBoundary(e, t) ? 1 : 0) +
          (this._ModifiedRegionIsBoundary(n, r) ? 1 : 0)
        );
      }
      ConcatenateChanges(e, t) {
        let n = [];
        if (0 === e.length || 0 === t.length) return t.length > 0 ? t : e;
        if (this.ChangesOverlap(e[e.length - 1], t[0], n)) {
          const r = new Array(e.length + t.length - 1);
          return (
            P.Copy(e, 0, r, 0, e.length - 1),
            (r[e.length - 1] = n[0]),
            P.Copy(t, 1, r, e.length, t.length - 1),
            r
          );
        }
        {
          const n = new Array(e.length + t.length);
          return (
            P.Copy(e, 0, n, 0, e.length), P.Copy(t, 0, n, e.length, t.length), n
          );
        }
      }
      ChangesOverlap(e, t, n) {
        if (
          (I.Assert(
            e.originalStart <= t.originalStart,
            'Left change is not less than or equal to right change',
          ),
          I.Assert(
            e.modifiedStart <= t.modifiedStart,
            'Left change is not less than or equal to right change',
          ),
          e.originalStart + e.originalLength >= t.originalStart ||
            e.modifiedStart + e.modifiedLength >= t.modifiedStart)
        ) {
          const r = e.originalStart;
          let i = e.originalLength;
          const a = e.modifiedStart;
          let o = e.modifiedLength;
          return (
            e.originalStart + e.originalLength >= t.originalStart &&
              (i = t.originalStart + t.originalLength - e.originalStart),
            e.modifiedStart + e.modifiedLength >= t.modifiedStart &&
              (o = t.modifiedStart + t.modifiedLength - e.modifiedStart),
            (n[0] = new C(r, i, a, o)),
            !0
          );
        }
        return (n[0] = null), !1;
      }
      ClipDiagonalBound(e, t, n, r) {
        if (e >= 0 && e < r) return e;
        const i = t % 2 == 0;
        if (e < 0) {
          return i === (n % 2 == 0) ? 0 : 1;
        }
        return i === ((r - n - 1) % 2 == 0) ? r - 1 : r - 2;
      }
    }
    var R = n(1);
    class j extends Error {
      constructor(e, t, n) {
        let r;
        'string' == typeof t && 0 === t.indexOf('not ')
          ? ((r = 'must not be'), (t = t.replace(/^not /, '')))
          : (r = 'must be');
        const i = -1 !== e.indexOf('.') ? 'property' : 'argument';
        let a = `The "${e}" ${i} ${r} of type ${t}`;
        (a += '. Received type ' + typeof n),
          super(a),
          (this.code = 'ERR_INVALID_ARG_TYPE');
      }
    }
    function U(e, t) {
      if ('string' != typeof e) throw new j(t, 'string', e);
    }
    function V(e) {
      return 47 === e || 92 === e;
    }
    function W(e) {
      return 47 === e;
    }
    function $(e) {
      return (e >= 65 && e <= 90) || (e >= 97 && e <= 122);
    }
    function q(e, t, n, r) {
      let i = '',
        a = 0,
        o = -1,
        s = 0,
        u = 0;
      for (let c = 0; c <= e.length; ++c) {
        if (c < e.length) u = e.charCodeAt(c);
        else {
          if (r(u)) break;
          u = 47;
        }
        if (r(u)) {
          if (o === c - 1 || 1 === s);
          else if (2 === s) {
            if (
              i.length < 2 ||
              2 !== a ||
              46 !== i.charCodeAt(i.length - 1) ||
              46 !== i.charCodeAt(i.length - 2)
            ) {
              if (i.length > 2) {
                const e = i.lastIndexOf(n);
                -1 === e
                  ? ((i = ''), (a = 0))
                  : ((i = i.slice(0, e)),
                    (a = i.length - 1 - i.lastIndexOf(n))),
                  (o = c),
                  (s = 0);
                continue;
              }
              if (0 !== i.length) {
                (i = ''), (a = 0), (o = c), (s = 0);
                continue;
              }
            }
            t && ((i += i.length > 0 ? n + '..' : '..'), (a = 2));
          } else
            i.length > 0
              ? (i += `${n}${e.slice(o + 1, c)}`)
              : (i = e.slice(o + 1, c)),
              (a = c - o - 1);
          (o = c), (s = 0);
        } else 46 === u && -1 !== s ? ++s : (s = -1);
      }
      return i;
    }
    function Y(e, t) {
      if (null === t || 'object' != typeof t)
        throw new j('pathObject', 'Object', t);
      const n = t.dir || t.root,
        r = t.base || `${t.name || ''}${t.ext || ''}`;
      return n ? (n === t.root ? `${n}${r}` : `${n}${e}${r}`) : r;
    }
    const J = {
        resolve(...e) {
          let t = '',
            n = '',
            r = !1;
          for (let i = e.length - 1; i >= -1; i--) {
            let a;
            if (i >= 0) {
              if (((a = e[i]), U(a, 'path'), 0 === a.length)) continue;
            } else
              0 === t.length
                ? (a = R.a())
                : ((a = R.b['=' + t] || R.a()),
                  (void 0 === a ||
                    (a.slice(0, 2).toLowerCase() !== t.toLowerCase() &&
                      92 === a.charCodeAt(2))) &&
                    (a = t + '\\'));
            const o = a.length;
            let s = 0,
              u = '',
              c = !1;
            const l = a.charCodeAt(0);
            if (1 === o) V(l) && ((s = 1), (c = !0));
            else if (V(l))
              if (((c = !0), V(a.charCodeAt(1)))) {
                let e = 2,
                  t = e;
                for (; e < o && !V(a.charCodeAt(e)); ) e++;
                if (e < o && e !== t) {
                  const n = a.slice(t, e);
                  for (t = e; e < o && V(a.charCodeAt(e)); ) e++;
                  if (e < o && e !== t) {
                    for (t = e; e < o && !V(a.charCodeAt(e)); ) e++;
                    (e !== o && e === t) ||
                      ((u = `\\\\${n}\\${a.slice(t, e)}`), (s = e));
                  }
                }
              } else s = 1;
            else
              $(l) &&
                58 === a.charCodeAt(1) &&
                ((u = a.slice(0, 2)),
                (s = 2),
                o > 2 && V(a.charCodeAt(2)) && ((c = !0), (s = 3)));
            if (u.length > 0)
              if (t.length > 0) {
                if (u.toLowerCase() !== t.toLowerCase()) continue;
              } else t = u;
            if (r) {
              if (t.length > 0) break;
            } else if (
              ((n = `${a.slice(s)}\\${n}`), (r = c), c && t.length > 0)
            )
              break;
          }
          return (n = q(n, !r, '\\', V)), r ? `${t}\\${n}` : `${t}${n}` || '.';
        },
        normalize(e) {
          U(e, 'path');
          const t = e.length;
          if (0 === t) return '.';
          let n,
            r = 0,
            i = !1;
          const a = e.charCodeAt(0);
          if (1 === t) return W(a) ? '\\' : e;
          if (V(a))
            if (((i = !0), V(e.charCodeAt(1)))) {
              let i = 2,
                a = i;
              for (; i < t && !V(e.charCodeAt(i)); ) i++;
              if (i < t && i !== a) {
                const o = e.slice(a, i);
                for (a = i; i < t && V(e.charCodeAt(i)); ) i++;
                if (i < t && i !== a) {
                  for (a = i; i < t && !V(e.charCodeAt(i)); ) i++;
                  if (i === t) return `\\\\${o}\\${e.slice(a)}\\`;
                  i !== a && ((n = `\\\\${o}\\${e.slice(a, i)}`), (r = i));
                }
              }
            } else r = 1;
          else
            $(a) &&
              58 === e.charCodeAt(1) &&
              ((n = e.slice(0, 2)),
              (r = 2),
              t > 2 && V(e.charCodeAt(2)) && ((i = !0), (r = 3)));
          let o = r < t ? q(e.slice(r), !i, '\\', V) : '';
          return (
            0 !== o.length || i || (o = '.'),
            o.length > 0 && V(e.charCodeAt(t - 1)) && (o += '\\'),
            void 0 === n ? (i ? '\\' + o : o) : i ? `${n}\\${o}` : `${n}${o}`
          );
        },
        isAbsolute(e) {
          U(e, 'path');
          const t = e.length;
          if (0 === t) return !1;
          const n = e.charCodeAt(0);
          return (
            V(n) ||
            (t > 2 && $(n) && 58 === e.charCodeAt(1) && V(e.charCodeAt(2)))
          );
        },
        join(...e) {
          if (0 === e.length) return '.';
          let t, n;
          for (let r = 0; r < e.length; ++r) {
            const i = e[r];
            U(i, 'path'),
              i.length > 0 && (void 0 === t ? (t = n = i) : (t += '\\' + i));
          }
          if (void 0 === t) return '.';
          let r = !0,
            i = 0;
          if ('string' == typeof n && V(n.charCodeAt(0))) {
            ++i;
            const e = n.length;
            e > 1 &&
              V(n.charCodeAt(1)) &&
              (++i, e > 2 && (V(n.charCodeAt(2)) ? ++i : (r = !1)));
          }
          if (r) {
            for (; i < t.length && V(t.charCodeAt(i)); ) i++;
            i >= 2 && (t = '\\' + t.slice(i));
          }
          return J.normalize(t);
        },
        relative(e, t) {
          if ((U(e, 'from'), U(t, 'to'), e === t)) return '';
          const n = J.resolve(e),
            r = J.resolve(t);
          if (n === r) return '';
          if ((e = n.toLowerCase()) === (t = r.toLowerCase())) return '';
          let i = 0;
          for (; i < e.length && 92 === e.charCodeAt(i); ) i++;
          let a = e.length;
          for (; a - 1 > i && 92 === e.charCodeAt(a - 1); ) a--;
          const o = a - i;
          let s = 0;
          for (; s < t.length && 92 === t.charCodeAt(s); ) s++;
          let u = t.length;
          for (; u - 1 > s && 92 === t.charCodeAt(u - 1); ) u--;
          const c = u - s,
            l = o < c ? o : c;
          let p = -1,
            f = 0;
          for (; f < l; f++) {
            const n = e.charCodeAt(i + f);
            if (n !== t.charCodeAt(s + f)) break;
            92 === n && (p = f);
          }
          if (f !== l) {
            if (-1 === p) return r;
          } else {
            if (c > l) {
              if (92 === t.charCodeAt(s + f)) return r.slice(s + f + 1);
              if (2 === f) return r.slice(s + f);
            }
            o > l &&
              (92 === e.charCodeAt(i + f) ? (p = f) : 2 === f && (p = 3)),
              -1 === p && (p = 0);
          }
          let h = '';
          for (f = i + p + 1; f <= a; ++f)
            (f !== a && 92 !== e.charCodeAt(f)) ||
              (h += 0 === h.length ? '..' : '\\..');
          return (
            (s += p),
            h.length > 0
              ? `${h}${r.slice(s, u)}`
              : (92 === r.charCodeAt(s) && ++s, r.slice(s, u))
          );
        },
        toNamespacedPath(e) {
          if ('string' != typeof e) return e;
          if (0 === e.length) return '';
          const t = J.resolve(e);
          if (t.length <= 2) return e;
          if (92 === t.charCodeAt(0)) {
            if (92 === t.charCodeAt(1)) {
              const e = t.charCodeAt(2);
              if (63 !== e && 46 !== e) return '\\\\?\\UNC\\' + t.slice(2);
            }
          } else if (
            $(t.charCodeAt(0)) &&
            58 === t.charCodeAt(1) &&
            92 === t.charCodeAt(2)
          )
            return '\\\\?\\' + t;
          return e;
        },
        dirname(e) {
          U(e, 'path');
          const t = e.length;
          if (0 === t) return '.';
          let n = -1,
            r = 0;
          const i = e.charCodeAt(0);
          if (1 === t) return V(i) ? e : '.';
          if (V(i)) {
            if (((n = r = 1), V(e.charCodeAt(1)))) {
              let i = 2,
                a = i;
              for (; i < t && !V(e.charCodeAt(i)); ) i++;
              if (i < t && i !== a) {
                for (a = i; i < t && V(e.charCodeAt(i)); ) i++;
                if (i < t && i !== a) {
                  for (a = i; i < t && !V(e.charCodeAt(i)); ) i++;
                  if (i === t) return e;
                  i !== a && (n = r = i + 1);
                }
              }
            }
          } else
            $(i) &&
              58 === e.charCodeAt(1) &&
              ((n = t > 2 && V(e.charCodeAt(2)) ? 3 : 2), (r = n));
          let a = -1,
            o = !0;
          for (let n = t - 1; n >= r; --n)
            if (V(e.charCodeAt(n))) {
              if (!o) {
                a = n;
                break;
              }
            } else o = !1;
          if (-1 === a) {
            if (-1 === n) return '.';
            a = n;
          }
          return e.slice(0, a);
        },
        basename(e, t) {
          void 0 !== t && U(t, 'ext'), U(e, 'path');
          let n,
            r = 0,
            i = -1,
            a = !0;
          if (
            (e.length >= 2 &&
              $(e.charCodeAt(0)) &&
              58 === e.charCodeAt(1) &&
              (r = 2),
            void 0 !== t && t.length > 0 && t.length <= e.length)
          ) {
            if (t === e) return '';
            let o = t.length - 1,
              s = -1;
            for (n = e.length - 1; n >= r; --n) {
              const u = e.charCodeAt(n);
              if (V(u)) {
                if (!a) {
                  r = n + 1;
                  break;
                }
              } else
                -1 === s && ((a = !1), (s = n + 1)),
                  o >= 0 &&
                    (u === t.charCodeAt(o)
                      ? -1 == --o && (i = n)
                      : ((o = -1), (i = s)));
            }
            return (
              r === i ? (i = s) : -1 === i && (i = e.length), e.slice(r, i)
            );
          }
          for (n = e.length - 1; n >= r; --n)
            if (V(e.charCodeAt(n))) {
              if (!a) {
                r = n + 1;
                break;
              }
            } else -1 === i && ((a = !1), (i = n + 1));
          return -1 === i ? '' : e.slice(r, i);
        },
        extname(e) {
          U(e, 'path');
          let t = 0,
            n = -1,
            r = 0,
            i = -1,
            a = !0,
            o = 0;
          e.length >= 2 &&
            58 === e.charCodeAt(1) &&
            $(e.charCodeAt(0)) &&
            (t = r = 2);
          for (let s = e.length - 1; s >= t; --s) {
            const t = e.charCodeAt(s);
            if (V(t)) {
              if (!a) {
                r = s + 1;
                break;
              }
            } else
              -1 === i && ((a = !1), (i = s + 1)),
                46 === t
                  ? -1 === n
                    ? (n = s)
                    : 1 !== o && (o = 1)
                  : -1 !== n && (o = -1);
          }
          return -1 === n ||
            -1 === i ||
            0 === o ||
            (1 === o && n === i - 1 && n === r + 1)
            ? ''
            : e.slice(n, i);
        },
        format: Y.bind(null, '\\'),
        parse(e) {
          U(e, 'path');
          const t = { root: '', dir: '', base: '', ext: '', name: '' };
          if (0 === e.length) return t;
          const n = e.length;
          let r = 0,
            i = e.charCodeAt(0);
          if (1 === n)
            return V(i)
              ? ((t.root = t.dir = e), t)
              : ((t.base = t.name = e), t);
          if (V(i)) {
            if (((r = 1), V(e.charCodeAt(1)))) {
              let t = 2,
                i = t;
              for (; t < n && !V(e.charCodeAt(t)); ) t++;
              if (t < n && t !== i) {
                for (i = t; t < n && V(e.charCodeAt(t)); ) t++;
                if (t < n && t !== i) {
                  for (i = t; t < n && !V(e.charCodeAt(t)); ) t++;
                  t === n ? (r = t) : t !== i && (r = t + 1);
                }
              }
            }
          } else if ($(i) && 58 === e.charCodeAt(1)) {
            if (n <= 2) return (t.root = t.dir = e), t;
            if (((r = 2), V(e.charCodeAt(2)))) {
              if (3 === n) return (t.root = t.dir = e), t;
              r = 3;
            }
          }
          r > 0 && (t.root = e.slice(0, r));
          let a = -1,
            o = r,
            s = -1,
            u = !0,
            c = e.length - 1,
            l = 0;
          for (; c >= r; --c)
            if (((i = e.charCodeAt(c)), V(i))) {
              if (!u) {
                o = c + 1;
                break;
              }
            } else
              -1 === s && ((u = !1), (s = c + 1)),
                46 === i
                  ? -1 === a
                    ? (a = c)
                    : 1 !== l && (l = 1)
                  : -1 !== a && (l = -1);
          return (
            -1 !== s &&
              (-1 === a || 0 === l || (1 === l && a === s - 1 && a === o + 1)
                ? (t.base = t.name = e.slice(o, s))
                : ((t.name = e.slice(o, a)),
                  (t.base = e.slice(o, s)),
                  (t.ext = e.slice(a, s)))),
            (t.dir = o > 0 && o !== r ? e.slice(0, o - 1) : t.root),
            t
          );
        },
        sep: '\\',
        delimiter: ';',
        win32: null,
        posix: null,
      },
      K = {
        resolve(...e) {
          let t = '',
            n = !1;
          for (let r = e.length - 1; r >= -1 && !n; r--) {
            const i = r >= 0 ? e[r] : R.a();
            U(i, 'path'),
              0 !== i.length &&
                ((t = `${i}/${t}`), (n = 47 === i.charCodeAt(0)));
          }
          return (t = q(t, !n, '/', W)), n ? '/' + t : t.length > 0 ? t : '.';
        },
        normalize(e) {
          if ((U(e, 'path'), 0 === e.length)) return '.';
          const t = 47 === e.charCodeAt(0),
            n = 47 === e.charCodeAt(e.length - 1);
          return 0 === (e = q(e, !t, '/', W)).length
            ? t
              ? '/'
              : n
              ? './'
              : '.'
            : (n && (e += '/'), t ? '/' + e : e);
        },
        isAbsolute: e => (U(e, 'path'), e.length > 0 && 47 === e.charCodeAt(0)),
        join(...e) {
          if (0 === e.length) return '.';
          let t;
          for (let n = 0; n < e.length; ++n) {
            const r = e[n];
            U(r, 'path'),
              r.length > 0 && (void 0 === t ? (t = r) : (t += '/' + r));
          }
          return void 0 === t ? '.' : K.normalize(t);
        },
        relative(e, t) {
          if ((U(e, 'from'), U(t, 'to'), e === t)) return '';
          if ((e = K.resolve(e)) === (t = K.resolve(t))) return '';
          const n = e.length,
            r = n - 1,
            i = t.length - 1,
            a = r < i ? r : i;
          let o = -1,
            s = 0;
          for (; s < a; s++) {
            const n = e.charCodeAt(1 + s);
            if (n !== t.charCodeAt(1 + s)) break;
            47 === n && (o = s);
          }
          if (s === a)
            if (i > a) {
              if (47 === t.charCodeAt(1 + s)) return t.slice(1 + s + 1);
              if (0 === s) return t.slice(1 + s);
            } else
              r > a &&
                (47 === e.charCodeAt(1 + s) ? (o = s) : 0 === s && (o = 0));
          let u = '';
          for (s = 1 + o + 1; s <= n; ++s)
            (s !== n && 47 !== e.charCodeAt(s)) ||
              (u += 0 === u.length ? '..' : '/..');
          return `${u}${t.slice(1 + o)}`;
        },
        toNamespacedPath: e => e,
        dirname(e) {
          if ((U(e, 'path'), 0 === e.length)) return '.';
          const t = 47 === e.charCodeAt(0);
          let n = -1,
            r = !0;
          for (let t = e.length - 1; t >= 1; --t)
            if (47 === e.charCodeAt(t)) {
              if (!r) {
                n = t;
                break;
              }
            } else r = !1;
          return -1 === n
            ? t
              ? '/'
              : '.'
            : t && 1 === n
            ? '//'
            : e.slice(0, n);
        },
        basename(e, t) {
          void 0 !== t && U(t, 'ext'), U(e, 'path');
          let n,
            r = 0,
            i = -1,
            a = !0;
          if (void 0 !== t && t.length > 0 && t.length <= e.length) {
            if (t === e) return '';
            let o = t.length - 1,
              s = -1;
            for (n = e.length - 1; n >= 0; --n) {
              const u = e.charCodeAt(n);
              if (47 === u) {
                if (!a) {
                  r = n + 1;
                  break;
                }
              } else
                -1 === s && ((a = !1), (s = n + 1)),
                  o >= 0 &&
                    (u === t.charCodeAt(o)
                      ? -1 == --o && (i = n)
                      : ((o = -1), (i = s)));
            }
            return (
              r === i ? (i = s) : -1 === i && (i = e.length), e.slice(r, i)
            );
          }
          for (n = e.length - 1; n >= 0; --n)
            if (47 === e.charCodeAt(n)) {
              if (!a) {
                r = n + 1;
                break;
              }
            } else -1 === i && ((a = !1), (i = n + 1));
          return -1 === i ? '' : e.slice(r, i);
        },
        extname(e) {
          U(e, 'path');
          let t = -1,
            n = 0,
            r = -1,
            i = !0,
            a = 0;
          for (let o = e.length - 1; o >= 0; --o) {
            const s = e.charCodeAt(o);
            if (47 !== s)
              -1 === r && ((i = !1), (r = o + 1)),
                46 === s
                  ? -1 === t
                    ? (t = o)
                    : 1 !== a && (a = 1)
                  : -1 !== t && (a = -1);
            else if (!i) {
              n = o + 1;
              break;
            }
          }
          return -1 === t ||
            -1 === r ||
            0 === a ||
            (1 === a && t === r - 1 && t === n + 1)
            ? ''
            : e.slice(t, r);
        },
        format: Y.bind(null, '/'),
        parse(e) {
          U(e, 'path');
          const t = { root: '', dir: '', base: '', ext: '', name: '' };
          if (0 === e.length) return t;
          const n = 47 === e.charCodeAt(0);
          let r;
          n ? ((t.root = '/'), (r = 1)) : (r = 0);
          let i = -1,
            a = 0,
            o = -1,
            s = !0,
            u = e.length - 1,
            c = 0;
          for (; u >= r; --u) {
            const t = e.charCodeAt(u);
            if (47 !== t)
              -1 === o && ((s = !1), (o = u + 1)),
                46 === t
                  ? -1 === i
                    ? (i = u)
                    : 1 !== c && (c = 1)
                  : -1 !== i && (c = -1);
            else if (!s) {
              a = u + 1;
              break;
            }
          }
          if (-1 !== o) {
            const r = 0 === a && n ? 1 : a;
            -1 === i || 0 === c || (1 === c && i === o - 1 && i === a + 1)
              ? (t.base = t.name = e.slice(r, o))
              : ((t.name = e.slice(r, i)),
                (t.base = e.slice(r, o)),
                (t.ext = e.slice(i, o)));
          }
          return a > 0 ? (t.dir = e.slice(0, a - 1)) : n && (t.dir = '/'), t;
        },
        sep: '/',
        delimiter: ':',
        win32: null,
        posix: null,
      };
    (K.win32 = J.win32 = J), (K.posix = J.posix = K);
    'win32' === R.c ? J.normalize : K.normalize,
      'win32' === R.c ? J.resolve : K.resolve,
      'win32' === R.c ? J.relative : K.relative,
      'win32' === R.c ? J.dirname : K.dirname,
      'win32' === R.c ? J.basename : K.basename,
      'win32' === R.c ? J.extname : K.extname,
      'win32' === R.c ? J.sep : K.sep;
    const z = /^\w[\w\d+.-]*$/,
      H = /^\//,
      X = /^\/\//;
    function G(e, t) {
      if (!e.scheme && t)
        throw new Error(
          `[UriError]: Scheme is missing: {scheme: "", authority: "${e.authority}", path: "${e.path}", query: "${e.query}", fragment: "${e.fragment}"}`,
        );
      if (e.scheme && !z.test(e.scheme))
        throw new Error('[UriError]: Scheme contains illegal characters.');
      if (e.path)
        if (e.authority) {
          if (!H.test(e.path))
            throw new Error(
              '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character',
            );
        } else if (X.test(e.path))
          throw new Error(
            '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")',
          );
    }
    const Q = '/',
      Z = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
    class ee {
      constructor(e, t, n, r, i, a = !1) {
        'object' == typeof e
          ? ((this.scheme = e.scheme || ''),
            (this.authority = e.authority || ''),
            (this.path = e.path || ''),
            (this.query = e.query || ''),
            (this.fragment = e.fragment || ''))
          : ((this.scheme = (function(e, t) {
              return e || t ? e : 'file';
            })(e, a)),
            (this.authority = t || ''),
            (this.path = (function(e, t) {
              switch (e) {
                case 'https':
                case 'http':
                case 'file':
                  t ? t[0] !== Q && (t = Q + t) : (t = Q);
              }
              return t;
            })(this.scheme, n || '')),
            (this.query = r || ''),
            (this.fragment = i || ''),
            G(this, a));
      }
      static isUri(e) {
        return (
          e instanceof ee ||
          (!!e &&
            'string' == typeof e.authority &&
              'string' == typeof e.fragment &&
              'string' == typeof e.path &&
              'string' == typeof e.query &&
              'string' == typeof e.scheme &&
              'string' == typeof e.fsPath &&
              'function' == typeof e.with &&
              'function' == typeof e.toString)
        );
      }
      get fsPath() {
        return oe(this, !1);
      }
      with(e) {
        if (!e) return this;
        let { scheme: t, authority: n, path: r, query: i, fragment: a } = e;
        return (
          void 0 === t ? (t = this.scheme) : null === t && (t = ''),
          void 0 === n ? (n = this.authority) : null === n && (n = ''),
          void 0 === r ? (r = this.path) : null === r && (r = ''),
          void 0 === i ? (i = this.query) : null === i && (i = ''),
          void 0 === a ? (a = this.fragment) : null === a && (a = ''),
          t === this.scheme &&
          n === this.authority &&
          r === this.path &&
          i === this.query &&
          a === this.fragment
            ? this
            : new ne(t, n, r, i, a)
        );
      }
      static parse(e, t = !1) {
        const n = Z.exec(e);
        return n
          ? new ne(
              n[2] || '',
              ce(n[4] || ''),
              ce(n[5] || ''),
              ce(n[7] || ''),
              ce(n[9] || ''),
              t,
            )
          : new ne('', '', '', '', '');
      }
      static file(e) {
        let t = '';
        if ((g.d && (e = e.replace(/\\/g, Q)), e[0] === Q && e[1] === Q)) {
          const n = e.indexOf(Q, 2);
          -1 === n
            ? ((t = e.substring(2)), (e = Q))
            : ((t = e.substring(2, n)), (e = e.substring(n) || Q));
        }
        return new ne('file', t, e, '', '');
      }
      static from(e) {
        const t = new ne(e.scheme, e.authority, e.path, e.query, e.fragment);
        return G(t, !0), t;
      }
      static joinPath(e, ...t) {
        if (!e.path)
          throw new Error(
            '[UriError]: cannot call joinPath on URI without path',
          );
        let n;
        return (
          (n =
            g.d && 'file' === e.scheme
              ? ee.file(J.join(oe(e, !0), ...t)).path
              : K.join(e.path, ...t)),
          e.with({ path: n })
        );
      }
      toString(e = !1) {
        return se(this, e);
      }
      toJSON() {
        return this;
      }
      static revive(e) {
        if (e) {
          if (e instanceof ee) return e;
          {
            const t = new ne(e);
            return (
              (t._formatted = e.external),
              (t._fsPath = e._sep === te ? e.fsPath : null),
              t
            );
          }
        }
        return e;
      }
    }
    const te = g.d ? 1 : void 0;
    class ne extends ee {
      constructor() {
        super(...arguments), (this._formatted = null), (this._fsPath = null);
      }
      get fsPath() {
        return this._fsPath || (this._fsPath = oe(this, !1)), this._fsPath;
      }
      toString(e = !1) {
        return e
          ? se(this, !0)
          : (this._formatted || (this._formatted = se(this, !1)),
            this._formatted);
      }
      toJSON() {
        const e = { $mid: 1 };
        return (
          this._fsPath && ((e.fsPath = this._fsPath), (e._sep = te)),
          this._formatted && (e.external = this._formatted),
          this.path && (e.path = this.path),
          this.scheme && (e.scheme = this.scheme),
          this.authority && (e.authority = this.authority),
          this.query && (e.query = this.query),
          this.fragment && (e.fragment = this.fragment),
          e
        );
      }
    }
    const re = {
      58: '%3A',
      47: '%2F',
      63: '%3F',
      35: '%23',
      91: '%5B',
      93: '%5D',
      64: '%40',
      33: '%21',
      36: '%24',
      38: '%26',
      39: '%27',
      40: '%28',
      41: '%29',
      42: '%2A',
      43: '%2B',
      44: '%2C',
      59: '%3B',
      61: '%3D',
      32: '%20',
    };
    function ie(e, t) {
      let n = void 0,
        r = -1;
      for (let i = 0; i < e.length; i++) {
        const a = e.charCodeAt(i);
        if (
          (a >= 97 && a <= 122) ||
          (a >= 65 && a <= 90) ||
          (a >= 48 && a <= 57) ||
          45 === a ||
          46 === a ||
          95 === a ||
          126 === a ||
          (t && 47 === a)
        )
          -1 !== r && ((n += encodeURIComponent(e.substring(r, i))), (r = -1)),
            void 0 !== n && (n += e.charAt(i));
        else {
          void 0 === n && (n = e.substr(0, i));
          const t = re[a];
          void 0 !== t
            ? (-1 !== r &&
                ((n += encodeURIComponent(e.substring(r, i))), (r = -1)),
              (n += t))
            : -1 === r && (r = i);
        }
      }
      return (
        -1 !== r && (n += encodeURIComponent(e.substring(r))),
        void 0 !== n ? n : e
      );
    }
    function ae(e) {
      let t = void 0;
      for (let n = 0; n < e.length; n++) {
        const r = e.charCodeAt(n);
        35 === r || 63 === r
          ? (void 0 === t && (t = e.substr(0, n)), (t += re[r]))
          : void 0 !== t && (t += e[n]);
      }
      return void 0 !== t ? t : e;
    }
    function oe(e, t) {
      let n;
      return (
        (n =
          e.authority && e.path.length > 1 && 'file' === e.scheme
            ? `//${e.authority}${e.path}`
            : 47 === e.path.charCodeAt(0) &&
              ((e.path.charCodeAt(1) >= 65 && e.path.charCodeAt(1) <= 90) ||
                (e.path.charCodeAt(1) >= 97 && e.path.charCodeAt(1) <= 122)) &&
              58 === e.path.charCodeAt(2)
            ? t
              ? e.path.substr(1)
              : e.path[1].toLowerCase() + e.path.substr(2)
            : e.path),
        g.d && (n = n.replace(/\//g, '\\')),
        n
      );
    }
    function se(e, t) {
      const n = t ? ae : ie;
      let r = '',
        { scheme: i, authority: a, path: o, query: s, fragment: u } = e;
      if (
        (i && ((r += i), (r += ':')),
        (a || 'file' === i) && ((r += Q), (r += Q)),
        a)
      ) {
        let e = a.indexOf('@');
        if (-1 !== e) {
          const t = a.substr(0, e);
          (a = a.substr(e + 1)),
            (e = t.indexOf(':')),
            -1 === e
              ? (r += n(t, !1))
              : ((r += n(t.substr(0, e), !1)),
                (r += ':'),
                (r += n(t.substr(e + 1), !1))),
            (r += '@');
        }
        (a = a.toLowerCase()),
          (e = a.indexOf(':')),
          -1 === e
            ? (r += n(a, !1))
            : ((r += n(a.substr(0, e), !1)), (r += a.substr(e)));
      }
      if (o) {
        if (o.length >= 3 && 47 === o.charCodeAt(0) && 58 === o.charCodeAt(2)) {
          const e = o.charCodeAt(1);
          e >= 65 &&
            e <= 90 &&
            (o = `/${String.fromCharCode(e + 32)}:${o.substr(3)}`);
        } else if (o.length >= 2 && 58 === o.charCodeAt(1)) {
          const e = o.charCodeAt(0);
          e >= 65 &&
            e <= 90 &&
            (o = `${String.fromCharCode(e + 32)}:${o.substr(2)}`);
        }
        r += n(o, !0);
      }
      return (
        s && ((r += '?'), (r += n(s, !1))),
        u && ((r += '#'), (r += t ? u : ie(u, !1))),
        r
      );
    }
    const ue = /(%[0-9A-Za-z][0-9A-Za-z])+/g;
    function ce(e) {
      return e.match(ue)
        ? e.replace(ue, e =>
            (function e(t) {
              try {
                return decodeURIComponent(t);
              } catch (n) {
                return t.length > 3 ? t.substr(0, 3) + e(t.substr(3)) : t;
              }
            })(e),
          )
        : e;
    }
    class le {
      constructor(e, t) {
        (this.lineNumber = e), (this.column = t);
      }
      with(e = this.lineNumber, t = this.column) {
        return e === this.lineNumber && t === this.column ? this : new le(e, t);
      }
      delta(e = 0, t = 0) {
        return this.with(this.lineNumber + e, this.column + t);
      }
      equals(e) {
        return le.equals(this, e);
      }
      static equals(e, t) {
        return (
          (!e && !t) ||
          (!!e && !!t && e.lineNumber === t.lineNumber && e.column === t.column)
        );
      }
      isBefore(e) {
        return le.isBefore(this, e);
      }
      static isBefore(e, t) {
        return (
          e.lineNumber < t.lineNumber ||
          (!(t.lineNumber < e.lineNumber) && e.column < t.column)
        );
      }
      isBeforeOrEqual(e) {
        return le.isBeforeOrEqual(this, e);
      }
      static isBeforeOrEqual(e, t) {
        return (
          e.lineNumber < t.lineNumber ||
          (!(t.lineNumber < e.lineNumber) && e.column <= t.column)
        );
      }
      static compare(e, t) {
        let n = 0 | e.lineNumber,
          r = 0 | t.lineNumber;
        if (n === r) {
          return (0 | e.column) - (0 | t.column);
        }
        return n - r;
      }
      clone() {
        return new le(this.lineNumber, this.column);
      }
      toString() {
        return '(' + this.lineNumber + ',' + this.column + ')';
      }
      static lift(e) {
        return new le(e.lineNumber, e.column);
      }
      static isIPosition(e) {
        return (
          e && 'number' == typeof e.lineNumber && 'number' == typeof e.column
        );
      }
    }
    class pe {
      constructor(e, t, n, r) {
        e > n || (e === n && t > r)
          ? ((this.startLineNumber = n),
            (this.startColumn = r),
            (this.endLineNumber = e),
            (this.endColumn = t))
          : ((this.startLineNumber = e),
            (this.startColumn = t),
            (this.endLineNumber = n),
            (this.endColumn = r));
      }
      isEmpty() {
        return pe.isEmpty(this);
      }
      static isEmpty(e) {
        return (
          e.startLineNumber === e.endLineNumber && e.startColumn === e.endColumn
        );
      }
      containsPosition(e) {
        return pe.containsPosition(this, e);
      }
      static containsPosition(e, t) {
        return (
          !(
            t.lineNumber < e.startLineNumber || t.lineNumber > e.endLineNumber
          ) &&
          !(t.lineNumber === e.startLineNumber && t.column < e.startColumn) &&
            !(t.lineNumber === e.endLineNumber && t.column > e.endColumn)
        );
      }
      containsRange(e) {
        return pe.containsRange(this, e);
      }
      static containsRange(e, t) {
        return (
          !(
            t.startLineNumber < e.startLineNumber ||
            t.endLineNumber < e.startLineNumber
          ) &&
          !(
            t.startLineNumber > e.endLineNumber ||
            t.endLineNumber > e.endLineNumber
          ) &&
            !(
              t.startLineNumber === e.startLineNumber &&
              t.startColumn < e.startColumn
            ) &&
              !(
                t.endLineNumber === e.endLineNumber && t.endColumn > e.endColumn
              )
        );
      }
      strictContainsRange(e) {
        return pe.strictContainsRange(this, e);
      }
      static strictContainsRange(e, t) {
        return (
          !(
            t.startLineNumber < e.startLineNumber ||
            t.endLineNumber < e.startLineNumber
          ) &&
          !(
            t.startLineNumber > e.endLineNumber ||
            t.endLineNumber > e.endLineNumber
          ) &&
            !(
              t.startLineNumber === e.startLineNumber &&
              t.startColumn <= e.startColumn
            ) &&
              !(
                t.endLineNumber === e.endLineNumber &&
                t.endColumn >= e.endColumn
              )
        );
      }
      plusRange(e) {
        return pe.plusRange(this, e);
      }
      static plusRange(e, t) {
        let n, r, i, a;
        return (
          t.startLineNumber < e.startLineNumber
            ? ((n = t.startLineNumber), (r = t.startColumn))
            : t.startLineNumber === e.startLineNumber
            ? ((n = t.startLineNumber),
              (r = Math.min(t.startColumn, e.startColumn)))
            : ((n = e.startLineNumber), (r = e.startColumn)),
          t.endLineNumber > e.endLineNumber
            ? ((i = t.endLineNumber), (a = t.endColumn))
            : t.endLineNumber === e.endLineNumber
            ? ((i = t.endLineNumber), (a = Math.max(t.endColumn, e.endColumn)))
            : ((i = e.endLineNumber), (a = e.endColumn)),
          new pe(n, r, i, a)
        );
      }
      intersectRanges(e) {
        return pe.intersectRanges(this, e);
      }
      static intersectRanges(e, t) {
        let n = e.startLineNumber,
          r = e.startColumn,
          i = e.endLineNumber,
          a = e.endColumn,
          o = t.startLineNumber,
          s = t.startColumn,
          u = t.endLineNumber,
          c = t.endColumn;
        return (
          n < o ? ((n = o), (r = s)) : n === o && (r = Math.max(r, s)),
          i > u ? ((i = u), (a = c)) : i === u && (a = Math.min(a, c)),
          n > i || (n === i && r > a) ? null : new pe(n, r, i, a)
        );
      }
      equalsRange(e) {
        return pe.equalsRange(this, e);
      }
      static equalsRange(e, t) {
        return (
          !!e &&
          !!t &&
          e.startLineNumber === t.startLineNumber &&
          e.startColumn === t.startColumn &&
          e.endLineNumber === t.endLineNumber &&
          e.endColumn === t.endColumn
        );
      }
      getEndPosition() {
        return pe.getEndPosition(this);
      }
      static getEndPosition(e) {
        return new le(e.endLineNumber, e.endColumn);
      }
      getStartPosition() {
        return pe.getStartPosition(this);
      }
      static getStartPosition(e) {
        return new le(e.startLineNumber, e.startColumn);
      }
      toString() {
        return (
          '[' +
          this.startLineNumber +
          ',' +
          this.startColumn +
          ' -> ' +
          this.endLineNumber +
          ',' +
          this.endColumn +
          ']'
        );
      }
      setEndPosition(e, t) {
        return new pe(this.startLineNumber, this.startColumn, e, t);
      }
      setStartPosition(e, t) {
        return new pe(e, t, this.endLineNumber, this.endColumn);
      }
      collapseToStart() {
        return pe.collapseToStart(this);
      }
      static collapseToStart(e) {
        return new pe(
          e.startLineNumber,
          e.startColumn,
          e.startLineNumber,
          e.startColumn,
        );
      }
      static fromPositions(e, t = e) {
        return new pe(e.lineNumber, e.column, t.lineNumber, t.column);
      }
      static lift(e) {
        return e
          ? new pe(
              e.startLineNumber,
              e.startColumn,
              e.endLineNumber,
              e.endColumn,
            )
          : null;
      }
      static isIRange(e) {
        return (
          e &&
          'number' == typeof e.startLineNumber &&
          'number' == typeof e.startColumn &&
          'number' == typeof e.endLineNumber &&
          'number' == typeof e.endColumn
        );
      }
      static areIntersectingOrTouching(e, t) {
        return (
          !(
            e.endLineNumber < t.startLineNumber ||
            (e.endLineNumber === t.startLineNumber &&
              e.endColumn < t.startColumn)
          ) &&
          !(
            t.endLineNumber < e.startLineNumber ||
            (t.endLineNumber === e.startLineNumber &&
              t.endColumn < e.startColumn)
          )
        );
      }
      static areIntersecting(e, t) {
        return (
          !(
            e.endLineNumber < t.startLineNumber ||
            (e.endLineNumber === t.startLineNumber &&
              e.endColumn <= t.startColumn)
          ) &&
          !(
            t.endLineNumber < e.startLineNumber ||
            (t.endLineNumber === e.startLineNumber &&
              t.endColumn <= e.startColumn)
          )
        );
      }
      static compareRangesUsingStarts(e, t) {
        if (e && t) {
          const n = 0 | e.startLineNumber,
            r = 0 | t.startLineNumber;
          if (n === r) {
            const n = 0 | e.startColumn,
              r = 0 | t.startColumn;
            if (n === r) {
              const n = 0 | e.endLineNumber,
                r = 0 | t.endLineNumber;
              if (n === r) {
                return (0 | e.endColumn) - (0 | t.endColumn);
              }
              return n - r;
            }
            return n - r;
          }
          return n - r;
        }
        return (e ? 1 : 0) - (t ? 1 : 0);
      }
      static compareRangesUsingEnds(e, t) {
        return e.endLineNumber === t.endLineNumber
          ? e.endColumn === t.endColumn
            ? e.startLineNumber === t.startLineNumber
              ? e.startColumn - t.startColumn
              : e.startLineNumber - t.startLineNumber
            : e.endColumn - t.endColumn
          : e.endLineNumber - t.endLineNumber;
      }
      static spansMultipleLines(e) {
        return e.endLineNumber > e.startLineNumber;
      }
    }
    function fe(e, t, n, r) {
      return new L(e, t, n).ComputeDiff(r);
    }
    class he {
      constructor(e) {
        const t = [],
          n = [];
        for (let r = 0, i = e.length; r < i; r++)
          (t[r] = ve(e[r], 1)), (n[r] = De(e[r], 1));
        (this.lines = e), (this._startColumns = t), (this._endColumns = n);
      }
      getElements() {
        const e = [];
        for (let t = 0, n = this.lines.length; t < n; t++)
          e[t] = this.lines[t].substring(
            this._startColumns[t] - 1,
            this._endColumns[t] - 1,
          );
        return e;
      }
      getStartLineNumber(e) {
        return e + 1;
      }
      getEndLineNumber(e) {
        return e + 1;
      }
      createCharSequence(e, t, n) {
        const r = [],
          i = [],
          a = [];
        let o = 0;
        for (let s = t; s <= n; s++) {
          const t = this.lines[s],
            n = e ? this._startColumns[s] : 1,
            u = e ? this._endColumns[s] : t.length + 1;
          for (let e = n; e < u; e++)
            (r[o] = t.charCodeAt(e - 1)), (i[o] = s + 1), (a[o] = e), o++;
        }
        return new de(r, i, a);
      }
    }
    class de {
      constructor(e, t, n) {
        (this._charCodes = e), (this._lineNumbers = t), (this._columns = n);
      }
      getElements() {
        return this._charCodes;
      }
      getStartLineNumber(e) {
        return this._lineNumbers[e];
      }
      getStartColumn(e) {
        return this._columns[e];
      }
      getEndLineNumber(e) {
        return this._lineNumbers[e];
      }
      getEndColumn(e) {
        return this._columns[e] + 1;
      }
    }
    class me {
      constructor(e, t, n, r, i, a, o, s) {
        (this.originalStartLineNumber = e),
          (this.originalStartColumn = t),
          (this.originalEndLineNumber = n),
          (this.originalEndColumn = r),
          (this.modifiedStartLineNumber = i),
          (this.modifiedStartColumn = a),
          (this.modifiedEndLineNumber = o),
          (this.modifiedEndColumn = s);
      }
      static createFromDiffChange(e, t, n) {
        let r, i, a, o, s, u, c, l;
        return (
          0 === e.originalLength
            ? ((r = 0), (i = 0), (a = 0), (o = 0))
            : ((r = t.getStartLineNumber(e.originalStart)),
              (i = t.getStartColumn(e.originalStart)),
              (a = t.getEndLineNumber(e.originalStart + e.originalLength - 1)),
              (o = t.getEndColumn(e.originalStart + e.originalLength - 1))),
          0 === e.modifiedLength
            ? ((s = 0), (u = 0), (c = 0), (l = 0))
            : ((s = n.getStartLineNumber(e.modifiedStart)),
              (u = n.getStartColumn(e.modifiedStart)),
              (c = n.getEndLineNumber(e.modifiedStart + e.modifiedLength - 1)),
              (l = n.getEndColumn(e.modifiedStart + e.modifiedLength - 1))),
          new me(r, i, a, o, s, u, c, l)
        );
      }
    }
    class ge {
      constructor(e, t, n, r, i) {
        (this.originalStartLineNumber = e),
          (this.originalEndLineNumber = t),
          (this.modifiedStartLineNumber = n),
          (this.modifiedEndLineNumber = r),
          (this.charChanges = i);
      }
      static createFromDiffResult(e, t, n, r, i, a, o) {
        let s,
          u,
          c,
          l,
          p = void 0;
        if (
          (0 === t.originalLength
            ? ((s = n.getStartLineNumber(t.originalStart) - 1), (u = 0))
            : ((s = n.getStartLineNumber(t.originalStart)),
              (u = n.getEndLineNumber(t.originalStart + t.originalLength - 1))),
          0 === t.modifiedLength
            ? ((c = r.getStartLineNumber(t.modifiedStart) - 1), (l = 0))
            : ((c = r.getStartLineNumber(t.modifiedStart)),
              (l = r.getEndLineNumber(t.modifiedStart + t.modifiedLength - 1))),
          a &&
            t.originalLength > 0 &&
            t.originalLength < 20 &&
            t.modifiedLength > 0 &&
            t.modifiedLength < 20 &&
            i())
        ) {
          const a = n.createCharSequence(
              e,
              t.originalStart,
              t.originalStart + t.originalLength - 1,
            ),
            s = r.createCharSequence(
              e,
              t.modifiedStart,
              t.modifiedStart + t.modifiedLength - 1,
            );
          let u = fe(a, s, i, !0).changes;
          o &&
            (u = (function(e) {
              if (e.length <= 1) return e;
              const t = [e[0]];
              let n = t[0];
              for (let r = 1, i = e.length; r < i; r++) {
                const i = e[r],
                  a = i.originalStart - (n.originalStart + n.originalLength),
                  o = i.modifiedStart - (n.modifiedStart + n.modifiedLength);
                Math.min(a, o) < 3
                  ? ((n.originalLength =
                      i.originalStart + i.originalLength - n.originalStart),
                    (n.modifiedLength =
                      i.modifiedStart + i.modifiedLength - n.modifiedStart))
                  : (t.push(i), (n = i));
              }
              return t;
            })(u)),
            (p = []);
          for (let e = 0, t = u.length; e < t; e++)
            p.push(me.createFromDiffChange(u[e], a, s));
        }
        return new ge(s, u, c, l, p);
      }
    }
    class ye {
      constructor(e, t, n) {
        (this.shouldComputeCharChanges = n.shouldComputeCharChanges),
          (this.shouldPostProcessCharChanges = n.shouldPostProcessCharChanges),
          (this.shouldIgnoreTrimWhitespace = n.shouldIgnoreTrimWhitespace),
          (this.shouldMakePrettyDiff = n.shouldMakePrettyDiff),
          (this.originalLines = e),
          (this.modifiedLines = t),
          (this.original = new he(e)),
          (this.modified = new he(t)),
          (this.continueLineDiff = Ee(n.maxComputationTime)),
          (this.continueCharDiff = Ee(
            0 === n.maxComputationTime
              ? 0
              : Math.min(n.maxComputationTime, 5e3),
          ));
      }
      computeDiff() {
        if (
          1 === this.original.lines.length &&
          0 === this.original.lines[0].length
        )
          return 1 === this.modified.lines.length &&
            0 === this.modified.lines[0].length
            ? { quitEarly: !1, changes: [] }
            : {
                quitEarly: !1,
                changes: [
                  {
                    originalStartLineNumber: 1,
                    originalEndLineNumber: 1,
                    modifiedStartLineNumber: 1,
                    modifiedEndLineNumber: this.modified.lines.length,
                    charChanges: [
                      {
                        modifiedEndColumn: 0,
                        modifiedEndLineNumber: 0,
                        modifiedStartColumn: 0,
                        modifiedStartLineNumber: 0,
                        originalEndColumn: 0,
                        originalEndLineNumber: 0,
                        originalStartColumn: 0,
                        originalStartLineNumber: 0,
                      },
                    ],
                  },
                ],
              };
        if (
          1 === this.modified.lines.length &&
          0 === this.modified.lines[0].length
        )
          return {
            quitEarly: !1,
            changes: [
              {
                originalStartLineNumber: 1,
                originalEndLineNumber: this.original.lines.length,
                modifiedStartLineNumber: 1,
                modifiedEndLineNumber: 1,
                charChanges: [
                  {
                    modifiedEndColumn: 0,
                    modifiedEndLineNumber: 0,
                    modifiedStartColumn: 0,
                    modifiedStartLineNumber: 0,
                    originalEndColumn: 0,
                    originalEndLineNumber: 0,
                    originalStartColumn: 0,
                    originalStartLineNumber: 0,
                  },
                ],
              },
            ],
          };
        const e = fe(
            this.original,
            this.modified,
            this.continueLineDiff,
            this.shouldMakePrettyDiff,
          ),
          t = e.changes,
          n = e.quitEarly;
        if (this.shouldIgnoreTrimWhitespace) {
          const e = [];
          for (let n = 0, r = t.length; n < r; n++)
            e.push(
              ge.createFromDiffResult(
                this.shouldIgnoreTrimWhitespace,
                t[n],
                this.original,
                this.modified,
                this.continueCharDiff,
                this.shouldComputeCharChanges,
                this.shouldPostProcessCharChanges,
              ),
            );
          return { quitEarly: n, changes: e };
        }
        const r = [];
        let i = 0,
          a = 0;
        for (let e = -1, n = t.length; e < n; e++) {
          const o = e + 1 < n ? t[e + 1] : null,
            s = o ? o.originalStart : this.originalLines.length,
            u = o ? o.modifiedStart : this.modifiedLines.length;
          for (; i < s && a < u; ) {
            const e = this.originalLines[i],
              t = this.modifiedLines[a];
            if (e !== t) {
              {
                let n = ve(e, 1),
                  o = ve(t, 1);
                for (; n > 1 && o > 1; ) {
                  if (e.charCodeAt(n - 2) !== t.charCodeAt(o - 2)) break;
                  n--, o--;
                }
                (n > 1 || o > 1) &&
                  this._pushTrimWhitespaceCharChange(
                    r,
                    i + 1,
                    1,
                    n,
                    a + 1,
                    1,
                    o,
                  );
              }
              {
                let n = De(e, 1),
                  o = De(t, 1);
                const s = e.length + 1,
                  u = t.length + 1;
                for (; n < s && o < u; ) {
                  if (e.charCodeAt(n - 1) !== e.charCodeAt(o - 1)) break;
                  n++, o++;
                }
                (n < s || o < u) &&
                  this._pushTrimWhitespaceCharChange(
                    r,
                    i + 1,
                    n,
                    s,
                    a + 1,
                    o,
                    u,
                  );
              }
            }
            i++, a++;
          }
          o &&
            (r.push(
              ge.createFromDiffResult(
                this.shouldIgnoreTrimWhitespace,
                o,
                this.original,
                this.modified,
                this.continueCharDiff,
                this.shouldComputeCharChanges,
                this.shouldPostProcessCharChanges,
              ),
            ),
            (i += o.originalLength),
            (a += o.modifiedLength));
        }
        return { quitEarly: n, changes: r };
      }
      _pushTrimWhitespaceCharChange(e, t, n, r, i, a, o) {
        if (this._mergeTrimWhitespaceCharChange(e, t, n, r, i, a, o)) return;
        let s = void 0;
        this.shouldComputeCharChanges && (s = [new me(t, n, t, r, i, a, i, o)]),
          e.push(new ge(t, t, i, i, s));
      }
      _mergeTrimWhitespaceCharChange(e, t, n, r, i, a, o) {
        const s = e.length;
        if (0 === s) return !1;
        const u = e[s - 1];
        return (
          0 !== u.originalEndLineNumber &&
          0 !== u.modifiedEndLineNumber &&
          u.originalEndLineNumber + 1 === t &&
            u.modifiedEndLineNumber + 1 === i &&
            ((u.originalEndLineNumber = t),
            (u.modifiedEndLineNumber = i),
            this.shouldComputeCharChanges &&
              u.charChanges &&
              u.charChanges.push(new me(t, n, t, r, i, a, i, o)),
            !0)
        );
      }
    }
    function ve(e, t) {
      const n = (function(e) {
        for (let t = 0, n = e.length; t < n; t++) {
          const n = e.charCodeAt(t);
          if (32 !== n && 9 !== n) return t;
        }
        return -1;
      })(e);
      return -1 === n ? t : n + 1;
    }
    function De(e, t) {
      const n = (function(e, t = e.length - 1) {
        for (let n = t; n >= 0; n--) {
          const t = e.charCodeAt(n);
          if (32 !== t && 9 !== t) return n;
        }
        return -1;
      })(e);
      return -1 === n ? t : n + 2;
    }
    function Ee(e) {
      if (0 === e) return () => !0;
      const t = Date.now();
      return () => Date.now() - t < e;
    }
    function Ce(e) {
      return e < 0 ? 0 : e > 255 ? 255 : 0 | e;
    }
    function be(e) {
      return e < 0 ? 0 : e > 4294967295 ? 4294967295 : 0 | e;
    }
    class xe {
      constructor(e, t) {
        (this.index = e), (this.remainder = t);
      }
    }
    class Ae {
      constructor(e) {
        (this.values = e),
          (this.prefixSum = new Uint32Array(e.length)),
          (this.prefixSumValidIndex = new Int32Array(1)),
          (this.prefixSumValidIndex[0] = -1);
      }
      insertValues(e, t) {
        e = be(e);
        const n = this.values,
          r = this.prefixSum,
          i = t.length;
        return (
          0 !== i &&
          ((this.values = new Uint32Array(n.length + i)),
          this.values.set(n.subarray(0, e), 0),
          this.values.set(n.subarray(e), e + i),
          this.values.set(t, e),
          e - 1 < this.prefixSumValidIndex[0] &&
            (this.prefixSumValidIndex[0] = e - 1),
          (this.prefixSum = new Uint32Array(this.values.length)),
          this.prefixSumValidIndex[0] >= 0 &&
            this.prefixSum.set(r.subarray(0, this.prefixSumValidIndex[0] + 1)),
          !0)
        );
      }
      changeValue(e, t) {
        return (
          (e = be(e)),
          (t = be(t)),
          this.values[e] !== t &&
            ((this.values[e] = t),
            e - 1 < this.prefixSumValidIndex[0] &&
              (this.prefixSumValidIndex[0] = e - 1),
            !0)
        );
      }
      removeValues(e, t) {
        (e = be(e)), (t = be(t));
        const n = this.values,
          r = this.prefixSum;
        if (e >= n.length) return !1;
        let i = n.length - e;
        return (
          t >= i && (t = i),
          0 !== t &&
            ((this.values = new Uint32Array(n.length - t)),
            this.values.set(n.subarray(0, e), 0),
            this.values.set(n.subarray(e + t), e),
            (this.prefixSum = new Uint32Array(this.values.length)),
            e - 1 < this.prefixSumValidIndex[0] &&
              (this.prefixSumValidIndex[0] = e - 1),
            this.prefixSumValidIndex[0] >= 0 &&
              this.prefixSum.set(
                r.subarray(0, this.prefixSumValidIndex[0] + 1),
              ),
            !0)
        );
      }
      getTotalValue() {
        return 0 === this.values.length
          ? 0
          : this._getAccumulatedValue(this.values.length - 1);
      }
      getAccumulatedValue(e) {
        return e < 0 ? 0 : ((e = be(e)), this._getAccumulatedValue(e));
      }
      _getAccumulatedValue(e) {
        if (e <= this.prefixSumValidIndex[0]) return this.prefixSum[e];
        let t = this.prefixSumValidIndex[0] + 1;
        0 === t && ((this.prefixSum[0] = this.values[0]), t++),
          e >= this.values.length && (e = this.values.length - 1);
        for (let n = t; n <= e; n++)
          this.prefixSum[n] = this.prefixSum[n - 1] + this.values[n];
        return (
          (this.prefixSumValidIndex[0] = Math.max(
            this.prefixSumValidIndex[0],
            e,
          )),
          this.prefixSum[e]
        );
      }
      getIndexOf(e) {
        (e = Math.floor(e)), this.getTotalValue();
        let t = 0,
          n = this.values.length - 1,
          r = 0,
          i = 0,
          a = 0;
        for (; t <= n; )
          if (
            ((r = (t + (n - t) / 2) | 0),
            (i = this.prefixSum[r]),
            (a = i - this.values[r]),
            e < a)
          )
            n = r - 1;
          else {
            if (!(e >= i)) break;
            t = r + 1;
          }
        return new xe(r, e - a);
      }
    }
    const Se = (function(e = '') {
      let t = '(-?\\d*\\.\\d\\w*)|([^';
      for (const n of '`~!@#$%^&*()-=+[{]}\\|;:\'",.<>/?')
        e.indexOf(n) >= 0 || (t += '\\' + n);
      return (t += '\\s]+)'), new RegExp(t, 'g');
    })();
    const we = { maxLen: 1e3, windowSize: 15, timeBudget: 150 };
    function Fe(e, t, n, r) {
      let i;
      for (; (i = e.exec(t)); ) {
        const t = i.index || 0;
        if (t <= n && e.lastIndex >= n) return i;
        if (r > 0 && t > r) return null;
      }
      return null;
    }
    class ke {
      constructor(e) {
        let t = Ce(e);
        (this._defaultValue = t),
          (this._asciiMap = ke._createAsciiMap(t)),
          (this._map = new Map());
      }
      static _createAsciiMap(e) {
        let t = new Uint8Array(256);
        for (let n = 0; n < 256; n++) t[n] = e;
        return t;
      }
      set(e, t) {
        let n = Ce(t);
        e >= 0 && e < 256 ? (this._asciiMap[e] = n) : this._map.set(e, n);
      }
      get(e) {
        return e >= 0 && e < 256
          ? this._asciiMap[e]
          : this._map.get(e) || this._defaultValue;
      }
    }
    class Te {
      constructor(e, t, n) {
        const r = new Uint8Array(e * t);
        for (let i = 0, a = e * t; i < a; i++) r[i] = n;
        (this._data = r), (this.rows = e), (this.cols = t);
      }
      get(e, t) {
        return this._data[e * this.cols + t];
      }
      set(e, t, n) {
        this._data[e * this.cols + t] = n;
      }
    }
    class _e {
      constructor(e) {
        let t = 0,
          n = 0;
        for (let r = 0, i = e.length; r < i; r++) {
          let [i, a, o] = e[r];
          a > t && (t = a), i > n && (n = i), o > n && (n = o);
        }
        t++, n++;
        let r = new Te(n, t, 0);
        for (let t = 0, n = e.length; t < n; t++) {
          let [n, i, a] = e[t];
          r.set(n, i, a);
        }
        (this._states = r), (this._maxCharCode = t);
      }
      nextState(e, t) {
        return t < 0 || t >= this._maxCharCode ? 0 : this._states.get(e, t);
      }
    }
    let Oe = null;
    let Ne = null;
    class Be {
      static _createLink(e, t, n, r, i) {
        let a = i - 1;
        do {
          const n = t.charCodeAt(a);
          if (2 !== e.get(n)) break;
          a--;
        } while (a > r);
        if (r > 0) {
          const e = t.charCodeAt(r - 1),
            n = t.charCodeAt(a);
          ((40 === e && 41 === n) ||
            (91 === e && 93 === n) ||
            (123 === e && 125 === n)) &&
            a--;
        }
        return {
          range: {
            startLineNumber: n,
            startColumn: r + 1,
            endLineNumber: n,
            endColumn: a + 2,
          },
          url: t.substring(r, a + 1),
        };
      }
      static computeLinks(
        e,
        t = (function() {
          return (
            null === Oe &&
              (Oe = new _e([
                [1, 104, 2],
                [1, 72, 2],
                [1, 102, 6],
                [1, 70, 6],
                [2, 116, 3],
                [2, 84, 3],
                [3, 116, 4],
                [3, 84, 4],
                [4, 112, 5],
                [4, 80, 5],
                [5, 115, 9],
                [5, 83, 9],
                [5, 58, 10],
                [6, 105, 7],
                [6, 73, 7],
                [7, 108, 8],
                [7, 76, 8],
                [8, 101, 9],
                [8, 69, 9],
                [9, 58, 10],
                [10, 47, 11],
                [11, 47, 12],
              ])),
            Oe
          );
        })(),
      ) {
        const n = (function() {
          if (null === Ne) {
            Ne = new ke(0);
            const e =
              ' \t<>\'"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';
            for (let t = 0; t < e.length; t++) Ne.set(e.charCodeAt(t), 1);
            const t = '.,;';
            for (let e = 0; e < t.length; e++) Ne.set(t.charCodeAt(e), 2);
          }
          return Ne;
        })();
        let r = [];
        for (let i = 1, a = e.getLineCount(); i <= a; i++) {
          const a = e.getLineContent(i),
            o = a.length;
          let s = 0,
            u = 0,
            c = 0,
            l = 1,
            p = !1,
            f = !1,
            h = !1,
            d = !1;
          for (; s < o; ) {
            let e = !1;
            const o = a.charCodeAt(s);
            if (13 === l) {
              let t;
              switch (o) {
                case 40:
                  (p = !0), (t = 0);
                  break;
                case 41:
                  t = p ? 0 : 1;
                  break;
                case 91:
                  (h = !0), (f = !0), (t = 0);
                  break;
                case 93:
                  (h = !1), (t = f ? 0 : 1);
                  break;
                case 123:
                  (d = !0), (t = 0);
                  break;
                case 125:
                  t = d ? 0 : 1;
                  break;
                case 39:
                  t = 34 === c || 96 === c ? 0 : 1;
                  break;
                case 34:
                  t = 39 === c || 96 === c ? 0 : 1;
                  break;
                case 96:
                  t = 39 === c || 34 === c ? 0 : 1;
                  break;
                case 42:
                  t = 42 === c ? 1 : 0;
                  break;
                case 124:
                  t = 124 === c ? 1 : 0;
                  break;
                case 32:
                  t = h ? 0 : 1;
                  break;
                default:
                  t = n.get(o);
              }
              1 === t && (r.push(Be._createLink(n, a, i, u, s)), (e = !0));
            } else if (12 === l) {
              let t;
              91 === o ? ((f = !0), (t = 0)) : (t = n.get(o)),
                1 === t ? (e = !0) : (l = 13);
            } else (l = t.nextState(l, o)), 0 === l && (e = !0);
            e && ((l = 1), (p = !1), (f = !1), (d = !1), (u = s + 1), (c = o)),
              s++;
          }
          13 === l && r.push(Be._createLink(n, a, i, u, o));
        }
        return r;
      }
    }
    class Ie {
      constructor() {
        this._defaultValueSet = [
          ['true', 'false'],
          ['True', 'False'],
          [
            'Private',
            'Public',
            'Friend',
            'ReadOnly',
            'Partial',
            'Protected',
            'WriteOnly',
          ],
          ['public', 'protected', 'private'],
        ];
      }
      navigateValueSet(e, t, n, r, i) {
        if (e && t) {
          let n = this.doNavigateValueSet(t, i);
          if (n) return { range: e, value: n };
        }
        if (n && r) {
          let e = this.doNavigateValueSet(r, i);
          if (e) return { range: n, value: e };
        }
        return null;
      }
      doNavigateValueSet(e, t) {
        let n = this.numberReplace(e, t);
        return null !== n ? n : this.textReplace(e, t);
      }
      numberReplace(e, t) {
        let n = Math.pow(10, e.length - (e.lastIndexOf('.') + 1)),
          r = Number(e),
          i = parseFloat(e);
        return isNaN(r) || isNaN(i) || r !== i
          ? null
          : 0 !== r || t
          ? ((r = Math.floor(r * n)), (r += t ? n : -n), String(r / n))
          : null;
      }
      textReplace(e, t) {
        return this.valueSetsReplace(this._defaultValueSet, e, t);
      }
      valueSetsReplace(e, t, n) {
        let r = null;
        for (let i = 0, a = e.length; null === r && i < a; i++)
          r = this.valueSetReplace(e[i], t, n);
        return r;
      }
      valueSetReplace(e, t, n) {
        let r = e.indexOf(t);
        return r >= 0
          ? ((r += n ? 1 : -1),
            r < 0 ? (r = e.length - 1) : (r %= e.length),
            e[r])
          : null;
      }
    }
    Ie.INSTANCE = new Ie();
    class Pe {
      constructor(e) {
        (this.element = e),
          (this.next = Pe.Undefined),
          (this.prev = Pe.Undefined);
      }
    }
    Pe.Undefined = new Pe(void 0);
    class Me {
      constructor() {
        (this._first = Pe.Undefined),
          (this._last = Pe.Undefined),
          (this._size = 0);
      }
      get size() {
        return this._size;
      }
      isEmpty() {
        return this._first === Pe.Undefined;
      }
      clear() {
        let e = this._first;
        for (; e !== Pe.Undefined; ) {
          const t = e.next;
          (e.prev = Pe.Undefined), (e.next = Pe.Undefined), (e = t);
        }
        (this._first = Pe.Undefined),
          (this._last = Pe.Undefined),
          (this._size = 0);
      }
      unshift(e) {
        return this._insert(e, !1);
      }
      push(e) {
        return this._insert(e, !0);
      }
      _insert(e, t) {
        const n = new Pe(e);
        if (this._first === Pe.Undefined) (this._first = n), (this._last = n);
        else if (t) {
          const e = this._last;
          (this._last = n), (n.prev = e), (e.next = n);
        } else {
          const e = this._first;
          (this._first = n), (n.next = e), (e.prev = n);
        }
        this._size += 1;
        let r = !1;
        return () => {
          r || ((r = !0), this._remove(n));
        };
      }
      shift() {
        if (this._first !== Pe.Undefined) {
          const e = this._first.element;
          return this._remove(this._first), e;
        }
      }
      pop() {
        if (this._last !== Pe.Undefined) {
          const e = this._last.element;
          return this._remove(this._last), e;
        }
      }
      _remove(e) {
        if (e.prev !== Pe.Undefined && e.next !== Pe.Undefined) {
          const t = e.prev;
          (t.next = e.next), (e.next.prev = t);
        } else
          e.prev === Pe.Undefined && e.next === Pe.Undefined
            ? ((this._first = Pe.Undefined), (this._last = Pe.Undefined))
            : e.next === Pe.Undefined
            ? ((this._last = this._last.prev), (this._last.next = Pe.Undefined))
            : e.prev === Pe.Undefined &&
              ((this._first = this._first.next),
              (this._first.prev = Pe.Undefined));
        this._size -= 1;
      }
      *[Symbol.iterator]() {
        let e = this._first;
        for (; e !== Pe.Undefined; ) yield e.element, (e = e.next);
      }
    }
    const Le = g.a.performance && 'function' == typeof g.a.performance.now;
    class Re {
      constructor(e) {
        (this._highResolution = Le && e),
          (this._startTime = this._now()),
          (this._stopTime = -1);
      }
      static create(e = !0) {
        return new Re(e);
      }
      stop() {
        this._stopTime = this._now();
      }
      elapsed() {
        return -1 !== this._stopTime
          ? this._stopTime - this._startTime
          : this._now() - this._startTime;
      }
      _now() {
        return this._highResolution ? g.a.performance.now() : Date.now();
      }
    }
    var je;
    !(function(e) {
      function t(e) {
        return (t, n = null, r) => {
          let i,
            a = !1;
          return (
            (i = e(
              e => {
                if (!a) return i ? i.dispose() : (a = !0), t.call(n, e);
              },
              null,
              r,
            )),
            a && i.dispose(),
            i
          );
        };
      }
      function n(e, t) {
        return o((n, r = null, i) => e(e => n.call(r, t(e)), null, i));
      }
      function r(e, t) {
        return o((n, r = null, i) =>
          e(
            e => {
              t(e), n.call(r, e);
            },
            null,
            i,
          ),
        );
      }
      function i(e, t) {
        return o((n, r = null, i) => e(e => t(e) && n.call(r, e), null, i));
      }
      function a(e, t, r) {
        let i = r;
        return n(e, e => ((i = t(i, e)), i));
      }
      function o(e) {
        let t;
        const n = new Ve({
          onFirstListenerAdd() {
            t = e(n.fire, n);
          },
          onLastListenerRemove() {
            t.dispose();
          },
        });
        return n.event;
      }
      function s(e, t, n = 100, r = !1, i) {
        let a,
          o = void 0,
          s = void 0,
          u = 0;
        const c = new Ve({
          leakWarningThreshold: i,
          onFirstListenerAdd() {
            a = e(e => {
              u++,
                (o = t(o, e)),
                r && !s && (c.fire(o), (o = void 0)),
                clearTimeout(s),
                (s = setTimeout(() => {
                  const e = o;
                  (o = void 0),
                    (s = void 0),
                    (!r || u > 1) && c.fire(e),
                    (u = 0);
                }, n));
            });
          },
          onLastListenerRemove() {
            a.dispose();
          },
        });
        return c.event;
      }
      function u(e, t = (e, t) => e === t) {
        let n,
          r = !0;
        return i(e, e => {
          const i = r || !t(e, n);
          return (r = !1), (n = e), i;
        });
      }
      (e.None = () => m.None),
        (e.once = t),
        (e.map = n),
        (e.forEach = r),
        (e.filter = i),
        (e.signal = function(e) {
          return e;
        }),
        (e.any = function(...e) {
          return (t, n = null, r) =>
            h(...e.map(e => e(e => t.call(n, e), null, r)));
        }),
        (e.reduce = a),
        (e.snapshot = o),
        (e.debounce = s),
        (e.stopwatch = function(e) {
          const r = new Date().getTime();
          return n(t(e), e => new Date().getTime() - r);
        }),
        (e.latch = u),
        (e.split = function(t, n) {
          return [e.filter(t, n), e.filter(t, e => !n(e))];
        }),
        (e.buffer = function(e, t = !1, n = []) {
          let r = n.slice(),
            i = e(e => {
              r ? r.push(e) : o.fire(e);
            });
          const a = () => {
              r && r.forEach(e => o.fire(e)), (r = null);
            },
            o = new Ve({
              onFirstListenerAdd() {
                i || (i = e(e => o.fire(e)));
              },
              onFirstListenerDidAdd() {
                r && (t ? setTimeout(a) : a());
              },
              onLastListenerRemove() {
                i && i.dispose(), (i = null);
              },
            });
          return o.event;
        });
      class c {
        constructor(e) {
          this.event = e;
        }
        map(e) {
          return new c(n(this.event, e));
        }
        forEach(e) {
          return new c(r(this.event, e));
        }
        filter(e) {
          return new c(i(this.event, e));
        }
        reduce(e, t) {
          return new c(a(this.event, e, t));
        }
        latch() {
          return new c(u(this.event));
        }
        debounce(e, t = 100, n = !1, r) {
          return new c(s(this.event, e, t, n, r));
        }
        on(e, t, n) {
          return this.event(e, t, n);
        }
        once(e, n, r) {
          return t(this.event)(e, n, r);
        }
      }
      (e.chain = function(e) {
        return new c(e);
      }),
        (e.fromNodeEventEmitter = function(e, t, n = e => e) {
          const r = (...e) => i.fire(n(...e)),
            i = new Ve({
              onFirstListenerAdd: () => e.on(t, r),
              onLastListenerRemove: () => e.removeListener(t, r),
            });
          return i.event;
        }),
        (e.fromDOMEventEmitter = function(e, t, n = e => e) {
          const r = (...e) => i.fire(n(...e)),
            i = new Ve({
              onFirstListenerAdd: () => e.addEventListener(t, r),
              onLastListenerRemove: () => e.removeEventListener(t, r),
            });
          return i.event;
        }),
        (e.fromPromise = function(e) {
          const t = new Ve();
          let n = !1;
          return (
            e
              .then(void 0, () => null)
              .then(() => {
                n ? t.fire(void 0) : setTimeout(() => t.fire(void 0), 0);
              }),
            (n = !0),
            t.event
          );
        }),
        (e.toPromise = function(e) {
          return new Promise(n => t(e)(n));
        });
    })(je || (je = {}));
    class Ue {
      constructor(e) {
        (this._listenerCount = 0),
          (this._invocationCount = 0),
          (this._elapsedOverall = 0),
          (this._name = `${e}_${Ue._idPool++}`);
      }
      start(e) {
        (this._stopWatch = new Re(!0)), (this._listenerCount = e);
      }
      stop() {
        if (this._stopWatch) {
          const e = this._stopWatch.elapsed();
          (this._elapsedOverall += e),
            (this._invocationCount += 1),
            console.info(
              `did FIRE ${this._name}: elapsed_ms: ${e.toFixed(5)}, listener: ${
                this._listenerCount
              } (elapsed_overall: ${this._elapsedOverall.toFixed(
                2,
              )}, invocations: ${this._invocationCount})`,
            ),
            (this._stopWatch = void 0);
        }
      }
    }
    Ue._idPool = 0;
    class Ve {
      constructor(e) {
        var t;
        (this._disposed = !1),
          (this._options = e),
          (this._leakageMon = void 0),
          (this._perfMon = (null === (t = this._options) || void 0 === t
          ? void 0
          : t._profName)
            ? new Ue(this._options._profName)
            : void 0);
      }
      get event() {
        return (
          this._event ||
            (this._event = (e, t, n) => {
              var r;
              this._listeners || (this._listeners = new Me());
              const i = this._listeners.isEmpty();
              i &&
                this._options &&
                this._options.onFirstListenerAdd &&
                this._options.onFirstListenerAdd(this);
              const a = this._listeners.push(t ? [e, t] : e);
              i &&
                this._options &&
                this._options.onFirstListenerDidAdd &&
                this._options.onFirstListenerDidAdd(this),
                this._options &&
                  this._options.onListenerDidAdd &&
                  this._options.onListenerDidAdd(this, e, t);
              const o =
                null === (r = this._leakageMon) || void 0 === r
                  ? void 0
                  : r.check(this._listeners.size);
              let s;
              return (
                (s = {
                  dispose: () => {
                    if (
                      (o && o(),
                      (s.dispose = Ve._noop),
                      !this._disposed &&
                        (a(),
                        this._options && this._options.onLastListenerRemove))
                    ) {
                      (this._listeners && !this._listeners.isEmpty()) ||
                        this._options.onLastListenerRemove(this);
                    }
                  },
                }),
                n instanceof d ? n.add(s) : Array.isArray(n) && n.push(s),
                s
              );
            }),
          this._event
        );
      }
      fire(e) {
        var t, n;
        if (this._listeners) {
          this._deliveryQueue || (this._deliveryQueue = new Me());
          for (let t of this._listeners) this._deliveryQueue.push([t, e]);
          for (
            null === (t = this._perfMon) ||
            void 0 === t ||
            t.start(this._deliveryQueue.size);
            this._deliveryQueue.size > 0;

          ) {
            const [e, t] = this._deliveryQueue.shift();
            try {
              'function' == typeof e ? e.call(void 0, t) : e[0].call(e[1], t);
            } catch (e) {
              i(e);
            }
          }
          null === (n = this._perfMon) || void 0 === n || n.stop();
        }
      }
      dispose() {
        var e, t, n, r, i;
        this._disposed ||
          ((this._disposed = !0),
          null === (e = this._listeners) || void 0 === e || e.clear(),
          null === (t = this._deliveryQueue) || void 0 === t || t.clear(),
          null ===
            (r =
              null === (n = this._options) || void 0 === n
                ? void 0
                : n.onLastListenerRemove) ||
            void 0 === r ||
            r.call(n),
          null === (i = this._leakageMon) || void 0 === i || i.dispose());
      }
    }
    Ve._noop = function() {};
    const We = Object.freeze(function(e, t) {
      const n = setTimeout(e.bind(t), 0);
      return {
        dispose() {
          clearTimeout(n);
        },
      };
    });
    var $e, qe;
    ((qe = $e || ($e = {})).isCancellationToken = function(e) {
      return (
        e === qe.None ||
        e === qe.Cancelled ||
        e instanceof Ye ||
        (!(!e || 'object' != typeof e) &&
          'boolean' == typeof e.isCancellationRequested &&
          'function' == typeof e.onCancellationRequested)
      );
    }),
      (qe.None = Object.freeze({
        isCancellationRequested: !1,
        onCancellationRequested: je.None,
      })),
      (qe.Cancelled = Object.freeze({
        isCancellationRequested: !0,
        onCancellationRequested: We,
      }));
    class Ye {
      constructor() {
        (this._isCancelled = !1), (this._emitter = null);
      }
      cancel() {
        this._isCancelled ||
          ((this._isCancelled = !0),
          this._emitter && (this._emitter.fire(void 0), this.dispose()));
      }
      get isCancellationRequested() {
        return this._isCancelled;
      }
      get onCancellationRequested() {
        return this._isCancelled
          ? We
          : (this._emitter || (this._emitter = new Ve()), this._emitter.event);
      }
      dispose() {
        this._emitter && (this._emitter.dispose(), (this._emitter = null));
      }
    }
    class Je {
      constructor(e) {
        (this._token = void 0),
          (this._parentListener = void 0),
          (this._parentListener =
            e && e.onCancellationRequested(this.cancel, this));
      }
      get token() {
        return this._token || (this._token = new Ye()), this._token;
      }
      cancel() {
        this._token
          ? this._token instanceof Ye && this._token.cancel()
          : (this._token = $e.Cancelled);
      }
      dispose(e = !1) {
        e && this.cancel(),
          this._parentListener && this._parentListener.dispose(),
          this._token
            ? this._token instanceof Ye && this._token.dispose()
            : (this._token = $e.None);
      }
    }
    class Ke {
      constructor() {
        (this._keyCodeToStr = []), (this._strToKeyCode = Object.create(null));
      }
      define(e, t) {
        (this._keyCodeToStr[e] = t), (this._strToKeyCode[t.toLowerCase()] = e);
      }
      keyCodeToStr(e) {
        return this._keyCodeToStr[e];
      }
      strToKeyCode(e) {
        return this._strToKeyCode[e.toLowerCase()] || 0;
      }
    }
    const ze = new Ke(),
      He = new Ke(),
      Xe = new Ke();
    var Ge,
      Qe,
      Ze,
      et,
      tt,
      nt,
      rt,
      it,
      at,
      ot,
      st,
      ut,
      ct,
      lt,
      pt,
      ft,
      ht,
      dt,
      mt,
      gt,
      yt,
      vt,
      Dt,
      Et,
      Ct,
      bt,
      xt,
      At,
      St,
      wt,
      Ft,
      kt,
      Tt,
      _t,
      Ot,
      Nt;
    !(function() {
      function e(e, t, n = t, r = n) {
        ze.define(e, t), He.define(e, n), Xe.define(e, r);
      }
      e(0, 'unknown'),
        e(1, 'Backspace'),
        e(2, 'Tab'),
        e(3, 'Enter'),
        e(4, 'Shift'),
        e(5, 'Ctrl'),
        e(6, 'Alt'),
        e(7, 'PauseBreak'),
        e(8, 'CapsLock'),
        e(9, 'Escape'),
        e(10, 'Space'),
        e(11, 'PageUp'),
        e(12, 'PageDown'),
        e(13, 'End'),
        e(14, 'Home'),
        e(15, 'LeftArrow', 'Left'),
        e(16, 'UpArrow', 'Up'),
        e(17, 'RightArrow', 'Right'),
        e(18, 'DownArrow', 'Down'),
        e(19, 'Insert'),
        e(20, 'Delete'),
        e(21, '0'),
        e(22, '1'),
        e(23, '2'),
        e(24, '3'),
        e(25, '4'),
        e(26, '5'),
        e(27, '6'),
        e(28, '7'),
        e(29, '8'),
        e(30, '9'),
        e(31, 'A'),
        e(32, 'B'),
        e(33, 'C'),
        e(34, 'D'),
        e(35, 'E'),
        e(36, 'F'),
        e(37, 'G'),
        e(38, 'H'),
        e(39, 'I'),
        e(40, 'J'),
        e(41, 'K'),
        e(42, 'L'),
        e(43, 'M'),
        e(44, 'N'),
        e(45, 'O'),
        e(46, 'P'),
        e(47, 'Q'),
        e(48, 'R'),
        e(49, 'S'),
        e(50, 'T'),
        e(51, 'U'),
        e(52, 'V'),
        e(53, 'W'),
        e(54, 'X'),
        e(55, 'Y'),
        e(56, 'Z'),
        e(57, 'Meta'),
        e(58, 'ContextMenu'),
        e(59, 'F1'),
        e(60, 'F2'),
        e(61, 'F3'),
        e(62, 'F4'),
        e(63, 'F5'),
        e(64, 'F6'),
        e(65, 'F7'),
        e(66, 'F8'),
        e(67, 'F9'),
        e(68, 'F10'),
        e(69, 'F11'),
        e(70, 'F12'),
        e(71, 'F13'),
        e(72, 'F14'),
        e(73, 'F15'),
        e(74, 'F16'),
        e(75, 'F17'),
        e(76, 'F18'),
        e(77, 'F19'),
        e(78, 'NumLock'),
        e(79, 'ScrollLock'),
        e(80, ';', ';', 'OEM_1'),
        e(81, '=', '=', 'OEM_PLUS'),
        e(82, ',', ',', 'OEM_COMMA'),
        e(83, '-', '-', 'OEM_MINUS'),
        e(84, '.', '.', 'OEM_PERIOD'),
        e(85, '/', '/', 'OEM_2'),
        e(86, '`', '`', 'OEM_3'),
        e(110, 'ABNT_C1'),
        e(111, 'ABNT_C2'),
        e(87, '[', '[', 'OEM_4'),
        e(88, '\\', '\\', 'OEM_5'),
        e(89, ']', ']', 'OEM_6'),
        e(90, "'", "'", 'OEM_7'),
        e(91, 'OEM_8'),
        e(92, 'OEM_102'),
        e(93, 'NumPad0'),
        e(94, 'NumPad1'),
        e(95, 'NumPad2'),
        e(96, 'NumPad3'),
        e(97, 'NumPad4'),
        e(98, 'NumPad5'),
        e(99, 'NumPad6'),
        e(100, 'NumPad7'),
        e(101, 'NumPad8'),
        e(102, 'NumPad9'),
        e(103, 'NumPad_Multiply'),
        e(104, 'NumPad_Add'),
        e(105, 'NumPad_Separator'),
        e(106, 'NumPad_Subtract'),
        e(107, 'NumPad_Decimal'),
        e(108, 'NumPad_Divide');
    })(),
      (function(e) {
        (e.toString = function(e) {
          return ze.keyCodeToStr(e);
        }),
          (e.fromString = function(e) {
            return ze.strToKeyCode(e);
          }),
          (e.toUserSettingsUS = function(e) {
            return He.keyCodeToStr(e);
          }),
          (e.toUserSettingsGeneral = function(e) {
            return Xe.keyCodeToStr(e);
          }),
          (e.fromUserSettings = function(e) {
            return He.strToKeyCode(e) || Xe.strToKeyCode(e);
          });
      })(Ge || (Ge = {}));
    class Bt extends pe {
      constructor(e, t, n, r) {
        super(e, t, n, r),
          (this.selectionStartLineNumber = e),
          (this.selectionStartColumn = t),
          (this.positionLineNumber = n),
          (this.positionColumn = r);
      }
      toString() {
        return (
          '[' +
          this.selectionStartLineNumber +
          ',' +
          this.selectionStartColumn +
          ' -> ' +
          this.positionLineNumber +
          ',' +
          this.positionColumn +
          ']'
        );
      }
      equalsSelection(e) {
        return Bt.selectionsEqual(this, e);
      }
      static selectionsEqual(e, t) {
        return (
          e.selectionStartLineNumber === t.selectionStartLineNumber &&
          e.selectionStartColumn === t.selectionStartColumn &&
          e.positionLineNumber === t.positionLineNumber &&
          e.positionColumn === t.positionColumn
        );
      }
      getDirection() {
        return this.selectionStartLineNumber === this.startLineNumber &&
          this.selectionStartColumn === this.startColumn
          ? 0
          : 1;
      }
      setEndPosition(e, t) {
        return 0 === this.getDirection()
          ? new Bt(this.startLineNumber, this.startColumn, e, t)
          : new Bt(e, t, this.startLineNumber, this.startColumn);
      }
      getPosition() {
        return new le(this.positionLineNumber, this.positionColumn);
      }
      setStartPosition(e, t) {
        return 0 === this.getDirection()
          ? new Bt(e, t, this.endLineNumber, this.endColumn)
          : new Bt(this.endLineNumber, this.endColumn, e, t);
      }
      static fromPositions(e, t = e) {
        return new Bt(e.lineNumber, e.column, t.lineNumber, t.column);
      }
      static liftSelection(e) {
        return new Bt(
          e.selectionStartLineNumber,
          e.selectionStartColumn,
          e.positionLineNumber,
          e.positionColumn,
        );
      }
      static selectionsArrEqual(e, t) {
        if ((e && !t) || (!e && t)) return !1;
        if (!e && !t) return !0;
        if (e.length !== t.length) return !1;
        for (let n = 0, r = e.length; n < r; n++)
          if (!this.selectionsEqual(e[n], t[n])) return !1;
        return !0;
      }
      static isISelection(e) {
        return (
          e &&
          'number' == typeof e.selectionStartLineNumber &&
          'number' == typeof e.selectionStartColumn &&
          'number' == typeof e.positionLineNumber &&
          'number' == typeof e.positionColumn
        );
      }
      static createWithDirection(e, t, n, r, i) {
        return 0 === i ? new Bt(e, t, n, r) : new Bt(n, r, e, t);
      }
    }
    class It {
      constructor(e, t, n) {
        (this.offset = 0 | e), (this.type = t), (this.language = n);
      }
      toString() {
        return '(' + this.offset + ', ' + this.type + ')';
      }
    }
    !(function(e) {
      (e[(e.Unknown = 0)] = 'Unknown'),
        (e[(e.Disabled = 1)] = 'Disabled'),
        (e[(e.Enabled = 2)] = 'Enabled');
    })(Qe || (Qe = {})),
      (function(e) {
        (e[(e.KeepWhitespace = 1)] = 'KeepWhitespace'),
          (e[(e.InsertAsSnippet = 4)] = 'InsertAsSnippet');
      })(Ze || (Ze = {})),
      (function(e) {
        (e[(e.Method = 0)] = 'Method'),
          (e[(e.Function = 1)] = 'Function'),
          (e[(e.Constructor = 2)] = 'Constructor'),
          (e[(e.Field = 3)] = 'Field'),
          (e[(e.Variable = 4)] = 'Variable'),
          (e[(e.Class = 5)] = 'Class'),
          (e[(e.Struct = 6)] = 'Struct'),
          (e[(e.Interface = 7)] = 'Interface'),
          (e[(e.Module = 8)] = 'Module'),
          (e[(e.Property = 9)] = 'Property'),
          (e[(e.Event = 10)] = 'Event'),
          (e[(e.Operator = 11)] = 'Operator'),
          (e[(e.Unit = 12)] = 'Unit'),
          (e[(e.Value = 13)] = 'Value'),
          (e[(e.Constant = 14)] = 'Constant'),
          (e[(e.Enum = 15)] = 'Enum'),
          (e[(e.EnumMember = 16)] = 'EnumMember'),
          (e[(e.Keyword = 17)] = 'Keyword'),
          (e[(e.Text = 18)] = 'Text'),
          (e[(e.Color = 19)] = 'Color'),
          (e[(e.File = 20)] = 'File'),
          (e[(e.Reference = 21)] = 'Reference'),
          (e[(e.Customcolor = 22)] = 'Customcolor'),
          (e[(e.Folder = 23)] = 'Folder'),
          (e[(e.TypeParameter = 24)] = 'TypeParameter'),
          (e[(e.User = 25)] = 'User'),
          (e[(e.Issue = 26)] = 'Issue'),
          (e[(e.Snippet = 27)] = 'Snippet');
      })(et || (et = {})),
      (function(e) {
        e[(e.Deprecated = 1)] = 'Deprecated';
      })(tt || (tt = {})),
      (function(e) {
        (e[(e.Invoke = 0)] = 'Invoke'),
          (e[(e.TriggerCharacter = 1)] = 'TriggerCharacter'),
          (e[(e.TriggerForIncompleteCompletions = 2)] =
            'TriggerForIncompleteCompletions');
      })(nt || (nt = {})),
      (function(e) {
        (e[(e.EXACT = 0)] = 'EXACT'),
          (e[(e.ABOVE = 1)] = 'ABOVE'),
          (e[(e.BELOW = 2)] = 'BELOW');
      })(rt || (rt = {})),
      (function(e) {
        (e[(e.NotSet = 0)] = 'NotSet'),
          (e[(e.ContentFlush = 1)] = 'ContentFlush'),
          (e[(e.RecoverFromMarkers = 2)] = 'RecoverFromMarkers'),
          (e[(e.Explicit = 3)] = 'Explicit'),
          (e[(e.Paste = 4)] = 'Paste'),
          (e[(e.Undo = 5)] = 'Undo'),
          (e[(e.Redo = 6)] = 'Redo');
      })(it || (it = {})),
      (function(e) {
        (e[(e.LF = 1)] = 'LF'), (e[(e.CRLF = 2)] = 'CRLF');
      })(at || (at = {})),
      (function(e) {
        (e[(e.Text = 0)] = 'Text'),
          (e[(e.Read = 1)] = 'Read'),
          (e[(e.Write = 2)] = 'Write');
      })(ot || (ot = {})),
      (function(e) {
        (e[(e.None = 0)] = 'None'),
          (e[(e.Keep = 1)] = 'Keep'),
          (e[(e.Brackets = 2)] = 'Brackets'),
          (e[(e.Advanced = 3)] = 'Advanced'),
          (e[(e.Full = 4)] = 'Full');
      })(st || (st = {})),
      (function(e) {
        (e[(e.acceptSuggestionOnCommitCharacter = 0)] =
          'acceptSuggestionOnCommitCharacter'),
          (e[(e.acceptSuggestionOnEnter = 1)] = 'acceptSuggestionOnEnter'),
          (e[(e.accessibilitySupport = 2)] = 'accessibilitySupport'),
          (e[(e.accessibilityPageSize = 3)] = 'accessibilityPageSize'),
          (e[(e.ariaLabel = 4)] = 'ariaLabel'),
          (e[(e.autoClosingBrackets = 5)] = 'autoClosingBrackets'),
          (e[(e.autoClosingDelete = 6)] = 'autoClosingDelete'),
          (e[(e.autoClosingOvertype = 7)] = 'autoClosingOvertype'),
          (e[(e.autoClosingQuotes = 8)] = 'autoClosingQuotes'),
          (e[(e.autoIndent = 9)] = 'autoIndent'),
          (e[(e.automaticLayout = 10)] = 'automaticLayout'),
          (e[(e.autoSurround = 11)] = 'autoSurround'),
          (e[(e.codeLens = 12)] = 'codeLens'),
          (e[(e.codeLensFontFamily = 13)] = 'codeLensFontFamily'),
          (e[(e.codeLensFontSize = 14)] = 'codeLensFontSize'),
          (e[(e.colorDecorators = 15)] = 'colorDecorators'),
          (e[(e.columnSelection = 16)] = 'columnSelection'),
          (e[(e.comments = 17)] = 'comments'),
          (e[(e.contextmenu = 18)] = 'contextmenu'),
          (e[(e.copyWithSyntaxHighlighting = 19)] =
            'copyWithSyntaxHighlighting'),
          (e[(e.cursorBlinking = 20)] = 'cursorBlinking'),
          (e[(e.cursorSmoothCaretAnimation = 21)] =
            'cursorSmoothCaretAnimation'),
          (e[(e.cursorStyle = 22)] = 'cursorStyle'),
          (e[(e.cursorSurroundingLines = 23)] = 'cursorSurroundingLines'),
          (e[(e.cursorSurroundingLinesStyle = 24)] =
            'cursorSurroundingLinesStyle'),
          (e[(e.cursorWidth = 25)] = 'cursorWidth'),
          (e[(e.disableLayerHinting = 26)] = 'disableLayerHinting'),
          (e[(e.disableMonospaceOptimizations = 27)] =
            'disableMonospaceOptimizations'),
          (e[(e.domReadOnly = 28)] = 'domReadOnly'),
          (e[(e.dragAndDrop = 29)] = 'dragAndDrop'),
          (e[(e.emptySelectionClipboard = 30)] = 'emptySelectionClipboard'),
          (e[(e.extraEditorClassName = 31)] = 'extraEditorClassName'),
          (e[(e.fastScrollSensitivity = 32)] = 'fastScrollSensitivity'),
          (e[(e.find = 33)] = 'find'),
          (e[(e.fixedOverflowWidgets = 34)] = 'fixedOverflowWidgets'),
          (e[(e.folding = 35)] = 'folding'),
          (e[(e.foldingStrategy = 36)] = 'foldingStrategy'),
          (e[(e.foldingHighlight = 37)] = 'foldingHighlight'),
          (e[(e.unfoldOnClickAfterEndOfLine = 38)] =
            'unfoldOnClickAfterEndOfLine'),
          (e[(e.fontFamily = 39)] = 'fontFamily'),
          (e[(e.fontInfo = 40)] = 'fontInfo'),
          (e[(e.fontLigatures = 41)] = 'fontLigatures'),
          (e[(e.fontSize = 42)] = 'fontSize'),
          (e[(e.fontWeight = 43)] = 'fontWeight'),
          (e[(e.formatOnPaste = 44)] = 'formatOnPaste'),
          (e[(e.formatOnType = 45)] = 'formatOnType'),
          (e[(e.glyphMargin = 46)] = 'glyphMargin'),
          (e[(e.gotoLocation = 47)] = 'gotoLocation'),
          (e[(e.hideCursorInOverviewRuler = 48)] = 'hideCursorInOverviewRuler'),
          (e[(e.highlightActiveIndentGuide = 49)] =
            'highlightActiveIndentGuide'),
          (e[(e.hover = 50)] = 'hover'),
          (e[(e.inDiffEditor = 51)] = 'inDiffEditor'),
          (e[(e.inlineSuggest = 52)] = 'inlineSuggest'),
          (e[(e.letterSpacing = 53)] = 'letterSpacing'),
          (e[(e.lightbulb = 54)] = 'lightbulb'),
          (e[(e.lineDecorationsWidth = 55)] = 'lineDecorationsWidth'),
          (e[(e.lineHeight = 56)] = 'lineHeight'),
          (e[(e.lineNumbers = 57)] = 'lineNumbers'),
          (e[(e.lineNumbersMinChars = 58)] = 'lineNumbersMinChars'),
          (e[(e.linkedEditing = 59)] = 'linkedEditing'),
          (e[(e.links = 60)] = 'links'),
          (e[(e.matchBrackets = 61)] = 'matchBrackets'),
          (e[(e.minimap = 62)] = 'minimap'),
          (e[(e.mouseStyle = 63)] = 'mouseStyle'),
          (e[(e.mouseWheelScrollSensitivity = 64)] =
            'mouseWheelScrollSensitivity'),
          (e[(e.mouseWheelZoom = 65)] = 'mouseWheelZoom'),
          (e[(e.multiCursorMergeOverlapping = 66)] =
            'multiCursorMergeOverlapping'),
          (e[(e.multiCursorModifier = 67)] = 'multiCursorModifier'),
          (e[(e.multiCursorPaste = 68)] = 'multiCursorPaste'),
          (e[(e.occurrencesHighlight = 69)] = 'occurrencesHighlight'),
          (e[(e.overviewRulerBorder = 70)] = 'overviewRulerBorder'),
          (e[(e.overviewRulerLanes = 71)] = 'overviewRulerLanes'),
          (e[(e.padding = 72)] = 'padding'),
          (e[(e.parameterHints = 73)] = 'parameterHints'),
          (e[(e.peekWidgetDefaultFocus = 74)] = 'peekWidgetDefaultFocus'),
          (e[(e.definitionLinkOpensInPeek = 75)] = 'definitionLinkOpensInPeek'),
          (e[(e.quickSuggestions = 76)] = 'quickSuggestions'),
          (e[(e.quickSuggestionsDelay = 77)] = 'quickSuggestionsDelay'),
          (e[(e.readOnly = 78)] = 'readOnly'),
          (e[(e.renameOnType = 79)] = 'renameOnType'),
          (e[(e.renderControlCharacters = 80)] = 'renderControlCharacters'),
          (e[(e.renderIndentGuides = 81)] = 'renderIndentGuides'),
          (e[(e.renderFinalNewline = 82)] = 'renderFinalNewline'),
          (e[(e.renderLineHighlight = 83)] = 'renderLineHighlight'),
          (e[(e.renderLineHighlightOnlyWhenFocus = 84)] =
            'renderLineHighlightOnlyWhenFocus'),
          (e[(e.renderValidationDecorations = 85)] =
            'renderValidationDecorations'),
          (e[(e.renderWhitespace = 86)] = 'renderWhitespace'),
          (e[(e.revealHorizontalRightPadding = 87)] =
            'revealHorizontalRightPadding'),
          (e[(e.roundedSelection = 88)] = 'roundedSelection'),
          (e[(e.rulers = 89)] = 'rulers'),
          (e[(e.scrollbar = 90)] = 'scrollbar'),
          (e[(e.scrollBeyondLastColumn = 91)] = 'scrollBeyondLastColumn'),
          (e[(e.scrollBeyondLastLine = 92)] = 'scrollBeyondLastLine'),
          (e[(e.scrollPredominantAxis = 93)] = 'scrollPredominantAxis'),
          (e[(e.selectionClipboard = 94)] = 'selectionClipboard'),
          (e[(e.selectionHighlight = 95)] = 'selectionHighlight'),
          (e[(e.selectOnLineNumbers = 96)] = 'selectOnLineNumbers'),
          (e[(e.showFoldingControls = 97)] = 'showFoldingControls'),
          (e[(e.showUnused = 98)] = 'showUnused'),
          (e[(e.snippetSuggestions = 99)] = 'snippetSuggestions'),
          (e[(e.smartSelect = 100)] = 'smartSelect'),
          (e[(e.smoothScrolling = 101)] = 'smoothScrolling'),
          (e[(e.stickyTabStops = 102)] = 'stickyTabStops'),
          (e[(e.stopRenderingLineAfter = 103)] = 'stopRenderingLineAfter'),
          (e[(e.suggest = 104)] = 'suggest'),
          (e[(e.suggestFontSize = 105)] = 'suggestFontSize'),
          (e[(e.suggestLineHeight = 106)] = 'suggestLineHeight'),
          (e[(e.suggestOnTriggerCharacters = 107)] =
            'suggestOnTriggerCharacters'),
          (e[(e.suggestSelection = 108)] = 'suggestSelection'),
          (e[(e.tabCompletion = 109)] = 'tabCompletion'),
          (e[(e.tabIndex = 110)] = 'tabIndex'),
          (e[(e.unusualLineTerminators = 111)] = 'unusualLineTerminators'),
          (e[(e.useShadowDOM = 112)] = 'useShadowDOM'),
          (e[(e.useTabStops = 113)] = 'useTabStops'),
          (e[(e.wordSeparators = 114)] = 'wordSeparators'),
          (e[(e.wordWrap = 115)] = 'wordWrap'),
          (e[(e.wordWrapBreakAfterCharacters = 116)] =
            'wordWrapBreakAfterCharacters'),
          (e[(e.wordWrapBreakBeforeCharacters = 117)] =
            'wordWrapBreakBeforeCharacters'),
          (e[(e.wordWrapColumn = 118)] = 'wordWrapColumn'),
          (e[(e.wordWrapOverride1 = 119)] = 'wordWrapOverride1'),
          (e[(e.wordWrapOverride2 = 120)] = 'wordWrapOverride2'),
          (e[(e.wrappingIndent = 121)] = 'wrappingIndent'),
          (e[(e.wrappingStrategy = 122)] = 'wrappingStrategy'),
          (e[(e.showDeprecated = 123)] = 'showDeprecated'),
          (e[(e.inlayHints = 124)] = 'inlayHints'),
          (e[(e.editorClassName = 125)] = 'editorClassName'),
          (e[(e.pixelRatio = 126)] = 'pixelRatio'),
          (e[(e.tabFocusMode = 127)] = 'tabFocusMode'),
          (e[(e.layoutInfo = 128)] = 'layoutInfo'),
          (e[(e.wrappingInfo = 129)] = 'wrappingInfo');
      })(ut || (ut = {})),
      (function(e) {
        (e[(e.TextDefined = 0)] = 'TextDefined'),
          (e[(e.LF = 1)] = 'LF'),
          (e[(e.CRLF = 2)] = 'CRLF');
      })(ct || (ct = {})),
      (function(e) {
        (e[(e.LF = 0)] = 'LF'), (e[(e.CRLF = 1)] = 'CRLF');
      })(lt || (lt = {})),
      (function(e) {
        (e[(e.None = 0)] = 'None'),
          (e[(e.Indent = 1)] = 'Indent'),
          (e[(e.IndentOutdent = 2)] = 'IndentOutdent'),
          (e[(e.Outdent = 3)] = 'Outdent');
      })(pt || (pt = {})),
      (function(e) {
        (e[(e.Other = 0)] = 'Other'),
          (e[(e.Type = 1)] = 'Type'),
          (e[(e.Parameter = 2)] = 'Parameter');
      })(ft || (ft = {})),
      (function(e) {
        (e[(e.Automatic = 0)] = 'Automatic'),
          (e[(e.Explicit = 1)] = 'Explicit');
      })(ht || (ht = {})),
      (function(e) {
        (e[(e.DependsOnKbLayout = -1)] = 'DependsOnKbLayout'),
          (e[(e.Unknown = 0)] = 'Unknown'),
          (e[(e.Backspace = 1)] = 'Backspace'),
          (e[(e.Tab = 2)] = 'Tab'),
          (e[(e.Enter = 3)] = 'Enter'),
          (e[(e.Shift = 4)] = 'Shift'),
          (e[(e.Ctrl = 5)] = 'Ctrl'),
          (e[(e.Alt = 6)] = 'Alt'),
          (e[(e.PauseBreak = 7)] = 'PauseBreak'),
          (e[(e.CapsLock = 8)] = 'CapsLock'),
          (e[(e.Escape = 9)] = 'Escape'),
          (e[(e.Space = 10)] = 'Space'),
          (e[(e.PageUp = 11)] = 'PageUp'),
          (e[(e.PageDown = 12)] = 'PageDown'),
          (e[(e.End = 13)] = 'End'),
          (e[(e.Home = 14)] = 'Home'),
          (e[(e.LeftArrow = 15)] = 'LeftArrow'),
          (e[(e.UpArrow = 16)] = 'UpArrow'),
          (e[(e.RightArrow = 17)] = 'RightArrow'),
          (e[(e.DownArrow = 18)] = 'DownArrow'),
          (e[(e.Insert = 19)] = 'Insert'),
          (e[(e.Delete = 20)] = 'Delete'),
          (e[(e.KEY_0 = 21)] = 'KEY_0'),
          (e[(e.KEY_1 = 22)] = 'KEY_1'),
          (e[(e.KEY_2 = 23)] = 'KEY_2'),
          (e[(e.KEY_3 = 24)] = 'KEY_3'),
          (e[(e.KEY_4 = 25)] = 'KEY_4'),
          (e[(e.KEY_5 = 26)] = 'KEY_5'),
          (e[(e.KEY_6 = 27)] = 'KEY_6'),
          (e[(e.KEY_7 = 28)] = 'KEY_7'),
          (e[(e.KEY_8 = 29)] = 'KEY_8'),
          (e[(e.KEY_9 = 30)] = 'KEY_9'),
          (e[(e.KEY_A = 31)] = 'KEY_A'),
          (e[(e.KEY_B = 32)] = 'KEY_B'),
          (e[(e.KEY_C = 33)] = 'KEY_C'),
          (e[(e.KEY_D = 34)] = 'KEY_D'),
          (e[(e.KEY_E = 35)] = 'KEY_E'),
          (e[(e.KEY_F = 36)] = 'KEY_F'),
          (e[(e.KEY_G = 37)] = 'KEY_G'),
          (e[(e.KEY_H = 38)] = 'KEY_H'),
          (e[(e.KEY_I = 39)] = 'KEY_I'),
          (e[(e.KEY_J = 40)] = 'KEY_J'),
          (e[(e.KEY_K = 41)] = 'KEY_K'),
          (e[(e.KEY_L = 42)] = 'KEY_L'),
          (e[(e.KEY_M = 43)] = 'KEY_M'),
          (e[(e.KEY_N = 44)] = 'KEY_N'),
          (e[(e.KEY_O = 45)] = 'KEY_O'),
          (e[(e.KEY_P = 46)] = 'KEY_P'),
          (e[(e.KEY_Q = 47)] = 'KEY_Q'),
          (e[(e.KEY_R = 48)] = 'KEY_R'),
          (e[(e.KEY_S = 49)] = 'KEY_S'),
          (e[(e.KEY_T = 50)] = 'KEY_T'),
          (e[(e.KEY_U = 51)] = 'KEY_U'),
          (e[(e.KEY_V = 52)] = 'KEY_V'),
          (e[(e.KEY_W = 53)] = 'KEY_W'),
          (e[(e.KEY_X = 54)] = 'KEY_X'),
          (e[(e.KEY_Y = 55)] = 'KEY_Y'),
          (e[(e.KEY_Z = 56)] = 'KEY_Z'),
          (e[(e.Meta = 57)] = 'Meta'),
          (e[(e.ContextMenu = 58)] = 'ContextMenu'),
          (e[(e.F1 = 59)] = 'F1'),
          (e[(e.F2 = 60)] = 'F2'),
          (e[(e.F3 = 61)] = 'F3'),
          (e[(e.F4 = 62)] = 'F4'),
          (e[(e.F5 = 63)] = 'F5'),
          (e[(e.F6 = 64)] = 'F6'),
          (e[(e.F7 = 65)] = 'F7'),
          (e[(e.F8 = 66)] = 'F8'),
          (e[(e.F9 = 67)] = 'F9'),
          (e[(e.F10 = 68)] = 'F10'),
          (e[(e.F11 = 69)] = 'F11'),
          (e[(e.F12 = 70)] = 'F12'),
          (e[(e.F13 = 71)] = 'F13'),
          (e[(e.F14 = 72)] = 'F14'),
          (e[(e.F15 = 73)] = 'F15'),
          (e[(e.F16 = 74)] = 'F16'),
          (e[(e.F17 = 75)] = 'F17'),
          (e[(e.F18 = 76)] = 'F18'),
          (e[(e.F19 = 77)] = 'F19'),
          (e[(e.NumLock = 78)] = 'NumLock'),
          (e[(e.ScrollLock = 79)] = 'ScrollLock'),
          (e[(e.US_SEMICOLON = 80)] = 'US_SEMICOLON'),
          (e[(e.US_EQUAL = 81)] = 'US_EQUAL'),
          (e[(e.US_COMMA = 82)] = 'US_COMMA'),
          (e[(e.US_MINUS = 83)] = 'US_MINUS'),
          (e[(e.US_DOT = 84)] = 'US_DOT'),
          (e[(e.US_SLASH = 85)] = 'US_SLASH'),
          (e[(e.US_BACKTICK = 86)] = 'US_BACKTICK'),
          (e[(e.US_OPEN_SQUARE_BRACKET = 87)] = 'US_OPEN_SQUARE_BRACKET'),
          (e[(e.US_BACKSLASH = 88)] = 'US_BACKSLASH'),
          (e[(e.US_CLOSE_SQUARE_BRACKET = 89)] = 'US_CLOSE_SQUARE_BRACKET'),
          (e[(e.US_QUOTE = 90)] = 'US_QUOTE'),
          (e[(e.OEM_8 = 91)] = 'OEM_8'),
          (e[(e.OEM_102 = 92)] = 'OEM_102'),
          (e[(e.NUMPAD_0 = 93)] = 'NUMPAD_0'),
          (e[(e.NUMPAD_1 = 94)] = 'NUMPAD_1'),
          (e[(e.NUMPAD_2 = 95)] = 'NUMPAD_2'),
          (e[(e.NUMPAD_3 = 96)] = 'NUMPAD_3'),
          (e[(e.NUMPAD_4 = 97)] = 'NUMPAD_4'),
          (e[(e.NUMPAD_5 = 98)] = 'NUMPAD_5'),
          (e[(e.NUMPAD_6 = 99)] = 'NUMPAD_6'),
          (e[(e.NUMPAD_7 = 100)] = 'NUMPAD_7'),
          (e[(e.NUMPAD_8 = 101)] = 'NUMPAD_8'),
          (e[(e.NUMPAD_9 = 102)] = 'NUMPAD_9'),
          (e[(e.NUMPAD_MULTIPLY = 103)] = 'NUMPAD_MULTIPLY'),
          (e[(e.NUMPAD_ADD = 104)] = 'NUMPAD_ADD'),
          (e[(e.NUMPAD_SEPARATOR = 105)] = 'NUMPAD_SEPARATOR'),
          (e[(e.NUMPAD_SUBTRACT = 106)] = 'NUMPAD_SUBTRACT'),
          (e[(e.NUMPAD_DECIMAL = 107)] = 'NUMPAD_DECIMAL'),
          (e[(e.NUMPAD_DIVIDE = 108)] = 'NUMPAD_DIVIDE'),
          (e[(e.KEY_IN_COMPOSITION = 109)] = 'KEY_IN_COMPOSITION'),
          (e[(e.ABNT_C1 = 110)] = 'ABNT_C1'),
          (e[(e.ABNT_C2 = 111)] = 'ABNT_C2'),
          (e[(e.MAX_VALUE = 112)] = 'MAX_VALUE');
      })(dt || (dt = {})),
      (function(e) {
        (e[(e.Hint = 1)] = 'Hint'),
          (e[(e.Info = 2)] = 'Info'),
          (e[(e.Warning = 4)] = 'Warning'),
          (e[(e.Error = 8)] = 'Error');
      })(mt || (mt = {})),
      (function(e) {
        (e[(e.Unnecessary = 1)] = 'Unnecessary'),
          (e[(e.Deprecated = 2)] = 'Deprecated');
      })(gt || (gt = {})),
      (function(e) {
        (e[(e.Inline = 1)] = 'Inline'), (e[(e.Gutter = 2)] = 'Gutter');
      })(yt || (yt = {})),
      (function(e) {
        (e[(e.UNKNOWN = 0)] = 'UNKNOWN'),
          (e[(e.TEXTAREA = 1)] = 'TEXTAREA'),
          (e[(e.GUTTER_GLYPH_MARGIN = 2)] = 'GUTTER_GLYPH_MARGIN'),
          (e[(e.GUTTER_LINE_NUMBERS = 3)] = 'GUTTER_LINE_NUMBERS'),
          (e[(e.GUTTER_LINE_DECORATIONS = 4)] = 'GUTTER_LINE_DECORATIONS'),
          (e[(e.GUTTER_VIEW_ZONE = 5)] = 'GUTTER_VIEW_ZONE'),
          (e[(e.CONTENT_TEXT = 6)] = 'CONTENT_TEXT'),
          (e[(e.CONTENT_EMPTY = 7)] = 'CONTENT_EMPTY'),
          (e[(e.CONTENT_VIEW_ZONE = 8)] = 'CONTENT_VIEW_ZONE'),
          (e[(e.CONTENT_WIDGET = 9)] = 'CONTENT_WIDGET'),
          (e[(e.OVERVIEW_RULER = 10)] = 'OVERVIEW_RULER'),
          (e[(e.SCROLLBAR = 11)] = 'SCROLLBAR'),
          (e[(e.OVERLAY_WIDGET = 12)] = 'OVERLAY_WIDGET'),
          (e[(e.OUTSIDE_EDITOR = 13)] = 'OUTSIDE_EDITOR');
      })(vt || (vt = {})),
      (function(e) {
        (e[(e.TOP_RIGHT_CORNER = 0)] = 'TOP_RIGHT_CORNER'),
          (e[(e.BOTTOM_RIGHT_CORNER = 1)] = 'BOTTOM_RIGHT_CORNER'),
          (e[(e.TOP_CENTER = 2)] = 'TOP_CENTER');
      })(Dt || (Dt = {})),
      (function(e) {
        (e[(e.Left = 1)] = 'Left'),
          (e[(e.Center = 2)] = 'Center'),
          (e[(e.Right = 4)] = 'Right'),
          (e[(e.Full = 7)] = 'Full');
      })(Et || (Et = {})),
      (function(e) {
        (e[(e.Off = 0)] = 'Off'),
          (e[(e.On = 1)] = 'On'),
          (e[(e.Relative = 2)] = 'Relative'),
          (e[(e.Interval = 3)] = 'Interval'),
          (e[(e.Custom = 4)] = 'Custom');
      })(Ct || (Ct = {})),
      (function(e) {
        (e[(e.None = 0)] = 'None'),
          (e[(e.Text = 1)] = 'Text'),
          (e[(e.Blocks = 2)] = 'Blocks');
      })(bt || (bt = {})),
      (function(e) {
        (e[(e.Smooth = 0)] = 'Smooth'), (e[(e.Immediate = 1)] = 'Immediate');
      })(xt || (xt = {})),
      (function(e) {
        (e[(e.Auto = 1)] = 'Auto'),
          (e[(e.Hidden = 2)] = 'Hidden'),
          (e[(e.Visible = 3)] = 'Visible');
      })(At || (At = {})),
      (function(e) {
        (e[(e.LTR = 0)] = 'LTR'), (e[(e.RTL = 1)] = 'RTL');
      })(St || (St = {})),
      (function(e) {
        (e[(e.Invoke = 1)] = 'Invoke'),
          (e[(e.TriggerCharacter = 2)] = 'TriggerCharacter'),
          (e[(e.ContentChange = 3)] = 'ContentChange');
      })(wt || (wt = {})),
      (function(e) {
        (e[(e.File = 0)] = 'File'),
          (e[(e.Module = 1)] = 'Module'),
          (e[(e.Namespace = 2)] = 'Namespace'),
          (e[(e.Package = 3)] = 'Package'),
          (e[(e.Class = 4)] = 'Class'),
          (e[(e.Method = 5)] = 'Method'),
          (e[(e.Property = 6)] = 'Property'),
          (e[(e.Field = 7)] = 'Field'),
          (e[(e.Constructor = 8)] = 'Constructor'),
          (e[(e.Enum = 9)] = 'Enum'),
          (e[(e.Interface = 10)] = 'Interface'),
          (e[(e.Function = 11)] = 'Function'),
          (e[(e.Variable = 12)] = 'Variable'),
          (e[(e.Constant = 13)] = 'Constant'),
          (e[(e.String = 14)] = 'String'),
          (e[(e.Number = 15)] = 'Number'),
          (e[(e.Boolean = 16)] = 'Boolean'),
          (e[(e.Array = 17)] = 'Array'),
          (e[(e.Object = 18)] = 'Object'),
          (e[(e.Key = 19)] = 'Key'),
          (e[(e.Null = 20)] = 'Null'),
          (e[(e.EnumMember = 21)] = 'EnumMember'),
          (e[(e.Struct = 22)] = 'Struct'),
          (e[(e.Event = 23)] = 'Event'),
          (e[(e.Operator = 24)] = 'Operator'),
          (e[(e.TypeParameter = 25)] = 'TypeParameter');
      })(Ft || (Ft = {})),
      (function(e) {
        e[(e.Deprecated = 1)] = 'Deprecated';
      })(kt || (kt = {})),
      (function(e) {
        (e[(e.Hidden = 0)] = 'Hidden'),
          (e[(e.Blink = 1)] = 'Blink'),
          (e[(e.Smooth = 2)] = 'Smooth'),
          (e[(e.Phase = 3)] = 'Phase'),
          (e[(e.Expand = 4)] = 'Expand'),
          (e[(e.Solid = 5)] = 'Solid');
      })(Tt || (Tt = {})),
      (function(e) {
        (e[(e.Line = 1)] = 'Line'),
          (e[(e.Block = 2)] = 'Block'),
          (e[(e.Underline = 3)] = 'Underline'),
          (e[(e.LineThin = 4)] = 'LineThin'),
          (e[(e.BlockOutline = 5)] = 'BlockOutline'),
          (e[(e.UnderlineThin = 6)] = 'UnderlineThin');
      })(_t || (_t = {})),
      (function(e) {
        (e[(e.AlwaysGrowsWhenTypingAtEdges = 0)] =
          'AlwaysGrowsWhenTypingAtEdges'),
          (e[(e.NeverGrowsWhenTypingAtEdges = 1)] =
            'NeverGrowsWhenTypingAtEdges'),
          (e[(e.GrowsOnlyWhenTypingBefore = 2)] = 'GrowsOnlyWhenTypingBefore'),
          (e[(e.GrowsOnlyWhenTypingAfter = 3)] = 'GrowsOnlyWhenTypingAfter');
      })(Ot || (Ot = {})),
      (function(e) {
        (e[(e.None = 0)] = 'None'),
          (e[(e.Same = 1)] = 'Same'),
          (e[(e.Indent = 2)] = 'Indent'),
          (e[(e.DeepIndent = 3)] = 'DeepIndent');
      })(Nt || (Nt = {}));
    class Pt {
      static chord(e, t) {
        return (function(e, t) {
          return (e | (((65535 & t) << 16) >>> 0)) >>> 0;
        })(e, t);
      }
    }
    (Pt.CtrlCmd = 2048), (Pt.Shift = 1024), (Pt.Alt = 512), (Pt.WinCtrl = 256);
    var Mt = function(e, t, n, r) {
      return new (n || (n = Promise))(function(i, a) {
        function o(e) {
          try {
            u(r.next(e));
          } catch (e) {
            a(e);
          }
        }
        function s(e) {
          try {
            u(r.throw(e));
          } catch (e) {
            a(e);
          }
        }
        function u(e) {
          var t;
          e.done
            ? i(e.value)
            : ((t = e.value),
              t instanceof n
                ? t
                : new n(function(e) {
                    e(t);
                  })).then(o, s);
        }
        u((r = r.apply(e, t || [])).next());
      });
    };
    class Lt extends class {
      constructor(e, t, n, r) {
        (this._uri = e),
          (this._lines = t),
          (this._eol = n),
          (this._versionId = r),
          (this._lineStarts = null),
          (this._cachedTextValue = null);
      }
      dispose() {
        this._lines.length = 0;
      }
      get version() {
        return this._versionId;
      }
      getText() {
        return (
          null === this._cachedTextValue &&
            (this._cachedTextValue = this._lines.join(this._eol)),
          this._cachedTextValue
        );
      }
      onEvents(e) {
        e.eol &&
          e.eol !== this._eol &&
          ((this._eol = e.eol), (this._lineStarts = null));
        const t = e.changes;
        for (const e of t)
          this._acceptDeleteRange(e.range),
            this._acceptInsertText(
              new le(e.range.startLineNumber, e.range.startColumn),
              e.text,
            );
        (this._versionId = e.versionId), (this._cachedTextValue = null);
      }
      _ensureLineStarts() {
        if (!this._lineStarts) {
          const e = this._eol.length,
            t = this._lines.length,
            n = new Uint32Array(t);
          for (let r = 0; r < t; r++) n[r] = this._lines[r].length + e;
          this._lineStarts = new Ae(n);
        }
      }
      _setLineText(e, t) {
        (this._lines[e] = t),
          this._lineStarts &&
            this._lineStarts.changeValue(
              e,
              this._lines[e].length + this._eol.length,
            );
      }
      _acceptDeleteRange(e) {
        if (e.startLineNumber !== e.endLineNumber)
          this._setLineText(
            e.startLineNumber - 1,
            this._lines[e.startLineNumber - 1].substring(0, e.startColumn - 1) +
              this._lines[e.endLineNumber - 1].substring(e.endColumn - 1),
          ),
            this._lines.splice(
              e.startLineNumber,
              e.endLineNumber - e.startLineNumber,
            ),
            this._lineStarts &&
              this._lineStarts.removeValues(
                e.startLineNumber,
                e.endLineNumber - e.startLineNumber,
              );
        else {
          if (e.startColumn === e.endColumn) return;
          this._setLineText(
            e.startLineNumber - 1,
            this._lines[e.startLineNumber - 1].substring(0, e.startColumn - 1) +
              this._lines[e.startLineNumber - 1].substring(e.endColumn - 1),
          );
        }
      }
      _acceptInsertText(e, t) {
        if (0 === t.length) return;
        let n = t.split(/\r\n|\r|\n/);
        if (1 === n.length)
          return void this._setLineText(
            e.lineNumber - 1,
            this._lines[e.lineNumber - 1].substring(0, e.column - 1) +
              n[0] +
              this._lines[e.lineNumber - 1].substring(e.column - 1),
          );
        (n[n.length - 1] += this._lines[e.lineNumber - 1].substring(
          e.column - 1,
        )),
          this._setLineText(
            e.lineNumber - 1,
            this._lines[e.lineNumber - 1].substring(0, e.column - 1) + n[0],
          );
        let r = new Uint32Array(n.length - 1);
        for (let t = 1; t < n.length; t++)
          this._lines.splice(e.lineNumber + t - 1, 0, n[t]),
            (r[t - 1] = n[t].length + this._eol.length);
        this._lineStarts && this._lineStarts.insertValues(e.lineNumber, r);
      }
    } {
      get uri() {
        return this._uri;
      }
      get eol() {
        return this._eol;
      }
      getValue() {
        return this.getText();
      }
      getLinesContent() {
        return this._lines.slice(0);
      }
      getLineCount() {
        return this._lines.length;
      }
      getLineContent(e) {
        return this._lines[e - 1];
      }
      getWordAtPosition(e, t) {
        let n = (function e(t, n, r, i, a = we) {
          if (r.length > a.maxLen) {
            let o = t - a.maxLen / 2;
            return (
              o < 0 ? (o = 0) : (i += o),
              e(t, n, (r = r.substring(o, t + a.maxLen / 2)), i, a)
            );
          }
          const o = Date.now(),
            s = t - 1 - i;
          let u = -1,
            c = null;
          for (let e = 1; !(Date.now() - o >= a.timeBudget); e++) {
            const t = s - a.windowSize * e;
            n.lastIndex = Math.max(0, t);
            const i = Fe(n, r, s, u);
            if (!i && c) break;
            if (((c = i), t <= 0)) break;
            u = t;
          }
          if (c) {
            let e = {
              word: c[0],
              startColumn: i + 1 + c.index,
              endColumn: i + 1 + c.index + c[0].length,
            };
            return (n.lastIndex = 0), e;
          }
          return null;
        })(
          e.column,
          (function(e) {
            let t = Se;
            if (e && e instanceof RegExp)
              if (e.global) t = e;
              else {
                let n = 'g';
                e.ignoreCase && (n += 'i'),
                  e.multiline && (n += 'm'),
                  e.unicode && (n += 'u'),
                  (t = new RegExp(e.source, n));
              }
            return (t.lastIndex = 0), t;
          })(t),
          this._lines[e.lineNumber - 1],
          0,
        );
        return n
          ? new pe(e.lineNumber, n.startColumn, e.lineNumber, n.endColumn)
          : null;
      }
      words(e) {
        const t = this._lines,
          n = this._wordenize.bind(this);
        let r = 0,
          i = '',
          a = 0,
          o = [];
        return {
          *[Symbol.iterator]() {
            for (;;)
              if (a < o.length) {
                const e = i.substring(o[a].start, o[a].end);
                (a += 1), yield e;
              } else {
                if (!(r < t.length)) break;
                (i = t[r]), (o = n(i, e)), (a = 0), (r += 1);
              }
          },
        };
      }
      getLineWords(e, t) {
        let n = this._lines[e - 1],
          r = this._wordenize(n, t),
          i = [];
        for (const e of r)
          i.push({
            word: n.substring(e.start, e.end),
            startColumn: e.start + 1,
            endColumn: e.end + 1,
          });
        return i;
      }
      _wordenize(e, t) {
        const n = [];
        let r;
        for (t.lastIndex = 0; (r = t.exec(e)) && 0 !== r[0].length; )
          n.push({ start: r.index, end: r.index + r[0].length });
        return n;
      }
      getValueInRange(e) {
        if ((e = this._validateRange(e)).startLineNumber === e.endLineNumber)
          return this._lines[e.startLineNumber - 1].substring(
            e.startColumn - 1,
            e.endColumn - 1,
          );
        let t = this._eol,
          n = e.startLineNumber - 1,
          r = e.endLineNumber - 1,
          i = [];
        i.push(this._lines[n].substring(e.startColumn - 1));
        for (let e = n + 1; e < r; e++) i.push(this._lines[e]);
        return i.push(this._lines[r].substring(0, e.endColumn - 1)), i.join(t);
      }
      offsetAt(e) {
        return (
          (e = this._validatePosition(e)),
          this._ensureLineStarts(),
          this._lineStarts.getAccumulatedValue(e.lineNumber - 2) +
            (e.column - 1)
        );
      }
      positionAt(e) {
        (e = Math.floor(e)), (e = Math.max(0, e)), this._ensureLineStarts();
        let t = this._lineStarts.getIndexOf(e),
          n = this._lines[t.index].length;
        return {
          lineNumber: 1 + t.index,
          column: 1 + Math.min(t.remainder, n),
        };
      }
      _validateRange(e) {
        const t = this._validatePosition({
            lineNumber: e.startLineNumber,
            column: e.startColumn,
          }),
          n = this._validatePosition({
            lineNumber: e.endLineNumber,
            column: e.endColumn,
          });
        return t.lineNumber !== e.startLineNumber ||
          t.column !== e.startColumn ||
          n.lineNumber !== e.endLineNumber ||
          n.column !== e.endColumn
          ? {
              startLineNumber: t.lineNumber,
              startColumn: t.column,
              endLineNumber: n.lineNumber,
              endColumn: n.column,
            }
          : e;
      }
      _validatePosition(e) {
        if (!le.isIPosition(e)) throw new Error('bad position');
        let { lineNumber: t, column: n } = e,
          r = !1;
        if (t < 1) (t = 1), (n = 1), (r = !0);
        else if (t > this._lines.length)
          (t = this._lines.length),
            (n = this._lines[t - 1].length + 1),
            (r = !0);
        else {
          let e = this._lines[t - 1].length + 1;
          n < 1 ? ((n = 1), (r = !0)) : n > e && ((n = e), (r = !0));
        }
        return r ? { lineNumber: t, column: n } : e;
      }
    }
    class Rt {
      constructor(e, t) {
        (this._host = e),
          (this._models = Object.create(null)),
          (this._foreignModuleFactory = t),
          (this._foreignModule = null);
      }
      dispose() {
        this._models = Object.create(null);
      }
      _getModel(e) {
        return this._models[e];
      }
      _getModels() {
        let e = [];
        return (
          Object.keys(this._models).forEach(t => e.push(this._models[t])), e
        );
      }
      acceptNewModel(e) {
        this._models[e.url] = new Lt(
          ee.parse(e.url),
          e.lines,
          e.EOL,
          e.versionId,
        );
      }
      acceptModelChanged(e, t) {
        if (!this._models[e]) return;
        this._models[e].onEvents(t);
      }
      acceptRemovedModel(e) {
        this._models[e] && delete this._models[e];
      }
      computeDiff(e, t, n, r) {
        return Mt(this, void 0, void 0, function*() {
          const i = this._getModel(e),
            a = this._getModel(t);
          if (!i || !a) return null;
          const o = i.getLinesContent(),
            s = a.getLinesContent(),
            u = new ye(o, s, {
              shouldComputeCharChanges: !0,
              shouldPostProcessCharChanges: !0,
              shouldIgnoreTrimWhitespace: n,
              shouldMakePrettyDiff: !0,
              maxComputationTime: r,
            }).computeDiff(),
            c = !(u.changes.length > 0) && this._modelsAreIdentical(i, a);
          return { quitEarly: u.quitEarly, identical: c, changes: u.changes };
        });
      }
      _modelsAreIdentical(e, t) {
        const n = e.getLineCount();
        if (n !== t.getLineCount()) return !1;
        for (let r = 1; r <= n; r++) {
          if (e.getLineContent(r) !== t.getLineContent(r)) return !1;
        }
        return !0;
      }
      computeMoreMinimalEdits(e, t) {
        return Mt(this, void 0, void 0, function*() {
          const n = this._getModel(e);
          if (!n) return t;
          const r = [];
          let i = void 0;
          t = t.slice(0).sort((e, t) => {
            if (e.range && t.range)
              return pe.compareRangesUsingStarts(e.range, t.range);
            return (e.range ? 0 : 1) - (t.range ? 0 : 1);
          });
          for (let { range: e, text: a, eol: o } of t) {
            if (('number' == typeof o && (i = o), pe.isEmpty(e) && !a))
              continue;
            const t = n.getValueInRange(e);
            if (((a = a.replace(/\r\n|\n|\r/g, n.eol)), t === a)) continue;
            if (Math.max(a.length, t.length) > Rt._diffLimit) {
              r.push({ range: e, text: a });
              continue;
            }
            const s = B(t, a, !1),
              u = n.offsetAt(pe.lift(e).getStartPosition());
            for (const e of s) {
              const t = n.positionAt(u + e.originalStart),
                i = n.positionAt(u + e.originalStart + e.originalLength),
                o = {
                  text: a.substr(e.modifiedStart, e.modifiedLength),
                  range: {
                    startLineNumber: t.lineNumber,
                    startColumn: t.column,
                    endLineNumber: i.lineNumber,
                    endColumn: i.column,
                  },
                };
              n.getValueInRange(o.range) !== o.text && r.push(o);
            }
          }
          return (
            'number' == typeof i &&
              r.push({
                eol: i,
                text: '',
                range: {
                  startLineNumber: 0,
                  startColumn: 0,
                  endLineNumber: 0,
                  endColumn: 0,
                },
              }),
            r
          );
        });
      }
      computeLinks(e) {
        return Mt(this, void 0, void 0, function*() {
          let t = this._getModel(e);
          return t
            ? (function(e) {
                return e &&
                  'function' == typeof e.getLineCount &&
                  'function' == typeof e.getLineContent
                  ? Be.computeLinks(e)
                  : [];
              })(t)
            : null;
        });
      }
      textualSuggest(e, t, n, r) {
        return Mt(this, void 0, void 0, function*() {
          const i = new Re(!0),
            a = new RegExp(n, r),
            o = new Set();
          e: for (let n of e) {
            const e = this._getModel(n);
            if (e)
              for (let n of e.words(a))
                if (
                  n !== t &&
                  isNaN(Number(n)) &&
                  (o.add(n), o.size > Rt._suggestionsLimit)
                )
                  break e;
          }
          return { words: Array.from(o), duration: i.elapsed() };
        });
      }
      computeWordRanges(e, t, n, r) {
        return Mt(this, void 0, void 0, function*() {
          let i = this._getModel(e);
          if (!i) return Object.create(null);
          const a = new RegExp(n, r),
            o = Object.create(null);
          for (let e = t.startLineNumber; e < t.endLineNumber; e++) {
            let t = i.getLineWords(e, a);
            for (const n of t) {
              if (!isNaN(Number(n.word))) continue;
              let t = o[n.word];
              t || ((t = []), (o[n.word] = t)),
                t.push({
                  startLineNumber: e,
                  startColumn: n.startColumn,
                  endLineNumber: e,
                  endColumn: n.endColumn,
                });
            }
          }
          return o;
        });
      }
      navigateValueSet(e, t, n, r, i) {
        return Mt(this, void 0, void 0, function*() {
          let a = this._getModel(e);
          if (!a) return null;
          let o = new RegExp(r, i);
          t.startColumn === t.endColumn &&
            (t = {
              startLineNumber: t.startLineNumber,
              startColumn: t.startColumn,
              endLineNumber: t.endLineNumber,
              endColumn: t.endColumn + 1,
            });
          let s = a.getValueInRange(t),
            u = a.getWordAtPosition(
              { lineNumber: t.startLineNumber, column: t.startColumn },
              o,
            );
          if (!u) return null;
          let c = a.getValueInRange(u);
          return Ie.INSTANCE.navigateValueSet(t, s, u, c, n);
        });
      }
      loadForeignModule(e, t, n) {
        let r = {
          host: v(n, (e, t) => this._host.fhr(e, t)),
          getMirrorModels: () => this._getModels(),
        };
        return this._foreignModuleFactory
          ? ((this._foreignModule = this._foreignModuleFactory(r, t)),
            Promise.resolve(y(this._foreignModule)))
          : Promise.reject(new Error('Unexpected usage'));
      }
      fmr(e, t) {
        if (!this._foreignModule || 'function' != typeof this._foreignModule[e])
          return Promise.reject(
            new Error('Missing requestHandler or method: ' + e),
          );
        try {
          return Promise.resolve(
            this._foreignModule[e].apply(this._foreignModule, t),
          );
        } catch (e) {
          return Promise.reject(e);
        }
      }
    }
    (Rt._diffLimit = 1e5),
      (Rt._suggestionsLimit = 1e4),
      'function' == typeof importScripts &&
        (g.a.monaco = {
          editor: void 0,
          languages: void 0,
          CancellationTokenSource: Je,
          Emitter: Ve,
          KeyCode: dt,
          KeyMod: Pt,
          Position: le,
          Range: pe,
          Selection: Bt,
          SelectionDirection: St,
          MarkerSeverity: mt,
          MarkerTag: gt,
          Uri: ee,
          Token: It,
        });
    let jt = !1;
    function Ut(e) {
      if (jt) return;
      jt = !0;
      const t = new E(
        e => {
          self.postMessage(e);
        },
        t => new Rt(t, e),
      );
      self.onmessage = e => {
        t.onmessage(e.data);
      };
    }
    self.onmessage = e => {
      jt || Ut(null);
    };
  },
  function(e, t) {
    var n;
    n = (function() {
      return this;
    })();
    try {
      n = n || new Function('return this')();
    } catch (e) {
      'object' == typeof window && (n = window);
    }
    e.exports = n;
  },
  function(e, t, n) {
    'use strict';
    (function(e) {
      n.d(t, 'a', function() {
        return h;
      });
      var r,
        i,
        a,
        o =
          ((r = function(e, t) {
            return (r =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function(e, t) {
                  e.__proto__ = t;
                }) ||
              function(e, t) {
                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
              })(e, t);
          }),
          function(e, t) {
            function n() {
              this.constructor = e;
            }
            r(e, t),
              (e.prototype =
                null === t
                  ? Object.create(t)
                  : ((n.prototype = t.prototype), new n()));
          });
      if ('object' == typeof e) a = 'win32' === e.platform;
      else if ('object' == typeof navigator) {
        var s = navigator.userAgent;
        a = s.indexOf('Windows') >= 0;
      }
      var u = /^\w[\w\d+.-]*$/,
        c = /^\//,
        l = /^\/\//;
      var p = '/',
        f = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,
        h = (function() {
          function e(e, t, n, r, i, a) {
            void 0 === a && (a = !1),
              'object' == typeof e
                ? ((this.scheme = e.scheme || ''),
                  (this.authority = e.authority || ''),
                  (this.path = e.path || ''),
                  (this.query = e.query || ''),
                  (this.fragment = e.fragment || ''))
                : ((this.scheme = (function(e, t) {
                    return e || t ? e : 'file';
                  })(e, a)),
                  (this.authority = t || ''),
                  (this.path = (function(e, t) {
                    switch (e) {
                      case 'https':
                      case 'http':
                      case 'file':
                        t ? t[0] !== p && (t = p + t) : (t = p);
                    }
                    return t;
                  })(this.scheme, n || '')),
                  (this.query = r || ''),
                  (this.fragment = i || ''),
                  (function(e, t) {
                    if (!e.scheme && t)
                      throw new Error(
                        '[UriError]: Scheme is missing: {scheme: "", authority: "' +
                          e.authority +
                          '", path: "' +
                          e.path +
                          '", query: "' +
                          e.query +
                          '", fragment: "' +
                          e.fragment +
                          '"}',
                      );
                    if (e.scheme && !u.test(e.scheme))
                      throw new Error(
                        '[UriError]: Scheme contains illegal characters.',
                      );
                    if (e.path)
                      if (e.authority) {
                        if (!c.test(e.path))
                          throw new Error(
                            '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character',
                          );
                      } else if (l.test(e.path))
                        throw new Error(
                          '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")',
                        );
                  })(this, a));
          }
          return (
            (e.isUri = function(t) {
              return (
                t instanceof e ||
                (!!t &&
                  'string' == typeof t.authority &&
                    'string' == typeof t.fragment &&
                    'string' == typeof t.path &&
                    'string' == typeof t.query &&
                    'string' == typeof t.scheme &&
                    'function' == typeof t.fsPath &&
                    'function' == typeof t.with &&
                    'function' == typeof t.toString)
              );
            }),
            Object.defineProperty(e.prototype, 'fsPath', {
              get: function() {
                return D(this, !1);
              },
              enumerable: !0,
              configurable: !0,
            }),
            (e.prototype.with = function(e) {
              if (!e) return this;
              var t = e.scheme,
                n = e.authority,
                r = e.path,
                i = e.query,
                a = e.fragment;
              return (
                void 0 === t ? (t = this.scheme) : null === t && (t = ''),
                void 0 === n ? (n = this.authority) : null === n && (n = ''),
                void 0 === r ? (r = this.path) : null === r && (r = ''),
                void 0 === i ? (i = this.query) : null === i && (i = ''),
                void 0 === a ? (a = this.fragment) : null === a && (a = ''),
                t === this.scheme &&
                n === this.authority &&
                r === this.path &&
                i === this.query &&
                a === this.fragment
                  ? this
                  : new m(t, n, r, i, a)
              );
            }),
            (e.parse = function(e, t) {
              void 0 === t && (t = !1);
              var n = f.exec(e);
              return n
                ? new m(
                    n[2] || '',
                    b(n[4] || ''),
                    b(n[5] || ''),
                    b(n[7] || ''),
                    b(n[9] || ''),
                    t,
                  )
                : new m('', '', '', '', '');
            }),
            (e.file = function(e) {
              var t = '';
              if ((a && (e = e.replace(/\\/g, p)), e[0] === p && e[1] === p)) {
                var n = e.indexOf(p, 2);
                -1 === n
                  ? ((t = e.substring(2)), (e = p))
                  : ((t = e.substring(2, n)), (e = e.substring(n) || p));
              }
              return new m('file', t, e, '', '');
            }),
            (e.from = function(e) {
              return new m(e.scheme, e.authority, e.path, e.query, e.fragment);
            }),
            (e.prototype.toString = function(e) {
              return void 0 === e && (e = !1), E(this, e);
            }),
            (e.prototype.toJSON = function() {
              return this;
            }),
            (e.revive = function(t) {
              if (t) {
                if (t instanceof e) return t;
                var n = new m(t);
                return (
                  (n._formatted = t.external),
                  (n._fsPath = t._sep === d ? t.fsPath : null),
                  n
                );
              }
              return t;
            }),
            e
          );
        })(),
        d = a ? 1 : void 0,
        m = (function(e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (t._formatted = null), (t._fsPath = null), t;
          }
          return (
            o(t, e),
            Object.defineProperty(t.prototype, 'fsPath', {
              get: function() {
                return (
                  this._fsPath || (this._fsPath = D(this, !1)), this._fsPath
                );
              },
              enumerable: !0,
              configurable: !0,
            }),
            (t.prototype.toString = function(e) {
              return (
                void 0 === e && (e = !1),
                e
                  ? E(this, !0)
                  : (this._formatted || (this._formatted = E(this, !1)),
                    this._formatted)
              );
            }),
            (t.prototype.toJSON = function() {
              var e = { $mid: 1 };
              return (
                this._fsPath && ((e.fsPath = this._fsPath), (e._sep = d)),
                this._formatted && (e.external = this._formatted),
                this.path && (e.path = this.path),
                this.scheme && (e.scheme = this.scheme),
                this.authority && (e.authority = this.authority),
                this.query && (e.query = this.query),
                this.fragment && (e.fragment = this.fragment),
                e
              );
            }),
            t
          );
        })(h),
        g =
          (((i = {})[58] = '%3A'),
          (i[47] = '%2F'),
          (i[63] = '%3F'),
          (i[35] = '%23'),
          (i[91] = '%5B'),
          (i[93] = '%5D'),
          (i[64] = '%40'),
          (i[33] = '%21'),
          (i[36] = '%24'),
          (i[38] = '%26'),
          (i[39] = '%27'),
          (i[40] = '%28'),
          (i[41] = '%29'),
          (i[42] = '%2A'),
          (i[43] = '%2B'),
          (i[44] = '%2C'),
          (i[59] = '%3B'),
          (i[61] = '%3D'),
          (i[32] = '%20'),
          i);
      function y(e, t) {
        for (var n = void 0, r = -1, i = 0; i < e.length; i++) {
          var a = e.charCodeAt(i);
          if (
            (a >= 97 && a <= 122) ||
            (a >= 65 && a <= 90) ||
            (a >= 48 && a <= 57) ||
            45 === a ||
            46 === a ||
            95 === a ||
            126 === a ||
            (t && 47 === a)
          )
            -1 !== r &&
              ((n += encodeURIComponent(e.substring(r, i))), (r = -1)),
              void 0 !== n && (n += e.charAt(i));
          else {
            void 0 === n && (n = e.substr(0, i));
            var o = g[a];
            void 0 !== o
              ? (-1 !== r &&
                  ((n += encodeURIComponent(e.substring(r, i))), (r = -1)),
                (n += o))
              : -1 === r && (r = i);
          }
        }
        return (
          -1 !== r && (n += encodeURIComponent(e.substring(r))),
          void 0 !== n ? n : e
        );
      }
      function v(e) {
        for (var t = void 0, n = 0; n < e.length; n++) {
          var r = e.charCodeAt(n);
          35 === r || 63 === r
            ? (void 0 === t && (t = e.substr(0, n)), (t += g[r]))
            : void 0 !== t && (t += e[n]);
        }
        return void 0 !== t ? t : e;
      }
      function D(e, t) {
        var n;
        return (
          (n =
            e.authority && e.path.length > 1 && 'file' === e.scheme
              ? '//' + e.authority + e.path
              : 47 === e.path.charCodeAt(0) &&
                ((e.path.charCodeAt(1) >= 65 && e.path.charCodeAt(1) <= 90) ||
                  (e.path.charCodeAt(1) >= 97 &&
                    e.path.charCodeAt(1) <= 122)) &&
                58 === e.path.charCodeAt(2)
              ? t
                ? e.path.substr(1)
                : e.path[1].toLowerCase() + e.path.substr(2)
              : e.path),
          a && (n = n.replace(/\//g, '\\')),
          n
        );
      }
      function E(e, t) {
        var n = t ? v : y,
          r = '',
          i = e.scheme,
          a = e.authority,
          o = e.path,
          s = e.query,
          u = e.fragment;
        if (
          (i && ((r += i), (r += ':')),
          (a || 'file' === i) && ((r += p), (r += p)),
          a)
        ) {
          var c = a.indexOf('@');
          if (-1 !== c) {
            var l = a.substr(0, c);
            (a = a.substr(c + 1)),
              -1 === (c = l.indexOf(':'))
                ? (r += n(l, !1))
                : ((r += n(l.substr(0, c), !1)),
                  (r += ':'),
                  (r += n(l.substr(c + 1), !1))),
              (r += '@');
          }
          -1 === (c = (a = a.toLowerCase()).indexOf(':'))
            ? (r += n(a, !1))
            : ((r += n(a.substr(0, c), !1)), (r += a.substr(c)));
        }
        if (o) {
          if (o.length >= 3 && 47 === o.charCodeAt(0) && 58 === o.charCodeAt(2))
            (f = o.charCodeAt(1)) >= 65 &&
              f <= 90 &&
              (o = '/' + String.fromCharCode(f + 32) + ':' + o.substr(3));
          else if (o.length >= 2 && 58 === o.charCodeAt(1)) {
            var f;
            (f = o.charCodeAt(0)) >= 65 &&
              f <= 90 &&
              (o = String.fromCharCode(f + 32) + ':' + o.substr(2));
          }
          r += n(o, !0);
        }
        return (
          s && ((r += '?'), (r += n(s, !1))),
          u && ((r += '#'), (r += t ? u : y(u, !1))),
          r
        );
      }
      var C = /(%[0-9A-Za-z][0-9A-Za-z])+/g;
      function b(e) {
        return e.match(C)
          ? e.replace(C, function(e) {
              return (function e(t) {
                try {
                  return decodeURIComponent(t);
                } catch (n) {
                  return t.length > 3 ? t.substr(0, 3) + e(t.substr(3)) : t;
                }
              })(e);
            })
          : e;
      }
    }.call(this, n(2)));
  },
  ,
  ,
  ,
  function(e, t, n) {
    'use strict';
    function r(e) {
      return null == e;
    }
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.isNothing = r),
      (t.isObject = function(e) {
        return 'object' == typeof e && null !== e;
      }),
      (t.toArray = function(e) {
        return Array.isArray(e) ? e : r(e) ? [] : [e];
      }),
      (t.extend = function(e, t) {
        var n, r, i, a;
        if (t)
          for (n = 0, r = (a = Object.keys(t)).length; n < r; n += 1)
            e[(i = a[n])] = t[i];
        return e;
      }),
      (t.repeat = function(e, t) {
        var n,
          r = '';
        for (n = 0; n < t; n += 1) r += e;
        return r;
      }),
      (t.isNegativeZero = function(e) {
        return 0 === e && Number.NEGATIVE_INFINITY === 1 / e;
      });
  },
  function(e, t, n) {
    'use strict';
    function r(e) {
      return null == e;
    }
    (e.exports.isNothing = r),
      (e.exports.isObject = function(e) {
        return 'object' == typeof e && null !== e;
      }),
      (e.exports.toArray = function(e) {
        return Array.isArray(e) ? e : r(e) ? [] : [e];
      }),
      (e.exports.repeat = function(e, t) {
        var n,
          r = '';
        for (n = 0; n < t; n += 1) r += e;
        return r;
      }),
      (e.exports.isNegativeZero = function(e) {
        return 0 === e && Number.NEGATIVE_INFINITY === 1 / e;
      }),
      (e.exports.extend = function(e, t) {
        var n, r, i, a;
        if (t)
          for (n = 0, r = (a = Object.keys(t)).length; n < r; n += 1)
            e[(i = a[n])] = t[i];
        return e;
      });
  },
  function(e, t, n) {
    'use strict';
    var r = n(13),
      i = n(18),
      a = n(3);
    function o(e, t, n) {
      var r = [];
      return (
        e.include.forEach(function(e) {
          n = o(e, t, n);
        }),
        e[t].forEach(function(e) {
          n.forEach(function(t, n) {
            t.tag === e.tag && t.kind === e.kind && r.push(n);
          }),
            n.push(e);
        }),
        n.filter(function(e, t) {
          return -1 === r.indexOf(t);
        })
      );
    }
    function s(e) {
      (this.include = e.include || []),
        (this.implicit = e.implicit || []),
        (this.explicit = e.explicit || []),
        this.implicit.forEach(function(e) {
          if (e.loadKind && 'scalar' !== e.loadKind)
            throw new i(
              'There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.',
            );
        }),
        (this.compiledImplicit = o(this, 'implicit', [])),
        (this.compiledExplicit = o(this, 'explicit', [])),
        (this.compiledTypeMap = (function() {
          var e,
            t,
            n = { scalar: {}, sequence: {}, mapping: {}, fallback: {} };
          function r(e) {
            n[e.kind][e.tag] = n.fallback[e.tag] = e;
          }
          for (e = 0, t = arguments.length; e < t; e += 1)
            arguments[e].forEach(r);
          return n;
        })(this.compiledImplicit, this.compiledExplicit));
    }
    (s.DEFAULT = null),
      (s.create = function() {
        var e, t;
        switch (arguments.length) {
          case 1:
            (e = s.DEFAULT), (t = arguments[0]);
            break;
          case 2:
            (e = arguments[0]), (t = arguments[1]);
            break;
          default:
            throw new i('Wrong number of arguments for Schema.create function');
        }
        if (
          ((e = r.toArray(e)),
          (t = r.toArray(t)),
          !e.every(function(e) {
            return e instanceof s;
          }))
        )
          throw new i(
            'Specified list of super schemas (or a single Schema object) contains a non-Schema object.',
          );
        if (
          !t.every(function(e) {
            return e instanceof a;
          })
        )
          throw new i(
            'Specified list of YAML types (or a single Type object) contains a non-Type object.',
          );
        return new s({ include: e, explicit: t });
      }),
      (e.exports = s);
  },
  function(e, t, n) {
    'use strict';
    var r = n(57);
    e.exports = r;
  },
  function(e, t, n) {
    'use strict';
    class r {
      constructor(e, t = null, n = !1) {
        (this.name = 'YAMLException'),
          (this.reason = e),
          (this.mark = t),
          (this.message = this.toString(!1)),
          (this.isWarning = n);
      }
      static isInstance(e) {
        if (
          null != e &&
          e.getClassIdentifier &&
          'function' == typeof e.getClassIdentifier
        )
          for (let t of e.getClassIdentifier())
            if (t == r.CLASS_IDENTIFIER) return !0;
        return !1;
      }
      getClassIdentifier() {
        return [].concat(r.CLASS_IDENTIFIER);
      }
      toString(e = !1) {
        var t;
        return (
          (t = 'JS-YAML: ' + (this.reason || '(unknown reason)')),
          !e && this.mark && (t += ' ' + this.mark.toString()),
          t
        );
      }
    }
    (r.CLASS_IDENTIFIER = 'yaml-ast-parser.YAMLException'), (e.exports = r);
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(12),
      i = n(16),
      a = n(5);
    function o(e, t, n) {
      var r = [];
      return (
        e.include.forEach(function(e) {
          n = o(e, t, n);
        }),
        e[t].forEach(function(e) {
          n.forEach(function(t, n) {
            t.tag === e.tag && r.push(n);
          }),
            n.push(e);
        }),
        n.filter(function(e, t) {
          return -1 === r.indexOf(t);
        })
      );
    }
    class s {
      constructor(e) {
        (this.include = e.include || []),
          (this.implicit = e.implicit || []),
          (this.explicit = e.explicit || []),
          this.implicit.forEach(function(e) {
            if (e.loadKind && 'scalar' !== e.loadKind)
              throw new i(
                'There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.',
              );
          }),
          (this.compiledImplicit = o(this, 'implicit', [])),
          (this.compiledExplicit = o(this, 'explicit', [])),
          (this.compiledTypeMap = (function() {
            var e,
              t,
              n = {};
            function r(e) {
              n[e.tag] = e;
            }
            for (e = 0, t = arguments.length; e < t; e += 1)
              arguments[e].forEach(r);
            return n;
          })(this.compiledImplicit, this.compiledExplicit));
      }
    }
    (s.DEFAULT = null),
      (s.create = function() {
        var e, t;
        switch (arguments.length) {
          case 1:
            (e = s.DEFAULT), (t = arguments[0]);
            break;
          case 2:
            (e = arguments[0]), (t = arguments[1]);
            break;
          default:
            throw new i('Wrong number of arguments for Schema.create function');
        }
        if (
          ((e = r.toArray(e)),
          (t = r.toArray(t)),
          !e.every(function(e) {
            return e instanceof s;
          }))
        )
          throw new i(
            'Specified list of super schemas (or a single Schema object) contains a non-Schema object.',
          );
        if (
          !t.every(function(e) {
            return e instanceof a.Type;
          })
        )
          throw new i(
            'Specified list of YAML types (or a single Type object) contains a non-Type object.',
          );
        return new s({ include: e, explicit: t });
      }),
      (t.Schema = s);
  },
  function(e, t, n) {
    'use strict';
    function r(e, t) {
      Error.call(this),
        (this.name = 'YAMLException'),
        (this.reason = e),
        (this.mark = t),
        (this.message =
          (this.reason || '(unknown reason)') +
          (this.mark ? ' ' + this.mark.toString() : '')),
        Error.captureStackTrace
          ? Error.captureStackTrace(this, this.constructor)
          : (this.stack = new Error().stack || '');
    }
    (r.prototype = Object.create(Error.prototype)),
      (r.prototype.constructor = r),
      (r.prototype.toString = function(e) {
        var t = this.name + ': ';
        return (
          (t += this.reason || '(unknown reason)'),
          !e && this.mark && (t += ' ' + this.mark.toString()),
          t
        );
      }),
      (e.exports = r);
  },
  function(e, t, n) {
    'use strict';
    var r = n(14);
    e.exports = new r({
      include: [n(26)],
      implicit: [n(67), n(68)],
      explicit: [n(69), n(70), n(71), n(72)],
    });
  },
  function(e, t, n) {
    'use strict';
    var r;
    function i() {
      return {
        errors: [],
        startPosition: -1,
        endPosition: -1,
        items: [],
        kind: r.SEQ,
        parent: null,
      };
    }
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (function(e) {
        (e[(e.SCALAR = 0)] = 'SCALAR'),
          (e[(e.MAPPING = 1)] = 'MAPPING'),
          (e[(e.MAP = 2)] = 'MAP'),
          (e[(e.SEQ = 3)] = 'SEQ'),
          (e[(e.ANCHOR_REF = 4)] = 'ANCHOR_REF'),
          (e[(e.INCLUDE_REF = 5)] = 'INCLUDE_REF');
      })((r = t.Kind || (t.Kind = {}))),
      (t.newMapping = function(e, t) {
        var n = t ? t.endPosition : e.endPosition + 1;
        return {
          key: e,
          value: t,
          startPosition: e.startPosition,
          endPosition: n,
          kind: r.MAPPING,
          parent: null,
          errors: [],
        };
      }),
      (t.newAnchorRef = function(e, t, n, i) {
        return {
          errors: [],
          referencesAnchor: e,
          value: i,
          startPosition: t,
          endPosition: n,
          kind: r.ANCHOR_REF,
          parent: null,
        };
      }),
      (t.newScalar = function(e = '') {
        const t = {
          errors: [],
          startPosition: -1,
          endPosition: -1,
          value: '' + e,
          kind: r.SCALAR,
          parent: null,
          doubleQuoted: !1,
          rawValue: '' + e,
        };
        return 'string' != typeof e && (t.valueObject = e), t;
      }),
      (t.newItems = i),
      (t.newSeq = function() {
        return i();
      }),
      (t.newMap = function(e) {
        return {
          errors: [],
          startPosition: -1,
          endPosition: -1,
          mappings: e || [],
          kind: r.MAP,
          parent: null,
        };
      });
  },
  function(e, t, n) {
    'use strict';
    var r = n(14);
    e.exports = r.DEFAULT = new r({
      include: [n(19)],
      explicit: [n(73), n(74), n(75)],
    });
  },
  function(e, t, n) {
    'use strict';
    var r = new (n(17).Schema)({
      include: [n(34)],
      implicit: [n(44), n(45)],
      explicit: [n(46), n(50), n(51), n(52)],
    });
    e.exports = r;
  },
  function(e, t, n) {
    'use strict';
    var r = n(14);
    e.exports = new r({ explicit: [n(60), n(61), n(62)] });
  },
  function(e, t, n) {
    'use strict';
    (function(e) {
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <http://feross.org>
       * @license  MIT
       */
      var r = n(47),
        i = n(48),
        a = n(49);
      function o() {
        return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function s(e, t) {
        if (o() < t) throw new RangeError('Invalid typed array length');
        return (
          u.TYPED_ARRAY_SUPPORT
            ? ((e = new Uint8Array(t)).__proto__ = u.prototype)
            : (null === e && (e = new u(t)), (e.length = t)),
          e
        );
      }
      function u(e, t, n) {
        if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u))
          return new u(e, t, n);
        if ('number' == typeof e) {
          if ('string' == typeof t)
            throw new Error(
              'If encoding is specified then the first argument must be a string',
            );
          return p(this, e);
        }
        return c(this, e, t, n);
      }
      function c(e, t, n, r) {
        if ('number' == typeof t)
          throw new TypeError('"value" argument must not be a number');
        return 'undefined' != typeof ArrayBuffer && t instanceof ArrayBuffer
          ? (function(e, t, n, r) {
              if ((t.byteLength, n < 0 || t.byteLength < n))
                throw new RangeError("'offset' is out of bounds");
              if (t.byteLength < n + (r || 0))
                throw new RangeError("'length' is out of bounds");
              t =
                void 0 === n && void 0 === r
                  ? new Uint8Array(t)
                  : void 0 === r
                  ? new Uint8Array(t, n)
                  : new Uint8Array(t, n, r);
              u.TYPED_ARRAY_SUPPORT
                ? ((e = t).__proto__ = u.prototype)
                : (e = f(e, t));
              return e;
            })(e, t, n, r)
          : 'string' == typeof t
          ? (function(e, t, n) {
              ('string' == typeof n && '' !== n) || (n = 'utf8');
              if (!u.isEncoding(n))
                throw new TypeError(
                  '"encoding" must be a valid string encoding',
                );
              var r = 0 | d(t, n),
                i = (e = s(e, r)).write(t, n);
              i !== r && (e = e.slice(0, i));
              return e;
            })(e, t, n)
          : (function(e, t) {
              if (u.isBuffer(t)) {
                var n = 0 | h(t.length);
                return 0 === (e = s(e, n)).length || t.copy(e, 0, 0, n), e;
              }
              if (t) {
                if (
                  ('undefined' != typeof ArrayBuffer &&
                    t.buffer instanceof ArrayBuffer) ||
                  'length' in t
                )
                  return 'number' != typeof t.length || (r = t.length) != r
                    ? s(e, 0)
                    : f(e, t);
                if ('Buffer' === t.type && a(t.data)) return f(e, t.data);
              }
              var r;
              throw new TypeError(
                'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.',
              );
            })(e, t);
      }
      function l(e) {
        if ('number' != typeof e)
          throw new TypeError('"size" argument must be a number');
        if (e < 0) throw new RangeError('"size" argument must not be negative');
      }
      function p(e, t) {
        if ((l(t), (e = s(e, t < 0 ? 0 : 0 | h(t))), !u.TYPED_ARRAY_SUPPORT))
          for (var n = 0; n < t; ++n) e[n] = 0;
        return e;
      }
      function f(e, t) {
        var n = t.length < 0 ? 0 : 0 | h(t.length);
        e = s(e, n);
        for (var r = 0; r < n; r += 1) e[r] = 255 & t[r];
        return e;
      }
      function h(e) {
        if (e >= o())
          throw new RangeError(
            'Attempt to allocate Buffer larger than maximum size: 0x' +
              o().toString(16) +
              ' bytes',
          );
        return 0 | e;
      }
      function d(e, t) {
        if (u.isBuffer(e)) return e.length;
        if (
          'undefined' != typeof ArrayBuffer &&
          'function' == typeof ArrayBuffer.isView &&
          (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
        )
          return e.byteLength;
        'string' != typeof e && (e = '' + e);
        var n = e.length;
        if (0 === n) return 0;
        for (var r = !1; ; )
          switch (t) {
            case 'ascii':
            case 'latin1':
            case 'binary':
              return n;
            case 'utf8':
            case 'utf-8':
            case void 0:
              return U(e).length;
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return 2 * n;
            case 'hex':
              return n >>> 1;
            case 'base64':
              return V(e).length;
            default:
              if (r) return U(e).length;
              (t = ('' + t).toLowerCase()), (r = !0);
          }
      }
      function m(e, t, n) {
        var r = !1;
        if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return '';
        if (((void 0 === n || n > this.length) && (n = this.length), n <= 0))
          return '';
        if ((n >>>= 0) <= (t >>>= 0)) return '';
        for (e || (e = 'utf8'); ; )
          switch (e) {
            case 'hex':
              return T(this, t, n);
            case 'utf8':
            case 'utf-8':
              return w(this, t, n);
            case 'ascii':
              return F(this, t, n);
            case 'latin1':
            case 'binary':
              return k(this, t, n);
            case 'base64':
              return S(this, t, n);
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return _(this, t, n);
            default:
              if (r) throw new TypeError('Unknown encoding: ' + e);
              (e = (e + '').toLowerCase()), (r = !0);
          }
      }
      function g(e, t, n) {
        var r = e[t];
        (e[t] = e[n]), (e[n] = r);
      }
      function y(e, t, n, r, i) {
        if (0 === e.length) return -1;
        if (
          ('string' == typeof n
            ? ((r = n), (n = 0))
            : n > 2147483647
            ? (n = 2147483647)
            : n < -2147483648 && (n = -2147483648),
          (n = +n),
          isNaN(n) && (n = i ? 0 : e.length - 1),
          n < 0 && (n = e.length + n),
          n >= e.length)
        ) {
          if (i) return -1;
          n = e.length - 1;
        } else if (n < 0) {
          if (!i) return -1;
          n = 0;
        }
        if (('string' == typeof t && (t = u.from(t, r)), u.isBuffer(t)))
          return 0 === t.length ? -1 : v(e, t, n, r, i);
        if ('number' == typeof t)
          return (
            (t &= 255),
            u.TYPED_ARRAY_SUPPORT &&
            'function' == typeof Uint8Array.prototype.indexOf
              ? i
                ? Uint8Array.prototype.indexOf.call(e, t, n)
                : Uint8Array.prototype.lastIndexOf.call(e, t, n)
              : v(e, [t], n, r, i)
          );
        throw new TypeError('val must be string, number or Buffer');
      }
      function v(e, t, n, r, i) {
        var a,
          o = 1,
          s = e.length,
          u = t.length;
        if (
          void 0 !== r &&
          ('ucs2' === (r = String(r).toLowerCase()) ||
            'ucs-2' === r ||
            'utf16le' === r ||
            'utf-16le' === r)
        ) {
          if (e.length < 2 || t.length < 2) return -1;
          (o = 2), (s /= 2), (u /= 2), (n /= 2);
        }
        function c(e, t) {
          return 1 === o ? e[t] : e.readUInt16BE(t * o);
        }
        if (i) {
          var l = -1;
          for (a = n; a < s; a++)
            if (c(e, a) === c(t, -1 === l ? 0 : a - l)) {
              if ((-1 === l && (l = a), a - l + 1 === u)) return l * o;
            } else -1 !== l && (a -= a - l), (l = -1);
        } else
          for (n + u > s && (n = s - u), a = n; a >= 0; a--) {
            for (var p = !0, f = 0; f < u; f++)
              if (c(e, a + f) !== c(t, f)) {
                p = !1;
                break;
              }
            if (p) return a;
          }
        return -1;
      }
      function D(e, t, n, r) {
        n = Number(n) || 0;
        var i = e.length - n;
        r ? (r = Number(r)) > i && (r = i) : (r = i);
        var a = t.length;
        if (a % 2 != 0) throw new TypeError('Invalid hex string');
        r > a / 2 && (r = a / 2);
        for (var o = 0; o < r; ++o) {
          var s = parseInt(t.substr(2 * o, 2), 16);
          if (isNaN(s)) return o;
          e[n + o] = s;
        }
        return o;
      }
      function E(e, t, n, r) {
        return W(U(t, e.length - n), e, n, r);
      }
      function C(e, t, n, r) {
        return W(
          (function(e) {
            for (var t = [], n = 0; n < e.length; ++n)
              t.push(255 & e.charCodeAt(n));
            return t;
          })(t),
          e,
          n,
          r,
        );
      }
      function b(e, t, n, r) {
        return C(e, t, n, r);
      }
      function x(e, t, n, r) {
        return W(V(t), e, n, r);
      }
      function A(e, t, n, r) {
        return W(
          (function(e, t) {
            for (
              var n, r, i, a = [], o = 0;
              o < e.length && !((t -= 2) < 0);
              ++o
            )
              (n = e.charCodeAt(o)),
                (r = n >> 8),
                (i = n % 256),
                a.push(i),
                a.push(r);
            return a;
          })(t, e.length - n),
          e,
          n,
          r,
        );
      }
      function S(e, t, n) {
        return 0 === t && n === e.length
          ? r.fromByteArray(e)
          : r.fromByteArray(e.slice(t, n));
      }
      function w(e, t, n) {
        n = Math.min(e.length, n);
        for (var r = [], i = t; i < n; ) {
          var a,
            o,
            s,
            u,
            c = e[i],
            l = null,
            p = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
          if (i + p <= n)
            switch (p) {
              case 1:
                c < 128 && (l = c);
                break;
              case 2:
                128 == (192 & (a = e[i + 1])) &&
                  (u = ((31 & c) << 6) | (63 & a)) > 127 &&
                  (l = u);
                break;
              case 3:
                (a = e[i + 1]),
                  (o = e[i + 2]),
                  128 == (192 & a) &&
                    128 == (192 & o) &&
                    (u = ((15 & c) << 12) | ((63 & a) << 6) | (63 & o)) >
                      2047 &&
                    (u < 55296 || u > 57343) &&
                    (l = u);
                break;
              case 4:
                (a = e[i + 1]),
                  (o = e[i + 2]),
                  (s = e[i + 3]),
                  128 == (192 & a) &&
                    128 == (192 & o) &&
                    128 == (192 & s) &&
                    (u =
                      ((15 & c) << 18) |
                      ((63 & a) << 12) |
                      ((63 & o) << 6) |
                      (63 & s)) > 65535 &&
                    u < 1114112 &&
                    (l = u);
            }
          null === l
            ? ((l = 65533), (p = 1))
            : l > 65535 &&
              ((l -= 65536),
              r.push(((l >>> 10) & 1023) | 55296),
              (l = 56320 | (1023 & l))),
            r.push(l),
            (i += p);
        }
        return (function(e) {
          var t = e.length;
          if (t <= 4096) return String.fromCharCode.apply(String, e);
          var n = '',
            r = 0;
          for (; r < t; )
            n += String.fromCharCode.apply(String, e.slice(r, (r += 4096)));
          return n;
        })(r);
      }
      (t.Buffer = u),
        (t.SlowBuffer = function(e) {
          +e != e && (e = 0);
          return u.alloc(+e);
        }),
        (t.INSPECT_MAX_BYTES = 50),
        (u.TYPED_ARRAY_SUPPORT =
          void 0 !== e.TYPED_ARRAY_SUPPORT
            ? e.TYPED_ARRAY_SUPPORT
            : (function() {
                try {
                  var e = new Uint8Array(1);
                  return (
                    (e.__proto__ = {
                      __proto__: Uint8Array.prototype,
                      foo: function() {
                        return 42;
                      },
                    }),
                    42 === e.foo() &&
                      'function' == typeof e.subarray &&
                      0 === e.subarray(1, 1).byteLength
                  );
                } catch (e) {
                  return !1;
                }
              })()),
        (t.kMaxLength = o()),
        (u.poolSize = 8192),
        (u._augment = function(e) {
          return (e.__proto__ = u.prototype), e;
        }),
        (u.from = function(e, t, n) {
          return c(null, e, t, n);
        }),
        u.TYPED_ARRAY_SUPPORT &&
          ((u.prototype.__proto__ = Uint8Array.prototype),
          (u.__proto__ = Uint8Array),
          'undefined' != typeof Symbol &&
            Symbol.species &&
            u[Symbol.species] === u &&
            Object.defineProperty(u, Symbol.species, {
              value: null,
              configurable: !0,
            })),
        (u.alloc = function(e, t, n) {
          return (function(e, t, n, r) {
            return (
              l(t),
              t <= 0
                ? s(e, t)
                : void 0 !== n
                ? 'string' == typeof r
                  ? s(e, t).fill(n, r)
                  : s(e, t).fill(n)
                : s(e, t)
            );
          })(null, e, t, n);
        }),
        (u.allocUnsafe = function(e) {
          return p(null, e);
        }),
        (u.allocUnsafeSlow = function(e) {
          return p(null, e);
        }),
        (u.isBuffer = function(e) {
          return !(null == e || !e._isBuffer);
        }),
        (u.compare = function(e, t) {
          if (!u.isBuffer(e) || !u.isBuffer(t))
            throw new TypeError('Arguments must be Buffers');
          if (e === t) return 0;
          for (
            var n = e.length, r = t.length, i = 0, a = Math.min(n, r);
            i < a;
            ++i
          )
            if (e[i] !== t[i]) {
              (n = e[i]), (r = t[i]);
              break;
            }
          return n < r ? -1 : r < n ? 1 : 0;
        }),
        (u.isEncoding = function(e) {
          switch (String(e).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return !0;
            default:
              return !1;
          }
        }),
        (u.concat = function(e, t) {
          if (!a(e))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === e.length) return u.alloc(0);
          var n;
          if (void 0 === t)
            for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
          var r = u.allocUnsafe(t),
            i = 0;
          for (n = 0; n < e.length; ++n) {
            var o = e[n];
            if (!u.isBuffer(o))
              throw new TypeError(
                '"list" argument must be an Array of Buffers',
              );
            o.copy(r, i), (i += o.length);
          }
          return r;
        }),
        (u.byteLength = d),
        (u.prototype._isBuffer = !0),
        (u.prototype.swap16 = function() {
          var e = this.length;
          if (e % 2 != 0)
            throw new RangeError('Buffer size must be a multiple of 16-bits');
          for (var t = 0; t < e; t += 2) g(this, t, t + 1);
          return this;
        }),
        (u.prototype.swap32 = function() {
          var e = this.length;
          if (e % 4 != 0)
            throw new RangeError('Buffer size must be a multiple of 32-bits');
          for (var t = 0; t < e; t += 4)
            g(this, t, t + 3), g(this, t + 1, t + 2);
          return this;
        }),
        (u.prototype.swap64 = function() {
          var e = this.length;
          if (e % 8 != 0)
            throw new RangeError('Buffer size must be a multiple of 64-bits');
          for (var t = 0; t < e; t += 8)
            g(this, t, t + 7),
              g(this, t + 1, t + 6),
              g(this, t + 2, t + 5),
              g(this, t + 3, t + 4);
          return this;
        }),
        (u.prototype.toString = function() {
          var e = 0 | this.length;
          return 0 === e
            ? ''
            : 0 === arguments.length
            ? w(this, 0, e)
            : m.apply(this, arguments);
        }),
        (u.prototype.equals = function(e) {
          if (!u.isBuffer(e)) throw new TypeError('Argument must be a Buffer');
          return this === e || 0 === u.compare(this, e);
        }),
        (u.prototype.inspect = function() {
          var e = '',
            n = t.INSPECT_MAX_BYTES;
          return (
            this.length > 0 &&
              ((e = this.toString('hex', 0, n)
                .match(/.{2}/g)
                .join(' ')),
              this.length > n && (e += ' ... ')),
            '<Buffer ' + e + '>'
          );
        }),
        (u.prototype.compare = function(e, t, n, r, i) {
          if (!u.isBuffer(e)) throw new TypeError('Argument must be a Buffer');
          if (
            (void 0 === t && (t = 0),
            void 0 === n && (n = e ? e.length : 0),
            void 0 === r && (r = 0),
            void 0 === i && (i = this.length),
            t < 0 || n > e.length || r < 0 || i > this.length)
          )
            throw new RangeError('out of range index');
          if (r >= i && t >= n) return 0;
          if (r >= i) return -1;
          if (t >= n) return 1;
          if (this === e) return 0;
          for (
            var a = (i >>>= 0) - (r >>>= 0),
              o = (n >>>= 0) - (t >>>= 0),
              s = Math.min(a, o),
              c = this.slice(r, i),
              l = e.slice(t, n),
              p = 0;
            p < s;
            ++p
          )
            if (c[p] !== l[p]) {
              (a = c[p]), (o = l[p]);
              break;
            }
          return a < o ? -1 : o < a ? 1 : 0;
        }),
        (u.prototype.includes = function(e, t, n) {
          return -1 !== this.indexOf(e, t, n);
        }),
        (u.prototype.indexOf = function(e, t, n) {
          return y(this, e, t, n, !0);
        }),
        (u.prototype.lastIndexOf = function(e, t, n) {
          return y(this, e, t, n, !1);
        }),
        (u.prototype.write = function(e, t, n, r) {
          if (void 0 === t) (r = 'utf8'), (n = this.length), (t = 0);
          else if (void 0 === n && 'string' == typeof t)
            (r = t), (n = this.length), (t = 0);
          else {
            if (!isFinite(t))
              throw new Error(
                'Buffer.write(string, encoding, offset[, length]) is no longer supported',
              );
            (t |= 0),
              isFinite(n)
                ? ((n |= 0), void 0 === r && (r = 'utf8'))
                : ((r = n), (n = void 0));
          }
          var i = this.length - t;
          if (
            ((void 0 === n || n > i) && (n = i),
            (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
          )
            throw new RangeError('Attempt to write outside buffer bounds');
          r || (r = 'utf8');
          for (var a = !1; ; )
            switch (r) {
              case 'hex':
                return D(this, e, t, n);
              case 'utf8':
              case 'utf-8':
                return E(this, e, t, n);
              case 'ascii':
                return C(this, e, t, n);
              case 'latin1':
              case 'binary':
                return b(this, e, t, n);
              case 'base64':
                return x(this, e, t, n);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return A(this, e, t, n);
              default:
                if (a) throw new TypeError('Unknown encoding: ' + r);
                (r = ('' + r).toLowerCase()), (a = !0);
            }
        }),
        (u.prototype.toJSON = function() {
          return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0),
          };
        });
      function F(e, t, n) {
        var r = '';
        n = Math.min(e.length, n);
        for (var i = t; i < n; ++i) r += String.fromCharCode(127 & e[i]);
        return r;
      }
      function k(e, t, n) {
        var r = '';
        n = Math.min(e.length, n);
        for (var i = t; i < n; ++i) r += String.fromCharCode(e[i]);
        return r;
      }
      function T(e, t, n) {
        var r = e.length;
        (!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);
        for (var i = '', a = t; a < n; ++a) i += j(e[a]);
        return i;
      }
      function _(e, t, n) {
        for (var r = e.slice(t, n), i = '', a = 0; a < r.length; a += 2)
          i += String.fromCharCode(r[a] + 256 * r[a + 1]);
        return i;
      }
      function O(e, t, n) {
        if (e % 1 != 0 || e < 0) throw new RangeError('offset is not uint');
        if (e + t > n)
          throw new RangeError('Trying to access beyond buffer length');
      }
      function N(e, t, n, r, i, a) {
        if (!u.isBuffer(e))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t > i || t < a)
          throw new RangeError('"value" argument is out of bounds');
        if (n + r > e.length) throw new RangeError('Index out of range');
      }
      function B(e, t, n, r) {
        t < 0 && (t = 65535 + t + 1);
        for (var i = 0, a = Math.min(e.length - n, 2); i < a; ++i)
          e[n + i] =
            (t & (255 << (8 * (r ? i : 1 - i)))) >>> (8 * (r ? i : 1 - i));
      }
      function I(e, t, n, r) {
        t < 0 && (t = 4294967295 + t + 1);
        for (var i = 0, a = Math.min(e.length - n, 4); i < a; ++i)
          e[n + i] = (t >>> (8 * (r ? i : 3 - i))) & 255;
      }
      function P(e, t, n, r, i, a) {
        if (n + r > e.length) throw new RangeError('Index out of range');
        if (n < 0) throw new RangeError('Index out of range');
      }
      function M(e, t, n, r, a) {
        return a || P(e, 0, n, 4), i.write(e, t, n, r, 23, 4), n + 4;
      }
      function L(e, t, n, r, a) {
        return a || P(e, 0, n, 8), i.write(e, t, n, r, 52, 8), n + 8;
      }
      (u.prototype.slice = function(e, t) {
        var n,
          r = this.length;
        if (
          ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
          (t = void 0 === t ? r : ~~t) < 0
            ? (t += r) < 0 && (t = 0)
            : t > r && (t = r),
          t < e && (t = e),
          u.TYPED_ARRAY_SUPPORT)
        )
          (n = this.subarray(e, t)).__proto__ = u.prototype;
        else {
          var i = t - e;
          n = new u(i, void 0);
          for (var a = 0; a < i; ++a) n[a] = this[a + e];
        }
        return n;
      }),
        (u.prototype.readUIntLE = function(e, t, n) {
          (e |= 0), (t |= 0), n || O(e, t, this.length);
          for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
            r += this[e + a] * i;
          return r;
        }),
        (u.prototype.readUIntBE = function(e, t, n) {
          (e |= 0), (t |= 0), n || O(e, t, this.length);
          for (var r = this[e + --t], i = 1; t > 0 && (i *= 256); )
            r += this[e + --t] * i;
          return r;
        }),
        (u.prototype.readUInt8 = function(e, t) {
          return t || O(e, 1, this.length), this[e];
        }),
        (u.prototype.readUInt16LE = function(e, t) {
          return t || O(e, 2, this.length), this[e] | (this[e + 1] << 8);
        }),
        (u.prototype.readUInt16BE = function(e, t) {
          return t || O(e, 2, this.length), (this[e] << 8) | this[e + 1];
        }),
        (u.prototype.readUInt32LE = function(e, t) {
          return (
            t || O(e, 4, this.length),
            (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
              16777216 * this[e + 3]
          );
        }),
        (u.prototype.readUInt32BE = function(e, t) {
          return (
            t || O(e, 4, this.length),
            16777216 * this[e] +
              ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
          );
        }),
        (u.prototype.readIntLE = function(e, t, n) {
          (e |= 0), (t |= 0), n || O(e, t, this.length);
          for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
            r += this[e + a] * i;
          return r >= (i *= 128) && (r -= Math.pow(2, 8 * t)), r;
        }),
        (u.prototype.readIntBE = function(e, t, n) {
          (e |= 0), (t |= 0), n || O(e, t, this.length);
          for (var r = t, i = 1, a = this[e + --r]; r > 0 && (i *= 256); )
            a += this[e + --r] * i;
          return a >= (i *= 128) && (a -= Math.pow(2, 8 * t)), a;
        }),
        (u.prototype.readInt8 = function(e, t) {
          return (
            t || O(e, 1, this.length),
            128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
          );
        }),
        (u.prototype.readInt16LE = function(e, t) {
          t || O(e, 2, this.length);
          var n = this[e] | (this[e + 1] << 8);
          return 32768 & n ? 4294901760 | n : n;
        }),
        (u.prototype.readInt16BE = function(e, t) {
          t || O(e, 2, this.length);
          var n = this[e + 1] | (this[e] << 8);
          return 32768 & n ? 4294901760 | n : n;
        }),
        (u.prototype.readInt32LE = function(e, t) {
          return (
            t || O(e, 4, this.length),
            this[e] |
              (this[e + 1] << 8) |
              (this[e + 2] << 16) |
              (this[e + 3] << 24)
          );
        }),
        (u.prototype.readInt32BE = function(e, t) {
          return (
            t || O(e, 4, this.length),
            (this[e] << 24) |
              (this[e + 1] << 16) |
              (this[e + 2] << 8) |
              this[e + 3]
          );
        }),
        (u.prototype.readFloatLE = function(e, t) {
          return t || O(e, 4, this.length), i.read(this, e, !0, 23, 4);
        }),
        (u.prototype.readFloatBE = function(e, t) {
          return t || O(e, 4, this.length), i.read(this, e, !1, 23, 4);
        }),
        (u.prototype.readDoubleLE = function(e, t) {
          return t || O(e, 8, this.length), i.read(this, e, !0, 52, 8);
        }),
        (u.prototype.readDoubleBE = function(e, t) {
          return t || O(e, 8, this.length), i.read(this, e, !1, 52, 8);
        }),
        (u.prototype.writeUIntLE = function(e, t, n, r) {
          ((e = +e), (t |= 0), (n |= 0), r) ||
            N(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
          var i = 1,
            a = 0;
          for (this[t] = 255 & e; ++a < n && (i *= 256); )
            this[t + a] = (e / i) & 255;
          return t + n;
        }),
        (u.prototype.writeUIntBE = function(e, t, n, r) {
          ((e = +e), (t |= 0), (n |= 0), r) ||
            N(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
          var i = n - 1,
            a = 1;
          for (this[t + i] = 255 & e; --i >= 0 && (a *= 256); )
            this[t + i] = (e / a) & 255;
          return t + n;
        }),
        (u.prototype.writeUInt8 = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 1, 255, 0),
            u.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
            (this[t] = 255 & e),
            t + 1
          );
        }),
        (u.prototype.writeUInt16LE = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
              : B(this, e, t, !0),
            t + 2
          );
        }),
        (u.prototype.writeUInt16BE = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
              : B(this, e, t, !1),
            t + 2
          );
        }),
        (u.prototype.writeUInt32LE = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t + 3] = e >>> 24),
                (this[t + 2] = e >>> 16),
                (this[t + 1] = e >>> 8),
                (this[t] = 255 & e))
              : I(this, e, t, !0),
            t + 4
          );
        }),
        (u.prototype.writeUInt32BE = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = e >>> 24),
                (this[t + 1] = e >>> 16),
                (this[t + 2] = e >>> 8),
                (this[t + 3] = 255 & e))
              : I(this, e, t, !1),
            t + 4
          );
        }),
        (u.prototype.writeIntLE = function(e, t, n, r) {
          if (((e = +e), (t |= 0), !r)) {
            var i = Math.pow(2, 8 * n - 1);
            N(this, e, t, n, i - 1, -i);
          }
          var a = 0,
            o = 1,
            s = 0;
          for (this[t] = 255 & e; ++a < n && (o *= 256); )
            e < 0 && 0 === s && 0 !== this[t + a - 1] && (s = 1),
              (this[t + a] = (((e / o) >> 0) - s) & 255);
          return t + n;
        }),
        (u.prototype.writeIntBE = function(e, t, n, r) {
          if (((e = +e), (t |= 0), !r)) {
            var i = Math.pow(2, 8 * n - 1);
            N(this, e, t, n, i - 1, -i);
          }
          var a = n - 1,
            o = 1,
            s = 0;
          for (this[t + a] = 255 & e; --a >= 0 && (o *= 256); )
            e < 0 && 0 === s && 0 !== this[t + a + 1] && (s = 1),
              (this[t + a] = (((e / o) >> 0) - s) & 255);
          return t + n;
        }),
        (u.prototype.writeInt8 = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 1, 127, -128),
            u.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
            e < 0 && (e = 255 + e + 1),
            (this[t] = 255 & e),
            t + 1
          );
        }),
        (u.prototype.writeInt16LE = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
              : B(this, e, t, !0),
            t + 2
          );
        }),
        (u.prototype.writeInt16BE = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
              : B(this, e, t, !1),
            t + 2
          );
        }),
        (u.prototype.writeInt32LE = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 4, 2147483647, -2147483648),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = 255 & e),
                (this[t + 1] = e >>> 8),
                (this[t + 2] = e >>> 16),
                (this[t + 3] = e >>> 24))
              : I(this, e, t, !0),
            t + 4
          );
        }),
        (u.prototype.writeInt32BE = function(e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || N(this, e, t, 4, 2147483647, -2147483648),
            e < 0 && (e = 4294967295 + e + 1),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = e >>> 24),
                (this[t + 1] = e >>> 16),
                (this[t + 2] = e >>> 8),
                (this[t + 3] = 255 & e))
              : I(this, e, t, !1),
            t + 4
          );
        }),
        (u.prototype.writeFloatLE = function(e, t, n) {
          return M(this, e, t, !0, n);
        }),
        (u.prototype.writeFloatBE = function(e, t, n) {
          return M(this, e, t, !1, n);
        }),
        (u.prototype.writeDoubleLE = function(e, t, n) {
          return L(this, e, t, !0, n);
        }),
        (u.prototype.writeDoubleBE = function(e, t, n) {
          return L(this, e, t, !1, n);
        }),
        (u.prototype.copy = function(e, t, n, r) {
          if (
            (n || (n = 0),
            r || 0 === r || (r = this.length),
            t >= e.length && (t = e.length),
            t || (t = 0),
            r > 0 && r < n && (r = n),
            r === n)
          )
            return 0;
          if (0 === e.length || 0 === this.length) return 0;
          if (t < 0) throw new RangeError('targetStart out of bounds');
          if (n < 0 || n >= this.length)
            throw new RangeError('sourceStart out of bounds');
          if (r < 0) throw new RangeError('sourceEnd out of bounds');
          r > this.length && (r = this.length),
            e.length - t < r - n && (r = e.length - t + n);
          var i,
            a = r - n;
          if (this === e && n < t && t < r)
            for (i = a - 1; i >= 0; --i) e[i + t] = this[i + n];
          else if (a < 1e3 || !u.TYPED_ARRAY_SUPPORT)
            for (i = 0; i < a; ++i) e[i + t] = this[i + n];
          else Uint8Array.prototype.set.call(e, this.subarray(n, n + a), t);
          return a;
        }),
        (u.prototype.fill = function(e, t, n, r) {
          if ('string' == typeof e) {
            if (
              ('string' == typeof t
                ? ((r = t), (t = 0), (n = this.length))
                : 'string' == typeof n && ((r = n), (n = this.length)),
              1 === e.length)
            ) {
              var i = e.charCodeAt(0);
              i < 256 && (e = i);
            }
            if (void 0 !== r && 'string' != typeof r)
              throw new TypeError('encoding must be a string');
            if ('string' == typeof r && !u.isEncoding(r))
              throw new TypeError('Unknown encoding: ' + r);
          } else 'number' == typeof e && (e &= 255);
          if (t < 0 || this.length < t || this.length < n)
            throw new RangeError('Out of range index');
          if (n <= t) return this;
          var a;
          if (
            ((t >>>= 0),
            (n = void 0 === n ? this.length : n >>> 0),
            e || (e = 0),
            'number' == typeof e)
          )
            for (a = t; a < n; ++a) this[a] = e;
          else {
            var o = u.isBuffer(e) ? e : U(new u(e, r).toString()),
              s = o.length;
            for (a = 0; a < n - t; ++a) this[a + t] = o[a % s];
          }
          return this;
        });
      var R = /[^+\/0-9A-Za-z-_]/g;
      function j(e) {
        return e < 16 ? '0' + e.toString(16) : e.toString(16);
      }
      function U(e, t) {
        var n;
        t = t || 1 / 0;
        for (var r = e.length, i = null, a = [], o = 0; o < r; ++o) {
          if ((n = e.charCodeAt(o)) > 55295 && n < 57344) {
            if (!i) {
              if (n > 56319) {
                (t -= 3) > -1 && a.push(239, 191, 189);
                continue;
              }
              if (o + 1 === r) {
                (t -= 3) > -1 && a.push(239, 191, 189);
                continue;
              }
              i = n;
              continue;
            }
            if (n < 56320) {
              (t -= 3) > -1 && a.push(239, 191, 189), (i = n);
              continue;
            }
            n = 65536 + (((i - 55296) << 10) | (n - 56320));
          } else i && (t -= 3) > -1 && a.push(239, 191, 189);
          if (((i = null), n < 128)) {
            if ((t -= 1) < 0) break;
            a.push(n);
          } else if (n < 2048) {
            if ((t -= 2) < 0) break;
            a.push((n >> 6) | 192, (63 & n) | 128);
          } else if (n < 65536) {
            if ((t -= 3) < 0) break;
            a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
          } else {
            if (!(n < 1114112)) throw new Error('Invalid code point');
            if ((t -= 4) < 0) break;
            a.push(
              (n >> 18) | 240,
              ((n >> 12) & 63) | 128,
              ((n >> 6) & 63) | 128,
              (63 & n) | 128,
            );
          }
        }
        return a;
      }
      function V(e) {
        return r.toByteArray(
          (function(e) {
            if (
              (e = (function(e) {
                return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, '');
              })(e).replace(R, '')).length < 2
            )
              return '';
            for (; e.length % 4 != 0; ) e += '=';
            return e;
          })(e),
        );
      }
      function W(e, t, n, r) {
        for (var i = 0; i < r && !(i + n >= t.length || i >= e.length); ++i)
          t[i + n] = e[i];
        return i;
      }
    }.call(this, n(7)));
  },
  function(e, t, n) {
    'use strict';
    const r = n(17);
    var i = new r.Schema({ include: [n(22)], explicit: [n(53), n(54)] });
    (r.Schema.DEFAULT = i), (e.exports = i);
  },
  function(e, t, n) {
    'use strict';
    var r = n(14);
    e.exports = new r({ include: [n(27)] });
  },
  function(e, t, n) {
    'use strict';
    var r = n(14);
    e.exports = new r({
      include: [n(23)],
      implicit: [n(63), n(64), n(65), n(66)],
    });
  },
  ,
  function(e, t, n) {
    (function(t) {
      var n;
      (n = function() {
        'use strict';
        var e = 'Prettier is an opinionated code formatter',
          n = { prettier: './bin/prettier.js' },
          r = { node: '>=8' },
          i = {
            '@angular/compiler': '8.2.13',
            '@babel/code-frame': '7.5.5',
            '@babel/parser': '7.7.3',
            '@glimmer/syntax': '0.41.0',
            '@iarna/toml': '2.2.3',
            '@typescript-eslint/typescript-estree': '2.6.1',
            'angular-estree-parser': '1.1.5',
            'angular-html-parser': '1.3.0',
            camelcase: '5.3.1',
            chalk: '2.4.2',
            'cjk-regex': '2.0.0',
            cosmiconfig: '5.2.1',
            dashify: '2.0.0',
            dedent: '0.7.0',
            diff: '4.0.1',
            editorconfig: '0.15.3',
            'editorconfig-to-prettier': '0.1.1',
            'escape-string-regexp': '1.0.5',
            esutils: '2.0.3',
            'find-parent-dir': '0.3.0',
            'find-project-root': '1.1.1',
            'flow-parser': '0.111.3',
            'get-stream': '4.1.0',
            globby: '6.1.0',
            graphql: '14.5.8',
            'html-element-attributes': '2.2.0',
            'html-styles': '1.0.0',
            'html-tag-names': '1.1.4',
            ignore: '4.0.6',
            'is-ci': '2.0.0',
            'jest-docblock': '24.9.0',
            'json-stable-stringify': '1.0.1',
            leven: '3.1.0',
            'lines-and-columns': '1.1.6',
            'linguist-languages': '7.6.0',
            'lodash.uniqby': '4.7.0',
            mem: '5.1.1',
            minimatch: '3.0.4',
            minimist: '1.2.0',
            'n-readlines': '1.0.0',
            'normalize-path': '3.0.0',
            'parse-srcset':
              'ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee',
            'postcss-less': '2.0.0',
            'postcss-media-query-parser': '0.2.3',
            'postcss-scss': '2.0.0',
            'postcss-selector-parser': '2.2.3',
            'postcss-values-parser': '1.5.0',
            'regexp-util': '1.2.2',
            'remark-math': '1.0.6',
            'remark-parse': '5.0.0',
            resolve: '1.12.0',
            semver: '6.3.0',
            'string-width': '4.1.0',
            typescript: '3.7.2',
            'unicode-regex': '3.0.0',
            unified: '8.4.1',
            vnopts: '1.0.2',
            'yaml-unist-parser': '1.1.1',
          },
          a = {
            '@babel/core': '7.7.2',
            '@babel/preset-env': '7.7.1',
            '@rollup/plugin-alias': '2.2.0',
            '@rollup/plugin-replace': '2.2.1',
            'babel-loader': '8.0.6',
            benchmark: '2.1.4',
            'builtin-modules': '3.1.0',
            codecov: '3.6.1',
            'cross-env': '6.0.3',
            eslint: '6.6.0',
            'eslint-config-prettier': '6.5.0',
            'eslint-formatter-friendly': '7.0.0',
            'eslint-plugin-import': '2.18.2',
            'eslint-plugin-prettier': '3.1.1',
            'eslint-plugin-react': '7.16.0',
            execa: '3.2.0',
            jest: '23.3.0',
            'jest-junit': '9.0.0',
            'jest-snapshot-serializer-ansi': '1.0.0',
            'jest-snapshot-serializer-raw': '1.1.0',
            'jest-watch-typeahead': '0.4.0',
            mkdirp: '0.5.1',
            prettier: '1.19.0',
            prettylint: '1.0.0',
            rimraf: '3.0.0',
            rollup: '1.26.3',
            'rollup-plugin-babel': '4.3.3',
            'rollup-plugin-commonjs': '10.1.0',
            'rollup-plugin-json': '4.0.0',
            'rollup-plugin-node-globals': '1.4.0',
            'rollup-plugin-node-resolve': '5.2.0',
            'rollup-plugin-terser': '5.1.2',
            shelljs: '0.8.3',
            'snapshot-diff': '0.4.0',
            'strip-ansi': '5.2.0',
            'synchronous-promise': '2.0.10',
            tempy: '0.2.1',
            'terser-webpack-plugin': '2.2.1',
            webpack: '4.41.2',
          },
          o = {
            prepublishOnly: 'echo "Error: must publish from dist/" && exit 1',
            'prepare-release': 'yarn && yarn build && yarn test:dist',
            test: 'jest',
            'test:dist': 'node ./scripts/test-dist.js',
            'test-integration': 'jest tests_integration',
            'perf-repeat':
              'yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null',
            'perf-repeat-inspect':
              'yarn && yarn build && cross-env NODE_ENV=production node --inspect-brk ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null',
            'perf-benchmark':
              'yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-benchmark --loglevel debug ${PERF_FILE:-./index.js} > /dev/null',
            'check-types': 'tsc',
            lint: 'cross-env EFF_NO_LINK_RULES=true eslint . --format friendly',
            'lint-docs': 'prettylint {.,docs,website,website/blog}/*.md',
            'lint-dist':
              'eslint --no-eslintrc --no-ignore --env=browser "dist/!(bin-prettier|index|third-party).js"',
            build: 'node --max-old-space-size=3072 ./scripts/build/build.js',
            'build-docs': 'node ./scripts/build-docs.js',
            'check-deps': 'node ./scripts/check-deps.js',
            spellcheck:
              'npx -p cspell@4.0.31 cspell {bin,scripts,src}/**/*.js {docs,website/blog,changelog_unreleased}/**/*.md',
          },
          s = {
            name: 'prettier',
            version: '1.19.1',
            description: e,
            bin: n,
            repository: 'prettier/prettier',
            homepage: 'https://prettier.io',
            author: 'James Long',
            license: 'MIT',
            main: './index.js',
            engines: r,
            dependencies: i,
            devDependencies: a,
            scripts: o,
          },
          u = Object.freeze({
            __proto__: null,
            name: 'prettier',
            version: '1.19.1',
            description: e,
            bin: n,
            repository: 'prettier/prettier',
            homepage: 'https://prettier.io',
            author: 'James Long',
            license: 'MIT',
            main: './index.js',
            engines: r,
            dependencies: i,
            devDependencies: a,
            scripts: o,
            default: s,
          });
        function c(e) {
          return (c =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function(e) {
                  return typeof e;
                }
              : function(e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e;
                })(e);
        }
        function l(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function p(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              'value' in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function f(e, t, n) {
          return t && p(e.prototype, t), n && p(e, n), e;
        }
        function h(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function d(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function',
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && g(e, t);
        }
        function m(e) {
          return (m = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function g(e, t) {
          return (g =
            Object.setPrototypeOf ||
            function(e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function y() {
          if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ('function' == typeof Proxy) return !0;
          try {
            return (
              Date.prototype.toString.call(
                Reflect.construct(Date, [], function() {}),
              ),
              !0
            );
          } catch (e) {
            return !1;
          }
        }
        function v(e, t, n) {
          return (v = y()
            ? Reflect.construct
            : function(e, t, n) {
                var r = [null];
                r.push.apply(r, t);
                var i = new (Function.bind.apply(e, r))();
                return n && g(i, n.prototype), i;
              }).apply(null, arguments);
        }
        function D(e) {
          var t = 'function' == typeof Map ? new Map() : void 0;
          return (D = function(e) {
            if (
              null === e ||
              ((n = e),
              -1 === Function.toString.call(n).indexOf('[native code]'))
            )
              return e;
            var n;
            if ('function' != typeof e)
              throw new TypeError(
                'Super expression must either be null or a function',
              );
            if (void 0 !== t) {
              if (t.has(e)) return t.get(e);
              t.set(e, r);
            }
            function r() {
              return v(e, arguments, m(this).constructor);
            }
            return (
              (r.prototype = Object.create(e.prototype, {
                constructor: {
                  value: r,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              g(r, e)
            );
          })(e);
        }
        function E(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function(e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function C(e, t, n) {
          return (C =
            'undefined' != typeof Reflect && Reflect.get
              ? Reflect.get
              : function(e, t, n) {
                  var r = (function(e, t) {
                    for (
                      ;
                      !Object.prototype.hasOwnProperty.call(e, t) &&
                      null !== (e = m(e));

                    );
                    return e;
                  })(e, t);
                  if (r) {
                    var i = Object.getOwnPropertyDescriptor(r, t);
                    return i.get ? i.get.call(n) : i.value;
                  }
                })(e, t, n || e);
        }
        function b(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        function x(e, t) {
          return (
            (function(e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function(e, t) {
              if (
                Symbol.iterator in Object(e) ||
                '[object Arguments]' === Object.prototype.toString.call(e)
              ) {
                var n = [],
                  r = !0,
                  i = !1,
                  a = void 0;
                try {
                  for (
                    var o, s = e[Symbol.iterator]();
                    !(r = (o = s.next()).done) &&
                    (n.push(o.value), !t || n.length !== t);
                    r = !0
                  );
                } catch (e) {
                  (i = !0), (a = e);
                } finally {
                  try {
                    r || null == s.return || s.return();
                  } finally {
                    if (i) throw a;
                  }
                }
                return n;
              }
            })(e, t) ||
            (function() {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function A(e) {
          return (
            (function(e) {
              if (Array.isArray(e)) {
                for (var t = 0, n = new Array(e.length); t < e.length; t++)
                  n[t] = e[t];
                return n;
              }
            })(e) ||
            (function(e) {
              if (
                Symbol.iterator in Object(e) ||
                '[object Arguments]' === Object.prototype.toString.call(e)
              )
                return Array.from(e);
            })(e) ||
            (function() {
              throw new TypeError(
                'Invalid attempt to spread non-iterable instance',
              );
            })()
          );
        }
        function S() {}
        function w(e, t, n, r, i) {
          for (var a = 0, o = t.length, s = 0, u = 0; a < o; a++) {
            var c = t[a];
            if (c.removed) {
              if (
                ((c.value = e.join(r.slice(u, u + c.count))),
                (u += c.count),
                a && t[a - 1].added)
              ) {
                var l = t[a - 1];
                (t[a - 1] = t[a]), (t[a] = l);
              }
            } else {
              if (!c.added && i) {
                var p = n.slice(s, s + c.count);
                (p = p.map(function(e, t) {
                  var n = r[u + t];
                  return n.length > e.length ? n : e;
                })),
                  (c.value = e.join(p));
              } else c.value = e.join(n.slice(s, s + c.count));
              (s += c.count), c.added || (u += c.count);
            }
          }
          var f = t[o - 1];
          return (
            o > 1 &&
              'string' == typeof f.value &&
              (f.added || f.removed) &&
              e.equals('', f.value) &&
              ((t[o - 2].value += f.value), t.pop()),
            t
          );
        }
        function F(e) {
          return { newPos: e.newPos, components: e.components.slice(0) };
        }
        S.prototype = {
          diff: function(e, t) {
            var n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {},
              r = n.callback;
            'function' == typeof n && ((r = n), (n = {})), (this.options = n);
            var i = this;
            function a(e) {
              return r
                ? (setTimeout(function() {
                    r(void 0, e);
                  }, 0),
                  !0)
                : e;
            }
            (e = this.castInput(e)),
              (t = this.castInput(t)),
              (e = this.removeEmpty(this.tokenize(e)));
            var o = (t = this.removeEmpty(this.tokenize(t))).length,
              s = e.length,
              u = 1,
              c = o + s,
              l = [{ newPos: -1, components: [] }],
              p = this.extractCommon(l[0], t, e, 0);
            if (l[0].newPos + 1 >= o && p + 1 >= s)
              return a([{ value: this.join(t), count: t.length }]);
            function f() {
              for (var n = -1 * u; n <= u; n += 2) {
                var r = void 0,
                  c = l[n - 1],
                  p = l[n + 1],
                  f = (p ? p.newPos : 0) - n;
                c && (l[n - 1] = void 0);
                var h = c && c.newPos + 1 < o,
                  d = p && 0 <= f && f < s;
                if (h || d) {
                  if (
                    (!h || (d && c.newPos < p.newPos)
                      ? ((r = F(p)), i.pushComponent(r.components, void 0, !0))
                      : ((r = c).newPos++,
                        i.pushComponent(r.components, !0, void 0)),
                    (f = i.extractCommon(r, t, e, n)),
                    r.newPos + 1 >= o && f + 1 >= s)
                  )
                    return a(w(i, r.components, t, e, i.useLongestToken));
                  l[n] = r;
                } else l[n] = void 0;
              }
              u++;
            }
            if (r)
              !(function e() {
                setTimeout(function() {
                  if (u > c) return r();
                  f() || e();
                }, 0);
              })();
            else
              for (; u <= c; ) {
                var h = f();
                if (h) return h;
              }
          },
          pushComponent: function(e, t, n) {
            var r = e[e.length - 1];
            r && r.added === t && r.removed === n
              ? (e[e.length - 1] = { count: r.count + 1, added: t, removed: n })
              : e.push({ count: 1, added: t, removed: n });
          },
          extractCommon: function(e, t, n, r) {
            for (
              var i = t.length, a = n.length, o = e.newPos, s = o - r, u = 0;
              o + 1 < i && s + 1 < a && this.equals(t[o + 1], n[s + 1]);

            )
              o++, s++, u++;
            return u && e.components.push({ count: u }), (e.newPos = o), s;
          },
          equals: function(e, t) {
            return this.options.comparator
              ? this.options.comparator(e, t)
              : e === t ||
                  (this.options.ignoreCase &&
                    e.toLowerCase() === t.toLowerCase());
          },
          removeEmpty: function(e) {
            for (var t = [], n = 0; n < e.length; n++) e[n] && t.push(e[n]);
            return t;
          },
          castInput: function(e) {
            return e;
          },
          tokenize: function(e) {
            return e.split('');
          },
          join: function(e) {
            return e.join('');
          },
        };
        var k = new S();
        function T(e, t) {
          if ('function' == typeof e) t.callback = e;
          else if (e) for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
          return t;
        }
        var _ = /^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,
          O = /\S/,
          N = new S();
        (N.equals = function(e, t) {
          return (
            this.options.ignoreCase &&
              ((e = e.toLowerCase()), (t = t.toLowerCase())),
            e === t ||
              (this.options.ignoreWhitespace && !O.test(e) && !O.test(t))
          );
        }),
          (N.tokenize = function(e) {
            for (
              var t = e.split(/(\s+|[()[\]{}'"]|\b)/), n = 0;
              n < t.length - 1;
              n++
            )
              !t[n + 1] &&
                t[n + 2] &&
                _.test(t[n]) &&
                _.test(t[n + 2]) &&
                ((t[n] += t[n + 2]), t.splice(n + 1, 2), n--);
            return t;
          });
        var B = new S();
        function I(e, t, n) {
          return B.diff(e, t, n);
        }
        B.tokenize = function(e) {
          var t = [],
            n = e.split(/(\n|\r\n)/);
          n[n.length - 1] || n.pop();
          for (var r = 0; r < n.length; r++) {
            var i = n[r];
            r % 2 && !this.options.newlineIsToken
              ? (t[t.length - 1] += i)
              : (this.options.ignoreWhitespace && (i = i.trim()), t.push(i));
          }
          return t;
        };
        var P = new S();
        P.tokenize = function(e) {
          return e.split(/(\S.+?[.!?])(?=\s+|$)/);
        };
        var M = new S();
        function L(e) {
          return (L =
            'function' == typeof Symbol && 'symbol' === c(Symbol.iterator)
              ? function(e) {
                  return c(e);
                }
              : function(e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : c(e);
                })(e);
        }
        function R(e) {
          return (
            (function(e) {
              if (Array.isArray(e)) {
                for (var t = 0, n = new Array(e.length); t < e.length; t++)
                  n[t] = e[t];
                return n;
              }
            })(e) ||
            (function(e) {
              if (
                Symbol.iterator in Object(e) ||
                '[object Arguments]' === Object.prototype.toString.call(e)
              )
                return Array.from(e);
            })(e) ||
            (function() {
              throw new TypeError(
                'Invalid attempt to spread non-iterable instance',
              );
            })()
          );
        }
        M.tokenize = function(e) {
          return e.split(/([{}:;,]|\s+)/);
        };
        var j = Object.prototype.toString,
          U = new S();
        function V(e, t, n, r, i) {
          var a, o;
          for (
            t = t || [], n = n || [], r && (e = r(i, e)), a = 0;
            a < t.length;
            a += 1
          )
            if (t[a] === e) return n[a];
          if ('[object Array]' === j.call(e)) {
            for (
              t.push(e), o = new Array(e.length), n.push(o), a = 0;
              a < e.length;
              a += 1
            )
              o[a] = V(e[a], t, n, r, i);
            return t.pop(), n.pop(), o;
          }
          if (
            (e && e.toJSON && (e = e.toJSON()), 'object' === L(e) && null !== e)
          ) {
            t.push(e), (o = {}), n.push(o);
            var s,
              u = [];
            for (s in e) e.hasOwnProperty(s) && u.push(s);
            for (u.sort(), a = 0; a < u.length; a += 1)
              o[(s = u[a])] = V(e[s], t, n, r, s);
            t.pop(), n.pop();
          } else o = e;
          return o;
        }
        (U.useLongestToken = !0),
          (U.tokenize = B.tokenize),
          (U.castInput = function(e) {
            var t = this.options,
              n = t.undefinedReplacement,
              r = t.stringifyReplacer,
              i =
                void 0 === r
                  ? function(e, t) {
                      return void 0 === t ? n : t;
                    }
                  : r;
            return 'string' == typeof e
              ? e
              : JSON.stringify(V(e, null, null, i), i, '  ');
          }),
          (U.equals = function(e, t) {
            return S.prototype.equals.call(
              U,
              e.replace(/,([\r\n])/g, '$1'),
              t.replace(/,([\r\n])/g, '$1'),
            );
          });
        var W = new S();
        function $(e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = e.split(/\r\n|[\n\v\f\r\x85]/),
            r = e.match(/\r\n|[\n\v\f\r\x85]/g) || [],
            i = [],
            a = 0;
          function o() {
            var e = {};
            for (i.push(e); a < n.length; ) {
              var r = n[a];
              if (/^(\-\-\-|\+\+\+|@@)\s/.test(r)) break;
              var o = /^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(r);
              o && (e.index = o[1]), a++;
            }
            for (s(e), s(e), e.hunks = []; a < n.length; ) {
              var c = n[a];
              if (/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(c)) break;
              if (/^@@/.test(c)) e.hunks.push(u());
              else {
                if (c && t.strict)
                  throw new Error(
                    'Unknown line ' + (a + 1) + ' ' + JSON.stringify(c),
                  );
                a++;
              }
            }
          }
          function s(e) {
            var t = /^(---|\+\+\+)\s+(.*)$/.exec(n[a]);
            if (t) {
              var r = '---' === t[1] ? 'old' : 'new',
                i = t[2].split('\t', 2),
                o = i[0].replace(/\\\\/g, '\\');
              /^".*"$/.test(o) && (o = o.substr(1, o.length - 2)),
                (e[r + 'FileName'] = o),
                (e[r + 'Header'] = (i[1] || '').trim()),
                a++;
            }
          }
          function u() {
            for (
              var e = a,
                i = n[a++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),
                o = {
                  oldStart: +i[1],
                  oldLines: +i[2] || 1,
                  newStart: +i[3],
                  newLines: +i[4] || 1,
                  lines: [],
                  linedelimiters: [],
                },
                s = 0,
                u = 0;
              a < n.length &&
              !(
                0 === n[a].indexOf('--- ') &&
                a + 2 < n.length &&
                0 === n[a + 1].indexOf('+++ ') &&
                0 === n[a + 2].indexOf('@@')
              );
              a++
            ) {
              var c = 0 == n[a].length && a != n.length - 1 ? ' ' : n[a][0];
              if ('+' !== c && '-' !== c && ' ' !== c && '\\' !== c) break;
              o.lines.push(n[a]),
                o.linedelimiters.push(r[a] || '\n'),
                '+' === c ? s++ : '-' === c ? u++ : ' ' === c && (s++, u++);
            }
            if (
              (s || 1 !== o.newLines || (o.newLines = 0),
              u || 1 !== o.oldLines || (o.oldLines = 0),
              t.strict)
            ) {
              if (s !== o.newLines)
                throw new Error(
                  'Added line count did not match for hunk at line ' + (e + 1),
                );
              if (u !== o.oldLines)
                throw new Error(
                  'Removed line count did not match for hunk at line ' +
                    (e + 1),
                );
            }
            return o;
          }
          for (; a < n.length; ) o();
          return i;
        }
        function q(e, t, n) {
          var r = !0,
            i = !1,
            a = !1,
            o = 1;
          return function s() {
            if (r && !a) {
              if ((i ? o++ : (r = !1), e + o <= n)) return o;
              a = !0;
            }
            if (!i) return a || (r = !0), t <= e - o ? -o++ : ((i = !0), s());
          };
        }
        function Y(e, t) {
          var n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          if (('string' == typeof t && (t = $(t)), Array.isArray(t))) {
            if (t.length > 1)
              throw new Error('applyPatch only works with a single input.');
            t = t[0];
          }
          var r,
            i,
            a = e.split(/\r\n|[\n\v\f\r\x85]/),
            o = e.match(/\r\n|[\n\v\f\r\x85]/g) || [],
            s = t.hunks,
            u =
              n.compareLine ||
              function(e, t, n, r) {
                return t === r;
              },
            c = 0,
            l = n.fuzzFactor || 0,
            p = 0,
            f = 0;
          function h(e, t) {
            for (var n = 0; n < e.lines.length; n++) {
              var r = e.lines[n],
                i = r.length > 0 ? r[0] : ' ',
                o = r.length > 0 ? r.substr(1) : r;
              if (' ' === i || '-' === i) {
                if (!u(t + 1, a[t], i, o) && ++c > l) return !1;
                t++;
              }
            }
            return !0;
          }
          for (var d = 0; d < s.length; d++) {
            for (
              var m = s[d],
                g = a.length - m.oldLines,
                y = 0,
                v = f + m.oldStart - 1,
                D = q(v, p, g);
              void 0 !== y;
              y = D()
            )
              if (h(m, v + y)) {
                m.offset = f += y;
                break;
              }
            if (void 0 === y) return !1;
            p = m.offset + m.oldStart + m.oldLines;
          }
          for (var E = 0, C = 0; C < s.length; C++) {
            var b = s[C],
              x = b.oldStart + b.offset + E - 1;
            (E += b.newLines - b.oldLines), x < 0 && (x = 0);
            for (var A = 0; A < b.lines.length; A++) {
              var S = b.lines[A],
                w = S.length > 0 ? S[0] : ' ',
                F = S.length > 0 ? S.substr(1) : S,
                k = b.linedelimiters[A];
              if (' ' === w) x++;
              else if ('-' === w) a.splice(x, 1), o.splice(x, 1);
              else if ('+' === w) a.splice(x, 0, F), o.splice(x, 0, k), x++;
              else if ('\\' === w) {
                var T = b.lines[A - 1] ? b.lines[A - 1][0] : null;
                '+' === T ? (r = !0) : '-' === T && (i = !0);
              }
            }
          }
          if (r) for (; !a[a.length - 1]; ) a.pop(), o.pop();
          else i && (a.push(''), o.push('\n'));
          for (var _ = 0; _ < a.length - 1; _++) a[_] = a[_] + o[_];
          return a.join('');
        }
        function J(e, t, n, r, i, a, o) {
          o || (o = {}), void 0 === o.context && (o.context = 4);
          var s = I(n, r, o);
          function u(e) {
            return e.map(function(e) {
              return ' ' + e;
            });
          }
          s.push({ value: '', lines: [] });
          for (
            var c = [],
              l = 0,
              p = 0,
              f = [],
              h = 1,
              d = 1,
              m = function(e) {
                var t = s[e],
                  i = t.lines || t.value.replace(/\n$/, '').split('\n');
                if (((t.lines = i), t.added || t.removed)) {
                  var a;
                  if (!l) {
                    var m = s[e - 1];
                    (l = h),
                      (p = d),
                      m &&
                        ((f =
                          o.context > 0 ? u(m.lines.slice(-o.context)) : []),
                        (l -= f.length),
                        (p -= f.length));
                  }
                  (a = f).push.apply(
                    a,
                    R(
                      i.map(function(e) {
                        return (t.added ? '+' : '-') + e;
                      }),
                    ),
                  ),
                    t.added ? (d += i.length) : (h += i.length);
                } else {
                  if (l)
                    if (i.length <= 2 * o.context && e < s.length - 2) {
                      var g;
                      (g = f).push.apply(g, R(u(i)));
                    } else {
                      var y,
                        v = Math.min(i.length, o.context);
                      (y = f).push.apply(y, R(u(i.slice(0, v))));
                      var D = {
                        oldStart: l,
                        oldLines: h - l + v,
                        newStart: p,
                        newLines: d - p + v,
                        lines: f,
                      };
                      if (e >= s.length - 2 && i.length <= o.context) {
                        var E = /\n$/.test(n),
                          C = /\n$/.test(r),
                          b = 0 == i.length && f.length > D.oldLines;
                        !E &&
                          b &&
                          f.splice(
                            D.oldLines,
                            0,
                            '\\ No newline at end of file',
                          ),
                          ((E || b) && C) ||
                            f.push('\\ No newline at end of file');
                      }
                      c.push(D), (l = 0), (p = 0), (f = []);
                    }
                  (h += i.length), (d += i.length);
                }
              },
              g = 0;
            g < s.length;
            g++
          )
            m(g);
          return {
            oldFileName: e,
            newFileName: t,
            oldHeader: i,
            newHeader: a,
            hunks: c,
          };
        }
        function K(e, t, n, r, i, a, o) {
          var s = J(e, t, n, r, i, a, o),
            u = [];
          e == t && u.push('Index: ' + e),
            u.push(
              '===================================================================',
            ),
            u.push(
              '--- ' +
                s.oldFileName +
                (void 0 === s.oldHeader ? '' : '\t' + s.oldHeader),
            ),
            u.push(
              '+++ ' +
                s.newFileName +
                (void 0 === s.newHeader ? '' : '\t' + s.newHeader),
            );
          for (var c = 0; c < s.hunks.length; c++) {
            var l = s.hunks[c];
            u.push(
              '@@ -' +
                l.oldStart +
                ',' +
                l.oldLines +
                ' +' +
                l.newStart +
                ',' +
                l.newLines +
                ' @@',
            ),
              u.push.apply(u, l.lines);
          }
          return u.join('\n') + '\n';
        }
        function z(e, t) {
          if (t.length > e.length) return !1;
          for (var n = 0; n < t.length; n++) if (t[n] !== e[n]) return !1;
          return !0;
        }
        function H(e) {
          var t = (function e(t) {
              var n = 0,
                r = 0;
              return (
                t.forEach(function(t) {
                  if ('string' != typeof t) {
                    var i = e(t.mine),
                      a = e(t.theirs);
                    void 0 !== n &&
                      (i.oldLines === a.oldLines
                        ? (n += i.oldLines)
                        : (n = void 0)),
                      void 0 !== r &&
                        (i.newLines === a.newLines
                          ? (r += i.newLines)
                          : (r = void 0));
                  } else void 0 === r || ('+' !== t[0] && ' ' !== t[0]) || r++, void 0 === n || ('-' !== t[0] && ' ' !== t[0]) || n++;
                }),
                { oldLines: n, newLines: r }
              );
            })(e.lines),
            n = t.oldLines,
            r = t.newLines;
          void 0 !== n ? (e.oldLines = n) : delete e.oldLines,
            void 0 !== r ? (e.newLines = r) : delete e.newLines;
        }
        function X(e, t) {
          if ('string' == typeof e) {
            if (/^@@/m.test(e) || /^Index:/m.test(e)) return $(e)[0];
            if (!t)
              throw new Error(
                'Must provide a base reference or pass in a patch',
              );
            return J(void 0, void 0, t, e);
          }
          return e;
        }
        function G(e) {
          return e.newFileName && e.newFileName !== e.oldFileName;
        }
        function Q(e, t, n) {
          return t === n ? t : ((e.conflict = !0), { mine: t, theirs: n });
        }
        function Z(e, t) {
          return (
            e.oldStart < t.oldStart && e.oldStart + e.oldLines < t.oldStart
          );
        }
        function ee(e, t) {
          return {
            oldStart: e.oldStart,
            oldLines: e.oldLines,
            newStart: e.newStart + t,
            newLines: e.newLines,
            lines: e.lines,
          };
        }
        function te(e, t, n, r, i) {
          var a = { offset: t, lines: n, index: 0 },
            o = { offset: r, lines: i, index: 0 };
          for (
            ae(e, a, o), ae(e, o, a);
            a.index < a.lines.length && o.index < o.lines.length;

          ) {
            var s = a.lines[a.index],
              u = o.lines[o.index];
            if (
              ('-' !== s[0] && '+' !== s[0]) ||
              ('-' !== u[0] && '+' !== u[0])
            )
              if ('+' === s[0] && ' ' === u[0]) {
                var c;
                (c = e.lines).push.apply(c, R(se(a)));
              } else if ('+' === u[0] && ' ' === s[0]) {
                var l;
                (l = e.lines).push.apply(l, R(se(o)));
              } else
                '-' === s[0] && ' ' === u[0]
                  ? re(e, a, o)
                  : '-' === u[0] && ' ' === s[0]
                  ? re(e, o, a, !0)
                  : s === u
                  ? (e.lines.push(s), a.index++, o.index++)
                  : ie(e, se(a), se(o));
            else ne(e, a, o);
          }
          oe(e, a), oe(e, o), H(e);
        }
        function ne(e, t, n) {
          var r = se(t),
            i = se(n);
          if (ue(r) && ue(i)) {
            var a, o;
            if (z(r, i) && ce(n, r, r.length - i.length))
              return void (a = e.lines).push.apply(a, R(r));
            if (z(i, r) && ce(t, i, i.length - r.length))
              return void (o = e.lines).push.apply(o, R(i));
          } else if (
            (function(e, t) {
              return e.length === t.length && z(e, t);
            })(r, i)
          ) {
            var s;
            return void (s = e.lines).push.apply(s, R(r));
          }
          ie(e, r, i);
        }
        function re(e, t, n, r) {
          var i,
            a = se(t),
            o = (function(e, t) {
              for (
                var n = [], r = [], i = 0, a = !1, o = !1;
                i < t.length && e.index < e.lines.length;

              ) {
                var s = e.lines[e.index],
                  u = t[i];
                if ('+' === u[0]) break;
                if (((a = a || ' ' !== s[0]), r.push(u), i++, '+' === s[0]))
                  for (o = !0; '+' === s[0]; )
                    n.push(s), (s = e.lines[++e.index]);
                u.substr(1) === s.substr(1) ? (n.push(s), e.index++) : (o = !0);
              }
              if (('+' === (t[i] || '')[0] && a && (o = !0), o)) return n;
              for (; i < t.length; ) r.push(t[i++]);
              return { merged: r, changes: n };
            })(n, a);
          o.merged
            ? (i = e.lines).push.apply(i, R(o.merged))
            : ie(e, r ? o : a, r ? a : o);
        }
        function ie(e, t, n) {
          (e.conflict = !0), e.lines.push({ conflict: !0, mine: t, theirs: n });
        }
        function ae(e, t, n) {
          for (; t.offset < n.offset && t.index < t.lines.length; ) {
            var r = t.lines[t.index++];
            e.lines.push(r), t.offset++;
          }
        }
        function oe(e, t) {
          for (; t.index < t.lines.length; ) {
            var n = t.lines[t.index++];
            e.lines.push(n);
          }
        }
        function se(e) {
          for (
            var t = [], n = e.lines[e.index][0];
            e.index < e.lines.length;

          ) {
            var r = e.lines[e.index];
            if (('-' === n && '+' === r[0] && (n = '+'), n !== r[0])) break;
            t.push(r), e.index++;
          }
          return t;
        }
        function ue(e) {
          return e.reduce(function(e, t) {
            return e && '-' === t[0];
          }, !0);
        }
        function ce(e, t, n) {
          for (var r = 0; r < n; r++) {
            var i = t[t.length - n + r].substr(1);
            if (e.lines[e.index + r] !== ' ' + i) return !1;
          }
          return (e.index += n), !0;
        }
        (W.tokenize = function(e) {
          return e.slice();
        }),
          (W.join = W.removeEmpty = function(e) {
            return e;
          });
        var le = Object.freeze({
            __proto__: null,
            Diff: S,
            diffChars: function(e, t, n) {
              return k.diff(e, t, n);
            },
            diffWords: function(e, t, n) {
              return (n = T(n, { ignoreWhitespace: !0 })), N.diff(e, t, n);
            },
            diffWordsWithSpace: function(e, t, n) {
              return N.diff(e, t, n);
            },
            diffLines: I,
            diffTrimmedLines: function(e, t, n) {
              var r = T(n, { ignoreWhitespace: !0 });
              return B.diff(e, t, r);
            },
            diffSentences: function(e, t, n) {
              return P.diff(e, t, n);
            },
            diffCss: function(e, t, n) {
              return M.diff(e, t, n);
            },
            diffJson: function(e, t, n) {
              return U.diff(e, t, n);
            },
            diffArrays: function(e, t, n) {
              return W.diff(e, t, n);
            },
            structuredPatch: J,
            createTwoFilesPatch: K,
            createPatch: function(e, t, n, r, i, a) {
              return K(e, e, t, n, r, i, a);
            },
            applyPatch: Y,
            applyPatches: function(e, t) {
              'string' == typeof e && (e = $(e));
              var n = 0;
              !(function r() {
                var i = e[n++];
                if (!i) return t.complete();
                t.loadFile(i, function(e, n) {
                  if (e) return t.complete(e);
                  var a = Y(n, i, t);
                  t.patched(i, a, function(e) {
                    if (e) return t.complete(e);
                    r();
                  });
                });
              })();
            },
            parsePatch: $,
            merge: function(e, t, n) {
              (e = X(e, n)), (t = X(t, n));
              var r = {};
              (e.index || t.index) && (r.index = e.index || t.index),
                (e.newFileName || t.newFileName) &&
                  (G(e)
                    ? G(t)
                      ? ((r.oldFileName = Q(r, e.oldFileName, t.oldFileName)),
                        (r.newFileName = Q(r, e.newFileName, t.newFileName)),
                        (r.oldHeader = Q(r, e.oldHeader, t.oldHeader)),
                        (r.newHeader = Q(r, e.newHeader, t.newHeader)))
                      : ((r.oldFileName = e.oldFileName),
                        (r.newFileName = e.newFileName),
                        (r.oldHeader = e.oldHeader),
                        (r.newHeader = e.newHeader))
                    : ((r.oldFileName = t.oldFileName || e.oldFileName),
                      (r.newFileName = t.newFileName || e.newFileName),
                      (r.oldHeader = t.oldHeader || e.oldHeader),
                      (r.newHeader = t.newHeader || e.newHeader))),
                (r.hunks = []);
              for (
                var i = 0, a = 0, o = 0, s = 0;
                i < e.hunks.length || a < t.hunks.length;

              ) {
                var u = e.hunks[i] || { oldStart: 1 / 0 },
                  c = t.hunks[a] || { oldStart: 1 / 0 };
                if (Z(u, c))
                  r.hunks.push(ee(u, o)), i++, (s += u.newLines - u.oldLines);
                else if (Z(c, u))
                  r.hunks.push(ee(c, s)), a++, (o += c.newLines - c.oldLines);
                else {
                  var l = {
                    oldStart: Math.min(u.oldStart, c.oldStart),
                    oldLines: 0,
                    newStart: Math.min(u.newStart + o, c.oldStart + s),
                    newLines: 0,
                    lines: [],
                  };
                  te(l, u.oldStart, u.lines, c.oldStart, c.lines),
                    a++,
                    i++,
                    r.hunks.push(l);
                }
              }
              return r;
            },
            convertChangesToDMP: function(e) {
              for (var t, n, r = [], i = 0; i < e.length; i++)
                (n = (t = e[i]).added ? 1 : t.removed ? -1 : 0),
                  r.push([n, t.value]);
              return r;
            },
            convertChangesToXML: function(e) {
              for (var t = [], n = 0; n < e.length; n++) {
                var r = e[n];
                r.added ? t.push('<ins>') : r.removed && t.push('<del>'),
                  t.push(
                    ((i = r.value),
                    void 0,
                    i
                      .replace(/&/g, '&amp;')
                      .replace(/</g, '&lt;')
                      .replace(/>/g, '&gt;')
                      .replace(/"/g, '&quot;')),
                  ),
                  r.added ? t.push('</ins>') : r.removed && t.push('</del>');
              }
              var i;
              return t.join('');
            },
            canonicalize: V,
          }),
          pe = Object.freeze({ __proto__: null, default: {} }),
          fe =
            void 0 !== t
              ? t
              : 'undefined' != typeof self
              ? self
              : 'undefined' != typeof window
              ? window
              : {},
          he = [],
          de = [],
          me = 'undefined' != typeof Uint8Array ? Uint8Array : Array,
          ge = !1;
        function ye() {
          ge = !0;
          for (
            var e =
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
              t = 0,
              n = e.length;
            t < n;
            ++t
          )
            (he[t] = e[t]), (de[e.charCodeAt(t)] = t);
          (de['-'.charCodeAt(0)] = 62), (de['_'.charCodeAt(0)] = 63);
        }
        function ve(e, t, n) {
          for (var r, i, a = [], o = t; o < n; o += 3)
            (r = (e[o] << 16) + (e[o + 1] << 8) + e[o + 2]),
              a.push(
                he[((i = r) >> 18) & 63] +
                  he[(i >> 12) & 63] +
                  he[(i >> 6) & 63] +
                  he[63 & i],
              );
          return a.join('');
        }
        function De(e) {
          var t;
          ge || ye();
          for (
            var n = e.length, r = n % 3, i = '', a = [], o = 0, s = n - r;
            o < s;
            o += 16383
          )
            a.push(ve(e, o, o + 16383 > s ? s : o + 16383));
          return (
            1 === r
              ? ((t = e[n - 1]),
                (i += he[t >> 2]),
                (i += he[(t << 4) & 63]),
                (i += '=='))
              : 2 === r &&
                ((t = (e[n - 2] << 8) + e[n - 1]),
                (i += he[t >> 10]),
                (i += he[(t >> 4) & 63]),
                (i += he[(t << 2) & 63]),
                (i += '=')),
            a.push(i),
            a.join('')
          );
        }
        function Ee(e, t, n, r, i) {
          var a,
            o,
            s = 8 * i - r - 1,
            u = (1 << s) - 1,
            c = u >> 1,
            l = -7,
            p = n ? i - 1 : 0,
            f = n ? -1 : 1,
            h = e[t + p];
          for (
            p += f, a = h & ((1 << -l) - 1), h >>= -l, l += s;
            l > 0;
            a = 256 * a + e[t + p], p += f, l -= 8
          );
          for (
            o = a & ((1 << -l) - 1), a >>= -l, l += r;
            l > 0;
            o = 256 * o + e[t + p], p += f, l -= 8
          );
          if (0 === a) a = 1 - c;
          else {
            if (a === u) return o ? NaN : (1 / 0) * (h ? -1 : 1);
            (o += Math.pow(2, r)), (a -= c);
          }
          return (h ? -1 : 1) * o * Math.pow(2, a - r);
        }
        function Ce(e, t, n, r, i, a) {
          var o,
            s,
            u,
            c = 8 * a - i - 1,
            l = (1 << c) - 1,
            p = l >> 1,
            f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
            h = r ? 0 : a - 1,
            d = r ? 1 : -1,
            m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
          for (
            t = Math.abs(t),
              isNaN(t) || t === 1 / 0
                ? ((s = isNaN(t) ? 1 : 0), (o = l))
                : ((o = Math.floor(Math.log(t) / Math.LN2)),
                  t * (u = Math.pow(2, -o)) < 1 && (o--, (u *= 2)),
                  (t += o + p >= 1 ? f / u : f * Math.pow(2, 1 - p)) * u >= 2 &&
                    (o++, (u /= 2)),
                  o + p >= l
                    ? ((s = 0), (o = l))
                    : o + p >= 1
                    ? ((s = (t * u - 1) * Math.pow(2, i)), (o += p))
                    : ((s = t * Math.pow(2, p - 1) * Math.pow(2, i)), (o = 0)));
            i >= 8;
            e[n + h] = 255 & s, h += d, s /= 256, i -= 8
          );
          for (
            o = (o << i) | s, c += i;
            c > 0;
            e[n + h] = 255 & o, h += d, o /= 256, c -= 8
          );
          e[n + h - d] |= 128 * m;
        }
        var be = {}.toString,
          xe =
            Array.isArray ||
            function(e) {
              return '[object Array]' == be.call(e);
            };
        function Ae() {
          return we.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
        }
        function Se(e, t) {
          if (Ae() < t) throw new RangeError('Invalid typed array length');
          return (
            we.TYPED_ARRAY_SUPPORT
              ? ((e = new Uint8Array(t)).__proto__ = we.prototype)
              : (null === e && (e = new we(t)), (e.length = t)),
            e
          );
        }
        function we(e, t, n) {
          if (!(we.TYPED_ARRAY_SUPPORT || this instanceof we))
            return new we(e, t, n);
          if ('number' == typeof e) {
            if ('string' == typeof t)
              throw new Error(
                'If encoding is specified then the first argument must be a string',
              );
            return Te(this, e);
          }
          return Fe(this, e, t, n);
        }
        function Fe(e, t, n, r) {
          if ('number' == typeof t)
            throw new TypeError('"value" argument must not be a number');
          return 'undefined' != typeof ArrayBuffer && t instanceof ArrayBuffer
            ? (function(e, t, n, r) {
                if ((t.byteLength, n < 0 || t.byteLength < n))
                  throw new RangeError("'offset' is out of bounds");
                if (t.byteLength < n + (r || 0))
                  throw new RangeError("'length' is out of bounds");
                return (
                  (t =
                    void 0 === n && void 0 === r
                      ? new Uint8Array(t)
                      : void 0 === r
                      ? new Uint8Array(t, n)
                      : new Uint8Array(t, n, r)),
                  we.TYPED_ARRAY_SUPPORT
                    ? ((e = t).__proto__ = we.prototype)
                    : (e = _e(e, t)),
                  e
                );
              })(e, t, n, r)
            : 'string' == typeof t
            ? (function(e, t, n) {
                if (
                  (('string' == typeof n && '' !== n) || (n = 'utf8'),
                  !we.isEncoding(n))
                )
                  throw new TypeError(
                    '"encoding" must be a valid string encoding',
                  );
                var r = 0 | Be(t, n),
                  i = (e = Se(e, r)).write(t, n);
                return i !== r && (e = e.slice(0, i)), e;
              })(e, t, n)
            : (function(e, t) {
                if (Ne(t)) {
                  var n = 0 | Oe(t.length);
                  return 0 === (e = Se(e, n)).length || t.copy(e, 0, 0, n), e;
                }
                if (t) {
                  if (
                    ('undefined' != typeof ArrayBuffer &&
                      t.buffer instanceof ArrayBuffer) ||
                    'length' in t
                  )
                    return 'number' != typeof t.length || (r = t.length) != r
                      ? Se(e, 0)
                      : _e(e, t);
                  if ('Buffer' === t.type && xe(t.data)) return _e(e, t.data);
                }
                var r;
                throw new TypeError(
                  'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.',
                );
              })(e, t);
        }
        function ke(e) {
          if ('number' != typeof e)
            throw new TypeError('"size" argument must be a number');
          if (e < 0)
            throw new RangeError('"size" argument must not be negative');
        }
        function Te(e, t) {
          if (
            (ke(t), (e = Se(e, t < 0 ? 0 : 0 | Oe(t))), !we.TYPED_ARRAY_SUPPORT)
          )
            for (var n = 0; n < t; ++n) e[n] = 0;
          return e;
        }
        function _e(e, t) {
          var n = t.length < 0 ? 0 : 0 | Oe(t.length);
          e = Se(e, n);
          for (var r = 0; r < n; r += 1) e[r] = 255 & t[r];
          return e;
        }
        function Oe(e) {
          if (e >= Ae())
            throw new RangeError(
              'Attempt to allocate Buffer larger than maximum size: 0x' +
                Ae().toString(16) +
                ' bytes',
            );
          return 0 | e;
        }
        function Ne(e) {
          return !(null == e || !e._isBuffer);
        }
        function Be(e, t) {
          if (Ne(e)) return e.length;
          if (
            'undefined' != typeof ArrayBuffer &&
            'function' == typeof ArrayBuffer.isView &&
            (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
          )
            return e.byteLength;
          'string' != typeof e && (e = '' + e);
          var n = e.length;
          if (0 === n) return 0;
          for (var r = !1; ; )
            switch (t) {
              case 'ascii':
              case 'latin1':
              case 'binary':
                return n;
              case 'utf8':
              case 'utf-8':
              case void 0:
                return it(e).length;
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return 2 * n;
              case 'hex':
                return n >>> 1;
              case 'base64':
                return at(e).length;
              default:
                if (r) return it(e).length;
                (t = ('' + t).toLowerCase()), (r = !0);
            }
        }
        function Ie(e, t, n) {
          var r = !1;
          if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return '';
          if (((void 0 === n || n > this.length) && (n = this.length), n <= 0))
            return '';
          if ((n >>>= 0) <= (t >>>= 0)) return '';
          for (e || (e = 'utf8'); ; )
            switch (e) {
              case 'hex':
                return ze(this, t, n);
              case 'utf8':
              case 'utf-8':
                return Ye(this, t, n);
              case 'ascii':
                return Je(this, t, n);
              case 'latin1':
              case 'binary':
                return Ke(this, t, n);
              case 'base64':
                return qe(this, t, n);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return He(this, t, n);
              default:
                if (r) throw new TypeError('Unknown encoding: ' + e);
                (e = (e + '').toLowerCase()), (r = !0);
            }
        }
        function Pe(e, t, n) {
          var r = e[t];
          (e[t] = e[n]), (e[n] = r);
        }
        function Me(e, t, n, r, i) {
          if (0 === e.length) return -1;
          if (
            ('string' == typeof n
              ? ((r = n), (n = 0))
              : n > 2147483647
              ? (n = 2147483647)
              : n < -2147483648 && (n = -2147483648),
            (n = +n),
            isNaN(n) && (n = i ? 0 : e.length - 1),
            n < 0 && (n = e.length + n),
            n >= e.length)
          ) {
            if (i) return -1;
            n = e.length - 1;
          } else if (n < 0) {
            if (!i) return -1;
            n = 0;
          }
          if (('string' == typeof t && (t = we.from(t, r)), Ne(t)))
            return 0 === t.length ? -1 : Le(e, t, n, r, i);
          if ('number' == typeof t)
            return (
              (t &= 255),
              we.TYPED_ARRAY_SUPPORT &&
              'function' == typeof Uint8Array.prototype.indexOf
                ? i
                  ? Uint8Array.prototype.indexOf.call(e, t, n)
                  : Uint8Array.prototype.lastIndexOf.call(e, t, n)
                : Le(e, [t], n, r, i)
            );
          throw new TypeError('val must be string, number or Buffer');
        }
        function Le(e, t, n, r, i) {
          var a,
            o = 1,
            s = e.length,
            u = t.length;
          if (
            void 0 !== r &&
            ('ucs2' === (r = String(r).toLowerCase()) ||
              'ucs-2' === r ||
              'utf16le' === r ||
              'utf-16le' === r)
          ) {
            if (e.length < 2 || t.length < 2) return -1;
            (o = 2), (s /= 2), (u /= 2), (n /= 2);
          }
          function c(e, t) {
            return 1 === o ? e[t] : e.readUInt16BE(t * o);
          }
          if (i) {
            var l = -1;
            for (a = n; a < s; a++)
              if (c(e, a) === c(t, -1 === l ? 0 : a - l)) {
                if ((-1 === l && (l = a), a - l + 1 === u)) return l * o;
              } else -1 !== l && (a -= a - l), (l = -1);
          } else
            for (n + u > s && (n = s - u), a = n; a >= 0; a--) {
              for (var p = !0, f = 0; f < u; f++)
                if (c(e, a + f) !== c(t, f)) {
                  p = !1;
                  break;
                }
              if (p) return a;
            }
          return -1;
        }
        function Re(e, t, n, r) {
          n = Number(n) || 0;
          var i = e.length - n;
          r ? (r = Number(r)) > i && (r = i) : (r = i);
          var a = t.length;
          if (a % 2 != 0) throw new TypeError('Invalid hex string');
          r > a / 2 && (r = a / 2);
          for (var o = 0; o < r; ++o) {
            var s = parseInt(t.substr(2 * o, 2), 16);
            if (isNaN(s)) return o;
            e[n + o] = s;
          }
          return o;
        }
        function je(e, t, n, r) {
          return ot(it(t, e.length - n), e, n, r);
        }
        function Ue(e, t, n, r) {
          return ot(
            (function(e) {
              for (var t = [], n = 0; n < e.length; ++n)
                t.push(255 & e.charCodeAt(n));
              return t;
            })(t),
            e,
            n,
            r,
          );
        }
        function Ve(e, t, n, r) {
          return Ue(e, t, n, r);
        }
        function We(e, t, n, r) {
          return ot(at(t), e, n, r);
        }
        function $e(e, t, n, r) {
          return ot(
            (function(e, t) {
              for (
                var n, r, i, a = [], o = 0;
                o < e.length && !((t -= 2) < 0);
                ++o
              )
                (n = e.charCodeAt(o)),
                  (r = n >> 8),
                  (i = n % 256),
                  a.push(i),
                  a.push(r);
              return a;
            })(t, e.length - n),
            e,
            n,
            r,
          );
        }
        function qe(e, t, n) {
          return 0 === t && n === e.length ? De(e) : De(e.slice(t, n));
        }
        function Ye(e, t, n) {
          n = Math.min(e.length, n);
          for (var r = [], i = t; i < n; ) {
            var a,
              o,
              s,
              u,
              c = e[i],
              l = null,
              p = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
            if (i + p <= n)
              switch (p) {
                case 1:
                  c < 128 && (l = c);
                  break;
                case 2:
                  128 == (192 & (a = e[i + 1])) &&
                    (u = ((31 & c) << 6) | (63 & a)) > 127 &&
                    (l = u);
                  break;
                case 3:
                  (a = e[i + 1]),
                    (o = e[i + 2]),
                    128 == (192 & a) &&
                      128 == (192 & o) &&
                      (u = ((15 & c) << 12) | ((63 & a) << 6) | (63 & o)) >
                        2047 &&
                      (u < 55296 || u > 57343) &&
                      (l = u);
                  break;
                case 4:
                  (a = e[i + 1]),
                    (o = e[i + 2]),
                    (s = e[i + 3]),
                    128 == (192 & a) &&
                      128 == (192 & o) &&
                      128 == (192 & s) &&
                      (u =
                        ((15 & c) << 18) |
                        ((63 & a) << 12) |
                        ((63 & o) << 6) |
                        (63 & s)) > 65535 &&
                      u < 1114112 &&
                      (l = u);
              }
            null === l
              ? ((l = 65533), (p = 1))
              : l > 65535 &&
                ((l -= 65536),
                r.push(((l >>> 10) & 1023) | 55296),
                (l = 56320 | (1023 & l))),
              r.push(l),
              (i += p);
          }
          return (function(e) {
            var t = e.length;
            if (t <= 4096) return String.fromCharCode.apply(String, e);
            for (var n = '', r = 0; r < t; )
              n += String.fromCharCode.apply(String, e.slice(r, (r += 4096)));
            return n;
          })(r);
        }
        function Je(e, t, n) {
          var r = '';
          n = Math.min(e.length, n);
          for (var i = t; i < n; ++i) r += String.fromCharCode(127 & e[i]);
          return r;
        }
        function Ke(e, t, n) {
          var r = '';
          n = Math.min(e.length, n);
          for (var i = t; i < n; ++i) r += String.fromCharCode(e[i]);
          return r;
        }
        function ze(e, t, n) {
          var r,
            i = e.length;
          (!t || t < 0) && (t = 0), (!n || n < 0 || n > i) && (n = i);
          for (var a = '', o = t; o < n; ++o)
            a += (r = e[o]) < 16 ? '0' + r.toString(16) : r.toString(16);
          return a;
        }
        function He(e, t, n) {
          for (var r = e.slice(t, n), i = '', a = 0; a < r.length; a += 2)
            i += String.fromCharCode(r[a] + 256 * r[a + 1]);
          return i;
        }
        function Xe(e, t, n) {
          if (e % 1 != 0 || e < 0) throw new RangeError('offset is not uint');
          if (e + t > n)
            throw new RangeError('Trying to access beyond buffer length');
        }
        function Ge(e, t, n, r, i, a) {
          if (!Ne(e))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t > i || t < a)
            throw new RangeError('"value" argument is out of bounds');
          if (n + r > e.length) throw new RangeError('Index out of range');
        }
        function Qe(e, t, n, r) {
          t < 0 && (t = 65535 + t + 1);
          for (var i = 0, a = Math.min(e.length - n, 2); i < a; ++i)
            e[n + i] =
              (t & (255 << (8 * (r ? i : 1 - i)))) >>> (8 * (r ? i : 1 - i));
        }
        function Ze(e, t, n, r) {
          t < 0 && (t = 4294967295 + t + 1);
          for (var i = 0, a = Math.min(e.length - n, 4); i < a; ++i)
            e[n + i] = (t >>> (8 * (r ? i : 3 - i))) & 255;
        }
        function et(e, t, n, r, i, a) {
          if (n + r > e.length) throw new RangeError('Index out of range');
          if (n < 0) throw new RangeError('Index out of range');
        }
        function tt(e, t, n, r, i) {
          return i || et(e, 0, n, 4), Ce(e, t, n, r, 23, 4), n + 4;
        }
        function nt(e, t, n, r, i) {
          return i || et(e, 0, n, 8), Ce(e, t, n, r, 52, 8), n + 8;
        }
        (we.TYPED_ARRAY_SUPPORT =
          void 0 === fe.TYPED_ARRAY_SUPPORT || fe.TYPED_ARRAY_SUPPORT),
          (we.poolSize = 8192),
          (we._augment = function(e) {
            return (e.__proto__ = we.prototype), e;
          }),
          (we.from = function(e, t, n) {
            return Fe(null, e, t, n);
          }),
          we.TYPED_ARRAY_SUPPORT &&
            ((we.prototype.__proto__ = Uint8Array.prototype),
            (we.__proto__ = Uint8Array)),
          (we.alloc = function(e, t, n) {
            return (function(e, t, n, r) {
              return (
                ke(t),
                t <= 0
                  ? Se(e, t)
                  : void 0 !== n
                  ? 'string' == typeof r
                    ? Se(e, t).fill(n, r)
                    : Se(e, t).fill(n)
                  : Se(e, t)
              );
            })(null, e, t, n);
          }),
          (we.allocUnsafe = function(e) {
            return Te(null, e);
          }),
          (we.allocUnsafeSlow = function(e) {
            return Te(null, e);
          }),
          (we.isBuffer = function(e) {
            return (
              null != e &&
              (!!e._isBuffer ||
                st(e) ||
                (function(e) {
                  return (
                    'function' == typeof e.readFloatLE &&
                    'function' == typeof e.slice &&
                    st(e.slice(0, 0))
                  );
                })(e))
            );
          }),
          (we.compare = function(e, t) {
            if (!Ne(e) || !Ne(t))
              throw new TypeError('Arguments must be Buffers');
            if (e === t) return 0;
            for (
              var n = e.length, r = t.length, i = 0, a = Math.min(n, r);
              i < a;
              ++i
            )
              if (e[i] !== t[i]) {
                (n = e[i]), (r = t[i]);
                break;
              }
            return n < r ? -1 : r < n ? 1 : 0;
          }),
          (we.isEncoding = function(e) {
            switch (String(e).toLowerCase()) {
              case 'hex':
              case 'utf8':
              case 'utf-8':
              case 'ascii':
              case 'latin1':
              case 'binary':
              case 'base64':
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return !0;
              default:
                return !1;
            }
          }),
          (we.concat = function(e, t) {
            if (!xe(e))
              throw new TypeError(
                '"list" argument must be an Array of Buffers',
              );
            if (0 === e.length) return we.alloc(0);
            var n;
            if (void 0 === t)
              for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
            var r = we.allocUnsafe(t),
              i = 0;
            for (n = 0; n < e.length; ++n) {
              var a = e[n];
              if (!Ne(a))
                throw new TypeError(
                  '"list" argument must be an Array of Buffers',
                );
              a.copy(r, i), (i += a.length);
            }
            return r;
          }),
          (we.byteLength = Be),
          (we.prototype._isBuffer = !0),
          (we.prototype.swap16 = function() {
            var e = this.length;
            if (e % 2 != 0)
              throw new RangeError('Buffer size must be a multiple of 16-bits');
            for (var t = 0; t < e; t += 2) Pe(this, t, t + 1);
            return this;
          }),
          (we.prototype.swap32 = function() {
            var e = this.length;
            if (e % 4 != 0)
              throw new RangeError('Buffer size must be a multiple of 32-bits');
            for (var t = 0; t < e; t += 4)
              Pe(this, t, t + 3), Pe(this, t + 1, t + 2);
            return this;
          }),
          (we.prototype.swap64 = function() {
            var e = this.length;
            if (e % 8 != 0)
              throw new RangeError('Buffer size must be a multiple of 64-bits');
            for (var t = 0; t < e; t += 8)
              Pe(this, t, t + 7),
                Pe(this, t + 1, t + 6),
                Pe(this, t + 2, t + 5),
                Pe(this, t + 3, t + 4);
            return this;
          }),
          (we.prototype.toString = function() {
            var e = 0 | this.length;
            return 0 === e
              ? ''
              : 0 === arguments.length
              ? Ye(this, 0, e)
              : Ie.apply(this, arguments);
          }),
          (we.prototype.equals = function(e) {
            if (!Ne(e)) throw new TypeError('Argument must be a Buffer');
            return this === e || 0 === we.compare(this, e);
          }),
          (we.prototype.inspect = function() {
            var e = '';
            return (
              this.length > 0 &&
                ((e = this.toString('hex', 0, 50)
                  .match(/.{2}/g)
                  .join(' ')),
                this.length > 50 && (e += ' ... ')),
              '<Buffer ' + e + '>'
            );
          }),
          (we.prototype.compare = function(e, t, n, r, i) {
            if (!Ne(e)) throw new TypeError('Argument must be a Buffer');
            if (
              (void 0 === t && (t = 0),
              void 0 === n && (n = e ? e.length : 0),
              void 0 === r && (r = 0),
              void 0 === i && (i = this.length),
              t < 0 || n > e.length || r < 0 || i > this.length)
            )
              throw new RangeError('out of range index');
            if (r >= i && t >= n) return 0;
            if (r >= i) return -1;
            if (t >= n) return 1;
            if (this === e) return 0;
            for (
              var a = (i >>>= 0) - (r >>>= 0),
                o = (n >>>= 0) - (t >>>= 0),
                s = Math.min(a, o),
                u = this.slice(r, i),
                c = e.slice(t, n),
                l = 0;
              l < s;
              ++l
            )
              if (u[l] !== c[l]) {
                (a = u[l]), (o = c[l]);
                break;
              }
            return a < o ? -1 : o < a ? 1 : 0;
          }),
          (we.prototype.includes = function(e, t, n) {
            return -1 !== this.indexOf(e, t, n);
          }),
          (we.prototype.indexOf = function(e, t, n) {
            return Me(this, e, t, n, !0);
          }),
          (we.prototype.lastIndexOf = function(e, t, n) {
            return Me(this, e, t, n, !1);
          }),
          (we.prototype.write = function(e, t, n, r) {
            if (void 0 === t) (r = 'utf8'), (n = this.length), (t = 0);
            else if (void 0 === n && 'string' == typeof t)
              (r = t), (n = this.length), (t = 0);
            else {
              if (!isFinite(t))
                throw new Error(
                  'Buffer.write(string, encoding, offset[, length]) is no longer supported',
                );
              (t |= 0),
                isFinite(n)
                  ? ((n |= 0), void 0 === r && (r = 'utf8'))
                  : ((r = n), (n = void 0));
            }
            var i = this.length - t;
            if (
              ((void 0 === n || n > i) && (n = i),
              (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
            )
              throw new RangeError('Attempt to write outside buffer bounds');
            r || (r = 'utf8');
            for (var a = !1; ; )
              switch (r) {
                case 'hex':
                  return Re(this, e, t, n);
                case 'utf8':
                case 'utf-8':
                  return je(this, e, t, n);
                case 'ascii':
                  return Ue(this, e, t, n);
                case 'latin1':
                case 'binary':
                  return Ve(this, e, t, n);
                case 'base64':
                  return We(this, e, t, n);
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return $e(this, e, t, n);
                default:
                  if (a) throw new TypeError('Unknown encoding: ' + r);
                  (r = ('' + r).toLowerCase()), (a = !0);
              }
          }),
          (we.prototype.toJSON = function() {
            return {
              type: 'Buffer',
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          }),
          (we.prototype.slice = function(e, t) {
            var n,
              r = this.length;
            if (
              ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
              (t = void 0 === t ? r : ~~t) < 0
                ? (t += r) < 0 && (t = 0)
                : t > r && (t = r),
              t < e && (t = e),
              we.TYPED_ARRAY_SUPPORT)
            )
              (n = this.subarray(e, t)).__proto__ = we.prototype;
            else {
              var i = t - e;
              n = new we(i, void 0);
              for (var a = 0; a < i; ++a) n[a] = this[a + e];
            }
            return n;
          }),
          (we.prototype.readUIntLE = function(e, t, n) {
            (e |= 0), (t |= 0), n || Xe(e, t, this.length);
            for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
              r += this[e + a] * i;
            return r;
          }),
          (we.prototype.readUIntBE = function(e, t, n) {
            (e |= 0), (t |= 0), n || Xe(e, t, this.length);
            for (var r = this[e + --t], i = 1; t > 0 && (i *= 256); )
              r += this[e + --t] * i;
            return r;
          }),
          (we.prototype.readUInt8 = function(e, t) {
            return t || Xe(e, 1, this.length), this[e];
          }),
          (we.prototype.readUInt16LE = function(e, t) {
            return t || Xe(e, 2, this.length), this[e] | (this[e + 1] << 8);
          }),
          (we.prototype.readUInt16BE = function(e, t) {
            return t || Xe(e, 2, this.length), (this[e] << 8) | this[e + 1];
          }),
          (we.prototype.readUInt32LE = function(e, t) {
            return (
              t || Xe(e, 4, this.length),
              (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                16777216 * this[e + 3]
            );
          }),
          (we.prototype.readUInt32BE = function(e, t) {
            return (
              t || Xe(e, 4, this.length),
              16777216 * this[e] +
                ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
            );
          }),
          (we.prototype.readIntLE = function(e, t, n) {
            (e |= 0), (t |= 0), n || Xe(e, t, this.length);
            for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
              r += this[e + a] * i;
            return r >= (i *= 128) && (r -= Math.pow(2, 8 * t)), r;
          }),
          (we.prototype.readIntBE = function(e, t, n) {
            (e |= 0), (t |= 0), n || Xe(e, t, this.length);
            for (var r = t, i = 1, a = this[e + --r]; r > 0 && (i *= 256); )
              a += this[e + --r] * i;
            return a >= (i *= 128) && (a -= Math.pow(2, 8 * t)), a;
          }),
          (we.prototype.readInt8 = function(e, t) {
            return (
              t || Xe(e, 1, this.length),
              128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
            );
          }),
          (we.prototype.readInt16LE = function(e, t) {
            t || Xe(e, 2, this.length);
            var n = this[e] | (this[e + 1] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (we.prototype.readInt16BE = function(e, t) {
            t || Xe(e, 2, this.length);
            var n = this[e + 1] | (this[e] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (we.prototype.readInt32LE = function(e, t) {
            return (
              t || Xe(e, 4, this.length),
              this[e] |
                (this[e + 1] << 8) |
                (this[e + 2] << 16) |
                (this[e + 3] << 24)
            );
          }),
          (we.prototype.readInt32BE = function(e, t) {
            return (
              t || Xe(e, 4, this.length),
              (this[e] << 24) |
                (this[e + 1] << 16) |
                (this[e + 2] << 8) |
                this[e + 3]
            );
          }),
          (we.prototype.readFloatLE = function(e, t) {
            return t || Xe(e, 4, this.length), Ee(this, e, !0, 23, 4);
          }),
          (we.prototype.readFloatBE = function(e, t) {
            return t || Xe(e, 4, this.length), Ee(this, e, !1, 23, 4);
          }),
          (we.prototype.readDoubleLE = function(e, t) {
            return t || Xe(e, 8, this.length), Ee(this, e, !0, 52, 8);
          }),
          (we.prototype.readDoubleBE = function(e, t) {
            return t || Xe(e, 8, this.length), Ee(this, e, !1, 52, 8);
          }),
          (we.prototype.writeUIntLE = function(e, t, n, r) {
            (e = +e),
              (t |= 0),
              (n |= 0),
              r || Ge(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
            var i = 1,
              a = 0;
            for (this[t] = 255 & e; ++a < n && (i *= 256); )
              this[t + a] = (e / i) & 255;
            return t + n;
          }),
          (we.prototype.writeUIntBE = function(e, t, n, r) {
            (e = +e),
              (t |= 0),
              (n |= 0),
              r || Ge(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
            var i = n - 1,
              a = 1;
            for (this[t + i] = 255 & e; --i >= 0 && (a *= 256); )
              this[t + i] = (e / a) & 255;
            return t + n;
          }),
          (we.prototype.writeUInt8 = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 1, 255, 0),
              we.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (we.prototype.writeUInt16LE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 2, 65535, 0),
              we.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                : Qe(this, e, t, !0),
              t + 2
            );
          }),
          (we.prototype.writeUInt16BE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 2, 65535, 0),
              we.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                : Qe(this, e, t, !1),
              t + 2
            );
          }),
          (we.prototype.writeUInt32LE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 4, 4294967295, 0),
              we.TYPED_ARRAY_SUPPORT
                ? ((this[t + 3] = e >>> 24),
                  (this[t + 2] = e >>> 16),
                  (this[t + 1] = e >>> 8),
                  (this[t] = 255 & e))
                : Ze(this, e, t, !0),
              t + 4
            );
          }),
          (we.prototype.writeUInt32BE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 4, 4294967295, 0),
              we.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 24),
                  (this[t + 1] = e >>> 16),
                  (this[t + 2] = e >>> 8),
                  (this[t + 3] = 255 & e))
                : Ze(this, e, t, !1),
              t + 4
            );
          }),
          (we.prototype.writeIntLE = function(e, t, n, r) {
            if (((e = +e), (t |= 0), !r)) {
              var i = Math.pow(2, 8 * n - 1);
              Ge(this, e, t, n, i - 1, -i);
            }
            var a = 0,
              o = 1,
              s = 0;
            for (this[t] = 255 & e; ++a < n && (o *= 256); )
              e < 0 && 0 === s && 0 !== this[t + a - 1] && (s = 1),
                (this[t + a] = (((e / o) >> 0) - s) & 255);
            return t + n;
          }),
          (we.prototype.writeIntBE = function(e, t, n, r) {
            if (((e = +e), (t |= 0), !r)) {
              var i = Math.pow(2, 8 * n - 1);
              Ge(this, e, t, n, i - 1, -i);
            }
            var a = n - 1,
              o = 1,
              s = 0;
            for (this[t + a] = 255 & e; --a >= 0 && (o *= 256); )
              e < 0 && 0 === s && 0 !== this[t + a + 1] && (s = 1),
                (this[t + a] = (((e / o) >> 0) - s) & 255);
            return t + n;
          }),
          (we.prototype.writeInt8 = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 1, 127, -128),
              we.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
              e < 0 && (e = 255 + e + 1),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (we.prototype.writeInt16LE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 2, 32767, -32768),
              we.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                : Qe(this, e, t, !0),
              t + 2
            );
          }),
          (we.prototype.writeInt16BE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 2, 32767, -32768),
              we.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                : Qe(this, e, t, !1),
              t + 2
            );
          }),
          (we.prototype.writeInt32LE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 4, 2147483647, -2147483648),
              we.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e),
                  (this[t + 1] = e >>> 8),
                  (this[t + 2] = e >>> 16),
                  (this[t + 3] = e >>> 24))
                : Ze(this, e, t, !0),
              t + 4
            );
          }),
          (we.prototype.writeInt32BE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || Ge(this, e, t, 4, 2147483647, -2147483648),
              e < 0 && (e = 4294967295 + e + 1),
              we.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 24),
                  (this[t + 1] = e >>> 16),
                  (this[t + 2] = e >>> 8),
                  (this[t + 3] = 255 & e))
                : Ze(this, e, t, !1),
              t + 4
            );
          }),
          (we.prototype.writeFloatLE = function(e, t, n) {
            return tt(this, e, t, !0, n);
          }),
          (we.prototype.writeFloatBE = function(e, t, n) {
            return tt(this, e, t, !1, n);
          }),
          (we.prototype.writeDoubleLE = function(e, t, n) {
            return nt(this, e, t, !0, n);
          }),
          (we.prototype.writeDoubleBE = function(e, t, n) {
            return nt(this, e, t, !1, n);
          }),
          (we.prototype.copy = function(e, t, n, r) {
            if (
              (n || (n = 0),
              r || 0 === r || (r = this.length),
              t >= e.length && (t = e.length),
              t || (t = 0),
              r > 0 && r < n && (r = n),
              r === n)
            )
              return 0;
            if (0 === e.length || 0 === this.length) return 0;
            if (t < 0) throw new RangeError('targetStart out of bounds');
            if (n < 0 || n >= this.length)
              throw new RangeError('sourceStart out of bounds');
            if (r < 0) throw new RangeError('sourceEnd out of bounds');
            r > this.length && (r = this.length),
              e.length - t < r - n && (r = e.length - t + n);
            var i,
              a = r - n;
            if (this === e && n < t && t < r)
              for (i = a - 1; i >= 0; --i) e[i + t] = this[i + n];
            else if (a < 1e3 || !we.TYPED_ARRAY_SUPPORT)
              for (i = 0; i < a; ++i) e[i + t] = this[i + n];
            else Uint8Array.prototype.set.call(e, this.subarray(n, n + a), t);
            return a;
          }),
          (we.prototype.fill = function(e, t, n, r) {
            if ('string' == typeof e) {
              if (
                ('string' == typeof t
                  ? ((r = t), (t = 0), (n = this.length))
                  : 'string' == typeof n && ((r = n), (n = this.length)),
                1 === e.length)
              ) {
                var i = e.charCodeAt(0);
                i < 256 && (e = i);
              }
              if (void 0 !== r && 'string' != typeof r)
                throw new TypeError('encoding must be a string');
              if ('string' == typeof r && !we.isEncoding(r))
                throw new TypeError('Unknown encoding: ' + r);
            } else 'number' == typeof e && (e &= 255);
            if (t < 0 || this.length < t || this.length < n)
              throw new RangeError('Out of range index');
            if (n <= t) return this;
            var a;
            if (
              ((t >>>= 0),
              (n = void 0 === n ? this.length : n >>> 0),
              e || (e = 0),
              'number' == typeof e)
            )
              for (a = t; a < n; ++a) this[a] = e;
            else {
              var o = Ne(e) ? e : it(new we(e, r).toString()),
                s = o.length;
              for (a = 0; a < n - t; ++a) this[a + t] = o[a % s];
            }
            return this;
          });
        var rt = /[^+\/0-9A-Za-z-_]/g;
        function it(e, t) {
          var n;
          t = t || 1 / 0;
          for (var r = e.length, i = null, a = [], o = 0; o < r; ++o) {
            if ((n = e.charCodeAt(o)) > 55295 && n < 57344) {
              if (!i) {
                if (n > 56319) {
                  (t -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                if (o + 1 === r) {
                  (t -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                i = n;
                continue;
              }
              if (n < 56320) {
                (t -= 3) > -1 && a.push(239, 191, 189), (i = n);
                continue;
              }
              n = 65536 + (((i - 55296) << 10) | (n - 56320));
            } else i && (t -= 3) > -1 && a.push(239, 191, 189);
            if (((i = null), n < 128)) {
              if ((t -= 1) < 0) break;
              a.push(n);
            } else if (n < 2048) {
              if ((t -= 2) < 0) break;
              a.push((n >> 6) | 192, (63 & n) | 128);
            } else if (n < 65536) {
              if ((t -= 3) < 0) break;
              a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
            } else {
              if (!(n < 1114112)) throw new Error('Invalid code point');
              if ((t -= 4) < 0) break;
              a.push(
                (n >> 18) | 240,
                ((n >> 12) & 63) | 128,
                ((n >> 6) & 63) | 128,
                (63 & n) | 128,
              );
            }
          }
          return a;
        }
        function at(e) {
          return (function(e) {
            var t, n, r, i, a, o;
            ge || ye();
            var s = e.length;
            if (s % 4 > 0)
              throw new Error('Invalid string. Length must be a multiple of 4');
            (a = '=' === e[s - 2] ? 2 : '=' === e[s - 1] ? 1 : 0),
              (o = new me((3 * s) / 4 - a)),
              (r = a > 0 ? s - 4 : s);
            var u = 0;
            for (t = 0, n = 0; t < r; t += 4, n += 3)
              (i =
                (de[e.charCodeAt(t)] << 18) |
                (de[e.charCodeAt(t + 1)] << 12) |
                (de[e.charCodeAt(t + 2)] << 6) |
                de[e.charCodeAt(t + 3)]),
                (o[u++] = (i >> 16) & 255),
                (o[u++] = (i >> 8) & 255),
                (o[u++] = 255 & i);
            return (
              2 === a
                ? ((i =
                    (de[e.charCodeAt(t)] << 2) |
                    (de[e.charCodeAt(t + 1)] >> 4)),
                  (o[u++] = 255 & i))
                : 1 === a &&
                  ((i =
                    (de[e.charCodeAt(t)] << 10) |
                    (de[e.charCodeAt(t + 1)] << 4) |
                    (de[e.charCodeAt(t + 2)] >> 2)),
                  (o[u++] = (i >> 8) & 255),
                  (o[u++] = 255 & i)),
              o
            );
          })(
            (function(e) {
              if (
                (e = (function(e) {
                  return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, '');
                })(e).replace(rt, '')).length < 2
              )
                return '';
              for (; e.length % 4 != 0; ) e += '=';
              return e;
            })(e),
          );
        }
        function ot(e, t, n, r) {
          for (var i = 0; i < r && !(i + n >= t.length || i >= e.length); ++i)
            t[i + n] = e[i];
          return i;
        }
        function st(e) {
          return (
            !!e.constructor &&
            'function' == typeof e.constructor.isBuffer &&
            e.constructor.isBuffer(e)
          );
        }
        var ut =
          'undefined' != typeof globalThis
            ? globalThis
            : 'undefined' != typeof window
            ? window
            : void 0 !== t
            ? t
            : 'undefined' != typeof self
            ? self
            : {};
        function ct(e) {
          return e &&
            e.__esModule &&
            Object.prototype.hasOwnProperty.call(e, 'default')
            ? e.default
            : e;
        }
        function lt(e, t) {
          return e((t = { exports: {} }), t.exports), t.exports;
        }
        function pt(e) {
          return (e && e.default) || e;
        }
        var ft = pt(pe),
          ht = (function() {
            function e(t, n) {
              l(this, e),
                (n = n || {}).readChunk || (n.readChunk = 1024),
                n.newLineCharacter
                  ? (n.newLineCharacter = n.newLineCharacter.charCodeAt(0))
                  : (n.newLineCharacter = 10),
                (this.fd = 'number' == typeof t ? t : ft.openSync(t, 'r')),
                (this.options = n),
                (this.newLineCharacter = n.newLineCharacter),
                this.reset();
            }
            return (
              f(e, [
                {
                  key: '_searchInBuffer',
                  value: function(e, t) {
                    for (var n = -1, r = 0; r <= e.length; r++)
                      if (e[r] === t) {
                        n = r;
                        break;
                      }
                    return n;
                  },
                },
                {
                  key: 'reset',
                  value: function() {
                    (this.eofReached = !1),
                      (this.linesCache = []),
                      (this.fdPosition = 0);
                  },
                },
                {
                  key: 'close',
                  value: function() {
                    ft.closeSync(this.fd), (this.fd = null);
                  },
                },
                {
                  key: '_extractLines',
                  value: function(e) {
                    for (var t, n = [], r = 0, i = 0; ; ) {
                      var a = e[r++];
                      if (a === this.newLineCharacter)
                        (t = e.slice(i, r)), n.push(t), (i = r);
                      else if (!a) break;
                    }
                    var o = e.slice(i, r);
                    return o.length && n.push(o), n;
                  },
                },
                {
                  key: '_readChunk',
                  value: function(e) {
                    var t,
                      n = 0,
                      r = [];
                    do {
                      var i = new we(this.options.readChunk);
                      (n += t = ft.readSync(
                        this.fd,
                        i,
                        0,
                        this.options.readChunk,
                        this.fdPosition,
                      )),
                        (this.fdPosition = this.fdPosition + t),
                        r.push(i);
                    } while (
                      t &&
                      -1 ===
                        this._searchInBuffer(
                          r[r.length - 1],
                          this.options.newLineCharacter,
                        )
                    );
                    var a = we.concat(r);
                    return (
                      t < this.options.readChunk &&
                        ((this.eofReached = !0), (a = a.slice(0, n))),
                      n &&
                        ((this.linesCache = this._extractLines(a)),
                        e &&
                          (this.linesCache[0] = we.concat([
                            e,
                            this.linesCache[0],
                          ]))),
                      n
                    );
                  },
                },
                {
                  key: 'next',
                  value: function() {
                    if (!this.fd) return !1;
                    var e = !1;
                    return (
                      (this.eofReached && 0 === this.linesCache.length) ||
                        (this.linesCache.length || this._readChunk(),
                        this.linesCache.length &&
                          10 !== (e = this.linesCache.shift())[e.length - 1] &&
                          this._readChunk(e) &&
                          (e = this.linesCache.shift()),
                        this.eofReached &&
                          0 === this.linesCache.length &&
                          this.close(),
                        e &&
                          e[e.length - 1] === this.newLineCharacter &&
                          (e = e.slice(0, e.length - 1))),
                      e
                    );
                  },
                },
              ]),
              e
            );
          })(),
          dt = {
            ConfigError: (function(e) {
              function t() {
                return l(this, t), E(this, m(t).apply(this, arguments));
              }
              return d(t, e), t;
            })(D(Error)),
            DebugError: (function(e) {
              function t() {
                return l(this, t), E(this, m(t).apply(this, arguments));
              }
              return d(t, e), t;
            })(D(Error)),
            UndefinedParserError: (function(e) {
              function t() {
                return l(this, t), E(this, m(t).apply(this, arguments));
              }
              return d(t, e), t;
            })(D(Error)),
          };
        function mt() {
          throw new Error('setTimeout has not been defined');
        }
        function gt() {
          throw new Error('clearTimeout has not been defined');
        }
        var yt = mt,
          vt = gt;
        function Dt(e) {
          if (yt === setTimeout) return setTimeout(e, 0);
          if ((yt === mt || !yt) && setTimeout)
            return (yt = setTimeout), setTimeout(e, 0);
          try {
            return yt(e, 0);
          } catch (t) {
            try {
              return yt.call(null, e, 0);
            } catch (t) {
              return yt.call(this, e, 0);
            }
          }
        }
        'function' == typeof fe.setTimeout && (yt = setTimeout),
          'function' == typeof fe.clearTimeout && (vt = clearTimeout);
        var Et,
          Ct = [],
          bt = !1,
          xt = -1;
        function At() {
          bt &&
            Et &&
            ((bt = !1),
            Et.length ? (Ct = Et.concat(Ct)) : (xt = -1),
            Ct.length && St());
        }
        function St() {
          if (!bt) {
            var e = Dt(At);
            bt = !0;
            for (var t = Ct.length; t; ) {
              for (Et = Ct, Ct = []; ++xt < t; ) Et && Et[xt].run();
              (xt = -1), (t = Ct.length);
            }
            (Et = null),
              (bt = !1),
              (function(e) {
                if (vt === clearTimeout) return clearTimeout(e);
                if ((vt === gt || !vt) && clearTimeout)
                  return (vt = clearTimeout), clearTimeout(e);
                try {
                  vt(e);
                } catch (t) {
                  try {
                    return vt.call(null, e);
                  } catch (t) {
                    return vt.call(this, e);
                  }
                }
              })(e);
          }
        }
        function wt(e, t) {
          (this.fun = e), (this.array = t);
        }
        function Ft() {}
        wt.prototype.run = function() {
          this.fun.apply(null, this.array);
        };
        var kt = Ft,
          Tt = Ft,
          _t = Ft,
          Ot = Ft,
          Nt = Ft,
          Bt = Ft,
          It = Ft,
          Pt = fe.performance || {},
          Mt =
            Pt.now ||
            Pt.mozNow ||
            Pt.msNow ||
            Pt.oNow ||
            Pt.webkitNow ||
            function() {
              return new Date().getTime();
            },
          Lt = new Date(),
          Rt = {
            nextTick: function(e) {
              var t = new Array(arguments.length - 1);
              if (arguments.length > 1)
                for (var n = 1; n < arguments.length; n++)
                  t[n - 1] = arguments[n];
              Ct.push(new wt(e, t)), 1 !== Ct.length || bt || Dt(St);
            },
            title: 'browser',
            browser: !0,
            env: {},
            argv: [],
            version: '',
            versions: {},
            on: kt,
            addListener: Tt,
            once: _t,
            off: Ot,
            removeListener: Nt,
            removeAllListeners: Bt,
            emit: It,
            binding: function(e) {
              throw new Error('process.binding is not supported');
            },
            cwd: function() {
              return '/';
            },
            chdir: function(e) {
              throw new Error('process.chdir is not supported');
            },
            umask: function() {
              return 0;
            },
            hrtime: function(e) {
              var t = 0.001 * Mt.call(Pt),
                n = Math.floor(t),
                r = Math.floor((t % 1) * 1e9);
              return (
                e && ((n -= e[0]), (r -= e[1]) < 0 && (n--, (r += 1e9))), [n, r]
              );
            },
            platform: 'browser',
            release: {},
            config: {},
            uptime: function() {
              return (new Date() - Lt) / 1e3;
            },
          },
          jt = lt(function(e, t) {
            var n;
            (t = e.exports = f),
              (n =
                'object' === c(Rt) &&
                Rt.env &&
                Rt.env.NODE_DEBUG &&
                /\bsemver\b/i.test(Rt.env.NODE_DEBUG)
                  ? function() {
                      var e = Array.prototype.slice.call(arguments, 0);
                      e.unshift('SEMVER'), console.log.apply(console, e);
                    }
                  : function() {}),
              (t.SEMVER_SPEC_VERSION = '2.0.0');
            var r = Number.MAX_SAFE_INTEGER || 9007199254740991,
              i = (t.re = []),
              a = (t.src = []),
              o = (t.tokens = {}),
              s = 0;
            function u(e) {
              o[e] = s++;
            }
            u('NUMERICIDENTIFIER'),
              (a[o.NUMERICIDENTIFIER] = '0|[1-9]\\d*'),
              u('NUMERICIDENTIFIERLOOSE'),
              (a[o.NUMERICIDENTIFIERLOOSE] = '[0-9]+'),
              u('NONNUMERICIDENTIFIER'),
              (a[o.NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'),
              u('MAINVERSION'),
              (a[o.MAINVERSION] =
                '(' +
                a[o.NUMERICIDENTIFIER] +
                ')\\.(' +
                a[o.NUMERICIDENTIFIER] +
                ')\\.(' +
                a[o.NUMERICIDENTIFIER] +
                ')'),
              u('MAINVERSIONLOOSE'),
              (a[o.MAINVERSIONLOOSE] =
                '(' +
                a[o.NUMERICIDENTIFIERLOOSE] +
                ')\\.(' +
                a[o.NUMERICIDENTIFIERLOOSE] +
                ')\\.(' +
                a[o.NUMERICIDENTIFIERLOOSE] +
                ')'),
              u('PRERELEASEIDENTIFIER'),
              (a[o.PRERELEASEIDENTIFIER] =
                '(?:' +
                a[o.NUMERICIDENTIFIER] +
                '|' +
                a[o.NONNUMERICIDENTIFIER] +
                ')'),
              u('PRERELEASEIDENTIFIERLOOSE'),
              (a[o.PRERELEASEIDENTIFIERLOOSE] =
                '(?:' +
                a[o.NUMERICIDENTIFIERLOOSE] +
                '|' +
                a[o.NONNUMERICIDENTIFIER] +
                ')'),
              u('PRERELEASE'),
              (a[o.PRERELEASE] =
                '(?:-(' +
                a[o.PRERELEASEIDENTIFIER] +
                '(?:\\.' +
                a[o.PRERELEASEIDENTIFIER] +
                ')*))'),
              u('PRERELEASELOOSE'),
              (a[o.PRERELEASELOOSE] =
                '(?:-?(' +
                a[o.PRERELEASEIDENTIFIERLOOSE] +
                '(?:\\.' +
                a[o.PRERELEASEIDENTIFIERLOOSE] +
                ')*))'),
              u('BUILDIDENTIFIER'),
              (a[o.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'),
              u('BUILD'),
              (a[o.BUILD] =
                '(?:\\+(' +
                a[o.BUILDIDENTIFIER] +
                '(?:\\.' +
                a[o.BUILDIDENTIFIER] +
                ')*))'),
              u('FULL'),
              u('FULLPLAIN'),
              (a[o.FULLPLAIN] =
                'v?' +
                a[o.MAINVERSION] +
                a[o.PRERELEASE] +
                '?' +
                a[o.BUILD] +
                '?'),
              (a[o.FULL] = '^' + a[o.FULLPLAIN] + '$'),
              u('LOOSEPLAIN'),
              (a[o.LOOSEPLAIN] =
                '[v=\\s]*' +
                a[o.MAINVERSIONLOOSE] +
                a[o.PRERELEASELOOSE] +
                '?' +
                a[o.BUILD] +
                '?'),
              u('LOOSE'),
              (a[o.LOOSE] = '^' + a[o.LOOSEPLAIN] + '$'),
              u('GTLT'),
              (a[o.GTLT] = '((?:<|>)?=?)'),
              u('XRANGEIDENTIFIERLOOSE'),
              (a[o.XRANGEIDENTIFIERLOOSE] =
                a[o.NUMERICIDENTIFIERLOOSE] + '|x|X|\\*'),
              u('XRANGEIDENTIFIER'),
              (a[o.XRANGEIDENTIFIER] = a[o.NUMERICIDENTIFIER] + '|x|X|\\*'),
              u('XRANGEPLAIN'),
              (a[o.XRANGEPLAIN] =
                '[v=\\s]*(' +
                a[o.XRANGEIDENTIFIER] +
                ')(?:\\.(' +
                a[o.XRANGEIDENTIFIER] +
                ')(?:\\.(' +
                a[o.XRANGEIDENTIFIER] +
                ')(?:' +
                a[o.PRERELEASE] +
                ')?' +
                a[o.BUILD] +
                '?)?)?'),
              u('XRANGEPLAINLOOSE'),
              (a[o.XRANGEPLAINLOOSE] =
                '[v=\\s]*(' +
                a[o.XRANGEIDENTIFIERLOOSE] +
                ')(?:\\.(' +
                a[o.XRANGEIDENTIFIERLOOSE] +
                ')(?:\\.(' +
                a[o.XRANGEIDENTIFIERLOOSE] +
                ')(?:' +
                a[o.PRERELEASELOOSE] +
                ')?' +
                a[o.BUILD] +
                '?)?)?'),
              u('XRANGE'),
              (a[o.XRANGE] = '^' + a[o.GTLT] + '\\s*' + a[o.XRANGEPLAIN] + '$'),
              u('XRANGELOOSE'),
              (a[o.XRANGELOOSE] =
                '^' + a[o.GTLT] + '\\s*' + a[o.XRANGEPLAINLOOSE] + '$'),
              u('COERCE'),
              (a[o.COERCE] =
                '(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])'),
              u('COERCERTL'),
              (i[o.COERCERTL] = new RegExp(a[o.COERCE], 'g')),
              u('LONETILDE'),
              (a[o.LONETILDE] = '(?:~>?)'),
              u('TILDETRIM'),
              (a[o.TILDETRIM] = '(\\s*)' + a[o.LONETILDE] + '\\s+'),
              (i[o.TILDETRIM] = new RegExp(a[o.TILDETRIM], 'g')),
              u('TILDE'),
              (a[o.TILDE] = '^' + a[o.LONETILDE] + a[o.XRANGEPLAIN] + '$'),
              u('TILDELOOSE'),
              (a[o.TILDELOOSE] =
                '^' + a[o.LONETILDE] + a[o.XRANGEPLAINLOOSE] + '$'),
              u('LONECARET'),
              (a[o.LONECARET] = '(?:\\^)'),
              u('CARETTRIM'),
              (a[o.CARETTRIM] = '(\\s*)' + a[o.LONECARET] + '\\s+'),
              (i[o.CARETTRIM] = new RegExp(a[o.CARETTRIM], 'g')),
              u('CARET'),
              (a[o.CARET] = '^' + a[o.LONECARET] + a[o.XRANGEPLAIN] + '$'),
              u('CARETLOOSE'),
              (a[o.CARETLOOSE] =
                '^' + a[o.LONECARET] + a[o.XRANGEPLAINLOOSE] + '$'),
              u('COMPARATORLOOSE'),
              (a[o.COMPARATORLOOSE] =
                '^' + a[o.GTLT] + '\\s*(' + a[o.LOOSEPLAIN] + ')$|^$'),
              u('COMPARATOR'),
              (a[o.COMPARATOR] =
                '^' + a[o.GTLT] + '\\s*(' + a[o.FULLPLAIN] + ')$|^$'),
              u('COMPARATORTRIM'),
              (a[o.COMPARATORTRIM] =
                '(\\s*)' +
                a[o.GTLT] +
                '\\s*(' +
                a[o.LOOSEPLAIN] +
                '|' +
                a[o.XRANGEPLAIN] +
                ')'),
              (i[o.COMPARATORTRIM] = new RegExp(a[o.COMPARATORTRIM], 'g')),
              u('HYPHENRANGE'),
              (a[o.HYPHENRANGE] =
                '^\\s*(' +
                a[o.XRANGEPLAIN] +
                ')\\s+-\\s+(' +
                a[o.XRANGEPLAIN] +
                ')\\s*$'),
              u('HYPHENRANGELOOSE'),
              (a[o.HYPHENRANGELOOSE] =
                '^\\s*(' +
                a[o.XRANGEPLAINLOOSE] +
                ')\\s+-\\s+(' +
                a[o.XRANGEPLAINLOOSE] +
                ')\\s*$'),
              u('STAR'),
              (a[o.STAR] = '(<|>)?=?\\s*\\*');
            for (var l = 0; l < s; l++)
              n(l, a[l]), i[l] || (i[l] = new RegExp(a[l]));
            function p(e, t) {
              if (
                ((t && 'object' === c(t)) ||
                  (t = { loose: !!t, includePrerelease: !1 }),
                e instanceof f)
              )
                return e;
              if ('string' != typeof e) return null;
              if (e.length > 256) return null;
              if (!(t.loose ? i[o.LOOSE] : i[o.FULL]).test(e)) return null;
              try {
                return new f(e, t);
              } catch (e) {
                return null;
              }
            }
            function f(e, t) {
              if (
                ((t && 'object' === c(t)) ||
                  (t = { loose: !!t, includePrerelease: !1 }),
                e instanceof f)
              ) {
                if (e.loose === t.loose) return e;
                e = e.version;
              } else if ('string' != typeof e) throw new TypeError('Invalid Version: ' + e);
              if (e.length > 256)
                throw new TypeError('version is longer than 256 characters');
              if (!(this instanceof f)) return new f(e, t);
              n('SemVer', e, t), (this.options = t), (this.loose = !!t.loose);
              var a = e.trim().match(t.loose ? i[o.LOOSE] : i[o.FULL]);
              if (!a) throw new TypeError('Invalid Version: ' + e);
              if (
                ((this.raw = e),
                (this.major = +a[1]),
                (this.minor = +a[2]),
                (this.patch = +a[3]),
                this.major > r || this.major < 0)
              )
                throw new TypeError('Invalid major version');
              if (this.minor > r || this.minor < 0)
                throw new TypeError('Invalid minor version');
              if (this.patch > r || this.patch < 0)
                throw new TypeError('Invalid patch version');
              a[4]
                ? (this.prerelease = a[4].split('.').map(function(e) {
                    if (/^[0-9]+$/.test(e)) {
                      var t = +e;
                      if (t >= 0 && t < r) return t;
                    }
                    return e;
                  }))
                : (this.prerelease = []),
                (this.build = a[5] ? a[5].split('.') : []),
                this.format();
            }
            (t.parse = p),
              (t.valid = function(e, t) {
                var n = p(e, t);
                return n ? n.version : null;
              }),
              (t.clean = function(e, t) {
                var n = p(e.trim().replace(/^[=v]+/, ''), t);
                return n ? n.version : null;
              }),
              (t.SemVer = f),
              (f.prototype.format = function() {
                return (
                  (this.version =
                    this.major + '.' + this.minor + '.' + this.patch),
                  this.prerelease.length &&
                    (this.version += '-' + this.prerelease.join('.')),
                  this.version
                );
              }),
              (f.prototype.toString = function() {
                return this.version;
              }),
              (f.prototype.compare = function(e) {
                return (
                  n('SemVer.compare', this.version, this.options, e),
                  e instanceof f || (e = new f(e, this.options)),
                  this.compareMain(e) || this.comparePre(e)
                );
              }),
              (f.prototype.compareMain = function(e) {
                return (
                  e instanceof f || (e = new f(e, this.options)),
                  d(this.major, e.major) ||
                    d(this.minor, e.minor) ||
                    d(this.patch, e.patch)
                );
              }),
              (f.prototype.comparePre = function(e) {
                if (
                  (e instanceof f || (e = new f(e, this.options)),
                  this.prerelease.length && !e.prerelease.length)
                )
                  return -1;
                if (!this.prerelease.length && e.prerelease.length) return 1;
                if (!this.prerelease.length && !e.prerelease.length) return 0;
                var t = 0;
                do {
                  var r = this.prerelease[t],
                    i = e.prerelease[t];
                  if (
                    (n('prerelease compare', t, r, i),
                    void 0 === r && void 0 === i)
                  )
                    return 0;
                  if (void 0 === i) return 1;
                  if (void 0 === r) return -1;
                  if (r !== i) return d(r, i);
                } while (++t);
              }),
              (f.prototype.compareBuild = function(e) {
                e instanceof f || (e = new f(e, this.options));
                var t = 0;
                do {
                  var r = this.build[t],
                    i = e.build[t];
                  if (
                    (n('prerelease compare', t, r, i),
                    void 0 === r && void 0 === i)
                  )
                    return 0;
                  if (void 0 === i) return 1;
                  if (void 0 === r) return -1;
                  if (r !== i) return d(r, i);
                } while (++t);
              }),
              (f.prototype.inc = function(e, t) {
                switch (e) {
                  case 'premajor':
                    (this.prerelease.length = 0),
                      (this.patch = 0),
                      (this.minor = 0),
                      this.major++,
                      this.inc('pre', t);
                    break;
                  case 'preminor':
                    (this.prerelease.length = 0),
                      (this.patch = 0),
                      this.minor++,
                      this.inc('pre', t);
                    break;
                  case 'prepatch':
                    (this.prerelease.length = 0),
                      this.inc('patch', t),
                      this.inc('pre', t);
                    break;
                  case 'prerelease':
                    0 === this.prerelease.length && this.inc('patch', t),
                      this.inc('pre', t);
                    break;
                  case 'major':
                    (0 === this.minor &&
                      0 === this.patch &&
                      0 !== this.prerelease.length) ||
                      this.major++,
                      (this.minor = 0),
                      (this.patch = 0),
                      (this.prerelease = []);
                    break;
                  case 'minor':
                    (0 === this.patch && 0 !== this.prerelease.length) ||
                      this.minor++,
                      (this.patch = 0),
                      (this.prerelease = []);
                    break;
                  case 'patch':
                    0 === this.prerelease.length && this.patch++,
                      (this.prerelease = []);
                    break;
                  case 'pre':
                    if (0 === this.prerelease.length) this.prerelease = [0];
                    else {
                      for (var n = this.prerelease.length; --n >= 0; )
                        'number' == typeof this.prerelease[n] &&
                          (this.prerelease[n]++, (n = -2));
                      -1 === n && this.prerelease.push(0);
                    }
                    t &&
                      (this.prerelease[0] === t
                        ? isNaN(this.prerelease[1]) &&
                          (this.prerelease = [t, 0])
                        : (this.prerelease = [t, 0]));
                    break;
                  default:
                    throw new Error('invalid increment argument: ' + e);
                }
                return this.format(), (this.raw = this.version), this;
              }),
              (t.inc = function(e, t, n, r) {
                'string' == typeof n && ((r = n), (n = void 0));
                try {
                  return new f(e, n).inc(t, r).version;
                } catch (e) {
                  return null;
                }
              }),
              (t.diff = function(e, t) {
                if (v(e, t)) return null;
                var n = p(e),
                  r = p(t),
                  i = '';
                if (n.prerelease.length || r.prerelease.length) {
                  i = 'pre';
                  var a = 'prerelease';
                }
                for (var o in n)
                  if (
                    ('major' === o || 'minor' === o || 'patch' === o) &&
                    n[o] !== r[o]
                  )
                    return i + o;
                return a;
              }),
              (t.compareIdentifiers = d);
            var h = /^[0-9]+$/;
            function d(e, t) {
              var n = h.test(e),
                r = h.test(t);
              return (
                n && r && ((e = +e), (t = +t)),
                e === t ? 0 : n && !r ? -1 : r && !n ? 1 : e < t ? -1 : 1
              );
            }
            function m(e, t, n) {
              return new f(e, n).compare(new f(t, n));
            }
            function g(e, t, n) {
              return m(e, t, n) > 0;
            }
            function y(e, t, n) {
              return m(e, t, n) < 0;
            }
            function v(e, t, n) {
              return 0 === m(e, t, n);
            }
            function D(e, t, n) {
              return 0 !== m(e, t, n);
            }
            function E(e, t, n) {
              return m(e, t, n) >= 0;
            }
            function C(e, t, n) {
              return m(e, t, n) <= 0;
            }
            function b(e, t, n, r) {
              switch (t) {
                case '===':
                  return (
                    'object' === c(e) && (e = e.version),
                    'object' === c(n) && (n = n.version),
                    e === n
                  );
                case '!==':
                  return (
                    'object' === c(e) && (e = e.version),
                    'object' === c(n) && (n = n.version),
                    e !== n
                  );
                case '':
                case '=':
                case '==':
                  return v(e, n, r);
                case '!=':
                  return D(e, n, r);
                case '>':
                  return g(e, n, r);
                case '>=':
                  return E(e, n, r);
                case '<':
                  return y(e, n, r);
                case '<=':
                  return C(e, n, r);
                default:
                  throw new TypeError('Invalid operator: ' + t);
              }
            }
            function x(e, t) {
              if (
                ((t && 'object' === c(t)) ||
                  (t = { loose: !!t, includePrerelease: !1 }),
                e instanceof x)
              ) {
                if (e.loose === !!t.loose) return e;
                e = e.value;
              }
              if (!(this instanceof x)) return new x(e, t);
              n('comparator', e, t),
                (this.options = t),
                (this.loose = !!t.loose),
                this.parse(e),
                this.semver === A
                  ? (this.value = '')
                  : (this.value = this.operator + this.semver.version),
                n('comp', this);
            }
            (t.rcompareIdentifiers = function(e, t) {
              return d(t, e);
            }),
              (t.major = function(e, t) {
                return new f(e, t).major;
              }),
              (t.minor = function(e, t) {
                return new f(e, t).minor;
              }),
              (t.patch = function(e, t) {
                return new f(e, t).patch;
              }),
              (t.compare = m),
              (t.compareLoose = function(e, t) {
                return m(e, t, !0);
              }),
              (t.compareBuild = function(e, t, n) {
                var r = new f(e, n),
                  i = new f(t, n);
                return r.compare(i) || r.compareBuild(i);
              }),
              (t.rcompare = function(e, t, n) {
                return m(t, e, n);
              }),
              (t.sort = function(e, n) {
                return e.sort(function(e, r) {
                  return t.compareBuild(e, r, n);
                });
              }),
              (t.rsort = function(e, n) {
                return e.sort(function(e, r) {
                  return t.compareBuild(r, e, n);
                });
              }),
              (t.gt = g),
              (t.lt = y),
              (t.eq = v),
              (t.neq = D),
              (t.gte = E),
              (t.lte = C),
              (t.cmp = b),
              (t.Comparator = x);
            var A = {};
            function S(e, t) {
              if (
                ((t && 'object' === c(t)) ||
                  (t = { loose: !!t, includePrerelease: !1 }),
                e instanceof S)
              )
                return e.loose === !!t.loose &&
                  e.includePrerelease === !!t.includePrerelease
                  ? e
                  : new S(e.raw, t);
              if (e instanceof x) return new S(e.value, t);
              if (!(this instanceof S)) return new S(e, t);
              if (
                ((this.options = t),
                (this.loose = !!t.loose),
                (this.includePrerelease = !!t.includePrerelease),
                (this.raw = e),
                (this.set = e
                  .split(/\s*\|\|\s*/)
                  .map(function(e) {
                    return this.parseRange(e.trim());
                  }, this)
                  .filter(function(e) {
                    return e.length;
                  })),
                !this.set.length)
              )
                throw new TypeError('Invalid SemVer Range: ' + e);
              this.format();
            }
            function w(e, t) {
              for (var n = !0, r = e.slice(), i = r.pop(); n && r.length; )
                (n = r.every(function(e) {
                  return i.intersects(e, t);
                })),
                  (i = r.pop());
              return n;
            }
            function F(e) {
              return !e || 'x' === e.toLowerCase() || '*' === e;
            }
            function k(e, t, n, r, i, a, o, s, u, c, l, p, f) {
              return (
                (t = F(n)
                  ? ''
                  : F(r)
                  ? '>=' + n + '.0.0'
                  : F(i)
                  ? '>=' + n + '.' + r + '.0'
                  : '>=' + t) +
                ' ' +
                (s = F(u)
                  ? ''
                  : F(c)
                  ? '<' + (+u + 1) + '.0.0'
                  : F(l)
                  ? '<' + u + '.' + (+c + 1) + '.0'
                  : p
                  ? '<=' + u + '.' + c + '.' + l + '-' + p
                  : '<=' + s)
              ).trim();
            }
            function T(e, t, r) {
              for (var i = 0; i < e.length; i++) if (!e[i].test(t)) return !1;
              if (t.prerelease.length && !r.includePrerelease) {
                for (i = 0; i < e.length; i++)
                  if (
                    (n(e[i].semver),
                    e[i].semver !== A && e[i].semver.prerelease.length > 0)
                  ) {
                    var a = e[i].semver;
                    if (
                      a.major === t.major &&
                      a.minor === t.minor &&
                      a.patch === t.patch
                    )
                      return !0;
                  }
                return !1;
              }
              return !0;
            }
            function _(e, t, n) {
              try {
                t = new S(t, n);
              } catch (e) {
                return !1;
              }
              return t.test(e);
            }
            function O(e, t, n, r) {
              var i, a, o, s, u;
              switch (((e = new f(e, r)), (t = new S(t, r)), n)) {
                case '>':
                  (i = g), (a = C), (o = y), (s = '>'), (u = '>=');
                  break;
                case '<':
                  (i = y), (a = E), (o = g), (s = '<'), (u = '<=');
                  break;
                default:
                  throw new TypeError('Must provide a hilo val of "<" or ">"');
              }
              if (_(e, t, r)) return !1;
              for (var c = 0; c < t.set.length; ++c) {
                var l = t.set[c],
                  p = null,
                  h = null;
                if (
                  (l.forEach(function(e) {
                    e.semver === A && (e = new x('>=0.0.0')),
                      (p = p || e),
                      (h = h || e),
                      i(e.semver, p.semver, r)
                        ? (p = e)
                        : o(e.semver, h.semver, r) && (h = e);
                  }),
                  p.operator === s || p.operator === u)
                )
                  return !1;
                if ((!h.operator || h.operator === s) && a(e, h.semver))
                  return !1;
                if (h.operator === u && o(e, h.semver)) return !1;
              }
              return !0;
            }
            (x.prototype.parse = function(e) {
              var t = this.options.loose
                  ? i[o.COMPARATORLOOSE]
                  : i[o.COMPARATOR],
                n = e.match(t);
              if (!n) throw new TypeError('Invalid comparator: ' + e);
              (this.operator = void 0 !== n[1] ? n[1] : ''),
                '=' === this.operator && (this.operator = ''),
                n[2]
                  ? (this.semver = new f(n[2], this.options.loose))
                  : (this.semver = A);
            }),
              (x.prototype.toString = function() {
                return this.value;
              }),
              (x.prototype.test = function(e) {
                if (
                  (n('Comparator.test', e, this.options.loose),
                  this.semver === A || e === A)
                )
                  return !0;
                if ('string' == typeof e)
                  try {
                    e = new f(e, this.options);
                  } catch (e) {
                    return !1;
                  }
                return b(e, this.operator, this.semver, this.options);
              }),
              (x.prototype.intersects = function(e, t) {
                if (!(e instanceof x))
                  throw new TypeError('a Comparator is required');
                var n;
                if (
                  ((t && 'object' === c(t)) ||
                    (t = { loose: !!t, includePrerelease: !1 }),
                  '' === this.operator)
                )
                  return (
                    '' === this.value ||
                    ((n = new S(e.value, t)), _(this.value, n, t))
                  );
                if ('' === e.operator)
                  return (
                    '' === e.value ||
                    ((n = new S(this.value, t)), _(e.semver, n, t))
                  );
                var r = !(
                    ('>=' !== this.operator && '>' !== this.operator) ||
                    ('>=' !== e.operator && '>' !== e.operator)
                  ),
                  i = !(
                    ('<=' !== this.operator && '<' !== this.operator) ||
                    ('<=' !== e.operator && '<' !== e.operator)
                  ),
                  a = this.semver.version === e.semver.version,
                  o = !(
                    ('>=' !== this.operator && '<=' !== this.operator) ||
                    ('>=' !== e.operator && '<=' !== e.operator)
                  ),
                  s =
                    b(this.semver, '<', e.semver, t) &&
                    ('>=' === this.operator || '>' === this.operator) &&
                    ('<=' === e.operator || '<' === e.operator),
                  u =
                    b(this.semver, '>', e.semver, t) &&
                    ('<=' === this.operator || '<' === this.operator) &&
                    ('>=' === e.operator || '>' === e.operator);
                return r || i || (a && o) || s || u;
              }),
              (t.Range = S),
              (S.prototype.format = function() {
                return (
                  (this.range = this.set
                    .map(function(e) {
                      return e.join(' ').trim();
                    })
                    .join('||')
                    .trim()),
                  this.range
                );
              }),
              (S.prototype.toString = function() {
                return this.range;
              }),
              (S.prototype.parseRange = function(e) {
                var t = this.options.loose;
                e = e.trim();
                var r = t ? i[o.HYPHENRANGELOOSE] : i[o.HYPHENRANGE];
                (e = e.replace(r, k)),
                  n('hyphen replace', e),
                  (e = e.replace(i[o.COMPARATORTRIM], '$1$2$3')),
                  n('comparator trim', e, i[o.COMPARATORTRIM]),
                  (e = (e = (e = e.replace(i[o.TILDETRIM], '$1~')).replace(
                    i[o.CARETTRIM],
                    '$1^',
                  ))
                    .split(/\s+/)
                    .join(' '));
                var a = t ? i[o.COMPARATORLOOSE] : i[o.COMPARATOR],
                  s = e
                    .split(' ')
                    .map(function(e) {
                      return (function(e, t) {
                        return (
                          n('comp', e, t),
                          (e = (function(e, t) {
                            return e
                              .trim()
                              .split(/\s+/)
                              .map(function(e) {
                                return (function(e, t) {
                                  n('caret', e, t);
                                  var r = t.loose
                                    ? i[o.CARETLOOSE]
                                    : i[o.CARET];
                                  return e.replace(r, function(t, r, i, a, o) {
                                    var s;
                                    return (
                                      n('caret', e, t, r, i, a, o),
                                      F(r)
                                        ? (s = '')
                                        : F(i)
                                        ? (s =
                                            '>=' +
                                            r +
                                            '.0.0 <' +
                                            (+r + 1) +
                                            '.0.0')
                                        : F(a)
                                        ? (s =
                                            '0' === r
                                              ? '>=' +
                                                r +
                                                '.' +
                                                i +
                                                '.0 <' +
                                                r +
                                                '.' +
                                                (+i + 1) +
                                                '.0'
                                              : '>=' +
                                                r +
                                                '.' +
                                                i +
                                                '.0 <' +
                                                (+r + 1) +
                                                '.0.0')
                                        : o
                                        ? (n('replaceCaret pr', o),
                                          (s =
                                            '0' === r
                                              ? '0' === i
                                                ? '>=' +
                                                  r +
                                                  '.' +
                                                  i +
                                                  '.' +
                                                  a +
                                                  '-' +
                                                  o +
                                                  ' <' +
                                                  r +
                                                  '.' +
                                                  i +
                                                  '.' +
                                                  (+a + 1)
                                                : '>=' +
                                                  r +
                                                  '.' +
                                                  i +
                                                  '.' +
                                                  a +
                                                  '-' +
                                                  o +
                                                  ' <' +
                                                  r +
                                                  '.' +
                                                  (+i + 1) +
                                                  '.0'
                                              : '>=' +
                                                r +
                                                '.' +
                                                i +
                                                '.' +
                                                a +
                                                '-' +
                                                o +
                                                ' <' +
                                                (+r + 1) +
                                                '.0.0'))
                                        : (n('no pr'),
                                          (s =
                                            '0' === r
                                              ? '0' === i
                                                ? '>=' +
                                                  r +
                                                  '.' +
                                                  i +
                                                  '.' +
                                                  a +
                                                  ' <' +
                                                  r +
                                                  '.' +
                                                  i +
                                                  '.' +
                                                  (+a + 1)
                                                : '>=' +
                                                  r +
                                                  '.' +
                                                  i +
                                                  '.' +
                                                  a +
                                                  ' <' +
                                                  r +
                                                  '.' +
                                                  (+i + 1) +
                                                  '.0'
                                              : '>=' +
                                                r +
                                                '.' +
                                                i +
                                                '.' +
                                                a +
                                                ' <' +
                                                (+r + 1) +
                                                '.0.0')),
                                      n('caret return', s),
                                      s
                                    );
                                  });
                                })(e, t);
                              })
                              .join(' ');
                          })(e, t)),
                          n('caret', e),
                          (e = (function(e, t) {
                            return e
                              .trim()
                              .split(/\s+/)
                              .map(function(e) {
                                return (function(e, t) {
                                  var r = t.loose
                                    ? i[o.TILDELOOSE]
                                    : i[o.TILDE];
                                  return e.replace(r, function(t, r, i, a, o) {
                                    var s;
                                    return (
                                      n('tilde', e, t, r, i, a, o),
                                      F(r)
                                        ? (s = '')
                                        : F(i)
                                        ? (s =
                                            '>=' +
                                            r +
                                            '.0.0 <' +
                                            (+r + 1) +
                                            '.0.0')
                                        : F(a)
                                        ? (s =
                                            '>=' +
                                            r +
                                            '.' +
                                            i +
                                            '.0 <' +
                                            r +
                                            '.' +
                                            (+i + 1) +
                                            '.0')
                                        : o
                                        ? (n('replaceTilde pr', o),
                                          (s =
                                            '>=' +
                                            r +
                                            '.' +
                                            i +
                                            '.' +
                                            a +
                                            '-' +
                                            o +
                                            ' <' +
                                            r +
                                            '.' +
                                            (+i + 1) +
                                            '.0'))
                                        : (s =
                                            '>=' +
                                            r +
                                            '.' +
                                            i +
                                            '.' +
                                            a +
                                            ' <' +
                                            r +
                                            '.' +
                                            (+i + 1) +
                                            '.0'),
                                      n('tilde return', s),
                                      s
                                    );
                                  });
                                })(e, t);
                              })
                              .join(' ');
                          })(e, t)),
                          n('tildes', e),
                          (e = (function(e, t) {
                            return (
                              n('replaceXRanges', e, t),
                              e
                                .split(/\s+/)
                                .map(function(e) {
                                  return (function(e, t) {
                                    e = e.trim();
                                    var r = t.loose
                                      ? i[o.XRANGELOOSE]
                                      : i[o.XRANGE];
                                    return e.replace(r, function(
                                      r,
                                      i,
                                      a,
                                      o,
                                      s,
                                      u,
                                    ) {
                                      n('xRange', e, r, i, a, o, s, u);
                                      var c = F(a),
                                        l = c || F(o),
                                        p = l || F(s),
                                        f = p;
                                      return (
                                        '=' === i && f && (i = ''),
                                        (u = t.includePrerelease ? '-0' : ''),
                                        c
                                          ? (r =
                                              '>' === i || '<' === i
                                                ? '<0.0.0-0'
                                                : '*')
                                          : i && f
                                          ? (l && (o = 0),
                                            (s = 0),
                                            '>' === i
                                              ? ((i = '>='),
                                                l
                                                  ? ((a = +a + 1),
                                                    (o = 0),
                                                    (s = 0))
                                                  : ((o = +o + 1), (s = 0)))
                                              : '<=' === i &&
                                                ((i = '<'),
                                                l
                                                  ? (a = +a + 1)
                                                  : (o = +o + 1)),
                                            (r = i + a + '.' + o + '.' + s + u))
                                          : l
                                          ? (r =
                                              '>=' +
                                              a +
                                              '.0.0' +
                                              u +
                                              ' <' +
                                              (+a + 1) +
                                              '.0.0' +
                                              u)
                                          : p &&
                                            (r =
                                              '>=' +
                                              a +
                                              '.' +
                                              o +
                                              '.0' +
                                              u +
                                              ' <' +
                                              a +
                                              '.' +
                                              (+o + 1) +
                                              '.0' +
                                              u),
                                        n('xRange return', r),
                                        r
                                      );
                                    });
                                  })(e, t);
                                })
                                .join(' ')
                            );
                          })(e, t)),
                          n('xrange', e),
                          (e = (function(e, t) {
                            return (
                              n('replaceStars', e, t),
                              e.trim().replace(i[o.STAR], '')
                            );
                          })(e, t)),
                          n('stars', e),
                          e
                        );
                      })(e, this.options);
                    }, this)
                    .join(' ')
                    .split(/\s+/);
                return (
                  this.options.loose &&
                    (s = s.filter(function(e) {
                      return !!e.match(a);
                    })),
                  (s = s.map(function(e) {
                    return new x(e, this.options);
                  }, this))
                );
              }),
              (S.prototype.intersects = function(e, t) {
                if (!(e instanceof S))
                  throw new TypeError('a Range is required');
                return this.set.some(function(n) {
                  return (
                    w(n, t) &&
                    e.set.some(function(e) {
                      return (
                        w(e, t) &&
                        n.every(function(n) {
                          return e.every(function(e) {
                            return n.intersects(e, t);
                          });
                        })
                      );
                    })
                  );
                });
              }),
              (t.toComparators = function(e, t) {
                return new S(e, t).set.map(function(e) {
                  return e
                    .map(function(e) {
                      return e.value;
                    })
                    .join(' ')
                    .trim()
                    .split(' ');
                });
              }),
              (S.prototype.test = function(e) {
                if (!e) return !1;
                if ('string' == typeof e)
                  try {
                    e = new f(e, this.options);
                  } catch (e) {
                    return !1;
                  }
                for (var t = 0; t < this.set.length; t++)
                  if (T(this.set[t], e, this.options)) return !0;
                return !1;
              }),
              (t.satisfies = _),
              (t.maxSatisfying = function(e, t, n) {
                var r = null,
                  i = null;
                try {
                  var a = new S(t, n);
                } catch (e) {
                  return null;
                }
                return (
                  e.forEach(function(e) {
                    a.test(e) &&
                      ((r && -1 !== i.compare(e)) || (i = new f((r = e), n)));
                  }),
                  r
                );
              }),
              (t.minSatisfying = function(e, t, n) {
                var r = null,
                  i = null;
                try {
                  var a = new S(t, n);
                } catch (e) {
                  return null;
                }
                return (
                  e.forEach(function(e) {
                    a.test(e) &&
                      ((r && 1 !== i.compare(e)) || (i = new f((r = e), n)));
                  }),
                  r
                );
              }),
              (t.minVersion = function(e, t) {
                e = new S(e, t);
                var n = new f('0.0.0');
                if (e.test(n)) return n;
                if (((n = new f('0.0.0-0')), e.test(n))) return n;
                n = null;
                for (var r = 0; r < e.set.length; ++r)
                  e.set[r].forEach(function(e) {
                    var t = new f(e.semver.version);
                    switch (e.operator) {
                      case '>':
                        0 === t.prerelease.length
                          ? t.patch++
                          : t.prerelease.push(0),
                          (t.raw = t.format());
                      case '':
                      case '>=':
                        (n && !g(n, t)) || (n = t);
                        break;
                      case '<':
                      case '<=':
                        break;
                      default:
                        throw new Error('Unexpected operation: ' + e.operator);
                    }
                  });
                return n && e.test(n) ? n : null;
              }),
              (t.validRange = function(e, t) {
                try {
                  return new S(e, t).range || '*';
                } catch (e) {
                  return null;
                }
              }),
              (t.ltr = function(e, t, n) {
                return O(e, t, '<', n);
              }),
              (t.gtr = function(e, t, n) {
                return O(e, t, '>', n);
              }),
              (t.outside = O),
              (t.prerelease = function(e, t) {
                var n = p(e, t);
                return n && n.prerelease.length ? n.prerelease : null;
              }),
              (t.intersects = function(e, t, n) {
                return (e = new S(e, n)), (t = new S(t, n)), e.intersects(t);
              }),
              (t.coerce = function(e, t) {
                if (e instanceof f) return e;
                if (
                  ('number' == typeof e && (e = String(e)),
                  'string' != typeof e)
                )
                  return null;
                var n = null;
                if ((t = t || {}).rtl) {
                  for (
                    var r;
                    (r = i[o.COERCERTL].exec(e)) &&
                    (!n || n.index + n[0].length !== e.length);

                  )
                    (n && r.index + r[0].length === n.index + n[0].length) ||
                      (n = r),
                      (i[o.COERCERTL].lastIndex =
                        r.index + r[1].length + r[2].length);
                  i[o.COERCERTL].lastIndex = -1;
                } else n = e.match(i[o.COERCE]);
                return null === n
                  ? null
                  : p(n[2] + '.' + (n[3] || '0') + '.' + (n[4] || '0'), t);
              });
          }),
          Ut =
            (jt.SEMVER_SPEC_VERSION,
            jt.re,
            jt.src,
            jt.tokens,
            jt.parse,
            jt.valid,
            jt.clean,
            jt.SemVer,
            jt.inc,
            jt.diff,
            jt.compareIdentifiers,
            jt.rcompareIdentifiers,
            jt.major,
            jt.minor,
            jt.patch,
            jt.compare,
            jt.compareLoose,
            jt.compareBuild,
            jt.rcompare,
            jt.sort,
            jt.rsort,
            jt.gt,
            jt.lt,
            jt.eq,
            jt.neq,
            jt.gte,
            jt.lte,
            jt.cmp,
            jt.Comparator,
            jt.Range,
            jt.toComparators,
            jt.satisfies,
            jt.maxSatisfying,
            jt.minSatisfying,
            jt.minVersion,
            jt.validRange,
            jt.ltr,
            jt.gtr,
            jt.outside,
            jt.prerelease,
            jt.intersects,
            jt.coerce,
            lt(function(e) {
              e.exports = function(e) {
                var t = void 0;
                t = 'string' == typeof e ? [e] : e.raw;
                for (var n = '', r = 0; r < t.length; r++)
                  (n += t[r].replace(/\\\n[ \t]*/g, '').replace(/\\`/g, '`')),
                    r < (arguments.length <= 1 ? 0 : arguments.length - 1) &&
                      (n +=
                        arguments.length <= r + 1 ? void 0 : arguments[r + 1]);
                var i = n.split('\n'),
                  a = null;
                return (
                  i.forEach(function(e) {
                    var t = e.match(/^(\s+)\S+/);
                    if (t) {
                      var n = t[1].length;
                      a = a ? Math.min(a, n) : n;
                    }
                  }),
                  null !== a &&
                    (n = i
                      .map(function(e) {
                        return ' ' === e[0] ? e.slice(a) : e;
                      })
                      .join('\n')),
                  (n = n.trim()).replace(/\\n/g, '\n')
                );
              };
            }));
        function Vt() {
          var e = b([
            "\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    ",
          ]);
          return (
            (Vt = function() {
              return e;
            }),
            e
          );
        }
        function Wt() {
          var e = b([
            '\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    ',
          ]);
          return (
            (Wt = function() {
              return e;
            }),
            e
          );
        }
        function $t() {
          var e = b([
            '\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    ',
          ]);
          return (
            ($t = function() {
              return e;
            }),
            e
          );
        }
        function qt() {
          var e = b([
            '\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    ',
          ]);
          return (
            (qt = function() {
              return e;
            }),
            e
          );
        }
        function Yt() {
          var e = b([
            "\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        ",
          ]);
          return (
            (Yt = function() {
              return e;
            }),
            e
          );
        }
        function Jt() {
          var e = b([
            '\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    ',
          ]);
          return (
            (Jt = function() {
              return e;
            }),
            e
          );
        }
        var Kt = {
            CATEGORY_CONFIG: 'Config',
            CATEGORY_EDITOR: 'Editor',
            CATEGORY_FORMAT: 'Format',
            CATEGORY_OTHER: 'Other',
            CATEGORY_OUTPUT: 'Output',
            CATEGORY_GLOBAL: 'Global',
            CATEGORY_SPECIAL: 'Special',
            options: {
              cursorOffset: {
                since: '1.4.0',
                category: 'Special',
                type: 'int',
                default: -1,
                range: { start: -1, end: 1 / 0, step: 1 },
                description: Ut(Jt()),
                cliCategory: 'Editor',
              },
              endOfLine: {
                since: '1.15.0',
                category: 'Global',
                type: 'choice',
                default: 'auto',
                description: 'Which end of line characters to apply.',
                choices: [
                  { value: 'auto', description: Ut(Yt()) },
                  {
                    value: 'lf',
                    description:
                      'Line Feed only (\\n), common on Linux and macOS as well as inside git repos',
                  },
                  {
                    value: 'crlf',
                    description:
                      'Carriage Return + Line Feed characters (\\r\\n), common on Windows',
                  },
                  {
                    value: 'cr',
                    description:
                      'Carriage Return character only (\\r), used very rarely',
                  },
                ],
              },
              filepath: {
                since: '1.4.0',
                category: 'Special',
                type: 'path',
                description:
                  'Specify the input filepath. This will be used to do parser inference.',
                cliName: 'stdin-filepath',
                cliCategory: 'Other',
                cliDescription:
                  'Path to the file to pretend that stdin comes from.',
              },
              insertPragma: {
                since: '1.8.0',
                category: 'Special',
                type: 'boolean',
                default: !1,
                description:
                  "Insert @format pragma into file's first docblock comment.",
                cliCategory: 'Other',
              },
              parser: {
                since: '0.0.10',
                category: 'Global',
                type: 'choice',
                default: [
                  { since: '0.0.10', value: 'babylon' },
                  { since: '1.13.0', value: void 0 },
                ],
                description: 'Which parser to use.',
                exception: function(e) {
                  return 'string' == typeof e || 'function' == typeof e;
                },
                choices: [
                  { value: 'flow', description: 'Flow' },
                  {
                    value: 'babylon',
                    description: 'JavaScript',
                    deprecated: '1.16.0',
                    redirect: 'babel',
                  },
                  {
                    value: 'babel',
                    since: '1.16.0',
                    description: 'JavaScript',
                  },
                  { value: 'babel-flow', since: '1.16.0', description: 'Flow' },
                  {
                    value: 'typescript',
                    since: '1.4.0',
                    description: 'TypeScript',
                  },
                  { value: 'css', since: '1.7.1', description: 'CSS' },
                  {
                    value: 'postcss',
                    since: '1.4.0',
                    description: 'CSS/Less/SCSS',
                    deprecated: '1.7.1',
                    redirect: 'css',
                  },
                  { value: 'less', since: '1.7.1', description: 'Less' },
                  { value: 'scss', since: '1.7.1', description: 'SCSS' },
                  { value: 'json', since: '1.5.0', description: 'JSON' },
                  { value: 'json5', since: '1.13.0', description: 'JSON5' },
                  {
                    value: 'json-stringify',
                    since: '1.13.0',
                    description: 'JSON.stringify',
                  },
                  { value: 'graphql', since: '1.5.0', description: 'GraphQL' },
                  {
                    value: 'markdown',
                    since: '1.8.0',
                    description: 'Markdown',
                  },
                  { value: 'mdx', since: '1.15.0', description: 'MDX' },
                  { value: 'vue', since: '1.10.0', description: 'Vue' },
                  { value: 'yaml', since: '1.14.0', description: 'YAML' },
                  { value: 'glimmer', since: null, description: 'Handlebars' },
                  { value: 'html', since: '1.15.0', description: 'HTML' },
                  { value: 'angular', since: '1.15.0', description: 'Angular' },
                  {
                    value: 'lwc',
                    since: '1.17.0',
                    description: 'Lightning Web Components',
                  },
                ],
              },
              plugins: {
                since: '1.10.0',
                type: 'path',
                array: !0,
                default: [{ value: [] }],
                category: 'Global',
                description:
                  'Add a plugin. Multiple plugins can be passed as separate `--plugin`s.',
                exception: function(e) {
                  return 'string' == typeof e || 'object' === c(e);
                },
                cliName: 'plugin',
                cliCategory: 'Config',
              },
              pluginSearchDirs: {
                since: '1.13.0',
                type: 'path',
                array: !0,
                default: [{ value: [] }],
                category: 'Global',
                description: Ut(qt()),
                exception: function(e) {
                  return 'string' == typeof e || 'object' === c(e);
                },
                cliName: 'plugin-search-dir',
                cliCategory: 'Config',
              },
              printWidth: {
                since: '0.0.0',
                category: 'Global',
                type: 'int',
                default: 80,
                description: 'The line length where Prettier will try wrap.',
                range: { start: 0, end: 1 / 0, step: 1 },
              },
              rangeEnd: {
                since: '1.4.0',
                category: 'Special',
                type: 'int',
                default: 1 / 0,
                range: { start: 0, end: 1 / 0, step: 1 },
                description: Ut($t()),
                cliCategory: 'Editor',
              },
              rangeStart: {
                since: '1.4.0',
                category: 'Special',
                type: 'int',
                default: 0,
                range: { start: 0, end: 1 / 0, step: 1 },
                description: Ut(Wt()),
                cliCategory: 'Editor',
              },
              requirePragma: {
                since: '1.7.0',
                category: 'Special',
                type: 'boolean',
                default: !1,
                description: Ut(Vt()),
                cliCategory: 'Other',
              },
              tabWidth: {
                type: 'int',
                category: 'Global',
                default: 2,
                description: 'Number of spaces per indentation level.',
                range: { start: 0, end: 1 / 0, step: 1 },
              },
              useFlowParser: {
                since: '0.0.0',
                category: 'Global',
                type: 'boolean',
                default: [
                  { since: '0.0.0', value: !1 },
                  { since: '1.15.0', value: void 0 },
                ],
                deprecated: '0.0.10',
                description: 'Use flow parser.',
                redirect: { option: 'parser', value: 'flow' },
                cliName: 'flow-parser',
              },
              useTabs: {
                since: '1.0.0',
                category: 'Global',
                type: 'boolean',
                default: !1,
                description: 'Indent with tabs instead of spaces.',
              },
            },
          },
          zt = pt(u),
          Ht = zt.version,
          Xt = Kt.options,
          Gt = {
            getSupportInfo: function(e, t) {
              (t = Object.assign(
                {
                  plugins: [],
                  showUnreleased: !1,
                  showDeprecated: !1,
                  showInternal: !1,
                },
                t,
              )),
                e || (e = Ht.split('-', 1)[0]);
              var n = t.plugins,
                r = (function(e, t) {
                  return Object.keys(e).reduce(function(n, r) {
                    return n.concat(Object.assign(h({}, t, r), e[r]));
                  }, []);
                })(
                  Object.assign(
                    n.reduce(function(e, t) {
                      return Object.assign(e, t.options);
                    }, {}),
                    Xt,
                  ),
                  'name',
                )
                  .sort(function(e, t) {
                    return e.name === t.name ? 0 : e.name < t.name ? -1 : 1;
                  })
                  .filter(o)
                  .filter(s)
                  .map(u)
                  .map(function(e) {
                    if (t.showInternal) return e;
                    var n = Object.assign({}, e);
                    return (
                      delete n.cliName,
                      delete n.cliCategory,
                      delete n.cliDescription,
                      n
                    );
                  })
                  .map(function(e) {
                    var t = Object.assign({}, e);
                    return (
                      Array.isArray(t.default) &&
                        (t.default =
                          1 === t.default.length
                            ? t.default[0].value
                            : t.default.filter(o).sort(function(e, t) {
                                return jt.compare(t.since, e.since);
                              })[0].value),
                      Array.isArray(t.choices) &&
                        (t.choices = t.choices
                          .filter(o)
                          .filter(s)
                          .map(u)),
                      t
                    );
                  })
                  .map(function(e) {
                    var t = n
                      .filter(function(t) {
                        return (
                          t.defaultOptions &&
                          void 0 !== t.defaultOptions[e.name]
                        );
                      })
                      .reduce(function(t, n) {
                        return (t[n.name] = n.defaultOptions[e.name]), t;
                      }, {});
                    return Object.assign(e, { pluginDefaults: t });
                  }),
                i = jt.lt(e, '1.7.1'),
                a = jt.lt(e, '1.16.0');
              return {
                languages: n
                  .reduce(function(e, t) {
                    return e.concat(t.languages || []);
                  }, [])
                  .filter(o)
                  .map(function(e) {
                    return 'Markdown' === e.name
                      ? Object.assign({}, e, { parsers: ['markdown'] })
                      : 'TypeScript' === e.name
                      ? Object.assign({}, e, { parsers: ['typescript'] })
                      : a && -1 !== e.parsers.indexOf('babel')
                      ? Object.assign({}, e, {
                          parsers: e.parsers.map(function(e) {
                            return 'babel' === e ? 'babylon' : e;
                          }),
                        })
                      : !i || ('CSS' !== e.name && 'CSS' !== e.group)
                      ? e
                      : Object.assign({}, e, { parsers: ['postcss'] });
                  }),
                options: r,
              };
              function o(n) {
                return (
                  t.showUnreleased ||
                  !('since' in n) ||
                  (n.since && jt.gte(e, n.since))
                );
              }
              function s(n) {
                return (
                  t.showDeprecated ||
                  !('deprecated' in n) ||
                  (n.deprecated && jt.lt(e, n.deprecated))
                );
              }
              function u(e) {
                if (!e.deprecated || t.showDeprecated) return e;
                var n = Object.assign({}, e);
                return delete n.deprecated, delete n.redirect, n;
              }
            },
          },
          Qt = function(e, t) {
            return (Qt =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function(e, t) {
                  e.__proto__ = t;
                }) ||
              function(e, t) {
                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
              })(e, t);
          },
          Zt = function() {
            return (Zt =
              Object.assign ||
              function(e) {
                for (var t, n = 1, r = arguments.length; n < r; n++)
                  for (var i in (t = arguments[n]))
                    Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e;
              }).apply(this, arguments);
          };
        function en(e) {
          var t = 'function' == typeof Symbol && e[Symbol.iterator],
            n = 0;
          return t
            ? t.call(e)
            : {
                next: function() {
                  return (
                    e && n >= e.length && (e = void 0),
                    { value: e && e[n++], done: !e }
                  );
                },
              };
        }
        function tn(e, t) {
          var n = 'function' == typeof Symbol && e[Symbol.iterator];
          if (!n) return e;
          var r,
            i,
            a = n.call(e),
            o = [];
          try {
            for (; (void 0 === t || t-- > 0) && !(r = a.next()).done; )
              o.push(r.value);
          } catch (e) {
            i = { error: e };
          } finally {
            try {
              r && !r.done && (n = a.return) && n.call(a);
            } finally {
              if (i) throw i.error;
            }
          }
          return o;
        }
        function nn(e) {
          return this instanceof nn ? ((this.v = e), this) : new nn(e);
        }
        var rn = Object.freeze({
            __proto__: null,
            __extends: function(e, t) {
              function n() {
                this.constructor = e;
              }
              Qt(e, t),
                (e.prototype =
                  null === t
                    ? Object.create(t)
                    : ((n.prototype = t.prototype), new n()));
            },
            get __assign() {
              return Zt;
            },
            __rest: function(e, t) {
              var n = {};
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) &&
                  t.indexOf(r) < 0 &&
                  (n[r] = e[r]);
              if (
                null != e &&
                'function' == typeof Object.getOwnPropertySymbols
              ) {
                var i = 0;
                for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                  t.indexOf(r[i]) < 0 &&
                    Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                    (n[r[i]] = e[r[i]]);
              }
              return n;
            },
            __decorate: function(e, t, n, r) {
              var i,
                a = arguments.length,
                o =
                  a < 3
                    ? t
                    : null === r
                    ? (r = Object.getOwnPropertyDescriptor(t, n))
                    : r;
              if (
                'object' ===
                  ('undefined' == typeof Reflect ? 'undefined' : c(Reflect)) &&
                'function' == typeof Reflect.decorate
              )
                o = Reflect.decorate(e, t, n, r);
              else
                for (var s = e.length - 1; s >= 0; s--)
                  (i = e[s]) &&
                    (o = (a < 3 ? i(o) : a > 3 ? i(t, n, o) : i(t, n)) || o);
              return a > 3 && o && Object.defineProperty(t, n, o), o;
            },
            __param: function(e, t) {
              return function(n, r) {
                t(n, r, e);
              };
            },
            __metadata: function(e, t) {
              if (
                'object' ===
                  ('undefined' == typeof Reflect ? 'undefined' : c(Reflect)) &&
                'function' == typeof Reflect.metadata
              )
                return Reflect.metadata(e, t);
            },
            __awaiter: function(e, t, n, r) {
              return new (n || (n = Promise))(function(i, a) {
                function o(e) {
                  try {
                    u(r.next(e));
                  } catch (e) {
                    a(e);
                  }
                }
                function s(e) {
                  try {
                    u(r.throw(e));
                  } catch (e) {
                    a(e);
                  }
                }
                function u(e) {
                  e.done
                    ? i(e.value)
                    : new n(function(t) {
                        t(e.value);
                      }).then(o, s);
                }
                u((r = r.apply(e, t || [])).next());
              });
            },
            __generator: function(e, t) {
              var n,
                r,
                i,
                a,
                o = {
                  label: 0,
                  sent: function() {
                    if (1 & i[0]) throw i[1];
                    return i[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (a = { next: s(0), throw: s(1), return: s(2) }),
                'function' == typeof Symbol &&
                  (a[Symbol.iterator] = function() {
                    return this;
                  }),
                a
              );
              function s(a) {
                return function(s) {
                  return (function(a) {
                    if (n)
                      throw new TypeError('Generator is already executing.');
                    for (; o; )
                      try {
                        if (
                          ((n = 1),
                          r &&
                            (i =
                              2 & a[0]
                                ? r.return
                                : a[0]
                                ? r.throw || ((i = r.return) && i.call(r), 0)
                                : r.next) &&
                            !(i = i.call(r, a[1])).done)
                        )
                          return i;
                        switch (
                          ((r = 0), i && (a = [2 & a[0], i.value]), a[0])
                        ) {
                          case 0:
                          case 1:
                            i = a;
                            break;
                          case 4:
                            return o.label++, { value: a[1], done: !1 };
                          case 5:
                            o.label++, (r = a[1]), (a = [0]);
                            continue;
                          case 7:
                            (a = o.ops.pop()), o.trys.pop();
                            continue;
                          default:
                            if (
                              !(
                                (i =
                                  (i = o.trys).length > 0 && i[i.length - 1]) ||
                                (6 !== a[0] && 2 !== a[0])
                              )
                            ) {
                              o = 0;
                              continue;
                            }
                            if (
                              3 === a[0] &&
                              (!i || (a[1] > i[0] && a[1] < i[3]))
                            ) {
                              o.label = a[1];
                              break;
                            }
                            if (6 === a[0] && o.label < i[1]) {
                              (o.label = i[1]), (i = a);
                              break;
                            }
                            if (i && o.label < i[2]) {
                              (o.label = i[2]), o.ops.push(a);
                              break;
                            }
                            i[2] && o.ops.pop(), o.trys.pop();
                            continue;
                        }
                        a = t.call(e, o);
                      } catch (e) {
                        (a = [6, e]), (r = 0);
                      } finally {
                        n = i = 0;
                      }
                    if (5 & a[0]) throw a[1];
                    return { value: a[0] ? a[1] : void 0, done: !0 };
                  })([a, s]);
                };
              }
            },
            __exportStar: function(e, t) {
              for (var n in e) t.hasOwnProperty(n) || (t[n] = e[n]);
            },
            __values: en,
            __read: tn,
            __spread: function() {
              for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(tn(arguments[t]));
              return e;
            },
            __spreadArrays: function() {
              for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                e += arguments[t].length;
              var r = Array(e),
                i = 0;
              for (t = 0; t < n; t++)
                for (var a = arguments[t], o = 0, s = a.length; o < s; o++, i++)
                  r[i] = a[o];
              return r;
            },
            __await: nn,
            __asyncGenerator: function(e, t, n) {
              if (!Symbol.asyncIterator)
                throw new TypeError('Symbol.asyncIterator is not defined.');
              var r,
                i = n.apply(e, t || []),
                a = [];
              return (
                (r = {}),
                o('next'),
                o('throw'),
                o('return'),
                (r[Symbol.asyncIterator] = function() {
                  return this;
                }),
                r
              );
              function o(e) {
                i[e] &&
                  (r[e] = function(t) {
                    return new Promise(function(n, r) {
                      a.push([e, t, n, r]) > 1 || s(e, t);
                    });
                  });
              }
              function s(e, t) {
                try {
                  (n = i[e](t)).value instanceof nn
                    ? Promise.resolve(n.value.v).then(u, c)
                    : l(a[0][2], n);
                } catch (e) {
                  l(a[0][3], e);
                }
                var n;
              }
              function u(e) {
                s('next', e);
              }
              function c(e) {
                s('throw', e);
              }
              function l(e, t) {
                e(t), a.shift(), a.length && s(a[0][0], a[0][1]);
              }
            },
            __asyncDelegator: function(e) {
              var t, n;
              return (
                (t = {}),
                r('next'),
                r('throw', function(e) {
                  throw e;
                }),
                r('return'),
                (t[Symbol.iterator] = function() {
                  return this;
                }),
                t
              );
              function r(r, i) {
                t[r] = e[r]
                  ? function(t) {
                      return (n = !n)
                        ? { value: nn(e[r](t)), done: 'return' === r }
                        : i
                        ? i(t)
                        : t;
                    }
                  : i;
              }
            },
            __asyncValues: function(e) {
              if (!Symbol.asyncIterator)
                throw new TypeError('Symbol.asyncIterator is not defined.');
              var t,
                n = e[Symbol.asyncIterator];
              return n
                ? n.call(e)
                : ((e = en(e)),
                  (t = {}),
                  r('next'),
                  r('throw'),
                  r('return'),
                  (t[Symbol.asyncIterator] = function() {
                    return this;
                  }),
                  t);
              function r(n) {
                t[n] =
                  e[n] &&
                  function(t) {
                    return new Promise(function(r, i) {
                      !(function(e, t, n, r) {
                        Promise.resolve(r).then(function(t) {
                          e({ value: t, done: n });
                        }, t);
                      })(r, i, (t = e[n](t)).done, t.value);
                    });
                  };
              }
            },
            __makeTemplateObject: function(e, t) {
              return (
                Object.defineProperty
                  ? Object.defineProperty(e, 'raw', { value: t })
                  : (e.raw = t),
                e
              );
            },
            __importStar: function(e) {
              if (e && e.__esModule) return e;
              var t = {};
              if (null != e)
                for (var n in e)
                  Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
              return (t.default = e), t;
            },
            __importDefault: function(e) {
              return e && e.__esModule ? e : { default: e };
            },
          }),
          an = lt(function(e, t) {
            Object.defineProperty(t, '__esModule', { value: !0 }),
              (t.apiDescriptor = {
                key: function(e) {
                  return /^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e)
                    ? e
                    : JSON.stringify(e);
                },
                value: function(e) {
                  if (null === e || 'object' !== c(e)) return JSON.stringify(e);
                  if (Array.isArray(e))
                    return '['.concat(
                      e
                        .map(function(e) {
                          return t.apiDescriptor.value(e);
                        })
                        .join(', '),
                      ']',
                    );
                  var n = Object.keys(e);
                  return 0 === n.length
                    ? '{}'
                    : '{ '.concat(
                        n
                          .map(function(n) {
                            return ''
                              .concat(t.apiDescriptor.key(n), ': ')
                              .concat(t.apiDescriptor.value(e[n]));
                          })
                          .join(', '),
                        ' }',
                      );
                },
                pair: function(e) {
                  var n = e.key,
                    r = e.value;
                  return t.apiDescriptor.value(h({}, n, r));
                },
              });
          });
        ct(an), an.apiDescriptor;
        var on = pt(rn),
          sn = lt(function(e, t) {
            Object.defineProperty(t, '__esModule', { value: !0 }),
              on.__exportStar(an, t);
          });
        ct(sn);
        var un = /[|\\{}()[\]^$+*?.]/g,
          cn = function(e) {
            if ('string' != typeof e) throw new TypeError('Expected a string');
            return e.replace(un, '\\$&');
          },
          ln = {
            aliceblue: [240, 248, 255],
            antiquewhite: [250, 235, 215],
            aqua: [0, 255, 255],
            aquamarine: [127, 255, 212],
            azure: [240, 255, 255],
            beige: [245, 245, 220],
            bisque: [255, 228, 196],
            black: [0, 0, 0],
            blanchedalmond: [255, 235, 205],
            blue: [0, 0, 255],
            blueviolet: [138, 43, 226],
            brown: [165, 42, 42],
            burlywood: [222, 184, 135],
            cadetblue: [95, 158, 160],
            chartreuse: [127, 255, 0],
            chocolate: [210, 105, 30],
            coral: [255, 127, 80],
            cornflowerblue: [100, 149, 237],
            cornsilk: [255, 248, 220],
            crimson: [220, 20, 60],
            cyan: [0, 255, 255],
            darkblue: [0, 0, 139],
            darkcyan: [0, 139, 139],
            darkgoldenrod: [184, 134, 11],
            darkgray: [169, 169, 169],
            darkgreen: [0, 100, 0],
            darkgrey: [169, 169, 169],
            darkkhaki: [189, 183, 107],
            darkmagenta: [139, 0, 139],
            darkolivegreen: [85, 107, 47],
            darkorange: [255, 140, 0],
            darkorchid: [153, 50, 204],
            darkred: [139, 0, 0],
            darksalmon: [233, 150, 122],
            darkseagreen: [143, 188, 143],
            darkslateblue: [72, 61, 139],
            darkslategray: [47, 79, 79],
            darkslategrey: [47, 79, 79],
            darkturquoise: [0, 206, 209],
            darkviolet: [148, 0, 211],
            deeppink: [255, 20, 147],
            deepskyblue: [0, 191, 255],
            dimgray: [105, 105, 105],
            dimgrey: [105, 105, 105],
            dodgerblue: [30, 144, 255],
            firebrick: [178, 34, 34],
            floralwhite: [255, 250, 240],
            forestgreen: [34, 139, 34],
            fuchsia: [255, 0, 255],
            gainsboro: [220, 220, 220],
            ghostwhite: [248, 248, 255],
            gold: [255, 215, 0],
            goldenrod: [218, 165, 32],
            gray: [128, 128, 128],
            green: [0, 128, 0],
            greenyellow: [173, 255, 47],
            grey: [128, 128, 128],
            honeydew: [240, 255, 240],
            hotpink: [255, 105, 180],
            indianred: [205, 92, 92],
            indigo: [75, 0, 130],
            ivory: [255, 255, 240],
            khaki: [240, 230, 140],
            lavender: [230, 230, 250],
            lavenderblush: [255, 240, 245],
            lawngreen: [124, 252, 0],
            lemonchiffon: [255, 250, 205],
            lightblue: [173, 216, 230],
            lightcoral: [240, 128, 128],
            lightcyan: [224, 255, 255],
            lightgoldenrodyellow: [250, 250, 210],
            lightgray: [211, 211, 211],
            lightgreen: [144, 238, 144],
            lightgrey: [211, 211, 211],
            lightpink: [255, 182, 193],
            lightsalmon: [255, 160, 122],
            lightseagreen: [32, 178, 170],
            lightskyblue: [135, 206, 250],
            lightslategray: [119, 136, 153],
            lightslategrey: [119, 136, 153],
            lightsteelblue: [176, 196, 222],
            lightyellow: [255, 255, 224],
            lime: [0, 255, 0],
            limegreen: [50, 205, 50],
            linen: [250, 240, 230],
            magenta: [255, 0, 255],
            maroon: [128, 0, 0],
            mediumaquamarine: [102, 205, 170],
            mediumblue: [0, 0, 205],
            mediumorchid: [186, 85, 211],
            mediumpurple: [147, 112, 219],
            mediumseagreen: [60, 179, 113],
            mediumslateblue: [123, 104, 238],
            mediumspringgreen: [0, 250, 154],
            mediumturquoise: [72, 209, 204],
            mediumvioletred: [199, 21, 133],
            midnightblue: [25, 25, 112],
            mintcream: [245, 255, 250],
            mistyrose: [255, 228, 225],
            moccasin: [255, 228, 181],
            navajowhite: [255, 222, 173],
            navy: [0, 0, 128],
            oldlace: [253, 245, 230],
            olive: [128, 128, 0],
            olivedrab: [107, 142, 35],
            orange: [255, 165, 0],
            orangered: [255, 69, 0],
            orchid: [218, 112, 214],
            palegoldenrod: [238, 232, 170],
            palegreen: [152, 251, 152],
            paleturquoise: [175, 238, 238],
            palevioletred: [219, 112, 147],
            papayawhip: [255, 239, 213],
            peachpuff: [255, 218, 185],
            peru: [205, 133, 63],
            pink: [255, 192, 203],
            plum: [221, 160, 221],
            powderblue: [176, 224, 230],
            purple: [128, 0, 128],
            rebeccapurple: [102, 51, 153],
            red: [255, 0, 0],
            rosybrown: [188, 143, 143],
            royalblue: [65, 105, 225],
            saddlebrown: [139, 69, 19],
            salmon: [250, 128, 114],
            sandybrown: [244, 164, 96],
            seagreen: [46, 139, 87],
            seashell: [255, 245, 238],
            sienna: [160, 82, 45],
            silver: [192, 192, 192],
            skyblue: [135, 206, 235],
            slateblue: [106, 90, 205],
            slategray: [112, 128, 144],
            slategrey: [112, 128, 144],
            snow: [255, 250, 250],
            springgreen: [0, 255, 127],
            steelblue: [70, 130, 180],
            tan: [210, 180, 140],
            teal: [0, 128, 128],
            thistle: [216, 191, 216],
            tomato: [255, 99, 71],
            turquoise: [64, 224, 208],
            violet: [238, 130, 238],
            wheat: [245, 222, 179],
            white: [255, 255, 255],
            whitesmoke: [245, 245, 245],
            yellow: [255, 255, 0],
            yellowgreen: [154, 205, 50],
          },
          pn = lt(function(e) {
            var t = {};
            for (var n in ln) ln.hasOwnProperty(n) && (t[ln[n]] = n);
            var r = (e.exports = {
              rgb: { channels: 3, labels: 'rgb' },
              hsl: { channels: 3, labels: 'hsl' },
              hsv: { channels: 3, labels: 'hsv' },
              hwb: { channels: 3, labels: 'hwb' },
              cmyk: { channels: 4, labels: 'cmyk' },
              xyz: { channels: 3, labels: 'xyz' },
              lab: { channels: 3, labels: 'lab' },
              lch: { channels: 3, labels: 'lch' },
              hex: { channels: 1, labels: ['hex'] },
              keyword: { channels: 1, labels: ['keyword'] },
              ansi16: { channels: 1, labels: ['ansi16'] },
              ansi256: { channels: 1, labels: ['ansi256'] },
              hcg: { channels: 3, labels: ['h', 'c', 'g'] },
              apple: { channels: 3, labels: ['r16', 'g16', 'b16'] },
              gray: { channels: 1, labels: ['gray'] },
            });
            for (var i in r)
              if (r.hasOwnProperty(i)) {
                if (!('channels' in r[i]))
                  throw new Error('missing channels property: ' + i);
                if (!('labels' in r[i]))
                  throw new Error('missing channel labels property: ' + i);
                if (r[i].labels.length !== r[i].channels)
                  throw new Error('channel and label counts mismatch: ' + i);
                var a = r[i].channels,
                  o = r[i].labels;
                delete r[i].channels,
                  delete r[i].labels,
                  Object.defineProperty(r[i], 'channels', { value: a }),
                  Object.defineProperty(r[i], 'labels', { value: o });
              }
            (r.rgb.hsl = function(e) {
              var t,
                n,
                r = e[0] / 255,
                i = e[1] / 255,
                a = e[2] / 255,
                o = Math.min(r, i, a),
                s = Math.max(r, i, a),
                u = s - o;
              return (
                s === o
                  ? (t = 0)
                  : r === s
                  ? (t = (i - a) / u)
                  : i === s
                  ? (t = 2 + (a - r) / u)
                  : a === s && (t = 4 + (r - i) / u),
                (t = Math.min(60 * t, 360)) < 0 && (t += 360),
                (n = (o + s) / 2),
                [
                  t,
                  100 *
                    (s === o ? 0 : n <= 0.5 ? u / (s + o) : u / (2 - s - o)),
                  100 * n,
                ]
              );
            }),
              (r.rgb.hsv = function(e) {
                var t,
                  n,
                  r = e[0],
                  i = e[1],
                  a = e[2],
                  o = Math.min(r, i, a),
                  s = Math.max(r, i, a),
                  u = s - o;
                return (
                  (n = 0 === s ? 0 : ((u / s) * 1e3) / 10),
                  s === o
                    ? (t = 0)
                    : r === s
                    ? (t = (i - a) / u)
                    : i === s
                    ? (t = 2 + (a - r) / u)
                    : a === s && (t = 4 + (r - i) / u),
                  (t = Math.min(60 * t, 360)) < 0 && (t += 360),
                  [t, n, ((s / 255) * 1e3) / 10]
                );
              }),
              (r.rgb.hwb = function(e) {
                var t = e[0],
                  n = e[1],
                  i = e[2];
                return [
                  r.rgb.hsl(e)[0],
                  (1 / 255) * Math.min(t, Math.min(n, i)) * 100,
                  100 * (i = 1 - (1 / 255) * Math.max(t, Math.max(n, i))),
                ];
              }),
              (r.rgb.cmyk = function(e) {
                var t,
                  n = e[0] / 255,
                  r = e[1] / 255,
                  i = e[2] / 255;
                return [
                  100 *
                    ((1 - n - (t = Math.min(1 - n, 1 - r, 1 - i))) / (1 - t) ||
                      0),
                  100 * ((1 - r - t) / (1 - t) || 0),
                  100 * ((1 - i - t) / (1 - t) || 0),
                  100 * t,
                ];
              }),
              (r.rgb.keyword = function(e) {
                var n = t[e];
                if (n) return n;
                var r,
                  i,
                  a,
                  o = 1 / 0;
                for (var s in ln)
                  if (ln.hasOwnProperty(s)) {
                    var u = ln[s],
                      c =
                        ((i = e),
                        (a = u),
                        Math.pow(i[0] - a[0], 2) +
                          Math.pow(i[1] - a[1], 2) +
                          Math.pow(i[2] - a[2], 2));
                    c < o && ((o = c), (r = s));
                  }
                return r;
              }),
              (r.keyword.rgb = function(e) {
                return ln[e];
              }),
              (r.rgb.xyz = function(e) {
                var t = e[0] / 255,
                  n = e[1] / 255,
                  r = e[2] / 255;
                return [
                  100 *
                    (0.4124 *
                      (t =
                        t > 0.04045
                          ? Math.pow((t + 0.055) / 1.055, 2.4)
                          : t / 12.92) +
                      0.3576 *
                        (n =
                          n > 0.04045
                            ? Math.pow((n + 0.055) / 1.055, 2.4)
                            : n / 12.92) +
                      0.1805 *
                        (r =
                          r > 0.04045
                            ? Math.pow((r + 0.055) / 1.055, 2.4)
                            : r / 12.92)),
                  100 * (0.2126 * t + 0.7152 * n + 0.0722 * r),
                  100 * (0.0193 * t + 0.1192 * n + 0.9505 * r),
                ];
              }),
              (r.rgb.lab = function(e) {
                var t = r.rgb.xyz(e),
                  n = t[0],
                  i = t[1],
                  a = t[2];
                return (
                  (i /= 100),
                  (a /= 108.883),
                  (n =
                    (n /= 95.047) > 0.008856
                      ? Math.pow(n, 1 / 3)
                      : 7.787 * n + 16 / 116),
                  [
                    116 *
                      (i =
                        i > 0.008856
                          ? Math.pow(i, 1 / 3)
                          : 7.787 * i + 16 / 116) -
                      16,
                    500 * (n - i),
                    200 *
                      (i -
                        (a =
                          a > 0.008856
                            ? Math.pow(a, 1 / 3)
                            : 7.787 * a + 16 / 116)),
                  ]
                );
              }),
              (r.hsl.rgb = function(e) {
                var t,
                  n,
                  r,
                  i,
                  a,
                  o = e[0] / 360,
                  s = e[1] / 100,
                  u = e[2] / 100;
                if (0 === s) return [(a = 255 * u), a, a];
                (t = 2 * u - (n = u < 0.5 ? u * (1 + s) : u + s - u * s)),
                  (i = [0, 0, 0]);
                for (var c = 0; c < 3; c++)
                  (r = o + (1 / 3) * -(c - 1)) < 0 && r++,
                    r > 1 && r--,
                    (a =
                      6 * r < 1
                        ? t + 6 * (n - t) * r
                        : 2 * r < 1
                        ? n
                        : 3 * r < 2
                        ? t + (n - t) * (2 / 3 - r) * 6
                        : t),
                    (i[c] = 255 * a);
                return i;
              }),
              (r.hsl.hsv = function(e) {
                var t = e[0],
                  n = e[1] / 100,
                  r = e[2] / 100,
                  i = n,
                  a = Math.max(r, 0.01);
                return (
                  (n *= (r *= 2) <= 1 ? r : 2 - r),
                  (i *= a <= 1 ? a : 2 - a),
                  [
                    t,
                    100 * (0 === r ? (2 * i) / (a + i) : (2 * n) / (r + n)),
                    ((r + n) / 2) * 100,
                  ]
                );
              }),
              (r.hsv.rgb = function(e) {
                var t = e[0] / 60,
                  n = e[1] / 100,
                  r = e[2] / 100,
                  i = Math.floor(t) % 6,
                  a = t - Math.floor(t),
                  o = 255 * r * (1 - n),
                  s = 255 * r * (1 - n * a),
                  u = 255 * r * (1 - n * (1 - a));
                switch (((r *= 255), i)) {
                  case 0:
                    return [r, u, o];
                  case 1:
                    return [s, r, o];
                  case 2:
                    return [o, r, u];
                  case 3:
                    return [o, s, r];
                  case 4:
                    return [u, o, r];
                  case 5:
                    return [r, o, s];
                }
              }),
              (r.hsv.hsl = function(e) {
                var t,
                  n,
                  r,
                  i = e[0],
                  a = e[1] / 100,
                  o = e[2] / 100,
                  s = Math.max(o, 0.01);
                return (
                  (r = (2 - a) * o),
                  (n = a * s),
                  [
                    i,
                    100 * (n = (n /= (t = (2 - a) * s) <= 1 ? t : 2 - t) || 0),
                    100 * (r /= 2),
                  ]
                );
              }),
              (r.hwb.rgb = function(e) {
                var t,
                  n,
                  r,
                  i,
                  a,
                  o,
                  s,
                  u = e[0] / 360,
                  c = e[1] / 100,
                  l = e[2] / 100,
                  p = c + l;
                switch (
                  (p > 1 && ((c /= p), (l /= p)),
                  (r = 6 * u - (t = Math.floor(6 * u))),
                  0 != (1 & t) && (r = 1 - r),
                  (i = c + r * ((n = 1 - l) - c)),
                  t)
                ) {
                  default:
                  case 6:
                  case 0:
                    (a = n), (o = i), (s = c);
                    break;
                  case 1:
                    (a = i), (o = n), (s = c);
                    break;
                  case 2:
                    (a = c), (o = n), (s = i);
                    break;
                  case 3:
                    (a = c), (o = i), (s = n);
                    break;
                  case 4:
                    (a = i), (o = c), (s = n);
                    break;
                  case 5:
                    (a = n), (o = c), (s = i);
                }
                return [255 * a, 255 * o, 255 * s];
              }),
              (r.cmyk.rgb = function(e) {
                var t = e[0] / 100,
                  n = e[1] / 100,
                  r = e[2] / 100,
                  i = e[3] / 100;
                return [
                  255 * (1 - Math.min(1, t * (1 - i) + i)),
                  255 * (1 - Math.min(1, n * (1 - i) + i)),
                  255 * (1 - Math.min(1, r * (1 - i) + i)),
                ];
              }),
              (r.xyz.rgb = function(e) {
                var t,
                  n,
                  r,
                  i = e[0] / 100,
                  a = e[1] / 100,
                  o = e[2] / 100;
                return (
                  (n = -0.9689 * i + 1.8758 * a + 0.0415 * o),
                  (r = 0.0557 * i + -0.204 * a + 1.057 * o),
                  (t =
                    (t = 3.2406 * i + -1.5372 * a + -0.4986 * o) > 0.0031308
                      ? 1.055 * Math.pow(t, 1 / 2.4) - 0.055
                      : 12.92 * t),
                  (n =
                    n > 0.0031308
                      ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055
                      : 12.92 * n),
                  (r =
                    r > 0.0031308
                      ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055
                      : 12.92 * r),
                  [
                    255 * (t = Math.min(Math.max(0, t), 1)),
                    255 * (n = Math.min(Math.max(0, n), 1)),
                    255 * (r = Math.min(Math.max(0, r), 1)),
                  ]
                );
              }),
              (r.xyz.lab = function(e) {
                var t = e[0],
                  n = e[1],
                  r = e[2];
                return (
                  (n /= 100),
                  (r /= 108.883),
                  (t =
                    (t /= 95.047) > 0.008856
                      ? Math.pow(t, 1 / 3)
                      : 7.787 * t + 16 / 116),
                  [
                    116 *
                      (n =
                        n > 0.008856
                          ? Math.pow(n, 1 / 3)
                          : 7.787 * n + 16 / 116) -
                      16,
                    500 * (t - n),
                    200 *
                      (n -
                        (r =
                          r > 0.008856
                            ? Math.pow(r, 1 / 3)
                            : 7.787 * r + 16 / 116)),
                  ]
                );
              }),
              (r.lab.xyz = function(e) {
                var t,
                  n,
                  r,
                  i = e[0];
                (t = e[1] / 500 + (n = (i + 16) / 116)), (r = n - e[2] / 200);
                var a = Math.pow(n, 3),
                  o = Math.pow(t, 3),
                  s = Math.pow(r, 3);
                return (
                  (n = a > 0.008856 ? a : (n - 16 / 116) / 7.787),
                  (t = o > 0.008856 ? o : (t - 16 / 116) / 7.787),
                  (r = s > 0.008856 ? s : (r - 16 / 116) / 7.787),
                  [(t *= 95.047), (n *= 100), (r *= 108.883)]
                );
              }),
              (r.lab.lch = function(e) {
                var t,
                  n = e[0],
                  r = e[1],
                  i = e[2];
                return (
                  (t = (360 * Math.atan2(i, r)) / 2 / Math.PI) < 0 &&
                    (t += 360),
                  [n, Math.sqrt(r * r + i * i), t]
                );
              }),
              (r.lch.lab = function(e) {
                var t,
                  n = e[0],
                  r = e[1];
                return (
                  (t = (e[2] / 360) * 2 * Math.PI),
                  [n, r * Math.cos(t), r * Math.sin(t)]
                );
              }),
              (r.rgb.ansi16 = function(e) {
                var t = e[0],
                  n = e[1],
                  i = e[2],
                  a = 1 in arguments ? arguments[1] : r.rgb.hsv(e)[2];
                if (0 === (a = Math.round(a / 50))) return 30;
                var o =
                  30 +
                  ((Math.round(i / 255) << 2) |
                    (Math.round(n / 255) << 1) |
                    Math.round(t / 255));
                return 2 === a && (o += 60), o;
              }),
              (r.hsv.ansi16 = function(e) {
                return r.rgb.ansi16(r.hsv.rgb(e), e[2]);
              }),
              (r.rgb.ansi256 = function(e) {
                var t = e[0],
                  n = e[1],
                  r = e[2];
                return t === n && n === r
                  ? t < 8
                    ? 16
                    : t > 248
                    ? 231
                    : Math.round(((t - 8) / 247) * 24) + 232
                  : 16 +
                      36 * Math.round((t / 255) * 5) +
                      6 * Math.round((n / 255) * 5) +
                      Math.round((r / 255) * 5);
              }),
              (r.ansi16.rgb = function(e) {
                var t = e % 10;
                if (0 === t || 7 === t)
                  return e > 50 && (t += 3.5), [(t = (t / 10.5) * 255), t, t];
                var n = 0.5 * (1 + ~~(e > 50));
                return [
                  (1 & t) * n * 255,
                  ((t >> 1) & 1) * n * 255,
                  ((t >> 2) & 1) * n * 255,
                ];
              }),
              (r.ansi256.rgb = function(e) {
                if (e >= 232) {
                  var t = 10 * (e - 232) + 8;
                  return [t, t, t];
                }
                var n;
                return (
                  (e -= 16),
                  [
                    (Math.floor(e / 36) / 5) * 255,
                    (Math.floor((n = e % 36) / 6) / 5) * 255,
                    ((n % 6) / 5) * 255,
                  ]
                );
              }),
              (r.rgb.hex = function(e) {
                var t = (
                  ((255 & Math.round(e[0])) << 16) +
                  ((255 & Math.round(e[1])) << 8) +
                  (255 & Math.round(e[2]))
                )
                  .toString(16)
                  .toUpperCase();
                return '000000'.substring(t.length) + t;
              }),
              (r.hex.rgb = function(e) {
                var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
                if (!t) return [0, 0, 0];
                var n = t[0];
                3 === t[0].length &&
                  (n = n
                    .split('')
                    .map(function(e) {
                      return e + e;
                    })
                    .join(''));
                var r = parseInt(n, 16);
                return [(r >> 16) & 255, (r >> 8) & 255, 255 & r];
              }),
              (r.rgb.hcg = function(e) {
                var t,
                  n = e[0] / 255,
                  r = e[1] / 255,
                  i = e[2] / 255,
                  a = Math.max(Math.max(n, r), i),
                  o = Math.min(Math.min(n, r), i),
                  s = a - o;
                return (
                  (t =
                    s <= 0
                      ? 0
                      : a === n
                      ? ((r - i) / s) % 6
                      : a === r
                      ? 2 + (i - n) / s
                      : 4 + (n - r) / s + 4),
                  (t /= 6),
                  [360 * (t %= 1), 100 * s, 100 * (s < 1 ? o / (1 - s) : 0)]
                );
              }),
              (r.hsl.hcg = function(e) {
                var t = e[1] / 100,
                  n = e[2] / 100,
                  r = 1,
                  i = 0;
                return (
                  (r = n < 0.5 ? 2 * t * n : 2 * t * (1 - n)) < 1 &&
                    (i = (n - 0.5 * r) / (1 - r)),
                  [e[0], 100 * r, 100 * i]
                );
              }),
              (r.hsv.hcg = function(e) {
                var t = e[1] / 100,
                  n = e[2] / 100,
                  r = t * n,
                  i = 0;
                return (
                  r < 1 && (i = (n - r) / (1 - r)), [e[0], 100 * r, 100 * i]
                );
              }),
              (r.hcg.rgb = function(e) {
                var t = e[0] / 360,
                  n = e[1] / 100,
                  r = e[2] / 100;
                if (0 === n) return [255 * r, 255 * r, 255 * r];
                var i,
                  a = [0, 0, 0],
                  o = (t % 1) * 6,
                  s = o % 1,
                  u = 1 - s;
                switch (Math.floor(o)) {
                  case 0:
                    (a[0] = 1), (a[1] = s), (a[2] = 0);
                    break;
                  case 1:
                    (a[0] = u), (a[1] = 1), (a[2] = 0);
                    break;
                  case 2:
                    (a[0] = 0), (a[1] = 1), (a[2] = s);
                    break;
                  case 3:
                    (a[0] = 0), (a[1] = u), (a[2] = 1);
                    break;
                  case 4:
                    (a[0] = s), (a[1] = 0), (a[2] = 1);
                    break;
                  default:
                    (a[0] = 1), (a[1] = 0), (a[2] = u);
                }
                return (
                  (i = (1 - n) * r),
                  [
                    255 * (n * a[0] + i),
                    255 * (n * a[1] + i),
                    255 * (n * a[2] + i),
                  ]
                );
              }),
              (r.hcg.hsv = function(e) {
                var t = e[1] / 100,
                  n = t + (e[2] / 100) * (1 - t),
                  r = 0;
                return n > 0 && (r = t / n), [e[0], 100 * r, 100 * n];
              }),
              (r.hcg.hsl = function(e) {
                var t = e[1] / 100,
                  n = (e[2] / 100) * (1 - t) + 0.5 * t,
                  r = 0;
                return (
                  n > 0 && n < 0.5
                    ? (r = t / (2 * n))
                    : n >= 0.5 && n < 1 && (r = t / (2 * (1 - n))),
                  [e[0], 100 * r, 100 * n]
                );
              }),
              (r.hcg.hwb = function(e) {
                var t = e[1] / 100,
                  n = t + (e[2] / 100) * (1 - t);
                return [e[0], 100 * (n - t), 100 * (1 - n)];
              }),
              (r.hwb.hcg = function(e) {
                var t = e[1] / 100,
                  n = 1 - e[2] / 100,
                  r = n - t,
                  i = 0;
                return (
                  r < 1 && (i = (n - r) / (1 - r)), [e[0], 100 * r, 100 * i]
                );
              }),
              (r.apple.rgb = function(e) {
                return [
                  (e[0] / 65535) * 255,
                  (e[1] / 65535) * 255,
                  (e[2] / 65535) * 255,
                ];
              }),
              (r.rgb.apple = function(e) {
                return [
                  (e[0] / 255) * 65535,
                  (e[1] / 255) * 65535,
                  (e[2] / 255) * 65535,
                ];
              }),
              (r.gray.rgb = function(e) {
                return [
                  (e[0] / 100) * 255,
                  (e[0] / 100) * 255,
                  (e[0] / 100) * 255,
                ];
              }),
              (r.gray.hsl = r.gray.hsv = function(e) {
                return [0, 0, e[0]];
              }),
              (r.gray.hwb = function(e) {
                return [0, 100, e[0]];
              }),
              (r.gray.cmyk = function(e) {
                return [0, 0, 0, e[0]];
              }),
              (r.gray.lab = function(e) {
                return [e[0], 0, 0];
              }),
              (r.gray.hex = function(e) {
                var t = 255 & Math.round((e[0] / 100) * 255),
                  n = ((t << 16) + (t << 8) + t).toString(16).toUpperCase();
                return '000000'.substring(n.length) + n;
              }),
              (r.rgb.gray = function(e) {
                return [((e[0] + e[1] + e[2]) / 3 / 255) * 100];
              });
          }),
          fn =
            (pn.rgb,
            pn.hsl,
            pn.hsv,
            pn.hwb,
            pn.cmyk,
            pn.xyz,
            pn.lab,
            pn.lch,
            pn.hex,
            pn.keyword,
            pn.ansi16,
            pn.ansi256,
            pn.hcg,
            pn.apple,
            pn.gray,
            Object.keys(pn));
        function hn(e) {
          var t = (function() {
              for (var e = {}, t = fn.length, n = 0; n < t; n++)
                e[fn[n]] = { distance: -1, parent: null };
              return e;
            })(),
            n = [e];
          for (t[e].distance = 0; n.length; )
            for (
              var r = n.pop(), i = Object.keys(pn[r]), a = i.length, o = 0;
              o < a;
              o++
            ) {
              var s = i[o],
                u = t[s];
              -1 === u.distance &&
                ((u.distance = t[r].distance + 1),
                (u.parent = r),
                n.unshift(s));
            }
          return t;
        }
        function dn(e, t) {
          return function(n) {
            return t(e(n));
          };
        }
        function mn(e, t) {
          for (
            var n = [t[e].parent, e], r = pn[t[e].parent][e], i = t[e].parent;
            t[i].parent;

          )
            n.unshift(t[i].parent),
              (r = dn(pn[t[i].parent][i], r)),
              (i = t[i].parent);
          return (r.conversion = n), r;
        }
        var gn = {};
        Object.keys(pn).forEach(function(e) {
          (gn[e] = {}),
            Object.defineProperty(gn[e], 'channels', { value: pn[e].channels }),
            Object.defineProperty(gn[e], 'labels', { value: pn[e].labels });
          var t = (function(e) {
            for (
              var t = hn(e), n = {}, r = Object.keys(t), i = r.length, a = 0;
              a < i;
              a++
            ) {
              var o = r[a];
              null !== t[o].parent && (n[o] = mn(o, t));
            }
            return n;
          })(e);
          Object.keys(t).forEach(function(n) {
            var r = t[n];
            (gn[e][n] = (function(e) {
              var t = function(t) {
                if (null == t) return t;
                arguments.length > 1 &&
                  (t = Array.prototype.slice.call(arguments));
                var n = e(t);
                if ('object' === c(n))
                  for (var r = n.length, i = 0; i < r; i++)
                    n[i] = Math.round(n[i]);
                return n;
              };
              return 'conversion' in e && (t.conversion = e.conversion), t;
            })(r)),
              (gn[e][n].raw = (function(e) {
                var t = function(t) {
                  return null == t
                    ? t
                    : (arguments.length > 1 &&
                        (t = Array.prototype.slice.call(arguments)),
                      e(t));
                };
                return 'conversion' in e && (t.conversion = e.conversion), t;
              })(r));
          });
        });
        var yn,
          vn = gn,
          Dn = lt(function(e) {
            var t = function(e, t) {
                return function() {
                  var n = e.apply(vn, arguments);
                  return '['.concat(n + t, 'm');
                };
              },
              n = function(e, t) {
                return function() {
                  var n = e.apply(vn, arguments);
                  return '['.concat(38 + t, ';5;').concat(n, 'm');
                };
              },
              r = function(e, t) {
                return function() {
                  var n = e.apply(vn, arguments);
                  return '['
                    .concat(38 + t, ';2;')
                    .concat(n[0], ';')
                    .concat(n[1], ';')
                    .concat(n[2], 'm');
                };
              };
            Object.defineProperty(e, 'exports', {
              enumerable: !0,
              get: function() {
                var e = new Map(),
                  i = {
                    modifier: {
                      reset: [0, 0],
                      bold: [1, 22],
                      dim: [2, 22],
                      italic: [3, 23],
                      underline: [4, 24],
                      inverse: [7, 27],
                      hidden: [8, 28],
                      strikethrough: [9, 29],
                    },
                    color: {
                      black: [30, 39],
                      red: [31, 39],
                      green: [32, 39],
                      yellow: [33, 39],
                      blue: [34, 39],
                      magenta: [35, 39],
                      cyan: [36, 39],
                      white: [37, 39],
                      gray: [90, 39],
                      redBright: [91, 39],
                      greenBright: [92, 39],
                      yellowBright: [93, 39],
                      blueBright: [94, 39],
                      magentaBright: [95, 39],
                      cyanBright: [96, 39],
                      whiteBright: [97, 39],
                    },
                    bgColor: {
                      bgBlack: [40, 49],
                      bgRed: [41, 49],
                      bgGreen: [42, 49],
                      bgYellow: [43, 49],
                      bgBlue: [44, 49],
                      bgMagenta: [45, 49],
                      bgCyan: [46, 49],
                      bgWhite: [47, 49],
                      bgBlackBright: [100, 49],
                      bgRedBright: [101, 49],
                      bgGreenBright: [102, 49],
                      bgYellowBright: [103, 49],
                      bgBlueBright: [104, 49],
                      bgMagentaBright: [105, 49],
                      bgCyanBright: [106, 49],
                      bgWhiteBright: [107, 49],
                    },
                  };
                i.color.grey = i.color.gray;
                for (var a = 0, o = Object.keys(i); a < o.length; a++) {
                  for (
                    var s = o[a], u = i[s], l = 0, p = Object.keys(u);
                    l < p.length;
                    l++
                  ) {
                    var f = p[l],
                      h = u[f];
                    (i[f] = {
                      open: '['.concat(h[0], 'm'),
                      close: '['.concat(h[1], 'm'),
                    }),
                      (u[f] = i[f]),
                      e.set(h[0], h[1]);
                  }
                  Object.defineProperty(i, s, { value: u, enumerable: !1 }),
                    Object.defineProperty(i, 'codes', {
                      value: e,
                      enumerable: !1,
                    });
                }
                var d = function(e) {
                    return e;
                  },
                  m = function(e, t, n) {
                    return [e, t, n];
                  };
                (i.color.close = '[39m'),
                  (i.bgColor.close = '[49m'),
                  (i.color.ansi = { ansi: t(d, 0) }),
                  (i.color.ansi256 = { ansi256: n(d, 0) }),
                  (i.color.ansi16m = { rgb: r(m, 0) }),
                  (i.bgColor.ansi = { ansi: t(d, 10) }),
                  (i.bgColor.ansi256 = { ansi256: n(d, 10) }),
                  (i.bgColor.ansi16m = { rgb: r(m, 10) });
                for (var g = 0, y = Object.keys(vn); g < y.length; g++) {
                  var v = y[g];
                  if ('object' === c(vn[v])) {
                    var D = vn[v];
                    'ansi16' === v && (v = 'ansi'),
                      'ansi16' in D &&
                        ((i.color.ansi[v] = t(D.ansi16, 0)),
                        (i.bgColor.ansi[v] = t(D.ansi16, 10))),
                      'ansi256' in D &&
                        ((i.color.ansi256[v] = n(D.ansi256, 0)),
                        (i.bgColor.ansi256[v] = n(D.ansi256, 10))),
                      'rgb' in D &&
                        ((i.color.ansi16m[v] = r(D.rgb, 0)),
                        (i.bgColor.ansi16m[v] = r(D.rgb, 10)));
                  }
                }
                return i;
              },
            });
          }),
          En = { EOL: '\n' },
          Cn = function(e, t) {
            t = t || Rt.argv;
            var n = e.startsWith('-') ? '' : 1 === e.length ? '-' : '--',
              r = t.indexOf(n + e),
              i = t.indexOf('--');
            return -1 !== r && (-1 === i || r < i);
          },
          bn = Rt.env;
        function xn(e) {
          return (function(e) {
            return (
              0 !== e && {
                level: e,
                hasBasic: !0,
                has256: e >= 2,
                has16m: e >= 3,
              }
            );
          })(
            (function(e) {
              if (!1 === yn) return 0;
              if (Cn('color=16m') || Cn('color=full') || Cn('color=truecolor'))
                return 3;
              if (Cn('color=256')) return 2;
              if (e && !e.isTTY && !0 !== yn) return 0;
              var t = yn ? 1 : 0;
              if ('win32' === Rt.platform) {
                var n = En.release().split('.');
                return Number(Rt.versions.node.split('.')[0]) >= 8 &&
                  Number(n[0]) >= 10 &&
                  Number(n[2]) >= 10586
                  ? Number(n[2]) >= 14931
                    ? 3
                    : 2
                  : 1;
              }
              if ('CI' in bn)
                return ['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(
                  function(e) {
                    return e in bn;
                  },
                ) || 'codeship' === bn.CI_NAME
                  ? 1
                  : t;
              if ('TEAMCITY_VERSION' in bn)
                return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(bn.TEAMCITY_VERSION)
                  ? 1
                  : 0;
              if ('truecolor' === bn.COLORTERM) return 3;
              if ('TERM_PROGRAM' in bn) {
                var r = parseInt(
                  (bn.TERM_PROGRAM_VERSION || '').split('.')[0],
                  10,
                );
                switch (bn.TERM_PROGRAM) {
                  case 'iTerm.app':
                    return r >= 3 ? 3 : 2;
                  case 'Apple_Terminal':
                    return 2;
                }
              }
              return /-256(color)?$/i.test(bn.TERM)
                ? 2
                : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(
                    bn.TERM,
                  ) || 'COLORTERM' in bn
                ? 1
                : (bn.TERM, t);
            })(e),
          );
        }
        Cn('no-color') || Cn('no-colors') || Cn('color=false')
          ? (yn = !1)
          : (Cn('color') ||
              Cn('colors') ||
              Cn('color=true') ||
              Cn('color=always')) &&
            (yn = !0),
          'FORCE_COLOR' in bn &&
            (yn =
              0 === bn.FORCE_COLOR.length ||
              0 !== parseInt(bn.FORCE_COLOR, 10));
        var An = {
            supportsColor: xn,
            stdout: xn(Rt.stdout),
            stderr: xn(Rt.stderr),
          },
          Sn = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,
          wn = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,
          Fn = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,
          kn = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,
          Tn = new Map([
            ['n', '\n'],
            ['r', '\r'],
            ['t', '\t'],
            ['b', '\b'],
            ['f', '\f'],
            ['v', '\v'],
            ['0', '\0'],
            ['\\', '\\'],
            ['e', ''],
            ['a', ''],
          ]);
        function _n(e) {
          return ('u' === e[0] && 5 === e.length) ||
            ('x' === e[0] && 3 === e.length)
            ? String.fromCharCode(parseInt(e.slice(1), 16))
            : Tn.get(e) || e;
        }
        function On(e, t) {
          var n,
            r = [],
            i = t.trim().split(/\s*,\s*/g),
            a = !0,
            o = !1,
            s = void 0;
          try {
            for (
              var u, c = i[Symbol.iterator]();
              !(a = (u = c.next()).done);
              a = !0
            ) {
              var l = u.value;
              if (isNaN(l)) {
                if (!(n = l.match(Fn)))
                  throw new Error(
                    'Invalid Chalk template style argument: '
                      .concat(l, " (in style '")
                      .concat(e, "')"),
                  );
                r.push(
                  n[2].replace(kn, function(e, t, n) {
                    return t ? _n(t) : n;
                  }),
                );
              } else r.push(Number(l));
            }
          } catch (e) {
            (o = !0), (s = e);
          } finally {
            try {
              a || null == c.return || c.return();
            } finally {
              if (o) throw s;
            }
          }
          return r;
        }
        function Nn(e) {
          wn.lastIndex = 0;
          for (var t, n = []; null !== (t = wn.exec(e)); ) {
            var r = t[1];
            if (t[2]) {
              var i = On(r, t[2]);
              n.push([r].concat(i));
            } else n.push([r]);
          }
          return n;
        }
        function Bn(e, t) {
          var n = {},
            r = !0,
            i = !1,
            a = void 0;
          try {
            for (
              var o, s = t[Symbol.iterator]();
              !(r = (o = s.next()).done);
              r = !0
            ) {
              var u = o.value,
                c = !0,
                l = !1,
                p = void 0;
              try {
                for (
                  var f, h = u.styles[Symbol.iterator]();
                  !(c = (f = h.next()).done);
                  c = !0
                ) {
                  var d = f.value;
                  n[d[0]] = u.inverse ? null : d.slice(1);
                }
              } catch (e) {
                (l = !0), (p = e);
              } finally {
                try {
                  c || null == h.return || h.return();
                } finally {
                  if (l) throw p;
                }
              }
            }
          } catch (e) {
            (i = !0), (a = e);
          } finally {
            try {
              r || null == s.return || s.return();
            } finally {
              if (i) throw a;
            }
          }
          for (var m = e, g = 0, y = Object.keys(n); g < y.length; g++) {
            var v = y[g];
            if (Array.isArray(n[v])) {
              if (!(v in m)) throw new Error('Unknown Chalk style: '.concat(v));
              m = n[v].length > 0 ? m[v].apply(m, n[v]) : m[v];
            }
          }
          return m;
        }
        var In = function(e, t) {
            var n = [],
              r = [],
              i = [];
            if (
              (t.replace(Sn, function(t, a, o, s, u, c) {
                if (a) i.push(_n(a));
                else if (s) {
                  var l = i.join('');
                  (i = []),
                    r.push(0 === n.length ? l : Bn(e, n)(l)),
                    n.push({ inverse: o, styles: Nn(s) });
                } else if (u) {
                  if (0 === n.length)
                    throw new Error(
                      'Found extraneous } in Chalk template literal',
                    );
                  r.push(Bn(e, n)(i.join(''))), (i = []), n.pop();
                } else i.push(c);
              }),
              r.push(i.join('')),
              n.length > 0)
            ) {
              var a = 'Chalk template literal is missing '
                .concat(n.length, ' closing bracket')
                .concat(1 === n.length ? '' : 's', ' (`}`)');
              throw new Error(a);
            }
            return r.join('');
          },
          Pn = lt(function(e) {
            var t = An.stdout,
              n =
                'win32' === Rt.platform &&
                !(Rt.env.TERM || '').toLowerCase().startsWith('xterm'),
              r = ['ansi', 'ansi', 'ansi256', 'ansi16m'],
              i = new Set(['gray']),
              a = Object.create(null);
            function o(e, n) {
              n = n || {};
              var r = t ? t.level : 0;
              (e.level = void 0 === n.level ? r : n.level),
                (e.enabled = 'enabled' in n ? n.enabled : e.level > 0);
            }
            function s(e) {
              if (!this || !(this instanceof s) || this.template) {
                var t = {};
                return (
                  o(t, e),
                  (t.template = function() {
                    var e = [].slice.call(arguments);
                    return E.apply(null, [t.template].concat(e));
                  }),
                  Object.setPrototypeOf(t, s.prototype),
                  Object.setPrototypeOf(t.template, t),
                  (t.template.constructor = s),
                  t.template
                );
              }
              o(this, e);
            }
            n && (Dn.blue.open = '[94m');
            for (
              var u = function() {
                  var e = l[c];
                  (Dn[e].closeRe = new RegExp(cn(Dn[e].close), 'g')),
                    (a[e] = {
                      get: function() {
                        var t = Dn[e];
                        return v.call(
                          this,
                          this._styles ? this._styles.concat(t) : [t],
                          this._empty,
                          e,
                        );
                      },
                    });
                },
                c = 0,
                l = Object.keys(Dn);
              c < l.length;
              c++
            )
              u();
            (a.visible = {
              get: function() {
                return v.call(this, this._styles || [], !0, 'visible');
              },
            }),
              (Dn.color.closeRe = new RegExp(cn(Dn.color.close), 'g'));
            for (
              var p = function() {
                  var e = h[f];
                  if (i.has(e)) return 'continue';
                  a[e] = {
                    get: function() {
                      var t = this.level;
                      return function() {
                        var n = Dn.color[r[t]][e].apply(null, arguments),
                          i = {
                            open: n,
                            close: Dn.color.close,
                            closeRe: Dn.color.closeRe,
                          };
                        return v.call(
                          this,
                          this._styles ? this._styles.concat(i) : [i],
                          this._empty,
                          e,
                        );
                      };
                    },
                  };
                },
                f = 0,
                h = Object.keys(Dn.color.ansi);
              f < h.length;
              f++
            )
              p();
            Dn.bgColor.closeRe = new RegExp(cn(Dn.bgColor.close), 'g');
            for (
              var d = function() {
                  var e = g[m];
                  if (i.has(e)) return 'continue';
                  var t = 'bg' + e[0].toUpperCase() + e.slice(1);
                  a[t] = {
                    get: function() {
                      var t = this.level;
                      return function() {
                        var n = Dn.bgColor[r[t]][e].apply(null, arguments),
                          i = {
                            open: n,
                            close: Dn.bgColor.close,
                            closeRe: Dn.bgColor.closeRe,
                          };
                        return v.call(
                          this,
                          this._styles ? this._styles.concat(i) : [i],
                          this._empty,
                          e,
                        );
                      };
                    },
                  };
                },
                m = 0,
                g = Object.keys(Dn.bgColor.ansi);
              m < g.length;
              m++
            )
              d();
            var y = Object.defineProperties(function() {}, a);
            function v(e, t, n) {
              var r = function e() {
                return D.apply(e, arguments);
              };
              (r._styles = e), (r._empty = t);
              var i = this;
              return (
                Object.defineProperty(r, 'level', {
                  enumerable: !0,
                  get: function() {
                    return i.level;
                  },
                  set: function(e) {
                    i.level = e;
                  },
                }),
                Object.defineProperty(r, 'enabled', {
                  enumerable: !0,
                  get: function() {
                    return i.enabled;
                  },
                  set: function(e) {
                    i.enabled = e;
                  },
                }),
                (r.hasGrey = this.hasGrey || 'gray' === n || 'grey' === n),
                (r.__proto__ = y),
                r
              );
            }
            function D() {
              var e = arguments,
                t = e.length,
                r = String(arguments[0]);
              if (0 === t) return '';
              if (t > 1) for (var i = 1; i < t; i++) r += ' ' + e[i];
              if (!this.enabled || this.level <= 0 || !r)
                return this._empty ? '' : r;
              var a = Dn.dim.open;
              n && this.hasGrey && (Dn.dim.open = '');
              var o = !0,
                s = !1,
                u = void 0;
              try {
                for (
                  var c,
                    l = this._styles
                      .slice()
                      .reverse()
                      [Symbol.iterator]();
                  !(o = (c = l.next()).done);
                  o = !0
                ) {
                  var p = c.value;
                  r = (r =
                    p.open + r.replace(p.closeRe, p.open) + p.close).replace(
                    /\r?\n/g,
                    ''.concat(p.close, '$&').concat(p.open),
                  );
                }
              } catch (e) {
                (s = !0), (u = e);
              } finally {
                try {
                  o || null == l.return || l.return();
                } finally {
                  if (s) throw u;
                }
              }
              return (Dn.dim.open = a), r;
            }
            function E(e, t) {
              if (!Array.isArray(t))
                return [].slice.call(arguments, 1).join(' ');
              for (
                var n = [].slice.call(arguments, 2), r = [t.raw[0]], i = 1;
                i < t.length;
                i++
              )
                r.push(String(n[i - 1]).replace(/[{}\\]/g, '\\$&')),
                  r.push(String(t.raw[i]));
              return In(e, r.join(''));
            }
            Object.defineProperties(s.prototype, a),
              (e.exports = s()),
              (e.exports.supportsColor = t),
              (e.exports.default = e.exports);
          }),
          Mn =
            (Pn.supportsColor,
            lt(function(e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.commonDeprecatedHandler = function(e, t, n) {
                  var r = n.descriptor,
                    i = [
                      ''.concat(
                        Pn.default.yellow(
                          'string' == typeof e ? r.key(e) : r.pair(e),
                        ),
                        ' is deprecated',
                      ),
                    ];
                  return (
                    t &&
                      i.push(
                        'we now treat it as '.concat(
                          Pn.default.blue(
                            'string' == typeof t ? r.key(t) : r.pair(t),
                          ),
                        ),
                      ),
                    i.join('; ') + '.'
                  );
                });
            }));
        ct(Mn), Mn.commonDeprecatedHandler;
        var Ln = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            on.__exportStar(Mn, t);
        });
        ct(Ln);
        var Rn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.commonInvalidHandler = function(e, t, n) {
              return [
                'Invalid '.concat(
                  Pn.default.red(n.descriptor.key(e)),
                  ' value.',
                ),
                'Expected '.concat(
                  Pn.default.blue(n.schemas[e].expected(n)),
                  ',',
                ),
                'but received '.concat(
                  Pn.default.red(n.descriptor.value(t)),
                  '.',
                ),
              ].join(' ');
            });
        });
        ct(Rn), Rn.commonInvalidHandler;
        var jn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            on.__exportStar(Rn, t);
        });
        ct(jn);
        var Un = [],
          Vn = [],
          Wn = lt(function(e, t) {
            Object.defineProperty(t, '__esModule', { value: !0 }),
              (t.levenUnknownHandler = function(e, t, n) {
                var r = n.descriptor,
                  i = n.logger,
                  a = n.schemas,
                  o = [
                    'Ignored unknown option '.concat(
                      Pn.default.yellow(r.pair({ key: e, value: t })),
                      '.',
                    ),
                  ],
                  s = Object.keys(a)
                    .sort()
                    .find(function(t) {
                      return (
                        (function(e, t) {
                          if (e === t) return 0;
                          var n = e;
                          e.length > t.length && ((e = t), (t = n));
                          var r = e.length,
                            i = t.length;
                          if (0 === r) return i;
                          if (0 === i) return r;
                          for (
                            ;
                            r > 0 && e.charCodeAt(~-r) === t.charCodeAt(~-i);

                          )
                            r--, i--;
                          if (0 === r) return i;
                          for (
                            var a, o, s, u, c = 0;
                            c < r && e.charCodeAt(c) === t.charCodeAt(c);

                          )
                            c++;
                          if (((i -= c), 0 == (r -= c))) return i;
                          for (var l = 0, p = 0; l < r; )
                            (Vn[c + l] = e.charCodeAt(c + l)), (Un[l] = ++l);
                          for (; p < i; )
                            for (
                              a = t.charCodeAt(c + p), s = p++, o = p, l = 0;
                              l < r;
                              l++
                            )
                              (u = a === Vn[c + l] ? s : s + 1),
                                (s = Un[l]),
                                (o = Un[l] =
                                  s > o
                                    ? u > o
                                      ? o + 1
                                      : u
                                    : u > s
                                    ? s + 1
                                    : u);
                          return o;
                        })(e, t) < 3
                      );
                    });
                s &&
                  o.push(
                    'Did you mean '.concat(Pn.default.blue(r.key(s)), '?'),
                  ),
                  i.warn(o.join(' '));
              });
          });
        ct(Wn), Wn.levenUnknownHandler;
        var $n = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            on.__exportStar(Wn, t);
        });
        ct($n);
        var qn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            on.__exportStar(Ln, t),
            on.__exportStar(jn, t),
            on.__exportStar($n, t);
        });
        ct(qn);
        var Yn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = [
            'default',
            'expected',
            'validate',
            'deprecated',
            'forward',
            'redirect',
            'overlap',
            'preprocess',
            'postprocess',
          ];
          function r(e, t) {
            var r = new e(t),
              o = Object.create(r),
              s = !0,
              u = !1,
              c = void 0;
            try {
              for (
                var l, p = n[Symbol.iterator]();
                !(s = (l = p.next()).done);
                s = !0
              ) {
                var f = l.value;
                f in t && (o[f] = a(t[f], r, i.prototype[f].length));
              }
            } catch (e) {
              (u = !0), (c = e);
            } finally {
              try {
                s || null == p.return || p.return();
              } finally {
                if (u) throw c;
              }
            }
            return o;
          }
          t.createSchema = r;
          var i = (function() {
            function e(t) {
              l(this, e), (this.name = t.name);
            }
            return (
              f(
                e,
                [
                  { key: 'default', value: function(e) {} },
                  {
                    key: 'expected',
                    value: function(e) {
                      return 'nothing';
                    },
                  },
                  {
                    key: 'validate',
                    value: function(e, t) {
                      return !1;
                    },
                  },
                  {
                    key: 'deprecated',
                    value: function(e, t) {
                      return !1;
                    },
                  },
                  { key: 'forward', value: function(e, t) {} },
                  { key: 'redirect', value: function(e, t) {} },
                  {
                    key: 'overlap',
                    value: function(e, t, n) {
                      return e;
                    },
                  },
                  {
                    key: 'preprocess',
                    value: function(e, t) {
                      return e;
                    },
                  },
                  {
                    key: 'postprocess',
                    value: function(e, t) {
                      return e;
                    },
                  },
                ],
                [
                  {
                    key: 'create',
                    value: function(e) {
                      return r(this, e);
                    },
                  },
                ],
              ),
              e
            );
          })();
          function a(e, t, n) {
            return 'function' == typeof e
              ? function() {
                  for (
                    var r = arguments.length, i = new Array(r), a = 0;
                    a < r;
                    a++
                  )
                    i[a] = arguments[a];
                  return e.apply(
                    void 0,
                    A(i.slice(0, n - 1)).concat([t], A(i.slice(n - 1))),
                  );
                }
              : function() {
                  return e;
                };
          }
          t.Schema = i;
        });
        ct(Yn), Yn.createSchema, Yn.Schema;
        var Jn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function(e) {
            function t(e) {
              var n;
              return (
                l(this, t),
                ((n = E(this, m(t).call(this, e)))._sourceName = e.sourceName),
                n
              );
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'expected',
                  value: function(e) {
                    return e.schemas[this._sourceName].expected(e);
                  },
                },
                {
                  key: 'validate',
                  value: function(e, t) {
                    return t.schemas[this._sourceName].validate(e, t);
                  },
                },
                {
                  key: 'redirect',
                  value: function(e, t) {
                    return this._sourceName;
                  },
                },
              ]),
              t
            );
          })(Yn.Schema);
          t.AliasSchema = n;
        });
        ct(Jn), Jn.AliasSchema;
        var Kn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function(e) {
            function t() {
              return l(this, t), E(this, m(t).apply(this, arguments));
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'expected',
                  value: function() {
                    return 'anything';
                  },
                },
                {
                  key: 'validate',
                  value: function() {
                    return !0;
                  },
                },
              ]),
              t
            );
          })(Yn.Schema);
          t.AnySchema = n;
        });
        ct(Kn), Kn.AnySchema;
        var zn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function(e) {
            function t(e) {
              var n;
              l(this, t);
              var r = e.valueSchema,
                i = e.name,
                a = void 0 === i ? r.name : i,
                o = on.__rest(e, ['valueSchema', 'name']);
              return (
                ((n = E(
                  this,
                  m(t).call(this, Object.assign({}, o, { name: a })),
                ))._valueSchema = r),
                n
              );
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'expected',
                  value: function(e) {
                    return 'an array of '.concat(this._valueSchema.expected(e));
                  },
                },
                {
                  key: 'validate',
                  value: function(e, t) {
                    if (!Array.isArray(e)) return !1;
                    var n = [],
                      r = !0,
                      i = !1,
                      a = void 0;
                    try {
                      for (
                        var o, s = e[Symbol.iterator]();
                        !(r = (o = s.next()).done);
                        r = !0
                      ) {
                        var u = o.value,
                          c = t.normalizeValidateResult(
                            this._valueSchema.validate(u, t),
                            u,
                          );
                        !0 !== c && n.push(c.value);
                      }
                    } catch (e) {
                      (i = !0), (a = e);
                    } finally {
                      try {
                        r || null == s.return || s.return();
                      } finally {
                        if (i) throw a;
                      }
                    }
                    return 0 === n.length || { value: n };
                  },
                },
                {
                  key: 'deprecated',
                  value: function(e, t) {
                    var n = [],
                      r = !0,
                      i = !1,
                      a = void 0;
                    try {
                      for (
                        var o, s = e[Symbol.iterator]();
                        !(r = (o = s.next()).done);
                        r = !0
                      ) {
                        var u = o.value,
                          c = t.normalizeDeprecatedResult(
                            this._valueSchema.deprecated(u, t),
                            u,
                          );
                        !1 !== c &&
                          n.push.apply(
                            n,
                            A(
                              c.map(function(e) {
                                return { value: [e.value] };
                              }),
                            ),
                          );
                      }
                    } catch (e) {
                      (i = !0), (a = e);
                    } finally {
                      try {
                        r || null == s.return || s.return();
                      } finally {
                        if (i) throw a;
                      }
                    }
                    return n;
                  },
                },
                {
                  key: 'forward',
                  value: function(e, t) {
                    var n = [],
                      i = !0,
                      a = !1,
                      o = void 0;
                    try {
                      for (
                        var s, u = e[Symbol.iterator]();
                        !(i = (s = u.next()).done);
                        i = !0
                      ) {
                        var c = s.value,
                          l = t.normalizeForwardResult(
                            this._valueSchema.forward(c, t),
                            c,
                          );
                        n.push.apply(n, A(l.map(r)));
                      }
                    } catch (e) {
                      (a = !0), (o = e);
                    } finally {
                      try {
                        i || null == u.return || u.return();
                      } finally {
                        if (a) throw o;
                      }
                    }
                    return n;
                  },
                },
                {
                  key: 'redirect',
                  value: function(e, t) {
                    var n = [],
                      i = [],
                      a = !0,
                      o = !1,
                      s = void 0;
                    try {
                      for (
                        var u, c = e[Symbol.iterator]();
                        !(a = (u = c.next()).done);
                        a = !0
                      ) {
                        var l = u.value,
                          p = t.normalizeRedirectResult(
                            this._valueSchema.redirect(l, t),
                            l,
                          );
                        'remain' in p && n.push(p.remain),
                          i.push.apply(i, A(p.redirect.map(r)));
                      }
                    } catch (e) {
                      (o = !0), (s = e);
                    } finally {
                      try {
                        a || null == c.return || c.return();
                      } finally {
                        if (o) throw s;
                      }
                    }
                    return 0 === n.length
                      ? { redirect: i }
                      : { redirect: i, remain: n };
                  },
                },
                {
                  key: 'overlap',
                  value: function(e, t) {
                    return e.concat(t);
                  },
                },
              ]),
              t
            );
          })(Yn.Schema);
          function r(e) {
            return { from: [e.from], to: e.to };
          }
          t.ArraySchema = n;
        });
        ct(zn), zn.ArraySchema;
        var Hn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function(e) {
            function t() {
              return l(this, t), E(this, m(t).apply(this, arguments));
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'expected',
                  value: function() {
                    return 'true or false';
                  },
                },
                {
                  key: 'validate',
                  value: function(e) {
                    return 'boolean' == typeof e;
                  },
                },
              ]),
              t
            );
          })(Yn.Schema);
          t.BooleanSchema = n;
        });
        ct(Hn), Hn.BooleanSchema;
        var Xn = lt(function(e, t) {
          function n(e, t) {
            return 'string' == typeof e || 'key' in e
              ? { from: t, to: e }
              : 'from' in e
              ? { from: e.from, to: e.to }
              : { from: t, to: e.to };
          }
          function r(e, t) {
            return void 0 === e
              ? []
              : Array.isArray(e)
              ? e.map(function(e) {
                  return n(e, t);
                })
              : [n(e, t)];
          }
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.recordFromArray = function(e, t) {
              var n = Object.create(null),
                r = !0,
                i = !1,
                a = void 0;
              try {
                for (
                  var o, s = e[Symbol.iterator]();
                  !(r = (o = s.next()).done);
                  r = !0
                ) {
                  var u = o.value,
                    c = u[t];
                  if (n[c])
                    throw new Error(
                      'Duplicate '.concat(t, ' ').concat(JSON.stringify(c)),
                    );
                  n[c] = u;
                }
              } catch (e) {
                (i = !0), (a = e);
              } finally {
                try {
                  r || null == s.return || s.return();
                } finally {
                  if (i) throw a;
                }
              }
              return n;
            }),
            (t.mapFromArray = function(e, t) {
              var n = new Map(),
                r = !0,
                i = !1,
                a = void 0;
              try {
                for (
                  var o, s = e[Symbol.iterator]();
                  !(r = (o = s.next()).done);
                  r = !0
                ) {
                  var u = o.value,
                    c = u[t];
                  if (n.has(c))
                    throw new Error(
                      'Duplicate '.concat(t, ' ').concat(JSON.stringify(c)),
                    );
                  n.set(c, u);
                }
              } catch (e) {
                (i = !0), (a = e);
              } finally {
                try {
                  r || null == s.return || s.return();
                } finally {
                  if (i) throw a;
                }
              }
              return n;
            }),
            (t.createAutoChecklist = function() {
              var e = Object.create(null);
              return function(t) {
                var n = JSON.stringify(t);
                return !!e[n] || ((e[n] = !0), !1);
              };
            }),
            (t.partition = function(e, t) {
              var n = [],
                r = [],
                i = !0,
                a = !1,
                o = void 0;
              try {
                for (
                  var s, u = e[Symbol.iterator]();
                  !(i = (s = u.next()).done);
                  i = !0
                ) {
                  var c = s.value;
                  t(c) ? n.push(c) : r.push(c);
                }
              } catch (e) {
                (a = !0), (o = e);
              } finally {
                try {
                  i || null == u.return || u.return();
                } finally {
                  if (a) throw o;
                }
              }
              return [n, r];
            }),
            (t.isInt = function(e) {
              return e === Math.floor(e);
            }),
            (t.comparePrimitive = function(e, t) {
              if (e === t) return 0;
              var n = c(e),
                r = c(t),
                i = ['undefined', 'object', 'boolean', 'number', 'string'];
              return n !== r
                ? i.indexOf(n) - i.indexOf(r)
                : 'string' !== n
                ? Number(e) - Number(t)
                : e.localeCompare(t);
            }),
            (t.normalizeDefaultResult = function(e) {
              return void 0 === e ? {} : e;
            }),
            (t.normalizeValidateResult = function(e, t) {
              return !0 === e || (!1 === e ? { value: t } : e);
            }),
            (t.normalizeDeprecatedResult = function(e, t) {
              var n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
              return (
                !1 !== e &&
                (!0 === e
                  ? !!n || [{ value: t }]
                  : 'value' in e
                  ? [e]
                  : 0 !== e.length && e)
              );
            }),
            (t.normalizeTransferResult = n),
            (t.normalizeForwardResult = r),
            (t.normalizeRedirectResult = function(e, t) {
              var n = r(
                'object' === c(e) && 'redirect' in e ? e.redirect : e,
                t,
              );
              return 0 === n.length
                ? { remain: t, redirect: n }
                : 'object' === c(e) && 'remain' in e
                ? { remain: e.remain, redirect: n }
                : { redirect: n };
            });
        });
        ct(Xn),
          Xn.recordFromArray,
          Xn.mapFromArray,
          Xn.createAutoChecklist,
          Xn.partition,
          Xn.isInt,
          Xn.comparePrimitive,
          Xn.normalizeDefaultResult,
          Xn.normalizeValidateResult,
          Xn.normalizeDeprecatedResult,
          Xn.normalizeTransferResult,
          Xn.normalizeForwardResult,
          Xn.normalizeRedirectResult;
        var Gn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function(e) {
            function t(e) {
              var n;
              return (
                l(this, t),
                ((n = E(this, m(t).call(this, e)))._choices = Xn.mapFromArray(
                  e.choices.map(function(e) {
                    return e && 'object' === c(e) ? e : { value: e };
                  }),
                  'value',
                )),
                n
              );
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'expected',
                  value: function(e) {
                    var t = this,
                      n = e.descriptor,
                      r = Array.from(this._choices.keys())
                        .map(function(e) {
                          return t._choices.get(e);
                        })
                        .filter(function(e) {
                          return !e.deprecated;
                        })
                        .map(function(e) {
                          return e.value;
                        })
                        .sort(Xn.comparePrimitive)
                        .map(n.value),
                      i = r.slice(0, -2),
                      a = r.slice(-2);
                    return i.concat(a.join(' or ')).join(', ');
                  },
                },
                {
                  key: 'validate',
                  value: function(e) {
                    return this._choices.has(e);
                  },
                },
                {
                  key: 'deprecated',
                  value: function(e) {
                    var t = this._choices.get(e);
                    return !(!t || !t.deprecated) && { value: e };
                  },
                },
                {
                  key: 'forward',
                  value: function(e) {
                    var t = this._choices.get(e);
                    return t ? t.forward : void 0;
                  },
                },
                {
                  key: 'redirect',
                  value: function(e) {
                    var t = this._choices.get(e);
                    return t ? t.redirect : void 0;
                  },
                },
              ]),
              t
            );
          })(Yn.Schema);
          t.ChoiceSchema = n;
        });
        ct(Gn), Gn.ChoiceSchema;
        var Qn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function(e) {
            function t() {
              return l(this, t), E(this, m(t).apply(this, arguments));
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'expected',
                  value: function() {
                    return 'a number';
                  },
                },
                {
                  key: 'validate',
                  value: function(e, t) {
                    return 'number' == typeof e;
                  },
                },
              ]),
              t
            );
          })(Yn.Schema);
          t.NumberSchema = n;
        });
        ct(Qn), Qn.NumberSchema;
        var Zn = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function(e) {
            function t() {
              return l(this, t), E(this, m(t).apply(this, arguments));
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'expected',
                  value: function() {
                    return 'an integer';
                  },
                },
                {
                  key: 'validate',
                  value: function(e, n) {
                    return (
                      !0 ===
                        n.normalizeValidateResult(
                          C(m(t.prototype), 'validate', this).call(this, e, n),
                          e,
                        ) && Xn.isInt(e)
                    );
                  },
                },
              ]),
              t
            );
          })(Qn.NumberSchema);
          t.IntegerSchema = n;
        });
        ct(Zn), Zn.IntegerSchema;
        var er = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function(e) {
            function t() {
              return l(this, t), E(this, m(t).apply(this, arguments));
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'expected',
                  value: function() {
                    return 'a string';
                  },
                },
                {
                  key: 'validate',
                  value: function(e) {
                    return 'string' == typeof e;
                  },
                },
              ]),
              t
            );
          })(Yn.Schema);
          t.StringSchema = n;
        });
        ct(er), er.StringSchema;
        var tr = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            on.__exportStar(Jn, t),
            on.__exportStar(Kn, t),
            on.__exportStar(zn, t),
            on.__exportStar(Hn, t),
            on.__exportStar(Gn, t),
            on.__exportStar(Zn, t),
            on.__exportStar(Qn, t),
            on.__exportStar(er, t);
        });
        ct(tr);
        var nr = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.defaultDescriptor = an.apiDescriptor),
            (t.defaultUnknownHandler = Wn.levenUnknownHandler),
            (t.defaultInvalidHandler = jn.commonInvalidHandler),
            (t.defaultDeprecatedHandler = Mn.commonDeprecatedHandler);
        });
        ct(nr),
          nr.defaultDescriptor,
          nr.defaultUnknownHandler,
          nr.defaultInvalidHandler,
          nr.defaultDeprecatedHandler;
        var rr = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.normalize = function(e, t, r) {
              return new n(t, r).normalize(e);
            });
          var n = (function() {
            function e(t, n) {
              l(this, e);
              var r = n || {},
                i = r.logger,
                a = void 0 === i ? console : i,
                o = r.descriptor,
                s = void 0 === o ? nr.defaultDescriptor : o,
                u = r.unknown,
                c = void 0 === u ? nr.defaultUnknownHandler : u,
                p = r.invalid,
                f = void 0 === p ? nr.defaultInvalidHandler : p,
                h = r.deprecated,
                d = void 0 === h ? nr.defaultDeprecatedHandler : h;
              (this._utils = {
                descriptor: s,
                logger: a || { warn: function() {} },
                schemas: Xn.recordFromArray(t, 'name'),
                normalizeDefaultResult: Xn.normalizeDefaultResult,
                normalizeDeprecatedResult: Xn.normalizeDeprecatedResult,
                normalizeForwardResult: Xn.normalizeForwardResult,
                normalizeRedirectResult: Xn.normalizeRedirectResult,
                normalizeValidateResult: Xn.normalizeValidateResult,
              }),
                (this._unknownHandler = c),
                (this._invalidHandler = f),
                (this._deprecatedHandler = d),
                this.cleanHistory();
            }
            return (
              f(e, [
                {
                  key: 'cleanHistory',
                  value: function() {
                    this._hasDeprecationWarned = Xn.createAutoChecklist();
                  },
                },
                {
                  key: 'normalize',
                  value: function(e) {
                    var t = this,
                      n = {},
                      r = [e],
                      i = function() {
                        for (; 0 !== r.length; ) {
                          var e = r.shift(),
                            i = t._applyNormalization(e, n);
                          r.push.apply(r, A(i));
                        }
                      };
                    i();
                    for (
                      var a = 0, o = Object.keys(this._utils.schemas);
                      a < o.length;
                      a++
                    ) {
                      var s = o[a],
                        u = this._utils.schemas[s];
                      if (!(s in n)) {
                        var c = Xn.normalizeDefaultResult(
                          u.default(this._utils),
                        );
                        'value' in c && r.push(h({}, s, c.value));
                      }
                    }
                    i();
                    for (
                      var l = 0, p = Object.keys(this._utils.schemas);
                      l < p.length;
                      l++
                    ) {
                      var f = p[l],
                        d = this._utils.schemas[f];
                      f in n && (n[f] = d.postprocess(n[f], this._utils));
                    }
                    return n;
                  },
                },
                {
                  key: '_applyNormalization',
                  value: function(e, t) {
                    var n = this,
                      r = [],
                      i = x(
                        Xn.partition(Object.keys(e), function(e) {
                          return e in n._utils.schemas;
                        }),
                        2,
                      ),
                      a = i[0],
                      o = i[1],
                      s = !0,
                      u = !1,
                      c = void 0;
                    try {
                      for (
                        var l,
                          p = function() {
                            var i = l.value,
                              a = n._utils.schemas[i],
                              o = a.preprocess(e[i], n._utils),
                              s = Xn.normalizeValidateResult(
                                a.validate(o, n._utils),
                                o,
                              );
                            if (!0 !== s) {
                              var u = s.value,
                                c = n._invalidHandler(i, u, n._utils);
                              throw 'string' == typeof c ? new Error(c) : c;
                            }
                            var p = function(e) {
                                var t = e.from,
                                  n = e.to;
                                r.push(
                                  'string' == typeof n
                                    ? h({}, n, t)
                                    : h({}, n.key, n.value),
                                );
                              },
                              f = function(e) {
                                var t = e.value,
                                  r = e.redirectTo,
                                  s = Xn.normalizeDeprecatedResult(
                                    a.deprecated(t, n._utils),
                                    o,
                                    !0,
                                  );
                                if (!1 !== s)
                                  if (!0 === s)
                                    n._hasDeprecationWarned(i) ||
                                      n._utils.logger.warn(
                                        n._deprecatedHandler(i, r, n._utils),
                                      );
                                  else {
                                    var u = !0,
                                      c = !1,
                                      l = void 0;
                                    try {
                                      for (
                                        var p, f = s[Symbol.iterator]();
                                        !(u = (p = f.next()).done);
                                        u = !0
                                      ) {
                                        var h = p.value.value,
                                          d = { key: i, value: h };
                                        if (!n._hasDeprecationWarned(d)) {
                                          var m =
                                            'string' == typeof r
                                              ? { key: r, value: h }
                                              : r;
                                          n._utils.logger.warn(
                                            n._deprecatedHandler(
                                              d,
                                              m,
                                              n._utils,
                                            ),
                                          );
                                        }
                                      }
                                    } catch (e) {
                                      (c = !0), (l = e);
                                    } finally {
                                      try {
                                        u || null == f.return || f.return();
                                      } finally {
                                        if (c) throw l;
                                      }
                                    }
                                  }
                              };
                            Xn.normalizeForwardResult(
                              a.forward(o, n._utils),
                              o,
                            ).forEach(p);
                            var d = Xn.normalizeRedirectResult(
                              a.redirect(o, n._utils),
                              o,
                            );
                            if ((d.redirect.forEach(p), ('remain' in d))) {
                              var m = d.remain;
                              (t[i] =
                                (i in t) ? a.overlap(t[i], m, n._utils) : m),
                                f({ value: m });
                            }
                            var g = !0,
                              y = !1,
                              v = void 0;
                            try {
                              for (
                                var D, E = d.redirect[Symbol.iterator]();
                                !(g = (D = E.next()).done);
                                g = !0
                              ) {
                                var C = D.value;
                                f({ value: C.from, redirectTo: C.to });
                              }
                            } catch (e) {
                              (y = !0), (v = e);
                            } finally {
                              try {
                                g || null == E.return || E.return();
                              } finally {
                                if (y) throw v;
                              }
                            }
                          },
                          f = a[Symbol.iterator]();
                        !(s = (l = f.next()).done);
                        s = !0
                      )
                        p();
                    } catch (e) {
                      (u = !0), (c = e);
                    } finally {
                      try {
                        s || null == f.return || f.return();
                      } finally {
                        if (u) throw c;
                      }
                    }
                    var d = !0,
                      m = !1,
                      g = void 0;
                    try {
                      for (
                        var y, v = o[Symbol.iterator]();
                        !(d = (y = v.next()).done);
                        d = !0
                      ) {
                        var D = y.value,
                          E = e[D],
                          C = this._unknownHandler(D, E, this._utils);
                        if (C)
                          for (
                            var b = 0, A = Object.keys(C);
                            b < A.length;
                            b++
                          ) {
                            var S = A[b],
                              w = h({}, S, C[S]);
                            S in this._utils.schemas
                              ? r.push(w)
                              : Object.assign(t, w);
                          }
                      }
                    } catch (e) {
                      (m = !0), (g = e);
                    } finally {
                      try {
                        d || null == v.return || v.return();
                      } finally {
                        if (m) throw g;
                      }
                    }
                    return r;
                  },
                },
              ]),
              e
            );
          })();
          t.Normalizer = n;
        });
        ct(rr), rr.normalize, rr.Normalizer;
        var ir = lt(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            on.__exportStar(sn, t),
            on.__exportStar(qn, t),
            on.__exportStar(tr, t),
            on.__exportStar(rr, t),
            on.__exportStar(Yn, t);
        });
        ct(ir);
        var ar = [],
          or = [],
          sr = function(e, t) {
            if (e === t) return 0;
            var n = e;
            e.length > t.length && ((e = t), (t = n));
            for (
              var r = e.length, i = t.length;
              r > 0 && e.charCodeAt(~-r) === t.charCodeAt(~-i);

            )
              r--, i--;
            for (
              var a, o, s, u, c = 0;
              c < r && e.charCodeAt(c) === t.charCodeAt(c);

            )
              c++;
            if (((i -= c), 0 == (r -= c))) return i;
            for (var l = 0, p = 0; l < r; )
              (or[l] = e.charCodeAt(c + l)), (ar[l] = ++l);
            for (; p < i; )
              for (a = t.charCodeAt(c + p), s = p++, o = p, l = 0; l < r; l++)
                (u = a === or[l] ? s : s + 1),
                  (s = ar[l]),
                  (o = ar[l] = s > o ? (u > o ? o + 1 : u) : u > s ? s + 1 : u);
            return o;
          },
          ur = sr,
          cr = sr;
        ur.default = cr;
        var lr,
          pr = {
            key: function(e) {
              return 1 === e.length ? '-'.concat(e) : '--'.concat(e);
            },
            value: function(e) {
              return ir.apiDescriptor.value(e);
            },
            pair: function(e) {
              var t = e.key,
                n = e.value;
              return !1 === n
                ? '--no-'.concat(t)
                : !0 === n
                ? pr.key(t)
                : '' === n
                ? ''.concat(pr.key(t), ' without an argument')
                : ''.concat(pr.key(t), '=').concat(n);
            },
          },
          fr = (function(e) {
            function t(e) {
              var n,
                r = e.name,
                i = e.flags;
              return (
                l(this, t),
                ((n = E(
                  this,
                  m(t).call(this, { name: r, choices: i }),
                ))._flags = i.slice().sort()),
                n
              );
            }
            return (
              d(t, e),
              f(t, [
                {
                  key: 'preprocess',
                  value: function(e, t) {
                    if (
                      'string' == typeof e &&
                      0 !== e.length &&
                      -1 === this._flags.indexOf(e)
                    ) {
                      var n = this._flags.find(function(t) {
                        return ur(t, e) < 3;
                      });
                      if (n)
                        return (
                          t.logger.warn(
                            [
                              'Unknown flag '.concat(
                                Pn.yellow(t.descriptor.value(e)),
                                ',',
                              ),
                              'did you mean '.concat(
                                Pn.blue(t.descriptor.value(n)),
                                '?',
                              ),
                            ].join(' '),
                          ),
                          n
                        );
                    }
                    return e;
                  },
                },
                {
                  key: 'expected',
                  value: function() {
                    return 'a flag';
                  },
                },
              ]),
              t
            );
          })(ir.ChoiceSchema);
        function hr(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {},
            r = n.logger,
            i = n.isCLI,
            a = void 0 !== i && i,
            o = n.passThrough,
            s = void 0 !== o && o,
            u = s
              ? Array.isArray(s)
                ? function(e, t) {
                    return -1 === s.indexOf(e) ? void 0 : h({}, e, t);
                  }
                : function(e, t) {
                    return h({}, e, t);
                  }
              : ir.levenUnknownHandler,
            c = a ? pr : ir.apiDescriptor,
            l = dr(t, { isCLI: a }),
            p = new ir.Normalizer(l, { logger: r, unknown: u, descriptor: c }),
            f = !1 !== r;
          f && lr && (p._hasDeprecationWarned = lr);
          var d = p.normalize(e);
          return f && (lr = p._hasDeprecationWarned), d;
        }
        function dr(e, t) {
          var n = t.isCLI,
            r = [];
          n && r.push(ir.AnySchema.create({ name: '_' }));
          var i = !0,
            a = !1,
            o = void 0;
          try {
            for (
              var s, u = e[Symbol.iterator]();
              !(i = (s = u.next()).done);
              i = !0
            ) {
              var c = s.value;
              r.push(mr(c, { isCLI: n, optionInfos: e })),
                c.alias &&
                  n &&
                  r.push(
                    ir.AliasSchema.create({
                      name: c.alias,
                      sourceName: c.name,
                    }),
                  );
            }
          } catch (e) {
            (a = !0), (o = e);
          } finally {
            try {
              i || null == u.return || u.return();
            } finally {
              if (a) throw o;
            }
          }
          return r;
        }
        function mr(e, t) {
          var n,
            r = t.isCLI,
            i = t.optionInfos,
            a = { name: e.name },
            o = {};
          switch (e.type) {
            case 'int':
              (n = ir.IntegerSchema),
                r &&
                  (a.preprocess = function(e) {
                    return Number(e);
                  });
              break;
            case 'string':
              n = ir.StringSchema;
              break;
            case 'choice':
              (n = ir.ChoiceSchema),
                (a.choices = e.choices.map(function(t) {
                  return 'object' === c(t) && t.redirect
                    ? Object.assign({}, t, {
                        redirect: { to: { key: e.name, value: t.redirect } },
                      })
                    : t;
                }));
              break;
            case 'boolean':
              n = ir.BooleanSchema;
              break;
            case 'flag':
              (n = fr),
                (a.flags = i
                  .map(function(e) {
                    return [].concat(
                      e.alias || [],
                      e.description ? e.name : [],
                      e.oppositeDescription ? 'no-'.concat(e.name) : [],
                    );
                  })
                  .reduce(function(e, t) {
                    return e.concat(t);
                  }, []));
              break;
            case 'path':
              n = ir.StringSchema;
              break;
            default:
              throw new Error('Unexpected type '.concat(e.type));
          }
          if (
            (e.exception
              ? (a.validate = function(t, n, r) {
                  return e.exception(t) || n.validate(t, r);
                })
              : (a.validate = function(e, t, n) {
                  return void 0 === e || t.validate(e, n);
                }),
            e.redirect &&
              (o.redirect = function(t) {
                return t
                  ? { to: { key: e.redirect.option, value: e.redirect.value } }
                  : void 0;
              }),
            e.deprecated && (o.deprecated = !0),
            r && !e.array)
          ) {
            var s =
              a.preprocess ||
              function(e) {
                return e;
              };
            a.preprocess = function(e, t, n) {
              return t.preprocess(s(Array.isArray(e) ? e[e.length - 1] : e), n);
            };
          }
          return e.array
            ? ir.ArraySchema.create(
                Object.assign(
                  r
                    ? {
                        preprocess: function(e) {
                          return [].concat(e);
                        },
                      }
                    : {},
                  o,
                  { valueSchema: n.create(a) },
                ),
              )
            : n.create(Object.assign({}, a, o));
        }
        var gr = {
            normalizeApiOptions: function(e, t, n) {
              return hr(e, t, n);
            },
            normalizeCliOptions: function(e, t, n) {
              return hr(e, t, Object.assign({ isCLI: !0 }, n));
            },
          },
          yr = function(e) {
            return e.length > 0 ? e[e.length - 1] : null;
          },
          vr = function e(t, n) {
            return !(n = n || {}).ignoreDecorators &&
              t.declaration &&
              t.declaration.decorators &&
              t.declaration.decorators.length > 0
              ? e(t.declaration.decorators[0])
              : !n.ignoreDecorators && t.decorators && t.decorators.length > 0
              ? e(t.decorators[0])
              : t.__location
              ? t.__location.startOffset
              : t.range
              ? t.range[0]
              : 'number' == typeof t.start
              ? t.start
              : t.loc
              ? t.loc.start
              : null;
          },
          Dr = function e(t) {
            var n = t.nodes && yr(t.nodes);
            if ((n && t.source && !t.source.end && (t = n), t.__location))
              return t.__location.endOffset;
            var r = t.range
              ? t.range[1]
              : 'number' == typeof t.end
              ? t.end
              : null;
            return t.typeAnnotation
              ? Math.max(r, e(t.typeAnnotation))
              : t.loc && !r
              ? t.loc.end
              : r;
          },
          Er = lt(function(e, t) {
            Object.defineProperty(t, '__esModule', { value: !0 }),
              (t.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g),
              (t.matchToToken = function(e) {
                var t = { type: 'invalid', value: e[0], closed: void 0 };
                return (
                  e[1]
                    ? ((t.type = 'string'), (t.closed = !(!e[3] && !e[4])))
                    : e[5]
                    ? (t.type = 'comment')
                    : e[6]
                    ? ((t.type = 'comment'), (t.closed = !!e[7]))
                    : e[8]
                    ? (t.type = 'regex')
                    : e[9]
                    ? (t.type = 'number')
                    : e[10]
                    ? (t.type = 'name')
                    : e[11]
                    ? (t.type = 'punctuator')
                    : e[12] && (t.type = 'whitespace'),
                  t
                );
              });
          });
        ct(Er), Er.matchToToken;
        var Cr = lt(function(e) {
            !(function() {
              function t(e) {
                if (null == e) return !1;
                switch (e.type) {
                  case 'BlockStatement':
                  case 'BreakStatement':
                  case 'ContinueStatement':
                  case 'DebuggerStatement':
                  case 'DoWhileStatement':
                  case 'EmptyStatement':
                  case 'ExpressionStatement':
                  case 'ForInStatement':
                  case 'ForStatement':
                  case 'IfStatement':
                  case 'LabeledStatement':
                  case 'ReturnStatement':
                  case 'SwitchStatement':
                  case 'ThrowStatement':
                  case 'TryStatement':
                  case 'VariableDeclaration':
                  case 'WhileStatement':
                  case 'WithStatement':
                    return !0;
                }
                return !1;
              }
              function n(e) {
                switch (e.type) {
                  case 'IfStatement':
                    return null != e.alternate ? e.alternate : e.consequent;
                  case 'LabeledStatement':
                  case 'ForStatement':
                  case 'ForInStatement':
                  case 'WhileStatement':
                  case 'WithStatement':
                    return e.body;
                }
                return null;
              }
              e.exports = {
                isExpression: function(e) {
                  if (null == e) return !1;
                  switch (e.type) {
                    case 'ArrayExpression':
                    case 'AssignmentExpression':
                    case 'BinaryExpression':
                    case 'CallExpression':
                    case 'ConditionalExpression':
                    case 'FunctionExpression':
                    case 'Identifier':
                    case 'Literal':
                    case 'LogicalExpression':
                    case 'MemberExpression':
                    case 'NewExpression':
                    case 'ObjectExpression':
                    case 'SequenceExpression':
                    case 'ThisExpression':
                    case 'UnaryExpression':
                    case 'UpdateExpression':
                      return !0;
                  }
                  return !1;
                },
                isStatement: t,
                isIterationStatement: function(e) {
                  if (null == e) return !1;
                  switch (e.type) {
                    case 'DoWhileStatement':
                    case 'ForInStatement':
                    case 'ForStatement':
                    case 'WhileStatement':
                      return !0;
                  }
                  return !1;
                },
                isSourceElement: function(e) {
                  return (
                    t(e) || (null != e && 'FunctionDeclaration' === e.type)
                  );
                },
                isProblematicIfStatement: function(e) {
                  var t;
                  if ('IfStatement' !== e.type) return !1;
                  if (null == e.alternate) return !1;
                  t = e.consequent;
                  do {
                    if ('IfStatement' === t.type && null == t.alternate)
                      return !0;
                    t = n(t);
                  } while (t);
                  return !1;
                },
                trailingStatement: n,
              };
            })();
          }),
          br =
            (Cr.isExpression,
            Cr.isStatement,
            Cr.isIterationStatement,
            Cr.isSourceElement,
            Cr.isProblematicIfStatement,
            Cr.trailingStatement,
            lt(function(e) {
              !(function() {
                var t, n, r, i, a, o;
                function s(e) {
                  return e <= 65535
                    ? String.fromCharCode(e)
                    : String.fromCharCode(
                        Math.floor((e - 65536) / 1024) + 55296,
                      ) + String.fromCharCode(((e - 65536) % 1024) + 56320);
                }
                for (
                  n = {
                    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
                    NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
                  },
                    t = {
                      NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
                      NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,
                    },
                    r = [
                      5760,
                      8192,
                      8193,
                      8194,
                      8195,
                      8196,
                      8197,
                      8198,
                      8199,
                      8200,
                      8201,
                      8202,
                      8239,
                      8287,
                      12288,
                      65279,
                    ],
                    i = new Array(128),
                    o = 0;
                  o < 128;
                  ++o
                )
                  i[o] =
                    (o >= 97 && o <= 122) ||
                    (o >= 65 && o <= 90) ||
                    36 === o ||
                    95 === o;
                for (a = new Array(128), o = 0; o < 128; ++o)
                  a[o] =
                    (o >= 97 && o <= 122) ||
                    (o >= 65 && o <= 90) ||
                    (o >= 48 && o <= 57) ||
                    36 === o ||
                    95 === o;
                e.exports = {
                  isDecimalDigit: function(e) {
                    return 48 <= e && e <= 57;
                  },
                  isHexDigit: function(e) {
                    return (
                      (48 <= e && e <= 57) ||
                      (97 <= e && e <= 102) ||
                      (65 <= e && e <= 70)
                    );
                  },
                  isOctalDigit: function(e) {
                    return e >= 48 && e <= 55;
                  },
                  isWhiteSpace: function(e) {
                    return (
                      32 === e ||
                      9 === e ||
                      11 === e ||
                      12 === e ||
                      160 === e ||
                      (e >= 5760 && r.indexOf(e) >= 0)
                    );
                  },
                  isLineTerminator: function(e) {
                    return 10 === e || 13 === e || 8232 === e || 8233 === e;
                  },
                  isIdentifierStartES5: function(e) {
                    return e < 128
                      ? i[e]
                      : n.NonAsciiIdentifierStart.test(s(e));
                  },
                  isIdentifierPartES5: function(e) {
                    return e < 128 ? a[e] : n.NonAsciiIdentifierPart.test(s(e));
                  },
                  isIdentifierStartES6: function(e) {
                    return e < 128
                      ? i[e]
                      : t.NonAsciiIdentifierStart.test(s(e));
                  },
                  isIdentifierPartES6: function(e) {
                    return e < 128 ? a[e] : t.NonAsciiIdentifierPart.test(s(e));
                  },
                };
              })();
            })),
          xr =
            (br.isDecimalDigit,
            br.isHexDigit,
            br.isOctalDigit,
            br.isWhiteSpace,
            br.isLineTerminator,
            br.isIdentifierStartES5,
            br.isIdentifierPartES5,
            br.isIdentifierStartES6,
            br.isIdentifierPartES6,
            lt(function(e) {
              !(function() {
                var t = br;
                function n(e, t) {
                  return !(!t && 'yield' === e) && r(e, t);
                }
                function r(e, t) {
                  if (
                    t &&
                    (function(e) {
                      switch (e) {
                        case 'implements':
                        case 'interface':
                        case 'package':
                        case 'private':
                        case 'protected':
                        case 'public':
                        case 'static':
                        case 'let':
                          return !0;
                        default:
                          return !1;
                      }
                    })(e)
                  )
                    return !0;
                  switch (e.length) {
                    case 2:
                      return 'if' === e || 'in' === e || 'do' === e;
                    case 3:
                      return (
                        'var' === e || 'for' === e || 'new' === e || 'try' === e
                      );
                    case 4:
                      return (
                        'this' === e ||
                        'else' === e ||
                        'case' === e ||
                        'void' === e ||
                        'with' === e ||
                        'enum' === e
                      );
                    case 5:
                      return (
                        'while' === e ||
                        'break' === e ||
                        'catch' === e ||
                        'throw' === e ||
                        'const' === e ||
                        'yield' === e ||
                        'class' === e ||
                        'super' === e
                      );
                    case 6:
                      return (
                        'return' === e ||
                        'typeof' === e ||
                        'delete' === e ||
                        'switch' === e ||
                        'export' === e ||
                        'import' === e
                      );
                    case 7:
                      return (
                        'default' === e || 'finally' === e || 'extends' === e
                      );
                    case 8:
                      return (
                        'function' === e || 'continue' === e || 'debugger' === e
                      );
                    case 10:
                      return 'instanceof' === e;
                    default:
                      return !1;
                  }
                }
                function i(e, t) {
                  return (
                    'null' === e || 'true' === e || 'false' === e || n(e, t)
                  );
                }
                function a(e, t) {
                  return (
                    'null' === e || 'true' === e || 'false' === e || r(e, t)
                  );
                }
                function o(e) {
                  var n, r, i;
                  if (0 === e.length) return !1;
                  if (((i = e.charCodeAt(0)), !t.isIdentifierStartES5(i)))
                    return !1;
                  for (n = 1, r = e.length; n < r; ++n)
                    if (((i = e.charCodeAt(n)), !t.isIdentifierPartES5(i)))
                      return !1;
                  return !0;
                }
                function s(e) {
                  var n, r, i, a, o;
                  if (0 === e.length) return !1;
                  for (
                    o = t.isIdentifierStartES6, n = 0, r = e.length;
                    n < r;
                    ++n
                  ) {
                    if (55296 <= (i = e.charCodeAt(n)) && i <= 56319) {
                      if (++n >= r) return !1;
                      if (!(56320 <= (a = e.charCodeAt(n)) && a <= 57343))
                        return !1;
                      i = 1024 * (i - 55296) + (a - 56320) + 65536;
                    }
                    if (!o(i)) return !1;
                    o = t.isIdentifierPartES6;
                  }
                  return !0;
                }
                e.exports = {
                  isKeywordES5: n,
                  isKeywordES6: r,
                  isReservedWordES5: i,
                  isReservedWordES6: a,
                  isRestrictedWord: function(e) {
                    return 'eval' === e || 'arguments' === e;
                  },
                  isIdentifierNameES5: o,
                  isIdentifierNameES6: s,
                  isIdentifierES5: function(e, t) {
                    return o(e) && !i(e, t);
                  },
                  isIdentifierES6: function(e, t) {
                    return s(e) && !a(e, t);
                  },
                };
              })();
            })),
          Ar =
            (xr.isKeywordES5,
            xr.isKeywordES6,
            xr.isReservedWordES5,
            xr.isReservedWordES6,
            xr.isRestrictedWord,
            xr.isIdentifierNameES5,
            xr.isIdentifierNameES6,
            xr.isIdentifierES5,
            xr.isIdentifierES6,
            lt(function(e, t) {
              (t.ast = Cr), (t.code = br), (t.keyword = xr);
            })),
          Sr =
            (Ar.ast,
            Ar.code,
            Ar.keyword,
            lt(function(e, t) {
              function n() {
                var e = (function(e) {
                  if (e && e.__esModule) return e;
                  var t = {};
                  if (null != e)
                    for (var n in e)
                      if (Object.prototype.hasOwnProperty.call(e, n)) {
                        var r =
                          Object.defineProperty &&
                          Object.getOwnPropertyDescriptor
                            ? Object.getOwnPropertyDescriptor(e, n)
                            : {};
                        r.get || r.set
                          ? Object.defineProperty(t, n, r)
                          : (t[n] = e[n]);
                      }
                  return (t.default = e), t;
                })(Er);
                return (
                  (n = function() {
                    return e;
                  }),
                  e
                );
              }
              function r() {
                var e = a(Ar);
                return (
                  (r = function() {
                    return e;
                  }),
                  e
                );
              }
              function i() {
                var e = a(Pn);
                return (
                  (i = function() {
                    return e;
                  }),
                  e
                );
              }
              function a(e) {
                return e && e.__esModule ? e : { default: e };
              }
              function o(e) {
                return {
                  keyword: e.cyan,
                  capitalized: e.yellow,
                  jsx_tag: e.yellow,
                  punctuator: e.yellow,
                  number: e.magenta,
                  string: e.green,
                  regex: e.magenta,
                  comment: e.grey,
                  invalid: e.white.bgRed.bold,
                };
              }
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.shouldHighlight = f),
                (t.getChalk = h),
                (t.default = function(e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (f(t)) {
                    var n = h(t),
                      r = o(n);
                    return p(r, e);
                  }
                  return e;
                });
              var s = /\r\n|[\n\r\u2028\u2029]/,
                u = /^[a-z][\w-]*$/i,
                c = /^[()[\]{}]$/;
              function l(e) {
                var t = x(e.slice(-2), 2),
                  i = t[0],
                  a = t[1],
                  o = (0, n().matchToToken)(e);
                if ('name' === o.type) {
                  if (r().default.keyword.isReservedWordES6(o.value))
                    return 'keyword';
                  if (
                    u.test(o.value) &&
                    ('<' === a[i - 1] || '</' == a.substr(i - 2, 2))
                  )
                    return 'jsx_tag';
                  if (o.value[0] !== o.value[0].toLowerCase())
                    return 'capitalized';
                }
                return 'punctuator' === o.type && c.test(o.value)
                  ? 'bracket'
                  : 'invalid' !== o.type || ('@' !== o.value && '#' !== o.value)
                  ? o.type
                  : 'punctuator';
              }
              function p(e, t) {
                return t.replace(n().default, function() {
                  for (
                    var t = arguments.length, n = new Array(t), r = 0;
                    r < t;
                    r++
                  )
                    n[r] = arguments[r];
                  var i = l(n),
                    a = e[i];
                  return a
                    ? n[0]
                        .split(s)
                        .map(function(e) {
                          return a(e);
                        })
                        .join('\n')
                    : n[0];
                });
              }
              function f(e) {
                return i().default.supportsColor || e.forceColor;
              }
              function h(e) {
                var t = i().default;
                return (
                  e.forceColor &&
                    (t = new (i().default.constructor)({
                      enabled: !0,
                      level: 1,
                    })),
                  t
                );
              }
            }));
        ct(Sr), Sr.shouldHighlight, Sr.getChalk;
        var wr = lt(function(e, t) {
          function n() {
            var e = (function(e) {
              if (e && e.__esModule) return e;
              var t = {};
              if (null != e)
                for (var n in e)
                  if (Object.prototype.hasOwnProperty.call(e, n)) {
                    var r =
                      Object.defineProperty && Object.getOwnPropertyDescriptor
                        ? Object.getOwnPropertyDescriptor(e, n)
                        : {};
                    r.get || r.set
                      ? Object.defineProperty(t, n, r)
                      : (t[n] = e[n]);
                  }
              return (t.default = e), t;
            })(Sr);
            return (
              (n = function() {
                return e;
              }),
              e
            );
          }
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.codeFrameColumns = s),
            (t.default = function(e, t, n) {
              var i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {};
              if (!r) {
                r = !0;
                var a =
                  'Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.';
                if (Rt.emitWarning) Rt.emitWarning(a, 'DeprecationWarning');
                else {
                  var o = new Error(a);
                  (o.name = 'DeprecationWarning'), console.warn(new Error(a));
                }
              }
              var u = { start: { column: (n = Math.max(n, 0)), line: t } };
              return s(e, u, i);
            });
          var r = !1;
          function i(e) {
            return { gutter: e.grey, marker: e.red.bold, message: e.red.bold };
          }
          var a = /\r\n|[\n\r\u2028\u2029]/;
          function o(e, t, n) {
            var r = Object.assign({ column: 0, line: -1 }, e.start),
              i = Object.assign({}, r, e.end),
              a = n || {},
              o = a.linesAbove,
              s = void 0 === o ? 2 : o,
              u = a.linesBelow,
              c = void 0 === u ? 3 : u,
              l = r.line,
              p = r.column,
              f = i.line,
              h = i.column,
              d = Math.max(l - (s + 1), 0),
              m = Math.min(t.length, f + c);
            -1 === l && (d = 0), -1 === f && (m = t.length);
            var g = f - l,
              y = {};
            if (g)
              for (var v = 0; v <= g; v++) {
                var D = v + l;
                if (p)
                  if (0 === v) {
                    var E = t[D - 1].length;
                    y[D] = [p, E - p + 1];
                  } else if (v === g) y[D] = [0, h];
                  else {
                    var C = t[D - v].length;
                    y[D] = [0, C];
                  }
                else y[D] = !0;
              }
            else y[l] = p === h ? !p || [p, 0] : [p, h - p];
            return { start: d, end: m, markerLines: y };
          }
          function s(e, t) {
            var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {},
              s =
                (r.highlightCode || r.forceColor) &&
                (0, n().shouldHighlight)(r),
              u = (0, n().getChalk)(r),
              c = i(u),
              l = function(e, t) {
                return s ? e(t) : t;
              },
              p = e.split(a),
              f = o(t, p, r),
              h = f.start,
              d = f.end,
              m = f.markerLines,
              g = t.start && 'number' == typeof t.start.column,
              y = String(d).length,
              v = s ? (0, n().default)(e, r) : e,
              D = v
                .split(a)
                .slice(h, d)
                .map(function(e, t) {
                  var n = h + 1 + t,
                    i = ' '.concat(n).slice(-y),
                    a = ' '.concat(i, ' | '),
                    o = m[n],
                    s = !m[n + 1];
                  if (o) {
                    var u = '';
                    if (Array.isArray(o)) {
                      var p = e
                          .slice(0, Math.max(o[0] - 1, 0))
                          .replace(/[^\t]/g, ' '),
                        f = o[1] || 1;
                      (u = [
                        '\n ',
                        l(c.gutter, a.replace(/\d/g, ' ')),
                        p,
                        l(c.marker, '^').repeat(f),
                      ].join('')),
                        s && r.message && (u += ' ' + l(c.message, r.message));
                    }
                    return [l(c.marker, '>'), l(c.gutter, a), e, u].join('');
                  }
                  return ' '.concat(l(c.gutter, a)).concat(e);
                })
                .join('\n');
            return (
              r.message &&
                !g &&
                (D = ''
                  .concat(' '.repeat(y + 1))
                  .concat(r.message, '\n')
                  .concat(D)),
              s ? u.reset(D) : D
            );
          }
        });
        ct(wr), wr.codeFrameColumns;
        var Fr = dt.ConfigError,
          kr = vr,
          Tr = Dr,
          _r = Object.getOwnPropertyNames,
          Or = Object.getOwnPropertyDescriptor;
        function Nr(e) {
          var t = {},
            n = !0,
            r = !1,
            i = void 0;
          try {
            for (
              var a, o = e.plugins[Symbol.iterator]();
              !(n = (a = o.next()).done);
              n = !0
            ) {
              var s = a.value;
              if (s.parsers) {
                var u = !0,
                  c = !1,
                  l = void 0;
                try {
                  for (
                    var p, f = _r(s.parsers)[Symbol.iterator]();
                    !(u = (p = f.next()).done);
                    u = !0
                  ) {
                    var h = p.value;
                    Object.defineProperty(t, h, Or(s.parsers, h));
                  }
                } catch (e) {
                  (c = !0), (l = e);
                } finally {
                  try {
                    u || null == f.return || f.return();
                  } finally {
                    if (c) throw l;
                  }
                }
              }
            }
          } catch (e) {
            (r = !0), (i = e);
          } finally {
            try {
              n || null == o.return || o.return();
            } finally {
              if (r) throw i;
            }
          }
          return t;
        }
        function Br(e, t) {
          if (((t = t || Nr(e)), 'function' == typeof e.parser))
            return {
              parse: e.parser,
              astFormat: 'estree',
              locStart: kr,
              locEnd: Tr,
            };
          if ('string' == typeof e.parser) {
            if (Object.prototype.hasOwnProperty.call(t, e.parser))
              return t[e.parser];
            throw new Fr(
              'Couldn\'t resolve parser "'.concat(
                e.parser,
                '". Parsers must be explicitly added to the standalone bundle.',
              ),
            );
          }
        }
        var Ir = {
            parse: function(e, t) {
              var n = Nr(t),
                r = Object.keys(n).reduce(function(e, t) {
                  return Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: function() {
                      return n[t].parse;
                    },
                  });
                }, {}),
                i = Br(t, n);
              try {
                return (
                  i.preprocess && (e = i.preprocess(e, t)),
                  { text: e, ast: i.parse(e, r, t) }
                );
              } catch (t) {
                var a = t.loc;
                if (a) {
                  var o = wr;
                  throw ((t.codeFrame = o.codeFrameColumns(e, a, {
                    highlightCode: !0,
                  })),
                  (t.message += '\n' + t.codeFrame),
                  t);
                }
                throw t.stack;
              }
            },
            resolveParser: Br,
          },
          Pr = dt.UndefinedParserError,
          Mr = Gt.getSupportInfo,
          Lr = Ir.resolveParser,
          Rr = {
            astFormat: 'estree',
            printer: {},
            originalText: void 0,
            locStart: null,
            locEnd: null,
          };
        function jr(e, t) {
          var n = (function(e, t) {
              if ('string' != typeof e)
                throw new TypeError('expected path to be a string');
              if ('\\' === e || '/' === e) return '/';
              var n = e.length;
              if (n <= 1) return e;
              var r = '';
              if (n > 4 && '\\' === e[3]) {
                var i = e[2];
                ('?' !== i && '.' !== i) ||
                  '\\\\' !== e.slice(0, 2) ||
                  ((e = e.slice(2)), (r = '//'));
              }
              var a = e.split(/[/\\]+/);
              return (
                !1 !== t && '' === a[a.length - 1] && a.pop(), r + a.join('/')
              );
            })(e).split('/'),
            r = n[n.length - 1].toLowerCase(),
            i = Mr(null, { plugins: t }).languages.find(function(t) {
              return (
                null !== t.since &&
                ((t.extensions &&
                  t.extensions.some(function(e) {
                    return r.endsWith(e);
                  })) ||
                  (t.filenames &&
                    t.filenames.find(function(e) {
                      return e.toLowerCase() === r;
                    })) ||
                  (-1 === r.indexOf('.') &&
                    t.interpreters &&
                    -1 !==
                      t.interpreters.indexOf(
                        (function(e) {
                          if ('string' != typeof e) return '';
                          var t;
                          try {
                            t = ft.openSync(e, 'r');
                          } catch (e) {
                            return '';
                          }
                          try {
                            var n = new ht(t).next().toString('utf8'),
                              r = n.match(/^#!\/(?:usr\/)?bin\/env\s+(\S+)/);
                            if (r) return r[1];
                            var i = n.match(
                              /^#!\/(?:usr\/(?:local\/)?)?bin\/(\S+)/,
                            );
                            return i ? i[1] : '';
                          } catch (e) {
                            return '';
                          } finally {
                            try {
                              ft.closeSync(t);
                            } catch (e) {}
                          }
                        })(e),
                      )))
              );
            });
          return i && i.parsers[0];
        }
        var Ur = function(e, t) {
            t = t || {};
            var n = Object.assign({}, e),
              r = Mr(null, {
                plugins: e.plugins,
                showUnreleased: !0,
                showDeprecated: !0,
              }).options,
              i = r.reduce(function(e, t) {
                return void 0 !== t.default
                  ? Object.assign(e, h({}, t.name, t.default))
                  : e;
              }, Object.assign({}, Rr));
            if (!n.parser)
              if (n.filepath) {
                if (((n.parser = jr(n.filepath, n.plugins)), !n.parser))
                  throw new Pr(
                    'No parser could be inferred for file: '.concat(n.filepath),
                  );
              } else
                (t.logger || console).warn(
                  "No parser and no filepath given, using 'babel' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred.",
                ),
                  (n.parser = 'babel');
            var a = Lr(
              gr.normalizeApiOptions(
                n,
                [
                  r.find(function(e) {
                    return 'parser' === e.name;
                  }),
                ],
                { passThrough: !0, logger: !1 },
              ),
            );
            (n.astFormat = a.astFormat),
              (n.locEnd = a.locEnd),
              (n.locStart = a.locStart);
            var o = (function(e) {
              var t = e.astFormat;
              if (!t)
                throw new Error('getPlugin() requires astFormat to be set');
              var n = e.plugins.find(function(e) {
                return e.printers && e.printers[t];
              });
              if (!n)
                throw new Error(
                  'Couldn\'t find plugin for AST format "'.concat(t, '"'),
                );
              return n;
            })(n);
            n.printer = o.printers[n.astFormat];
            var s = r
                .filter(function(e) {
                  return (
                    e.pluginDefaults && void 0 !== e.pluginDefaults[o.name]
                  );
                })
                .reduce(function(e, t) {
                  return Object.assign(
                    e,
                    h({}, t.name, t.pluginDefaults[o.name]),
                  );
                }, {}),
              u = Object.assign({}, i, s);
            return (
              Object.keys(u).forEach(function(e) {
                null == n[e] && (n[e] = u[e]);
              }),
              'json' === n.parser && (n.trailingComma = 'none'),
              gr.normalizeApiOptions(
                n,
                r,
                Object.assign({ passThrough: Object.keys(Rr) }, t),
              )
            );
          },
          Vr = function e(t, n, r) {
            if (Array.isArray(t))
              return t
                .map(function(t) {
                  return e(t, n, r);
                })
                .filter(function(e) {
                  return e;
                });
            if (!t || 'object' !== c(t)) return t;
            for (var i = {}, a = 0, o = Object.keys(t); a < o.length; a++) {
              var s = o[a];
              'function' != typeof t[s] && (i[s] = e(t[s], n, t));
            }
            if (n.printer.massageAstNode) {
              var u = n.printer.massageAstNode(t, i, r);
              if (null === u) return;
              if (u) return u;
            }
            return i;
          };
        function Wr() {}
        function $r(e) {
          return { type: 'concat', parts: e };
        }
        function qr(e) {
          return { type: 'indent', contents: e };
        }
        function Yr(e, t) {
          return { type: 'align', contents: t, n: e };
        }
        function Jr(e, t) {
          return {
            type: 'group',
            id: (t = t || {}).id,
            contents: e,
            break: !!t.shouldBreak,
            expandedStates: t.expandedStates,
          };
        }
        (Wr.ok = function() {}), (Wr.strictEqual = function() {});
        var Kr = { type: 'break-parent' },
          zr = $r([{ type: 'line', hard: !0 }, Kr]),
          Hr = $r([{ type: 'line', hard: !0, literal: !0 }, Kr]),
          Xr = {
            concat: $r,
            join: function(e, t) {
              for (var n = [], r = 0; r < t.length; r++)
                0 !== r && n.push(e), n.push(t[r]);
              return $r(n);
            },
            line: { type: 'line' },
            softline: { type: 'line', soft: !0 },
            hardline: zr,
            literalline: Hr,
            group: Jr,
            conditionalGroup: function(e, t) {
              return Jr(e[0], Object.assign(t || {}, { expandedStates: e }));
            },
            fill: function(e) {
              return { type: 'fill', parts: e };
            },
            lineSuffix: function(e) {
              return { type: 'line-suffix', contents: e };
            },
            lineSuffixBoundary: { type: 'line-suffix-boundary' },
            cursor: { type: 'cursor', placeholder: Symbol('cursor') },
            breakParent: Kr,
            ifBreak: function(e, t, n) {
              return {
                type: 'if-break',
                breakContents: e,
                flatContents: t,
                groupId: (n = n || {}).groupId,
              };
            },
            trim: { type: 'trim' },
            indent: qr,
            align: Yr,
            addAlignmentToDoc: function(e, t, n) {
              var r = e;
              if (t > 0) {
                for (var i = 0; i < Math.floor(t / n); ++i) r = qr(r);
                (r = Yr(t % n, r)), (r = Yr(-1 / 0, r));
              }
              return r;
            },
            markAsRoot: function(e) {
              return Yr({ type: 'root' }, e);
            },
            dedentToRoot: function(e) {
              return Yr(-1 / 0, e);
            },
            dedent: function(e) {
              return Yr(-1, e);
            },
          },
          Gr = function(e) {
            return 'string' == typeof e
              ? e.replace(
                  (function(e) {
                    e = Object.assign({ onlyFirst: !1 }, e);
                    var t = [
                      '[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)',
                      '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))',
                    ].join('|');
                    return new RegExp(t, e.onlyFirst ? void 0 : 'g');
                  })(),
                  '',
                )
              : e;
          },
          Qr = Gr,
          Zr = Gr;
        Qr.default = Zr;
        var ei = function(e) {
            return (
              !Number.isNaN(e) &&
              e >= 4352 &&
              (e <= 4447 ||
                9001 === e ||
                9002 === e ||
                (11904 <= e && e <= 12871 && 12351 !== e) ||
                (12880 <= e && e <= 19903) ||
                (19968 <= e && e <= 42182) ||
                (43360 <= e && e <= 43388) ||
                (44032 <= e && e <= 55203) ||
                (63744 <= e && e <= 64255) ||
                (65040 <= e && e <= 65049) ||
                (65072 <= e && e <= 65131) ||
                (65281 <= e && e <= 65376) ||
                (65504 <= e && e <= 65510) ||
                (110592 <= e && e <= 110593) ||
                (127488 <= e && e <= 127569) ||
                (131072 <= e && e <= 262141))
            );
          },
          ti = ei,
          ni = ei;
        ti.default = ni;
        var ri = function(e) {
            if (
              'string' !=
                typeof (e = e.replace(
                  /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g,
                  '  ',
                )) ||
              0 === e.length
            )
              return 0;
            e = Qr(e);
            for (var t = 0, n = 0; n < e.length; n++) {
              var r = e.codePointAt(n);
              r <= 31 ||
                (r >= 127 && r <= 159) ||
                (r >= 768 && r <= 879) ||
                (r > 65535 && n++, (t += ti(r) ? 2 : 1));
            }
            return t;
          },
          ii = ri,
          ai = ri;
        ii.default = ai;
        var oi = /[^\x20-\x7F]/;
        function si(e) {
          if (e)
            switch (e.type) {
              case 'ExportDefaultDeclaration':
              case 'ExportDefaultSpecifier':
              case 'DeclareExportDeclaration':
              case 'ExportNamedDeclaration':
              case 'ExportAllDeclaration':
                return !0;
            }
          return !1;
        }
        function ui(e) {
          return function(t, n, r) {
            var i = r && r.backwards;
            if (!1 === n) return !1;
            for (var a = t.length, o = n; o >= 0 && o < a; ) {
              var s = t.charAt(o);
              if (e instanceof RegExp) {
                if (!e.test(s)) return o;
              } else if (-1 === e.indexOf(s)) return o;
              i ? o-- : o++;
            }
            return (-1 === o || o === a) && o;
          };
        }
        var ci = ui(/\s/),
          li = ui(' \t'),
          pi = ui(',; \t'),
          fi = ui(/[^\r\n]/);
        function hi(e, t) {
          if (!1 === t) return !1;
          if ('/' === e.charAt(t) && '*' === e.charAt(t + 1))
            for (var n = t + 2; n < e.length; ++n)
              if ('*' === e.charAt(n) && '/' === e.charAt(n + 1)) return n + 2;
          return t;
        }
        function di(e, t) {
          return (
            !1 !== t &&
            ('/' === e.charAt(t) && '/' === e.charAt(t + 1) ? fi(e, t) : t)
          );
        }
        function mi(e, t, n) {
          var r = n && n.backwards;
          if (!1 === t) return !1;
          var i = e.charAt(t);
          if (r) {
            if ('\r' === e.charAt(t - 1) && '\n' === i) return t - 2;
            if ('\n' === i || '\r' === i || '\u2028' === i || '\u2029' === i)
              return t - 1;
          } else {
            if ('\r' === i && '\n' === e.charAt(t + 1)) return t + 2;
            if ('\n' === i || '\r' === i || '\u2028' === i || '\u2029' === i)
              return t + 1;
          }
          return t;
        }
        function gi(e, t, n) {
          var r = li(e, (n = n || {}).backwards ? t - 1 : t, n);
          return r !== mi(e, r, n);
        }
        function yi(e, t) {
          for (var n = null, r = t; r !== n; )
            (n = r), (r = hi(e, (r = pi(e, r)))), (r = li(e, r));
          return !1 !== (r = mi(e, (r = di(e, r)))) && gi(e, r);
        }
        function vi(e, t) {
          for (var n = null, r = t; r !== n; )
            (n = r), (r = mi(e, (r = di(e, (r = hi(e, (r = li(e, r))))))));
          return r;
        }
        function Di(e, t, n) {
          return vi(e, n(t));
        }
        var Ei = {};
        function Ci(e) {
          return Ei[e];
        }
        [
          ['|>'],
          ['??'],
          ['||'],
          ['&&'],
          ['|'],
          ['^'],
          ['&'],
          ['==', '===', '!=', '!=='],
          ['<', '>', '<=', '>=', 'in', 'instanceof'],
          ['>>', '<<', '>>>'],
          ['+', '-'],
          ['*', '/', '%'],
          ['**'],
        ].forEach(function(e, t) {
          e.forEach(function(e) {
            Ei[e] = t;
          });
        });
        var bi = { '==': !0, '!=': !0, '===': !0, '!==': !0 },
          xi = { '*': !0, '/': !0, '%': !0 },
          Ai = { '>>': !0, '>>>': !0, '<<': !0 };
        function Si(e, t, n) {
          for (var r = 0, i = (n = n || 0); i < e.length; ++i)
            '\t' === e[i] ? (r = r + t - (r % t)) : r++;
          return r;
        }
        function wi(e, t) {
          var n = e.slice(1, -1),
            r = { quote: '"', regex: /"/g },
            i = { quote: "'", regex: /'/g },
            a = "'" === t ? i : r,
            o = a === i ? r : i,
            s = a.quote;
          return (
            (n.includes(a.quote) || n.includes(o.quote)) &&
              (s =
                (n.match(a.regex) || []).length >
                (n.match(o.regex) || []).length
                  ? o.quote
                  : a.quote),
            s
          );
        }
        function Fi(e, t, n) {
          var r = '"' === t ? "'" : '"',
            i = e.replace(/\\([\s\S])|(['"])/g, function(e, i, a) {
              return i === r
                ? i
                : a === t
                ? '\\' + a
                : a ||
                  (n && /^[^\\nrvtbfux\r\n\u2028\u2029"'0-7]$/.test(i)
                    ? i
                    : '\\' + i);
            });
          return t + i + t;
        }
        function ki(e) {
          return (
            e &&
            e.comments &&
            e.comments.length > 0 &&
            e.comments.some(function(e) {
              return 'prettier-ignore' === e.value.trim();
            })
          );
        }
        function Ti(e, t) {
          (e.comments || (e.comments = [])).push(t),
            (t.printed = !1),
            'JSXText' === e.type && (t.printed = !0);
        }
        var _i,
          Oi = {
            replaceEndOfLineWith: function(e, t) {
              var n = [],
                r = !0,
                i = !1,
                a = void 0;
              try {
                for (
                  var o, s = e.split('\n')[Symbol.iterator]();
                  !(r = (o = s.next()).done);
                  r = !0
                ) {
                  var u = o.value;
                  0 !== n.length && n.push(t), n.push(u);
                }
              } catch (e) {
                (i = !0), (a = e);
              } finally {
                try {
                  r || null == s.return || s.return();
                } finally {
                  if (i) throw a;
                }
              }
              return n;
            },
            getStringWidth: function(e) {
              return e ? (oi.test(e) ? ii(e) : e.length) : 0;
            },
            getMaxContinuousCount: function(e, t) {
              var n = e.match(new RegExp('('.concat(cn(t), ')+'), 'g'));
              return null === n
                ? 0
                : n.reduce(function(e, n) {
                    return Math.max(e, n.length / t.length);
                  }, 0);
            },
            getMinNotPresentContinuousCount: function(e, t) {
              var n = e.match(new RegExp('('.concat(cn(t), ')+'), 'g'));
              if (null === n) return 0;
              var r = new Map(),
                i = 0,
                a = !0,
                o = !1,
                s = void 0;
              try {
                for (
                  var u, c = n[Symbol.iterator]();
                  !(a = (u = c.next()).done);
                  a = !0
                ) {
                  var l = u.value.length / t.length;
                  r.set(l, !0), l > i && (i = l);
                }
              } catch (e) {
                (o = !0), (s = e);
              } finally {
                try {
                  a || null == c.return || c.return();
                } finally {
                  if (o) throw s;
                }
              }
              for (var p = 1; p < i; p++) if (!r.get(p)) return p;
              return i + 1;
            },
            getPrecedence: Ci,
            shouldFlatten: function(e, t) {
              return !(
                Ci(t) !== Ci(e) ||
                '**' === e ||
                (bi[e] && bi[t]) ||
                ('%' === t && xi[e]) ||
                ('%' === e && xi[t]) ||
                (t !== e && xi[t] && xi[e]) ||
                (Ai[e] && Ai[t])
              );
            },
            isBitwiseOperator: function(e) {
              return !!Ai[e] || '|' === e || '^' === e || '&' === e;
            },
            isExportDeclaration: si,
            getParentExportDeclaration: function(e) {
              var t = e.getParentNode();
              return 'declaration' === e.getName() && si(t) ? t : null;
            },
            getPenultimate: function(e) {
              return e.length > 1 ? e[e.length - 2] : null;
            },
            getLast: yr,
            getNextNonSpaceNonCommentCharacterIndexWithStartIndex: vi,
            getNextNonSpaceNonCommentCharacterIndex: Di,
            getNextNonSpaceNonCommentCharacter: function(e, t, n) {
              return e.charAt(Di(e, t, n));
            },
            skip: ui,
            skipWhitespace: ci,
            skipSpaces: li,
            skipToLineEnd: pi,
            skipEverythingButNewLine: fi,
            skipInlineComment: hi,
            skipTrailingComment: di,
            skipNewline: mi,
            isNextLineEmptyAfterIndex: yi,
            isNextLineEmpty: function(e, t, n) {
              return yi(e, n(t));
            },
            isPreviousLineEmpty: function(e, t, n) {
              var r = n(t) - 1;
              return (
                (r = mi(e, (r = li(e, r, { backwards: !0 })), {
                  backwards: !0,
                })),
                (r = li(e, r, { backwards: !0 })) !==
                  mi(e, r, { backwards: !0 })
              );
            },
            hasNewline: gi,
            hasNewlineInRange: function(e, t, n) {
              for (var r = t; r < n; ++r) if ('\n' === e.charAt(r)) return !0;
              return !1;
            },
            hasSpaces: function(e, t, n) {
              return li(e, (n = n || {}).backwards ? t - 1 : t, n) !== t;
            },
            setLocStart: function(e, t) {
              e.range ? (e.range[0] = t) : (e.start = t);
            },
            setLocEnd: function(e, t) {
              e.range ? (e.range[1] = t) : (e.end = t);
            },
            startsWithNoLookaheadToken: function e(t, n) {
              switch (
                (t = (function e(t) {
                  return t.left ? e(t.left) : t;
                })(t)).type
              ) {
                case 'FunctionExpression':
                case 'ClassExpression':
                case 'DoExpression':
                  return n;
                case 'ObjectExpression':
                  return !0;
                case 'MemberExpression':
                case 'OptionalMemberExpression':
                  return e(t.object, n);
                case 'TaggedTemplateExpression':
                  return 'FunctionExpression' !== t.tag.type && e(t.tag, n);
                case 'CallExpression':
                case 'OptionalCallExpression':
                  return (
                    'FunctionExpression' !== t.callee.type && e(t.callee, n)
                  );
                case 'ConditionalExpression':
                  return e(t.test, n);
                case 'UpdateExpression':
                  return !t.prefix && e(t.argument, n);
                case 'BindExpression':
                  return t.object && e(t.object, n);
                case 'SequenceExpression':
                  return e(t.expressions[0], n);
                case 'TSAsExpression':
                  return e(t.expression, n);
                default:
                  return !1;
              }
            },
            getAlignmentSize: Si,
            getIndentSize: function(e, t) {
              var n = e.lastIndexOf('\n');
              return -1 === n ? 0 : Si(e.slice(n + 1).match(/^[ \t]*/)[0], t);
            },
            getPreferredQuote: wi,
            printString: function(e, t, n) {
              var r = e.slice(1, -1),
                i = !r.includes('"') && !r.includes("'"),
                a =
                  'json' === t.parser
                    ? '"'
                    : t.__isInHtmlAttribute
                    ? "'"
                    : wi(e, t.singleQuote ? "'" : '"');
              return n
                ? i
                  ? a + r + a
                  : e
                : Fi(
                    r,
                    a,
                    !(
                      'css' === t.parser ||
                      'less' === t.parser ||
                      'scss' === t.parser ||
                      t.embeddedInHtml
                    ),
                  );
            },
            printNumber: function(e) {
              return e
                .toLowerCase()
                .replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/, '$1$2$3')
                .replace(/^([+-]?[\d.]+)e[+-]?0+$/, '$1')
                .replace(/^([+-])?\./, '$10.')
                .replace(/(\.\d+?)0+(?=e|$)/, '$1')
                .replace(/\.(?=e|$)/, '');
            },
            hasIgnoreComment: function(e) {
              return ki(e.getValue());
            },
            hasNodeIgnoreComment: ki,
            makeString: Fi,
            matchAncestorTypes: function(e, t, n) {
              for (n = n || 0, t = t.slice(); t.length; ) {
                var r = e.getParentNode(n),
                  i = t.shift();
                if (!r || r.type !== i) return !1;
                n++;
              }
              return !0;
            },
            addLeadingComment: function(e, t) {
              (t.leading = !0), (t.trailing = !1), Ti(e, t);
            },
            addDanglingComment: function(e, t) {
              (t.leading = !1), (t.trailing = !1), Ti(e, t);
            },
            addTrailingComment: function(e, t) {
              (t.leading = !1), (t.trailing = !0), Ti(e, t);
            },
            isWithinParentArrayProperty: function(e, t) {
              var n = e.getValue(),
                r = e.getParentNode();
              if (null == r) return !1;
              if (!Array.isArray(r[t])) return !1;
              var i = e.getName();
              return r[t][i] === n;
            },
          },
          Ni = function(e) {
            var t = e.indexOf('\r');
            return t >= 0 ? ('\n' === e.charAt(t + 1) ? 'crlf' : 'cr') : 'lf';
          },
          Bi = function(e) {
            switch (e) {
              case 'cr':
                return '\r';
              case 'crlf':
                return '\r\n';
              default:
                return '\n';
            }
          },
          Ii = Oi.getStringWidth,
          Pi = Bi,
          Mi = Xr.concat,
          Li = Xr.fill,
          Ri = Xr.cursor;
        function ji(e, t) {
          return Vi(e, { type: 'indent' }, t);
        }
        function Ui(e, t, n) {
          return t === -1 / 0
            ? e.root || { value: '', length: 0, queue: [] }
            : t < 0
            ? Vi(e, { type: 'dedent' }, n)
            : t
            ? 'root' === t.type
              ? Object.assign({}, e, { root: e })
              : Vi(
                  e,
                  'string' == typeof t
                    ? { type: 'stringAlign', n: t }
                    : { type: 'numberAlign', n: t },
                  n,
                )
            : e;
        }
        function Vi(e, t, n) {
          var r =
              'dedent' === t.type ? e.queue.slice(0, -1) : e.queue.concat(t),
            i = '',
            a = 0,
            o = 0,
            s = 0,
            u = !0,
            c = !1,
            l = void 0;
          try {
            for (
              var p, f = r[Symbol.iterator]();
              !(u = (p = f.next()).done);
              u = !0
            ) {
              var h = p.value;
              switch (h.type) {
                case 'indent':
                  g(), n.useTabs ? d(1) : m(n.tabWidth);
                  break;
                case 'stringAlign':
                  g(), (i += h.n), (a += h.n.length);
                  break;
                case 'numberAlign':
                  (o += 1), (s += h.n);
                  break;
                default:
                  throw new Error("Unexpected type '".concat(h.type, "'"));
              }
            }
          } catch (e) {
            (c = !0), (l = e);
          } finally {
            try {
              u || null == f.return || f.return();
            } finally {
              if (c) throw l;
            }
          }
          return y(), Object.assign({}, e, { value: i, length: a, queue: r });
          function d(e) {
            (i += '\t'.repeat(e)), (a += n.tabWidth * e);
          }
          function m(e) {
            (i += ' '.repeat(e)), (a += e);
          }
          function g() {
            n.useTabs ? (o > 0 && d(o), v()) : y();
          }
          function y() {
            s > 0 && m(s), v();
          }
          function v() {
            (o = 0), (s = 0);
          }
        }
        function Wi(e) {
          if (0 === e.length) return 0;
          for (
            var t = 0;
            e.length > 0 &&
            'string' == typeof e[e.length - 1] &&
            e[e.length - 1].match(/^[ \t]*$/);

          )
            t += e.pop().length;
          if (e.length && 'string' == typeof e[e.length - 1]) {
            var n = e[e.length - 1].replace(/[ \t]*$/, '');
            (t += e[e.length - 1].length - n.length), (e[e.length - 1] = n);
          }
          return t;
        }
        function $i(e, t, n, r, i) {
          for (var a = t.length, o = [e], s = []; n >= 0; )
            if (0 !== o.length) {
              var u = o.pop(),
                c = u[0],
                l = u[1],
                p = u[2];
              if ('string' == typeof p) s.push(p), (n -= Ii(p));
              else
                switch (p.type) {
                  case 'concat':
                    for (var f = p.parts.length - 1; f >= 0; f--)
                      o.push([c, l, p.parts[f]]);
                    break;
                  case 'indent':
                    o.push([ji(c, r), l, p.contents]);
                    break;
                  case 'align':
                    o.push([Ui(c, p.n, r), l, p.contents]);
                    break;
                  case 'trim':
                    n += Wi(s);
                    break;
                  case 'group':
                    if (i && p.break) return !1;
                    o.push([c, p.break ? 1 : l, p.contents]),
                      p.id && (_i[p.id] = o[o.length - 1][1]);
                    break;
                  case 'fill':
                    for (var h = p.parts.length - 1; h >= 0; h--)
                      o.push([c, l, p.parts[h]]);
                    break;
                  case 'if-break':
                    var d = p.groupId ? _i[p.groupId] : l;
                    1 === d &&
                      p.breakContents &&
                      o.push([c, l, p.breakContents]),
                      2 === d &&
                        p.flatContents &&
                        o.push([c, l, p.flatContents]);
                    break;
                  case 'line':
                    switch (l) {
                      case 2:
                        if (!p.hard) {
                          p.soft || (s.push(' '), (n -= 1));
                          break;
                        }
                        return !0;
                      case 1:
                        return !0;
                    }
                }
            } else {
              if (0 === a) return !0;
              o.push(t[a - 1]), a--;
            }
          return !1;
        }
        var qi = {};
        function Yi(e, t, n, r) {
          for (var i = [e]; 0 !== i.length; ) {
            var a = i.pop();
            if (a !== qi) {
              var o = !0;
              if (
                (t && !1 === t(a) && (o = !1), n && (i.push(a), i.push(qi)), o)
              )
                if ('concat' === a.type || 'fill' === a.type)
                  for (var s = a.parts.length - 1; s >= 0; --s)
                    i.push(a.parts[s]);
                else if ('if-break' === a.type)
                  a.flatContents && i.push(a.flatContents),
                    a.breakContents && i.push(a.breakContents);
                else if ('group' === a.type && a.expandedStates)
                  if (r)
                    for (var u = a.expandedStates.length - 1; u >= 0; --u)
                      i.push(a.expandedStates[u]);
                  else i.push(a.contents);
                else a.contents && i.push(a.contents);
            } else n(i.pop());
          }
        }
        function Ji(e, t) {
          if ('concat' === e.type || 'fill' === e.type) {
            var n = e.parts.map(function(e) {
              return Ji(e, t);
            });
            return t(Object.assign({}, e, { parts: n }));
          }
          if ('if-break' === e.type) {
            var r = e.breakContents && Ji(e.breakContents, t),
              i = e.flatContents && Ji(e.flatContents, t);
            return t(
              Object.assign({}, e, { breakContents: r, flatContents: i }),
            );
          }
          if (e.contents) {
            var a = Ji(e.contents, t);
            return t(Object.assign({}, e, { contents: a }));
          }
          return t(e);
        }
        function Ki(e, t, n) {
          var r = n,
            i = !1;
          return (
            Yi(e, function(e) {
              var n = t(e);
              if ((void 0 !== n && ((i = !0), (r = n)), i)) return !1;
            }),
            r
          );
        }
        function zi(e) {
          return 'string' != typeof e && ('line' === e.type || void 0);
        }
        function Hi(e) {
          return (
            !('group' !== e.type || !e.break) ||
            !('line' !== e.type || !e.hard) ||
            'break-parent' === e.type ||
            void 0
          );
        }
        function Xi(e) {
          if (e.length > 0) {
            var t = e[e.length - 1];
            t.expandedStates || (t.break = !0);
          }
          return null;
        }
        function Gi(e) {
          return 'line' !== e.type || e.hard
            ? 'if-break' === e.type
              ? e.flatContents || ''
              : e
            : e.soft
            ? ''
            : ' ';
        }
        function Qi(e) {
          if ('concat' === e.type) {
            for (var t = [], n = 0; n < e.parts.length; ++n) {
              var r = e.parts[n];
              if ('string' != typeof r && 'concat' === r.type)
                [].push.apply(t, Qi(r).parts);
              else {
                var i = Qi(r);
                '' !== i && t.push(i);
              }
            }
            return Object.assign({}, e, { parts: t });
          }
          return 'if-break' === e.type
            ? Object.assign({}, e, {
                breakContents:
                  null != e.breakContents ? Qi(e.breakContents) : null,
                flatContents:
                  null != e.flatContents ? Qi(e.flatContents) : null,
              })
            : 'group' === e.type
            ? Object.assign({}, e, {
                contents: Qi(e.contents),
                expandedStates: e.expandedStates
                  ? e.expandedStates.map(Qi)
                  : e.expandedStates,
              })
            : e.contents
            ? Object.assign({}, e, { contents: Qi(e.contents) })
            : e;
        }
        function Zi(e) {
          if ('string' == typeof e) return JSON.stringify(e);
          if ('line' === e.type)
            return e.literal
              ? 'literalline'
              : e.hard
              ? 'hardline'
              : e.soft
              ? 'softline'
              : 'line';
          if ('break-parent' === e.type) return 'breakParent';
          if ('trim' === e.type) return 'trim';
          if ('concat' === e.type)
            return '[' + e.parts.map(Zi).join(', ') + ']';
          if ('indent' === e.type) return 'indent(' + Zi(e.contents) + ')';
          if ('align' === e.type)
            return e.n === -1 / 0
              ? 'dedentToRoot(' + Zi(e.contents) + ')'
              : e.n < 0
              ? 'dedent(' + Zi(e.contents) + ')'
              : 'root' === e.n.type
              ? 'markAsRoot(' + Zi(e.contents) + ')'
              : 'align(' + JSON.stringify(e.n) + ', ' + Zi(e.contents) + ')';
          if ('if-break' === e.type)
            return (
              'ifBreak(' +
              Zi(e.breakContents) +
              (e.flatContents ? ', ' + Zi(e.flatContents) : '') +
              ')'
            );
          if ('group' === e.type)
            return e.expandedStates
              ? 'conditionalGroup([' + e.expandedStates.map(Zi).join(',') + '])'
              : (e.break ? 'wrappedGroup' : 'group') +
                  '(' +
                  Zi(e.contents) +
                  ')';
          if ('fill' === e.type)
            return 'fill(' + e.parts.map(Zi).join(', ') + ')';
          if ('line-suffix' === e.type)
            return 'lineSuffix(' + Zi(e.contents) + ')';
          if ('line-suffix-boundary' === e.type) return 'lineSuffixBoundary';
          throw new Error('Unknown doc type ' + e.type);
        }
        var ea = {
            builders: Xr,
            printer: {
              printDocToString: function(e, t) {
                _i = {};
                for (
                  var n = t.printWidth,
                    r = Pi(t.endOfLine),
                    i = 0,
                    a = [[{ value: '', length: 0, queue: [] }, 1, e]],
                    o = [],
                    s = !1,
                    u = [];
                  0 !== a.length;

                ) {
                  var c = a.pop(),
                    l = c[0],
                    p = c[1],
                    f = c[2];
                  if ('string' == typeof f) o.push(f), (i += Ii(f));
                  else
                    switch (f.type) {
                      case 'cursor':
                        o.push(Ri.placeholder);
                        break;
                      case 'concat':
                        for (var h = f.parts.length - 1; h >= 0; h--)
                          a.push([l, p, f.parts[h]]);
                        break;
                      case 'indent':
                        a.push([ji(l, t), p, f.contents]);
                        break;
                      case 'align':
                        a.push([Ui(l, f.n, t), p, f.contents]);
                        break;
                      case 'trim':
                        i -= Wi(o);
                        break;
                      case 'group':
                        switch (p) {
                          case 2:
                            if (!s) {
                              a.push([l, f.break ? 1 : 2, f.contents]);
                              break;
                            }
                          case 1:
                            s = !1;
                            var d = [l, 2, f.contents],
                              m = n - i;
                            if (!f.break && $i(d, a, m, t)) a.push(d);
                            else if (f.expandedStates) {
                              var g =
                                f.expandedStates[f.expandedStates.length - 1];
                              if (f.break) {
                                a.push([l, 1, g]);
                                break;
                              }
                              for (
                                var y = 1;
                                y < f.expandedStates.length + 1;
                                y++
                              ) {
                                if (y >= f.expandedStates.length) {
                                  a.push([l, 1, g]);
                                  break;
                                }
                                var v = [l, 2, f.expandedStates[y]];
                                if ($i(v, a, m, t)) {
                                  a.push(v);
                                  break;
                                }
                              }
                            } else a.push([l, 1, f.contents]);
                        }
                        f.id && (_i[f.id] = a[a.length - 1][1]);
                        break;
                      case 'fill':
                        var D = n - i,
                          E = f.parts;
                        if (0 === E.length) break;
                        var C = E[0],
                          b = [l, 2, C],
                          x = [l, 1, C],
                          A = $i(b, [], D, t, !0);
                        if (1 === E.length) {
                          A ? a.push(b) : a.push(x);
                          break;
                        }
                        var S = E[1],
                          w = [l, 2, S],
                          F = [l, 1, S];
                        if (2 === E.length) {
                          A ? (a.push(w), a.push(b)) : (a.push(F), a.push(x));
                          break;
                        }
                        E.splice(0, 2);
                        var k = [l, p, Li(E)],
                          T = E[0];
                        $i([l, 2, Mi([C, S, T])], [], D, t, !0)
                          ? (a.push(k), a.push(w), a.push(b))
                          : A
                          ? (a.push(k), a.push(F), a.push(b))
                          : (a.push(k), a.push(F), a.push(x));
                        break;
                      case 'if-break':
                        var _ = f.groupId ? _i[f.groupId] : p;
                        1 === _ &&
                          f.breakContents &&
                          a.push([l, p, f.breakContents]),
                          2 === _ &&
                            f.flatContents &&
                            a.push([l, p, f.flatContents]);
                        break;
                      case 'line-suffix':
                        u.push([l, p, f.contents]);
                        break;
                      case 'line-suffix-boundary':
                        u.length > 0 &&
                          a.push([l, p, { type: 'line', hard: !0 }]);
                        break;
                      case 'line':
                        switch (p) {
                          case 2:
                            if (!f.hard) {
                              f.soft || (o.push(' '), (i += 1));
                              break;
                            }
                            s = !0;
                          case 1:
                            if (u.length) {
                              a.push([l, p, f]),
                                [].push.apply(a, u.reverse()),
                                (u = []);
                              break;
                            }
                            f.literal
                              ? l.root
                                ? (o.push(r, l.root.value), (i = l.root.length))
                                : (o.push(r), (i = 0))
                              : ((i -= Wi(o)),
                                o.push(r + l.value),
                                (i = l.length));
                        }
                    }
                }
                var O = o.indexOf(Ri.placeholder);
                if (-1 !== O) {
                  var N = o.indexOf(Ri.placeholder, O + 1),
                    B = o.slice(0, O).join(''),
                    I = o.slice(O + 1, N).join('');
                  return {
                    formatted: B + I + o.slice(N + 1).join(''),
                    cursorNodeStart: B.length,
                    cursorNodeText: I,
                  };
                }
                return { formatted: o.join('') };
              },
            },
            utils: {
              isEmpty: function(e) {
                return 'string' == typeof e && 0 === e.length;
              },
              willBreak: function(e) {
                return Ki(e, Hi, !1);
              },
              isLineNext: function(e) {
                return Ki(e, zi, !1);
              },
              traverseDoc: Yi,
              findInDoc: Ki,
              mapDoc: Ji,
              propagateBreaks: function(e) {
                var t = new Set(),
                  n = [];
                Yi(
                  e,
                  function(e) {
                    if (
                      ('break-parent' === e.type && Xi(n), 'group' === e.type)
                    ) {
                      if ((n.push(e), t.has(e))) return !1;
                      t.add(e);
                    }
                  },
                  function(e) {
                    'group' === e.type && n.pop().break && Xi(n);
                  },
                  !0,
                );
              },
              removeLines: function(e) {
                return Ji(e, Gi);
              },
              stripTrailingHardline: function e(t) {
                if ('concat' === t.type && 0 !== t.parts.length) {
                  var n = t.parts[t.parts.length - 1];
                  if ('concat' === n.type)
                    return 2 === n.parts.length &&
                      n.parts[0].hard &&
                      'break-parent' === n.parts[1].type
                      ? { type: 'concat', parts: t.parts.slice(0, -1) }
                      : {
                          type: 'concat',
                          parts: t.parts.slice(0, -1).concat(e(n)),
                        };
                }
                return t;
              },
            },
            debug: {
              printDocToDebug: function(e) {
                return Zi(Qi(e));
              },
            },
          },
          ta = ea.utils.mapDoc,
          na = {
            getMaxContinuousCount: Oi.getMaxContinuousCount,
            getStringWidth: Oi.getStringWidth,
            getAlignmentSize: Oi.getAlignmentSize,
            getIndentSize: Oi.getIndentSize,
            skip: Oi.skip,
            skipWhitespace: Oi.skipWhitespace,
            skipSpaces: Oi.skipSpaces,
            skipNewline: Oi.skipNewline,
            skipToLineEnd: Oi.skipToLineEnd,
            skipEverythingButNewLine: Oi.skipEverythingButNewLine,
            skipInlineComment: Oi.skipInlineComment,
            skipTrailingComment: Oi.skipTrailingComment,
            hasNewline: Oi.hasNewline,
            hasNewlineInRange: Oi.hasNewlineInRange,
            hasSpaces: Oi.hasSpaces,
            isNextLineEmpty: function(e, t, n) {
              return Oi.isNextLineEmpty(e, t, n.locEnd);
            },
            isNextLineEmptyAfterIndex: Oi.isNextLineEmptyAfterIndex,
            isPreviousLineEmpty: function(e, t, n) {
              return Oi.isPreviousLineEmpty(e, t, n.locStart);
            },
            getNextNonSpaceNonCommentCharacterIndex: function(e, t, n) {
              return Oi.getNextNonSpaceNonCommentCharacterIndex(e, t, n.locEnd);
            },
            mapDoc: ta,
            makeString: Oi.makeString,
            addLeadingComment: Oi.addLeadingComment,
            addDanglingComment: Oi.addDanglingComment,
            addTrailingComment: Oi.addTrailingComment,
          },
          ra = ea.builders,
          ia = ra.concat,
          aa = ra.hardline,
          oa = ra.breakParent,
          sa = ra.indent,
          ua = ra.lineSuffix,
          ca = ra.join,
          la = ra.cursor,
          pa = Oi.hasNewline,
          fa = Oi.skipNewline,
          ha = Oi.isPreviousLineEmpty,
          da = na.addLeadingComment,
          ma = na.addDanglingComment,
          ga = na.addTrailingComment,
          ya = Symbol('child-nodes');
        function va(e, t, n) {
          if (e) {
            var r,
              i = t.printer,
              a = t.locStart,
              o = t.locEnd;
            if (n) {
              if (e && i.canAttachComment && i.canAttachComment(e)) {
                var s;
                for (
                  s = n.length - 1;
                  s >= 0 && !(a(n[s]) <= a(e) && o(n[s]) <= o(e));
                  --s
                );
                return void n.splice(s + 1, 0, e);
              }
            } else if (e[ya]) return e[ya];
            if (
              (i.getCommentChildNodes
                ? (r = i.getCommentChildNodes(e))
                : e &&
                  'object' === c(e) &&
                  (r = Object.keys(e)
                    .filter(function(e) {
                      return (
                        'enclosingNode' !== e &&
                        'precedingNode' !== e &&
                        'followingNode' !== e
                      );
                    })
                    .map(function(t) {
                      return e[t];
                    })),
              r)
            )
              return (
                n ||
                  Object.defineProperty(e, ya, {
                    value: (n = []),
                    enumerable: !1,
                  }),
                r.forEach(function(e) {
                  va(e, t, n);
                }),
                n
              );
          }
        }
        function Da(e, t, n) {
          var r = e.length;
          if (0 !== r) {
            var i,
              a = e[0],
              o = a.precedingNode,
              s = a.followingNode,
              u = n.locStart(s);
            for (i = r; i > 0; --i) {
              var c = e[i - 1];
              Wr.strictEqual(c.precedingNode, o),
                Wr.strictEqual(c.followingNode, s);
              var l = t.slice(n.locEnd(c), u);
              if (!/^[\s(]*$/.test(l)) break;
              u = n.locStart(c);
            }
            e.forEach(function(e, t) {
              t < i ? ga(o, e) : da(s, e);
            }),
              (e.length = 0);
          }
        }
        function Ea(e, t) {
          return (e.getValue().printed = !0), t.printer.printComment(e, t);
        }
        function Ca(e, t, n) {
          for (var r = n.locStart(t) - 1, i = 1; i < e.length; ++i)
            if (
              r <
              ((a = e[i]),
              void 0 !== a.start
                ? { start: a.start, end: a.end }
                : { start: a.range[0], end: a.range[1] }).start
            )
              return i - 1;
          var a;
          return 0;
        }
        function ba(e, t, n) {
          return e.getNode() === t.cursorNode && e.getValue()
            ? ia([la, n, la])
            : n;
        }
        var xa = {
          attach: function(e, t, n, r) {
            if (Array.isArray(e)) {
              var i = [],
                a = r.locStart,
                o = r.locEnd;
              e.forEach(function(s, u) {
                if (
                  'json' === r.parser ||
                  'json5' === r.parser ||
                  '__js_expression' === r.parser ||
                  '__vue_expression' === r.parser
                ) {
                  if (a(s) - a(t) <= 0) return void da(t, s);
                  if (o(s) - o(t) >= 0) return void ga(t, s);
                }
                !(function e(t, n, r) {
                  for (
                    var i,
                      a,
                      o = r.locStart,
                      s = r.locEnd,
                      u = va(t, r),
                      c = 0,
                      l = u.length;
                    c < l;

                  ) {
                    var p = (c + l) >> 1,
                      f = u[p];
                    if (o(f) - o(n) <= 0 && s(n) - s(f) <= 0)
                      return (n.enclosingNode = f), void e(f, n, r);
                    if (s(f) - o(n) <= 0) (i = f), (c = p + 1);
                    else {
                      if (!(s(n) - o(f) <= 0))
                        throw new Error(
                          'Comment location overlaps with node location',
                        );
                      (a = f), (l = p);
                    }
                  }
                  if (
                    n.enclosingNode &&
                    'TemplateLiteral' === n.enclosingNode.type
                  ) {
                    var h = n.enclosingNode.quasis,
                      d = Ca(h, n, r);
                    i && Ca(h, i, r) !== d && (i = null),
                      a && Ca(h, a, r) !== d && (a = null);
                  }
                  i && (n.precedingNode = i), a && (n.followingNode = a);
                })(t, s, r);
                var c = s.precedingNode,
                  l = s.enclosingNode,
                  p = s.followingNode,
                  f =
                    r.printer.handleComments && r.printer.handleComments.ownLine
                      ? r.printer.handleComments.ownLine
                      : function() {
                          return !1;
                        },
                  h =
                    r.printer.handleComments &&
                    r.printer.handleComments.endOfLine
                      ? r.printer.handleComments.endOfLine
                      : function() {
                          return !1;
                        },
                  d =
                    r.printer.handleComments &&
                    r.printer.handleComments.remaining
                      ? r.printer.handleComments.remaining
                      : function() {
                          return !1;
                        },
                  m = e.length - 1 === u;
                if (pa(n, a(s), { backwards: !0 }))
                  f(s, n, r, t, m) ||
                    (p ? da(p, s) : c ? ga(c, s) : ma(l || t, s));
                else if (pa(n, o(s)))
                  h(s, n, r, t, m) ||
                    (c ? ga(c, s) : p ? da(p, s) : ma(l || t, s));
                else if (d(s, n, r, t, m));
                else if (c && p) {
                  var g = i.length;
                  g > 0 &&
                    i[g - 1].followingNode !== s.followingNode &&
                    Da(i, n, r),
                    i.push(s);
                } else c ? ga(c, s) : p ? da(p, s) : ma(l || t, s);
              }),
                Da(i, n, r),
                e.forEach(function(e) {
                  delete e.precedingNode,
                    delete e.enclosingNode,
                    delete e.followingNode;
                });
            }
          },
          printComments: function(e, t, n, r) {
            var i = e.getValue(),
              a = t(e),
              o = i && i.comments;
            if (!o || 0 === o.length) return ba(e, n, a);
            var s = [],
              u = [r ? ';' : '', a];
            return (
              e.each(function(e) {
                var t = e.getValue(),
                  r = t.leading,
                  i = t.trailing;
                if (r) {
                  var a = (function(e, t, n) {
                    var r = e.getValue(),
                      i = Ea(e, n);
                    if (!i) return '';
                    var a =
                      n.printer.isBlockComment && n.printer.isBlockComment(r);
                    return ia(
                      a
                        ? [i, pa(n.originalText, n.locEnd(r)) ? aa : ' ']
                        : [i, aa],
                    );
                  })(e, 0, n);
                  if (!a) return;
                  s.push(a);
                  var o = n.originalText,
                    c = fa(o, n.locEnd(t));
                  !1 !== c && pa(o, c) && s.push(aa);
                } else
                  i &&
                    u.push(
                      (function(e, t, n) {
                        var r = e.getValue(),
                          i = Ea(e, n);
                        if (!i) return '';
                        var a =
                            n.printer.isBlockComment &&
                            n.printer.isBlockComment(r),
                          o = e.getNode(1),
                          s = e.getNode(2),
                          u =
                            s &&
                            ('ClassDeclaration' === s.type ||
                              'ClassExpression' === s.type) &&
                            s.superClass === o;
                        if (
                          pa(n.originalText, n.locStart(r), { backwards: !0 })
                        ) {
                          var c = ha(n.originalText, r, n.locStart);
                          return ua(ia([aa, c ? aa : '', i]));
                        }
                        return ia(
                          a || u ? [' ', i] : [ua(ia([' ', i])), a ? '' : oa],
                        );
                      })(e, 0, n),
                    );
              }, 'comments'),
              ba(e, n, ia(s.concat(u)))
            );
          },
          printDanglingComments: function(e, t, n, r) {
            var i = [],
              a = e.getValue();
            return a && a.comments
              ? (e.each(function(e) {
                  var n = e.getValue();
                  !n ||
                    n.leading ||
                    n.trailing ||
                    (r && !r(n)) ||
                    i.push(Ea(e, t));
                }, 'comments'),
                0 === i.length ? '' : n ? ca(aa, i) : sa(ia([aa, ca(aa, i)])))
              : '';
          },
          getSortedChildNodes: va,
        };
        function Aa(e) {
          Wr.ok(this instanceof Aa), (this.stack = [e]);
        }
        function Sa(e, t) {
          var n = wa(e.stack, t);
          return -1 === n ? null : e.stack[n];
        }
        function wa(e, t) {
          for (var n = e.length - 1; n >= 0; n -= 2) {
            var r = e[n];
            if (r && !Array.isArray(r) && --t < 0) return n;
          }
          return -1;
        }
        (Aa.prototype.getName = function() {
          var e = this.stack,
            t = e.length;
          return t > 1 ? e[t - 2] : null;
        }),
          (Aa.prototype.getValue = function() {
            var e = this.stack;
            return e[e.length - 1];
          }),
          (Aa.prototype.getNode = function(e) {
            return Sa(this, ~~e);
          }),
          (Aa.prototype.getParentNode = function(e) {
            return Sa(this, 1 + ~~e);
          }),
          (Aa.prototype.call = function(e) {
            for (
              var t = this.stack,
                n = t.length,
                r = t[n - 1],
                i = arguments.length,
                a = 1;
              a < i;
              ++a
            ) {
              var o = arguments[a];
              (r = r[o]), t.push(o, r);
            }
            var s = e(this);
            return (t.length = n), s;
          }),
          (Aa.prototype.callParent = function(e, t) {
            var n = wa(this.stack, 1 + ~~t),
              r = this.stack.splice(n + 1),
              i = e(this);
            return Array.prototype.push.apply(this.stack, r), i;
          }),
          (Aa.prototype.each = function(e) {
            for (
              var t = this.stack,
                n = t.length,
                r = t[n - 1],
                i = arguments.length,
                a = 1;
              a < i;
              ++a
            ) {
              var o = arguments[a];
              (r = r[o]), t.push(o, r);
            }
            for (var s = 0; s < r.length; ++s)
              s in r && (t.push(s, r[s]), e(this), (t.length -= 2));
            t.length = n;
          }),
          (Aa.prototype.map = function(e) {
            for (
              var t = this.stack,
                n = t.length,
                r = t[n - 1],
                i = arguments.length,
                a = 1;
              a < i;
              ++a
            ) {
              var o = arguments[a];
              (r = r[o]), t.push(o, r);
            }
            for (var s = new Array(r.length), u = 0; u < r.length; ++u)
              u in r && (t.push(u, r[u]), (s[u] = e(this, u)), (t.length -= 2));
            return (t.length = n), s;
          });
        var Fa = Aa,
          ka = Ur,
          Ta = {
            printSubtree: function(e, t, n, r) {
              if (n.printer.embed)
                return n.printer.embed(
                  e,
                  t,
                  function(e, t) {
                    return (function(e, t, n, r) {
                      var i = ka(
                          Object.assign({}, n, t, {
                            parentParser: n.parser,
                            embeddedInHtml: !(
                              !n.embeddedInHtml &&
                              'html' !== n.parser &&
                              'vue' !== n.parser &&
                              'angular' !== n.parser &&
                              'lwc' !== n.parser
                            ),
                            originalText: e,
                          }),
                          { passThrough: !0 },
                        ),
                        a = Ir.parse(e, i),
                        o = a.ast;
                      e = a.text;
                      var s = o.comments;
                      return delete o.comments, xa.attach(s, o, e, i), r(o, i);
                    })(e, t, n, r);
                  },
                  n,
                );
            },
          },
          _a = ea,
          Oa = _a.builders,
          Na = Oa.concat,
          Ba = Oa.hardline,
          Ia = Oa.addAlignmentToDoc,
          Pa = _a.utils;
        function Ma(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            r = t.printer;
          r.preprocess && (e = r.preprocess(e, t));
          var i = new Map();
          function a(e, n) {
            var o,
              s = e.getValue(),
              u = s && 'object' === c(s) && void 0 === n;
            return u && i.has(s)
              ? i.get(s)
              : ((o =
                  r.willPrintOwnComments && r.willPrintOwnComments(e, t)
                    ? La(e, t, a, n)
                    : xa.printComments(
                        e,
                        function(e) {
                          return La(e, t, a, n);
                        },
                        t,
                        n && n.needsSemi,
                      )),
                u && i.set(s, o),
                o);
          }
          var o = a(new Fa(e));
          return (
            n > 0 && (o = Ia(Na([Ba, o]), n, t.tabWidth)),
            Pa.propagateBreaks(o),
            o
          );
        }
        function La(e, t, n, r) {
          Wr.ok(e instanceof Fa);
          var i = e.getValue(),
            a = t.printer;
          if (a.hasPrettierIgnore && a.hasPrettierIgnore(e))
            return t.originalText.slice(t.locStart(i), t.locEnd(i));
          if (i)
            try {
              var o = Ta.printSubtree(e, n, t, Ma);
              if (o) return o;
            } catch (e) {
              if (ut.PRETTIER_DEBUG) throw e;
            }
          return a.print(e, t, n, r);
        }
        var Ra = Ma;
        function ja(e, t, n, r, i) {
          (r =
            r ||
            function() {
              return !0;
            }),
            (i = i || []);
          var a = n.locStart(e, n.locStart),
            o = n.locEnd(e, n.locEnd);
          if (a <= t && t <= o) {
            var s = !0,
              u = !1,
              c = void 0;
            try {
              for (
                var l, p = xa.getSortedChildNodes(e, n)[Symbol.iterator]();
                !(s = (l = p.next()).done);
                s = !0
              ) {
                var f = ja(l.value, t, n, r, [e].concat(i));
                if (f) return f;
              }
            } catch (e) {
              (u = !0), (c = e);
            } finally {
              try {
                s || null == p.return || p.return();
              } finally {
                if (u) throw c;
              }
            }
            if (r(e)) return { node: e, parentNodes: i };
          }
        }
        function Ua(e, t) {
          if (null == t) return !1;
          switch (e.parser) {
            case 'flow':
            case 'babel':
            case 'typescript':
              return (
                [
                  'FunctionDeclaration',
                  'BlockStatement',
                  'BreakStatement',
                  'ContinueStatement',
                  'DebuggerStatement',
                  'DoWhileStatement',
                  'EmptyStatement',
                  'ExpressionStatement',
                  'ForInStatement',
                  'ForStatement',
                  'IfStatement',
                  'LabeledStatement',
                  'ReturnStatement',
                  'SwitchStatement',
                  'ThrowStatement',
                  'TryStatement',
                  'VariableDeclaration',
                  'WhileStatement',
                  'WithStatement',
                  'ClassDeclaration',
                  'ImportDeclaration',
                  'ExportDefaultDeclaration',
                  'ExportNamedDeclaration',
                  'ExportAllDeclaration',
                  'TypeAlias',
                  'InterfaceDeclaration',
                  'TypeAliasDeclaration',
                  'ExportAssignment',
                  'ExportDeclaration',
                ].indexOf(t.type) > -1
              );
            case 'json':
              return (
                [
                  'ObjectExpression',
                  'ArrayExpression',
                  'StringLiteral',
                  'NumericLiteral',
                  'BooleanLiteral',
                  'NullLiteral',
                ].indexOf(t.type) > -1
              );
            case 'graphql':
              return (
                [
                  'OperationDefinition',
                  'FragmentDefinition',
                  'VariableDefinition',
                  'TypeExtensionDefinition',
                  'ObjectTypeDefinition',
                  'FieldDefinition',
                  'DirectiveDefinition',
                  'EnumTypeDefinition',
                  'EnumValueDefinition',
                  'InputValueDefinition',
                  'InputObjectTypeDefinition',
                  'SchemaDefinition',
                  'OperationTypeDefinition',
                  'InterfaceTypeDefinition',
                  'UnionTypeDefinition',
                  'ScalarTypeDefinition',
                ].indexOf(t.kind) > -1
              );
            case 'vue':
              return 'root' !== t.tag;
          }
          return !1;
        }
        var Va = {
            calculateRange: function(e, t, n) {
              var r,
                i = e.slice(t.rangeStart, t.rangeEnd),
                a = Math.max(t.rangeStart + i.search(/\S/), t.rangeStart);
              for (
                r = t.rangeEnd;
                r > t.rangeStart && !e[r - 1].match(/\S/);
                --r
              );
              var o = ja(n, a, t, function(e) {
                  return Ua(t, e);
                }),
                s = ja(n, r, t, function(e) {
                  return Ua(t, e);
                });
              if (!o || !s) return { rangeStart: 0, rangeEnd: 0 };
              var u = (function(e, t, n) {
                  var r = e.node,
                    i = t.node;
                  if (r === i) return { startNode: r, endNode: i };
                  var a = !0,
                    o = !1,
                    s = void 0;
                  try {
                    for (
                      var u, c = t.parentNodes[Symbol.iterator]();
                      !(a = (u = c.next()).done);
                      a = !0
                    ) {
                      var l = u.value;
                      if (
                        !(
                          'Program' !== l.type &&
                          'File' !== l.type &&
                          n.locStart(l) >= n.locStart(e.node)
                        )
                      )
                        break;
                      i = l;
                    }
                  } catch (e) {
                    (o = !0), (s = e);
                  } finally {
                    try {
                      a || null == c.return || c.return();
                    } finally {
                      if (o) throw s;
                    }
                  }
                  var p = !0,
                    f = !1,
                    h = void 0;
                  try {
                    for (
                      var d, m = e.parentNodes[Symbol.iterator]();
                      !(p = (d = m.next()).done);
                      p = !0
                    ) {
                      var g = d.value;
                      if (
                        !(
                          'Program' !== g.type &&
                          'File' !== g.type &&
                          n.locEnd(g) <= n.locEnd(t.node)
                        )
                      )
                        break;
                      r = g;
                    }
                  } catch (e) {
                    (f = !0), (h = e);
                  } finally {
                    try {
                      p || null == m.return || m.return();
                    } finally {
                      if (f) throw h;
                    }
                  }
                  return { startNode: r, endNode: i };
                })(o, s, t),
                c = u.startNode,
                l = u.endNode;
              return {
                rangeStart: Math.min(
                  t.locStart(c, t.locStart),
                  t.locStart(l, t.locStart),
                ),
                rangeEnd: Math.max(
                  t.locEnd(c, t.locEnd),
                  t.locEnd(l, t.locEnd),
                ),
              };
            },
            findNodeAtOffset: ja,
          },
          Wa = pt(le),
          $a = Ur,
          qa = Ni,
          Ya = Bi,
          Ja = ea.utils.mapDoc,
          Ka = ea.printer.printDocToString,
          za = ea.debug.printDocToDebug,
          Ha = Symbol('cursor'),
          Xa = {
            cursorOffset: '<<<PRETTIER_CURSOR>>>',
            rangeStart: '<<<PRETTIER_RANGE_START>>>',
            rangeEnd: '<<<PRETTIER_RANGE_END>>>',
          };
        function Ga(e, t, n) {
          var r = t.comments;
          return (
            r && (delete t.comments, xa.attach(r, t, e, n)),
            (t.tokens = []),
            (n.originalText = 'yaml' === n.parser ? e : e.trimRight()),
            r
          );
        }
        function Qa(e, t, n) {
          if (!e || !e.trim().length) return { formatted: '', cursorOffset: 0 };
          n = n || 0;
          var r = Ir.parse(e, t),
            i = r.ast;
          if (((e = r.text), t.cursorOffset >= 0)) {
            var a = Va.findNodeAtOffset(i, t.cursorOffset, t);
            a && a.node && (t.cursorNode = a.node);
          }
          var o = Ga(e, i, t),
            s = Ra(i, t, n),
            u = Ya(t.endOfLine),
            c = Ka(
              'lf' === t.endOfLine
                ? s
                : Ja(s, function(e) {
                    return 'string' == typeof e && -1 !== e.indexOf('\n')
                      ? e.replace(/\n/g, u)
                      : e;
                  }),
              t,
            );
          if (
            ((function(e) {
              if (e) {
                for (var t = 0; t < e.length; ++t)
                  if ('prettier-ignore' === e[t].value.trim()) return;
                e.forEach(function(e) {
                  if (!e.printed)
                    throw new Error(
                      'Comment "' +
                        e.value.trim() +
                        '" was not printed. Please report this error!',
                    );
                  delete e.printed;
                });
              }
            })(o),
            n > 0)
          ) {
            var l = c.formatted.trim();
            void 0 !== c.cursorNodeStart &&
              (c.cursorNodeStart -= c.formatted.indexOf(l)),
              (c.formatted = l + Ya(t.endOfLine));
          }
          if (t.cursorOffset >= 0) {
            var p, f, h, d, m;
            if (
              (t.cursorNode && c.cursorNodeText
                ? ((p = t.locStart(t.cursorNode)),
                  (f = e.slice(p, t.locEnd(t.cursorNode))),
                  (h = t.cursorOffset - p),
                  (d = c.cursorNodeStart),
                  (m = c.cursorNodeText))
                : ((p = 0),
                  (f = e),
                  (h = t.cursorOffset),
                  (d = 0),
                  (m = c.formatted)),
              f === m)
            )
              return { formatted: c.formatted, cursorOffset: d + h };
            var g = f.split('');
            g.splice(h, 0, Ha);
            var y = m.split(''),
              v = Wa.diffArrays(g, y),
              D = d,
              E = !0,
              C = !1,
              b = void 0;
            try {
              for (
                var x, A = v[Symbol.iterator]();
                !(E = (x = A.next()).done);
                E = !0
              ) {
                var S = x.value;
                if (S.removed) {
                  if (S.value.indexOf(Ha) > -1) break;
                } else D += S.count;
              }
            } catch (e) {
              (C = !0), (b = e);
            } finally {
              try {
                E || null == A.return || A.return();
              } finally {
                if (C) throw b;
              }
            }
            return { formatted: c.formatted, cursorOffset: D };
          }
          return { formatted: c.formatted };
        }
        function Za(e, t) {
          var n = Ir.resolveParser(t),
            r = !n.hasPragma || n.hasPragma(e);
          if (t.requirePragma && !r) return { formatted: e };
          'auto' === t.endOfLine && (t.endOfLine = qa(e));
          var i = t.cursorOffset >= 0,
            a = t.rangeStart > 0,
            o = t.rangeEnd < e.length;
          if (-1 !== e.indexOf('\r')) {
            for (
              var s = [i && 'cursorOffset', a && 'rangeStart', o && 'rangeEnd']
                  .filter(Boolean)
                  .sort(function(e, n) {
                    return t[e] - t[n];
                  }),
                u = s.length - 1;
              u >= 0;
              u--
            ) {
              var c = s[u];
              e = e.slice(0, t[c]) + Xa[c] + e.slice(t[c]);
            }
            e = e.replace(/\r\n?/g, '\n');
            for (
              var l = function(n) {
                  var r = s[n];
                  e = e.replace(Xa[r], function(e, n) {
                    return (t[r] = n), '';
                  });
                },
                p = 0;
              p < s.length;
              p++
            )
              l(p);
          }
          var f = 65279 === e.charCodeAt(0);
          f &&
            ((e = e.substring(1)),
            i && t.cursorOffset++,
            a && t.rangeStart++,
            o && t.rangeEnd++),
            i || (t.cursorOffset = -1),
            t.rangeStart < 0 && (t.rangeStart = 0),
            t.rangeEnd > e.length && (t.rangeEnd = e.length);
          var h =
            a || o
              ? (function(e, t) {
                  var n = Ir.parse(e, t),
                    r = n.ast;
                  e = n.text;
                  var i,
                    a = Va.calculateRange(e, t, r),
                    o = a.rangeStart,
                    s = a.rangeEnd,
                    u = e.slice(o, s),
                    c = Math.min(o, e.lastIndexOf('\n', o) + 1),
                    l = e.slice(c, o),
                    p = Oi.getAlignmentSize(l, t.tabWidth),
                    f = Qa(
                      u,
                      Object.assign({}, t, {
                        rangeStart: 0,
                        rangeEnd: 1 / 0,
                        cursorOffset:
                          t.cursorOffset >= o && t.cursorOffset < s
                            ? t.cursorOffset - o
                            : -1,
                      }),
                      p,
                    ),
                    h = f.formatted.trimRight(),
                    d = e.slice(0, o),
                    m = e.slice(s),
                    g = t.cursorOffset;
                  if (
                    (t.cursorOffset >= s
                      ? (g = t.cursorOffset - s + (o + h.length))
                      : void 0 !== f.cursorOffset && (g = f.cursorOffset + o),
                    'lf' === t.endOfLine)
                  )
                    i = d + h + m;
                  else {
                    var y = Ya(t.endOfLine);
                    if (g >= 0) {
                      for (var v = [d, h, m], D = 0, E = g; D < v.length; ) {
                        var C = v[D];
                        if (E < C.length) {
                          v[D] =
                            v[D].slice(0, E) + Xa.cursorOffset + v[D].slice(E);
                          break;
                        }
                        D++, (E -= C.length);
                      }
                      var b = v[0],
                        x = v[1],
                        A = v[2];
                      i = (
                        b.replace(/\n/g, y) +
                        x +
                        A.replace(/\n/g, y)
                      ).replace(Xa.cursorOffset, function(e, t) {
                        return (g = t), '';
                      });
                    } else i = d.replace(/\n/g, y) + h + m.replace(/\n/g, y);
                  }
                  return { formatted: i, cursorOffset: g };
                })(e, t)
              : Qa(
                  t.insertPragma && t.printer.insertPragma && !r
                    ? t.printer.insertPragma(e)
                    : e,
                  t,
                );
          return (
            f &&
              ((h.formatted = String.fromCharCode(65279) + h.formatted),
              i && h.cursorOffset++),
            h
          );
        }
        var eo = function(e, t) {
            return Za(e, (t = $a(t)));
          },
          to = function(e, t, n) {
            (t = $a(t)),
              -1 !== e.indexOf('\r') && (e = e.replace(/\r\n?/g, '\n'));
            var r = Ir.parse(e, t);
            return n && (r.ast = Vr(r.ast, t)), r;
          },
          no = function(e, t) {
            t = $a(t);
            var n = Ra(e, t);
            return Ka(n, t);
          },
          ro = function(e, t) {
            return Za(
              za(e),
              (t = $a(Object.assign({}, t, { parser: 'babel' }))),
            ).formatted;
          },
          io = function(e, t) {
            t = $a(t);
            var n = Ir.parse(e, t),
              r = n.ast;
            return Ga((e = n.text), r, t), Ra(r, t);
          },
          ao = function(e, t) {
            return Ka(e, $a(t));
          },
          oo = pt(
            Object.freeze({
              __proto__: null,
              default: [
                'a',
                'abbr',
                'acronym',
                'address',
                'applet',
                'area',
                'article',
                'aside',
                'audio',
                'b',
                'base',
                'basefont',
                'bdi',
                'bdo',
                'bgsound',
                'big',
                'blink',
                'blockquote',
                'body',
                'br',
                'button',
                'canvas',
                'caption',
                'center',
                'cite',
                'code',
                'col',
                'colgroup',
                'command',
                'content',
                'data',
                'datalist',
                'dd',
                'del',
                'details',
                'dfn',
                'dialog',
                'dir',
                'div',
                'dl',
                'dt',
                'element',
                'em',
                'embed',
                'fieldset',
                'figcaption',
                'figure',
                'font',
                'footer',
                'form',
                'frame',
                'frameset',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'head',
                'header',
                'hgroup',
                'hr',
                'html',
                'i',
                'iframe',
                'image',
                'img',
                'input',
                'ins',
                'isindex',
                'kbd',
                'keygen',
                'label',
                'legend',
                'li',
                'link',
                'listing',
                'main',
                'map',
                'mark',
                'marquee',
                'math',
                'menu',
                'menuitem',
                'meta',
                'meter',
                'multicol',
                'nav',
                'nextid',
                'nobr',
                'noembed',
                'noframes',
                'noscript',
                'object',
                'ol',
                'optgroup',
                'option',
                'output',
                'p',
                'param',
                'picture',
                'plaintext',
                'pre',
                'progress',
                'q',
                'rb',
                'rbc',
                'rp',
                'rt',
                'rtc',
                'ruby',
                's',
                'samp',
                'script',
                'section',
                'select',
                'shadow',
                'slot',
                'small',
                'source',
                'spacer',
                'span',
                'strike',
                'strong',
                'style',
                'sub',
                'summary',
                'sup',
                'svg',
                'table',
                'tbody',
                'td',
                'template',
                'textarea',
                'tfoot',
                'th',
                'thead',
                'time',
                'title',
                'tr',
                'track',
                'tt',
                'u',
                'ul',
                'var',
                'video',
                'wbr',
                'xmp',
              ],
            }),
          ),
          so = function(e, t, n) {
            if (
              ([
                'raw',
                'raws',
                'sourceIndex',
                'source',
                'before',
                'after',
                'trailingComma',
              ].forEach(function(e) {
                delete t[e];
              }),
              'yaml' === e.type && delete t.value,
              'css-comment' === e.type &&
                'css-root' === n.type &&
                0 !== n.nodes.length &&
                (n.nodes[0] === e ||
                  (('yaml' === n.nodes[0].type || 'toml' === n.nodes[0].type) &&
                    n.nodes[1] === e)) &&
                (delete t.text, /^\*\s*@(format|prettier)\s*$/.test(e.text)))
            )
              return null;
            if (
              (('media-query' !== e.type &&
                'media-query-list' !== e.type &&
                'media-feature-expression' !== e.type) ||
                delete t.value,
              'css-rule' === e.type && delete t.params,
              'selector-combinator' === e.type &&
                (t.value = t.value.replace(/\s+/g, ' ')),
              'media-feature' === e.type &&
                (t.value = t.value.replace(/ /g, '')),
              (('value-word' === e.type &&
                ((e.isColor && e.isHex) ||
                  -1 !==
                    ['initial', 'inherit', 'unset', 'revert'].indexOf(
                      t.value.replace().toLowerCase(),
                    ))) ||
                'media-feature' === e.type ||
                'selector-root-invalid' === e.type ||
                'selector-pseudo' === e.type) &&
                (t.value = t.value.toLowerCase()),
              'css-decl' === e.type && (t.prop = t.prop.toLowerCase()),
              ('css-atrule' !== e.type && 'css-import' !== e.type) ||
                (t.name = t.name.toLowerCase()),
              'value-number' === e.type && (t.unit = t.unit.toLowerCase()),
              ('media-feature' !== e.type &&
                'media-keyword' !== e.type &&
                'media-type' !== e.type &&
                'media-unknown' !== e.type &&
                'media-url' !== e.type &&
                'media-value' !== e.type &&
                'selector-attribute' !== e.type &&
                'selector-string' !== e.type &&
                'selector-class' !== e.type &&
                'selector-combinator' !== e.type &&
                'value-string' !== e.type) ||
                !t.value ||
                (t.value = t.value
                  .replace(/'/g, '"')
                  .replace(/\\([^a-fA-F\d])/g, '$1')),
              'selector-attribute' === e.type &&
                ((t.attribute = t.attribute.trim()),
                t.namespace &&
                  'string' == typeof t.namespace &&
                  ((t.namespace = t.namespace.trim()),
                  0 === t.namespace.length && (t.namespace = !0)),
                t.value &&
                  ((t.value = t.value.trim().replace(/^['"]|['"]$/g, '')),
                  delete t.quoted)),
              ('media-value' !== e.type &&
                'media-type' !== e.type &&
                'value-number' !== e.type &&
                'selector-root-invalid' !== e.type &&
                'selector-class' !== e.type &&
                'selector-combinator' !== e.type &&
                'selector-tag' !== e.type) ||
                !t.value ||
                (t.value = t.value.replace(/([\d.eE+-]+)([a-zA-Z]*)/g, function(
                  e,
                  t,
                  n,
                ) {
                  var r = Number(t);
                  return isNaN(r) ? e : r + n.toLowerCase();
                })),
              'selector-tag' === e.type)
            ) {
              var r = e.value.toLowerCase();
              -1 !== oo.indexOf(r) && (t.value = r),
                -1 !== ['from', 'to'].indexOf(r) && (t.value = r);
            }
            'css-atrule' === e.type &&
              'supports' === e.name.toLowerCase() &&
              delete t.value,
              'selector-unknown' === e.type && delete t.value;
          },
          uo = ea.builders,
          co = uo.hardline,
          lo = uo.literalline,
          po = uo.concat,
          fo = uo.markAsRoot,
          ho = ea.utils.mapDoc,
          mo = function(e, t, n) {
            var r = e.getValue();
            return 'yaml' === r.type
              ? fo(
                  po([
                    '---',
                    co,
                    r.value.trim()
                      ? (function(e) {
                          return ho(e, function(e) {
                            return 'string' == typeof e && e.includes('\n')
                              ? po(
                                  e.split(/(\n)/g).map(function(e, t) {
                                    return t % 2 == 0 ? e : lo;
                                  }),
                                )
                              : e;
                          });
                        })(n(r.value, { parser: 'yaml' }))
                      : '',
                    '---',
                    co,
                  ]),
                )
              : null;
          },
          go = lt(function(e) {
            (e.exports = function(e) {
              if ('string' != typeof e)
                throw new TypeError('Expected a string');
              var t = e.match(/(?:\r?\n)/g) || [];
              if (0 === t.length) return null;
              var n = t.filter(function(e) {
                return '\r\n' === e;
              }).length;
              return n > t.length - n ? '\r\n' : '\n';
            }),
              (e.exports.graceful = function(t) {
                return e.exports(t) || '\n';
              });
          }),
          yo =
            (go.graceful,
            lt(function(e, t) {
              function n() {
                var e = En;
                return (
                  (n = function() {
                    return e;
                  }),
                  e
                );
              }
              function r() {
                var e,
                  t = (e = go) && e.__esModule ? e : { default: e };
                return (
                  (r = function() {
                    return t;
                  }),
                  t
                );
              }
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.extract = function(e) {
                  var t = e.match(o);
                  return t ? t[0].trimLeft() : '';
                }),
                (t.strip = function(e) {
                  var t = e.match(o);
                  return t && t[0] ? e.substring(t[0].length) : e;
                }),
                (t.parse = function(e) {
                  return f(e).pragmas;
                }),
                (t.parseWithComments = f),
                (t.print = function(e) {
                  var t = e.comments,
                    i = void 0 === t ? '' : t,
                    a = e.pragmas,
                    o = void 0 === a ? {} : a,
                    s = (0, r().default)(i) || n().EOL,
                    u = Object.keys(o),
                    c = u
                      .map(function(e) {
                        return h(e, o[e]);
                      })
                      .reduce(function(e, t) {
                        return e.concat(t);
                      }, [])
                      .map(function(e) {
                        return ' * ' + e + s;
                      })
                      .join('');
                  if (!i) {
                    if (0 === u.length) return '';
                    if (1 === u.length && !Array.isArray(o[u[0]])) {
                      var l = o[u[0]];
                      return ''
                        .concat('/**', ' ')
                        .concat(h(u[0], l)[0])
                        .concat(' */');
                    }
                  }
                  var p =
                    i
                      .split(s)
                      .map(function(e) {
                        return ''.concat(' *', ' ').concat(e);
                      })
                      .join(s) + s;
                  return (
                    '/**' +
                    s +
                    (i ? p : '') +
                    (i && u.length ? ' *' + s : '') +
                    c +
                    ' */'
                  );
                });
              var i = /\*\/$/,
                a = /^\/\*\*/,
                o = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,
                s = /(^|\s+)\/\/([^\r\n]*)/g,
                u = /^(\r?\n)+/,
                c = /(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,
                l = /(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,
                p = /(\r?\n|^) *\* ?/g;
              function f(e) {
                var t = (0, r().default)(e) || n().EOL;
                e = e
                  .replace(a, '')
                  .replace(i, '')
                  .replace(p, '$1');
                for (var o = ''; o !== e; )
                  (o = e), (e = e.replace(c, ''.concat(t, '$1 $2').concat(t)));
                e = e.replace(u, '').trimRight();
                for (
                  var f,
                    h = Object.create(null),
                    d = e
                      .replace(l, '')
                      .replace(u, '')
                      .trimRight();
                  (f = l.exec(e));

                ) {
                  var m = f[2].replace(s, '');
                  'string' == typeof h[f[1]] || Array.isArray(h[f[1]])
                    ? (h[f[1]] = [].concat(h[f[1]], m))
                    : (h[f[1]] = m);
                }
                return { comments: d, pragmas: h };
              }
              function h(e, t) {
                return [].concat(t).map(function(t) {
                  return '@'
                    .concat(e, ' ')
                    .concat(t)
                    .trim();
                });
              }
            }));
        ct(yo), yo.extract, yo.strip, yo.parse, yo.parseWithComments, yo.print;
        var vo = {
            hasPragma: function(e) {
              var t = Object.keys(yo.parse(yo.extract(e)));
              return -1 !== t.indexOf('prettier') || -1 !== t.indexOf('format');
            },
            insertPragma: function(e) {
              var t = yo.parseWithComments(yo.extract(e)),
                n = Object.assign({ format: '' }, t.pragmas),
                r = yo
                  .print({
                    pragmas: n,
                    comments: t.comments.replace(/^(\s+?\r?\n)+/, ''),
                  })
                  .replace(/(\r\n|\r)/g, '\n'),
                i = yo.strip(e);
              return r + (i.startsWith('\n') ? '\n' : '\n\n') + i;
            },
          },
          Do = { '---': 'yaml', '+++': 'toml' },
          Eo = function(e) {
            var t = Object.keys(Do)
                .map(cn)
                .join('|'),
              n = e.match(
                new RegExp(
                  '^('.concat(
                    t,
                    ')[^\\n\\S]*\\n(?:([\\s\\S]*?)\\n)?\\1[^\\n\\S]*(\\n|$)',
                  ),
                ),
              );
            if (null === n) return { frontMatter: null, content: e };
            var r = n[0].replace(/\n$/, ''),
              i = n[1],
              a = n[2];
            return {
              frontMatter: { type: Do[i], value: a, raw: r },
              content: n[0].replace(/[^\n]/g, ' ') + e.slice(n[0].length),
            };
          },
          Co = [
            'red',
            'green',
            'blue',
            'alpha',
            'a',
            'rgb',
            'hue',
            'h',
            'saturation',
            's',
            'lightness',
            'l',
            'whiteness',
            'w',
            'blackness',
            'b',
            'tint',
            'shade',
            'blend',
            'blenda',
            'contrast',
            'hsl',
            'hsla',
            'hwb',
            'hwba',
          ];
        function bo(e, t) {
          for (var n, r = [].concat(t), i = -1; (n = e.getParentNode(++i)); )
            if (-1 !== r.indexOf(n.type)) return i;
          return -1;
        }
        function xo(e, t) {
          var n = bo(e, t);
          return -1 === n ? null : e.getParentNode(n);
        }
        function Ao(e) {
          return 'value-operator' === e.type && '*' === e.value;
        }
        function So(e) {
          return 'value-operator' === e.type && '/' === e.value;
        }
        function wo(e) {
          return 'value-operator' === e.type && '+' === e.value;
        }
        function Fo(e) {
          return 'value-operator' === e.type && '-' === e.value;
        }
        function ko(e) {
          return 'value-operator' === e.type && '%' === e.value;
        }
        function To(e) {
          return (
            'value-comma_group' === e.type &&
            e.groups &&
            e.groups[1] &&
            'value-colon' === e.groups[1].type
          );
        }
        function _o(e) {
          return (
            'value-paren_group' === e.type &&
            e.groups &&
            e.groups[0] &&
            To(e.groups[0])
          );
        }
        var Oo = xo,
          No = function(e) {
            var t = xo(e, 'css-decl');
            return t && t.prop && t.prop.toLowerCase();
          },
          Bo = function(e) {
            return e.includes('$') ||
              e.includes('@') ||
              e.includes('#') ||
              e.startsWith('%') ||
              e.startsWith('--') ||
              e.startsWith(':--') ||
              (e.includes('(') && e.includes(')'))
              ? e
              : e.toLowerCase();
          },
          Io = function(e, t) {
            var n = xo(e, 'value-func');
            return n && n.value && n.value.toLowerCase() === t;
          },
          Po = function(e) {
            var t = xo(e, 'css-rule');
            return (
              t &&
              t.raws &&
              t.raws.selector &&
              (t.raws.selector.startsWith(':import') ||
                t.raws.selector.startsWith(':export'))
            );
          },
          Mo = function(e, t) {
            var n = [].concat(t),
              r = xo(e, 'css-atrule');
            return r && -1 !== n.indexOf(r.name.toLowerCase());
          },
          Lo = function(e) {
            var t = e.getValue(),
              n = xo(e, 'css-atrule');
            return (
              n &&
              'import' === n.name &&
              'url' === t.groups[0].value &&
              2 === t.groups.length
            );
          },
          Ro = function(e, t) {
            var n = xo(e, 'css-atrule');
            return (
              n &&
              n.name &&
              n.name.toLowerCase().endsWith('keyframes') &&
              -1 !== ['from', 'to'].indexOf(t.toLowerCase())
            );
          },
          jo = function(e) {
            return -1 !== oo.indexOf(e.toLowerCase());
          },
          Uo = function(e) {
            return (
              -1 !==
              ['initial', 'inherit', 'unset', 'revert'].indexOf(e.toLowerCase())
            );
          },
          Vo = function(e, t) {
            return 'less' === e || 'scss' === e
              ? 'scss' === e
              : /(\w\s*: [^}:]+|#){|@import[^\n]+(url|,)/.test(t);
          },
          Wo = function(e, t) {
            var n = e.getParentNode();
            if (!n) return !1;
            var r = n.nodes;
            return r && r.indexOf(t) === r.length - 1;
          },
          $o = function(e) {
            return (
              'css-atrule' === e.type &&
              -1 !== ['if', 'else', 'for', 'each', 'while'].indexOf(e.name)
            );
          },
          qo = function(e) {
            return (
              !!e.selector &&
              (('string' == typeof e.selector && /^@.+:.*$/.test(e.selector)) ||
                (e.selector.value && /^@.+:.*$/.test(e.selector.value)))
            );
          },
          Yo = function(e) {
            return (
              'value-word' === e.type &&
              -1 !== ['<', '>', '<=', '>='].indexOf(e.value)
            );
          },
          Jo = function(e) {
            return (
              'value-word' === e.type && -1 !== ['==', '!='].indexOf(e.value)
            );
          },
          Ko = Ao,
          zo = So,
          Ho = wo,
          Xo = Fo,
          Go = function(e) {
            return Ao(e) || So(e) || wo(e) || Fo(e) || ko(e);
          },
          Qo = function(e) {
            return 'value-word' === e.type && 'in' === e.value;
          },
          Zo = function(e) {
            return (
              'value-word' === e.type &&
              -1 !== ['from', 'through', 'end'].indexOf(e.value)
            );
          },
          es = function(e) {
            return 'value-func' === e.type && 'url' === e.value.toLowerCase();
          },
          ts = function(e) {
            return (
              'value-word' === e.type &&
              -1 !== ['and', 'or', 'not'].indexOf(e.value)
            );
          },
          ns = function(e) {
            return (
              e.value &&
              'value-root' === e.value.type &&
              e.value.group &&
              'value-value' === e.value.group.type &&
              'composes' === e.prop.toLowerCase()
            );
          },
          rs = function(e) {
            return (
              e.value &&
              e.value.group &&
              e.value.group.group &&
              'value-paren_group' === e.value.group.group.type &&
              null !== e.value.group.group.open &&
              null !== e.value.group.group.close
            );
          },
          is = function(e) {
            return e.raws && '' === e.raws.before;
          },
          as = function(e) {
            return e.raws && e.raws.params && /^\(\s*\)$/.test(e.raws.params);
          },
          os = function(e) {
            return e.name.startsWith('prettier-placeholder');
          },
          ss = function(e) {
            return e.prop.startsWith('@prettier-placeholder');
          },
          us = function(e, t) {
            return (
              '$$' === e.value &&
              'value-func' === e.type &&
              t &&
              'value-word' === t.type &&
              !t.raws.before
            );
          },
          cs = To,
          ls = function(e) {
            var t = e.getValue();
            if (0 === t.groups.length) return !1;
            var n = e.getParentNode(1);
            if (!(_o(t) || (n && _o(n)))) return !1;
            var r = xo(e, 'css-decl');
            return (
              !!(r && r.prop && r.prop.startsWith('$')) ||
              !!_o(n) ||
              'value-func' === n.type
            );
          },
          ps = function(e) {
            return 'value-comment' === e.type && e.inline;
          },
          fs = function(e) {
            return 'value-word' === e.type && '#' === e.value;
          },
          hs = function(e) {
            return 'value-word' === e.type && '{' === e.value;
          },
          ds = function(e) {
            return 'value-word' === e.type && '}' === e.value;
          },
          ms = function(e) {
            return -1 !== ['value-word', 'value-atword'].indexOf(e.type);
          },
          gs = function(e) {
            return 'value-colon' === e.type;
          },
          ys = function(e) {
            return (
              e.value &&
              -1 !== ['not', 'and', 'or'].indexOf(e.value.toLowerCase())
            );
          },
          vs = function(e) {
            return (
              'value-func' === e.type &&
              -1 !== Co.indexOf(e.value.toLowerCase())
            );
          },
          Ds = function(e) {
            var t = Eo(e),
              n = t.frontMatter,
              r = t.content;
            return (n ? n.raw + '\n\n' : '') + vo.insertPragma(r);
          },
          Es = Oi.printNumber,
          Cs = Oi.printString,
          bs = Oi.hasIgnoreComment,
          xs = Oi.hasNewline,
          As = na.isNextLineEmpty,
          Ss = ea.builders,
          ws = Ss.concat,
          Fs = Ss.join,
          ks = Ss.line,
          Ts = Ss.hardline,
          _s = Ss.softline,
          Os = Ss.group,
          Ns = Ss.fill,
          Bs = Ss.indent,
          Is = Ss.dedent,
          Ps = Ss.ifBreak,
          Ms = ea.utils.removeLines,
          Ls = Oo,
          Rs = No,
          js = Bo,
          Us = Io,
          Vs = Po,
          Ws = Mo,
          $s = Lo,
          qs = Ro,
          Ys = jo,
          Js = Uo,
          Ks = Vo,
          zs = Wo,
          Hs = $o,
          Xs = qo,
          Gs = Yo,
          Qs = Jo,
          Zs = Ko,
          eu = zo,
          tu = Ho,
          nu = Xo,
          ru = Go,
          iu = Qo,
          au = Zo,
          ou = es,
          su = ts,
          uu = ns,
          cu = rs,
          lu = is,
          pu = cs,
          fu = as,
          hu = os,
          du = ss,
          mu = us,
          gu = ls,
          yu = ps,
          vu = fs,
          Du = hs,
          Eu = ds,
          Cu = ms,
          bu = gs,
          xu = ys,
          Au = vs;
        function Su(e) {
          switch (e.trailingComma) {
            case 'all':
            case 'es5':
              return !0;
            case 'none':
            default:
              return !1;
          }
        }
        function wu(e, t, n) {
          var r = e.getValue(),
            i = [],
            a = 0;
          return (
            e.map(function(e) {
              var o = r.nodes[a - 1];
              if (
                o &&
                'css-comment' === o.type &&
                'prettier-ignore' === o.text.trim()
              ) {
                var s = e.getValue();
                i.push(t.originalText.slice(t.locStart(s), t.locEnd(s)));
              } else i.push(e.call(n));
              a !== r.nodes.length - 1 &&
                (('css-comment' === r.nodes[a + 1].type &&
                  !xs(t.originalText, t.locStart(r.nodes[a + 1]), {
                    backwards: !0,
                  }) &&
                  'yaml' !== r.nodes[a].type &&
                  'toml' !== r.nodes[a].type) ||
                ('css-atrule' === r.nodes[a + 1].type &&
                  'else' === r.nodes[a + 1].name &&
                  'css-comment' !== r.nodes[a].type)
                  ? i.push(' ')
                  : (i.push(Ts),
                    As(t.originalText, e.getValue(), t) &&
                      'yaml' !== r.nodes[a].type &&
                      'toml' !== r.nodes[a].type &&
                      i.push(Ts))),
                a++;
            }, 'nodes'),
            ws(i)
          );
        }
        var Fu = /(['"])(?:(?!\1)[^\\]|\\[\s\S])*\1/g,
          ku = RegExp(
            Fu.source +
              '|' +
              '('.concat(
                /[$@]?[a-zA-Z_\u0080-\uFFFF][\w\-\u0080-\uFFFF]*/g.source,
                ')?',
              ) +
              '('.concat(/(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?/g.source, ')') +
              '('.concat(/[a-zA-Z]+/g.source, ')?'),
            'g',
          );
        function Tu(e, t) {
          return e.replace(Fu, function(e) {
            return Cs(e, t);
          });
        }
        function _u(e, t) {
          var n = t.singleQuote ? "'" : '"';
          return e.includes('"') || e.includes("'") ? e : n + e + n;
        }
        function Ou(e) {
          return e.replace(ku, function(e, t, n, r, i) {
            return !n && r ? (n || '') + Nu(r) + js(i || '') : e;
          });
        }
        function Nu(e) {
          return Es(e).replace(/\.0(?=$|e)/, '');
        }
        var Bu = {
            print: function(e, t, n) {
              var r = e.getValue();
              if (!r) return '';
              if ('string' == typeof r) return r;
              switch (r.type) {
                case 'yaml':
                case 'toml':
                  return ws([r.raw, Ts]);
                case 'css-root':
                  var i = wu(e, t, n);
                  return i.parts.length ? ws([i, Ts]) : i;
                case 'css-comment':
                  if (r.raws.content) return r.raws.content;
                  var a = t.originalText.slice(t.locStart(r), t.locEnd(r)),
                    o = r.raws.text || r.text;
                  return -1 === a.indexOf(o)
                    ? r.raws.inline
                      ? ws(['// ', o])
                      : ws(['/* ', o, ' */'])
                    : a;
                case 'css-rule':
                  return ws([
                    e.call(n, 'selector'),
                    r.important ? ' !important' : '',
                    r.nodes
                      ? ws([
                          ' {',
                          r.nodes.length > 0 ? Bs(ws([Ts, wu(e, t, n)])) : '',
                          Ts,
                          '}',
                          Xs(r) ? ';' : '',
                        ])
                      : ';',
                  ]);
                case 'css-decl':
                  var s = e.getParentNode();
                  return ws([
                    r.raws.before.replace(/[\s;]/g, ''),
                    Vs(e) ? r.prop : js(r.prop),
                    ':' === r.raws.between.trim() ? ':' : r.raws.between.trim(),
                    r.extend ? '' : ' ',
                    uu(r) ? Ms(e.call(n, 'value')) : e.call(n, 'value'),
                    r.raws.important
                      ? r.raws.important.replace(
                          /\s*!\s*important/i,
                          ' !important',
                        )
                      : r.important
                      ? ' !important'
                      : '',
                    r.raws.scssDefault
                      ? r.raws.scssDefault.replace(/\s*!default/i, ' !default')
                      : r.scssDefault
                      ? ' !default'
                      : '',
                    r.raws.scssGlobal
                      ? r.raws.scssGlobal.replace(/\s*!global/i, ' !global')
                      : r.scssGlobal
                      ? ' !global'
                      : '',
                    r.nodes
                      ? ws([' {', Bs(ws([_s, wu(e, t, n)])), _s, '}'])
                      : du(r) &&
                        !s.raws.semicolon &&
                        ';' !== t.originalText[t.locEnd(r) - 1]
                      ? ''
                      : ';',
                  ]);
                case 'css-atrule':
                  var u = e.getParentNode();
                  return ws([
                    '@',
                    fu(r) || r.name.endsWith(':') ? r.name : js(r.name),
                    r.params
                      ? ws([
                          fu(r)
                            ? ''
                            : hu(r) && /^\s*\n/.test(r.raws.afterName)
                            ? /^\s*\n\s*\n/.test(r.raws.afterName)
                              ? ws([Ts, Ts])
                              : Ts
                            : ' ',
                          e.call(n, 'params'),
                        ])
                      : '',
                    r.selector ? Bs(ws([' ', e.call(n, 'selector')])) : '',
                    r.value
                      ? Os(
                          ws([
                            ' ',
                            e.call(n, 'value'),
                            Hs(r) ? (cu(r) ? ' ' : ks) : '',
                          ]),
                        )
                      : 'else' === r.name
                      ? ' '
                      : '',
                    r.nodes
                      ? ws([
                          Hs(r) ? '' : ' ',
                          '{',
                          Bs(ws([r.nodes.length > 0 ? _s : '', wu(e, t, n)])),
                          _s,
                          '}',
                        ])
                      : hu(r) &&
                        !u.raws.semicolon &&
                        ';' !== t.originalText[t.locEnd(r) - 1]
                      ? ''
                      : ';',
                  ]);
                case 'media-query-list':
                  var c = [];
                  return (
                    e.each(function(e) {
                      var t = e.getValue();
                      ('media-query' === t.type && '' === t.value) ||
                        c.push(e.call(n));
                    }, 'nodes'),
                    Os(Bs(Fs(ks, c)))
                  );
                case 'media-query':
                  return ws([Fs(' ', e.map(n, 'nodes')), zs(e, r) ? '' : ',']);
                case 'media-type':
                  return Ou(Tu(r.value, t));
                case 'media-feature-expression':
                  return r.nodes
                    ? ws(['(', ws(e.map(n, 'nodes')), ')'])
                    : r.value;
                case 'media-feature':
                  return js(Tu(r.value.replace(/ +/g, ' '), t));
                case 'media-colon':
                  return ws([r.value, ' ']);
                case 'media-value':
                  return Ou(Tu(r.value, t));
                case 'media-keyword':
                  return Tu(r.value, t);
                case 'media-url':
                  return Tu(
                    r.value
                      .replace(/^url\(\s+/gi, 'url(')
                      .replace(/\s+\)$/gi, ')'),
                    t,
                  );
                case 'media-unknown':
                  return r.value;
                case 'selector-root':
                  return Os(
                    ws([
                      Ws(e, 'custom-selector')
                        ? ws([Ls(e, 'css-atrule').customSelector, ks])
                        : '',
                      Fs(
                        ws([
                          ',',
                          Ws(e, ['extend', 'custom-selector', 'nest'])
                            ? ks
                            : Ts,
                        ]),
                        e.map(n, 'nodes'),
                      ),
                    ]),
                  );
                case 'selector-selector':
                  return Os(Bs(ws(e.map(n, 'nodes'))));
                case 'selector-comment':
                  return r.value;
                case 'selector-string':
                  return Tu(r.value, t);
                case 'selector-tag':
                  var l = e.getParentNode(),
                    p = l && l.nodes.indexOf(r),
                    f = p && l.nodes[p - 1];
                  return ws([
                    r.namespace
                      ? ws([!0 === r.namespace ? '' : r.namespace.trim(), '|'])
                      : '',
                    'selector-nesting' === f.type
                      ? r.value
                      : Ou(
                          Ys(r.value) || qs(e, r.value)
                            ? r.value.toLowerCase()
                            : r.value,
                        ),
                  ]);
                case 'selector-id':
                  return ws(['#', r.value]);
                case 'selector-class':
                  return ws(['.', Ou(Tu(r.value, t))]);
                case 'selector-attribute':
                  return ws([
                    '[',
                    r.namespace
                      ? ws([!0 === r.namespace ? '' : r.namespace.trim(), '|'])
                      : '',
                    r.attribute.trim(),
                    r.operator ? r.operator : '',
                    r.value ? _u(Tu(r.value.trim(), t), t) : '',
                    r.insensitive ? ' i' : '',
                    ']',
                  ]);
                case 'selector-combinator':
                  if (
                    '+' === r.value ||
                    '>' === r.value ||
                    '~' === r.value ||
                    '>>>' === r.value
                  ) {
                    var h = e.getParentNode(),
                      d =
                        'selector-selector' === h.type && h.nodes[0] === r
                          ? ''
                          : ks;
                    return ws([d, r.value, zs(e, r) ? '' : ' ']);
                  }
                  var m = r.value.trim().startsWith('(') ? ks : '',
                    g = Ou(Tu(r.value.trim(), t)) || ks;
                  return ws([m, g]);
                case 'selector-universal':
                  return ws([
                    r.namespace
                      ? ws([!0 === r.namespace ? '' : r.namespace.trim(), '|'])
                      : '',
                    r.value,
                  ]);
                case 'selector-pseudo':
                  return ws([
                    js(r.value),
                    r.nodes && r.nodes.length > 0
                      ? ws(['(', Fs(', ', e.map(n, 'nodes')), ')'])
                      : '',
                  ]);
                case 'selector-nesting':
                  return r.value;
                case 'selector-unknown':
                  var y = Ls(e, 'css-rule');
                  return y && y.isSCSSNesterProperty
                    ? Ou(Tu(js(r.value), t))
                    : r.value;
                case 'value-value':
                case 'value-root':
                  return e.call(n, 'group');
                case 'value-comment':
                  return ws([
                    r.inline ? '//' : '/*',
                    r.value,
                    r.inline ? '' : '*/',
                  ]);
                case 'value-comma_group':
                  for (
                    var v = e.getParentNode(),
                      D = e.getParentNode(1),
                      E = Rs(e),
                      C =
                        E &&
                        'value-value' === v.type &&
                        ('grid' === E || E.startsWith('grid-template')),
                      b = Ls(e, 'css-atrule'),
                      x = b && Hs(b),
                      A = e.map(n, 'groups'),
                      S = [],
                      w = Us(e, 'url'),
                      F = !1,
                      k = !1,
                      T = 0;
                    T < r.groups.length;
                    ++T
                  )
                    if ((S.push(A[T]), !w)) {
                      var _ = r.groups[T - 1],
                        O = r.groups[T],
                        N = r.groups[T + 1],
                        B = r.groups[T + 2];
                      if (N) {
                        var I =
                            'value-string' === O.type &&
                            O.value.startsWith('#{'),
                          P =
                            F &&
                            'value-string' === N.type &&
                            N.value.endsWith('}');
                        if (I || P) F = !F;
                        else if (
                          !F &&
                          !(
                            bu(O) ||
                            bu(N) ||
                            ('value-atword' === O.type && '' === O.value) ||
                            '~' === O.value ||
                            (O.value &&
                              -1 !== O.value.indexOf('\\') &&
                              N &&
                              'value-comment' !== N.type) ||
                            (_ &&
                              _.value &&
                              _.value.indexOf('\\') === _.value.length - 1 &&
                              'value-operator' === O.type &&
                              '/' === O.value) ||
                            '\\' === O.value ||
                            mu(O, N) ||
                            vu(O) ||
                            Du(O) ||
                            Eu(N) ||
                            (Du(N) && lu(N)) ||
                            (Eu(O) && lu(N)) ||
                            ('--' === O.value && vu(N))
                          )
                        ) {
                          var M = ru(O),
                            L = ru(N);
                          if (
                            !(
                              (((M && vu(N)) || (L && Eu(O))) && lu(N)) ||
                              (Us(e, 'calc') &&
                                (tu(O) || tu(N) || nu(O) || nu(N)) &&
                                lu(N))
                            )
                          ) {
                            var R =
                                (tu(O) || nu(O)) &&
                                0 === T &&
                                ('value-number' === N.type || N.isHex) &&
                                D &&
                                Au(D) &&
                                !lu(N),
                              j =
                                (B && 'value-func' === B.type) ||
                                (B && Cu(B)) ||
                                'value-func' === O.type ||
                                Cu(O),
                              U =
                                'value-func' === N.type ||
                                Cu(N) ||
                                (_ && 'value-func' === _.type) ||
                                (_ && Cu(_));
                            (Zs(N) ||
                              Zs(O) ||
                              Us(e, 'calc') ||
                              R ||
                              !(
                                (eu(N) && !j) ||
                                (eu(O) && !U) ||
                                (tu(N) && !j) ||
                                (tu(O) && !U) ||
                                nu(N) ||
                                nu(O)
                              ) ||
                              !(lu(N) || (M && (!_ || (_ && ru(_)))))) &&
                              (yu(O)
                                ? S.push(Ts)
                                : (x &&
                                    (Qs(N) ||
                                      Gs(N) ||
                                      su(N) ||
                                      iu(O) ||
                                      au(O))) ||
                                  (b && 'namespace' === b.name.toLowerCase())
                                ? S.push(' ')
                                : C
                                ? O.source &&
                                  N.source &&
                                  O.source.start.line !== N.source.start.line
                                  ? (S.push(Ts), (k = !0))
                                  : S.push(' ')
                                : L
                                ? S.push(' ')
                                : S.push(ks));
                          }
                        }
                      }
                    }
                  return (
                    k && S.unshift(Ts),
                    x ? Os(Bs(ws(S))) : $s(e) ? Os(Ns(S)) : Os(Bs(Ns(S)))
                  );
                case 'value-paren_group':
                  var V = e.getParentNode();
                  if (
                    V &&
                    ou(V) &&
                    (1 === r.groups.length ||
                      (r.groups.length > 0 &&
                        'value-comma_group' === r.groups[0].type &&
                        r.groups[0].groups.length > 0 &&
                        'value-word' === r.groups[0].groups[0].type &&
                        r.groups[0].groups[0].value.startsWith('data:')))
                  )
                    return ws([
                      r.open ? e.call(n, 'open') : '',
                      Fs(',', e.map(n, 'groups')),
                      r.close ? e.call(n, 'close') : '',
                    ]);
                  if (!r.open) {
                    for (
                      var W = e.map(n, 'groups'), $ = [], q = 0;
                      q < W.length;
                      q++
                    )
                      0 !== q && $.push(ws([',', ks])), $.push(W[q]);
                    return Os(Bs(Ns($)));
                  }
                  var Y = gu(e);
                  return Os(
                    ws([
                      r.open ? e.call(n, 'open') : '',
                      Bs(
                        ws([
                          _s,
                          Fs(
                            ws([',', ks]),
                            e.map(function(e) {
                              var t = e.getValue(),
                                r = n(e);
                              return pu(t) &&
                                'value-comma_group' === t.type &&
                                t.groups &&
                                t.groups[2] &&
                                'value-paren_group' === t.groups[2].type
                                ? ((r.contents.contents.parts[1] = Os(
                                    r.contents.contents.parts[1],
                                  )),
                                  Os(Is(r)))
                                : r;
                            }, 'groups'),
                          ),
                        ]),
                      ),
                      Ps(Ks(t.parser, t.originalText) && Y && Su(t) ? ',' : ''),
                      _s,
                      r.close ? e.call(n, 'close') : '',
                    ]),
                    { shouldBreak: Y },
                  );
                case 'value-func':
                  return ws([
                    r.value,
                    Ws(e, 'supports') && xu(r) ? ' ' : '',
                    e.call(n, 'group'),
                  ]);
                case 'value-paren':
                  return r.value;
                case 'value-number':
                  return ws([Nu(r.value), js(r.unit)]);
                case 'value-operator':
                  return r.value;
                case 'value-word':
                  return (r.isColor && r.isHex) || Js(r.value)
                    ? r.value.toLowerCase()
                    : r.value;
                case 'value-colon':
                  return ws([r.value, Us(e, 'url') ? '' : ks]);
                case 'value-comma':
                  return ws([r.value, ' ']);
                case 'value-string':
                  return Cs(r.raws.quote + r.value + r.raws.quote, t);
                case 'value-atword':
                  return ws(['@', r.value]);
                case 'value-unicode-range':
                case 'value-unknown':
                  return r.value;
                default:
                  throw new Error(
                    'Unknown postcss type '.concat(JSON.stringify(r.type)),
                  );
              }
            },
            embed: mo,
            insertPragma: Ds,
            hasPrettierIgnore: bs,
            massageAstNode: so,
          },
          Iu = {
            bracketSpacing: {
              since: '0.0.0',
              category: 'Common',
              type: 'boolean',
              default: !0,
              description: 'Print spaces between brackets.',
              oppositeDescription: 'Do not print spaces between brackets.',
            },
            singleQuote: {
              since: '0.0.0',
              category: 'Common',
              type: 'boolean',
              default: !1,
              description: 'Use single quotes instead of double quotes.',
            },
            proseWrap: {
              since: '1.8.2',
              category: 'Common',
              type: 'choice',
              default: [
                { since: '1.8.2', value: !0 },
                { since: '1.9.0', value: 'preserve' },
              ],
              description: 'How to wrap prose.',
              choices: [
                {
                  since: '1.9.0',
                  value: 'always',
                  description: 'Wrap prose if it exceeds the print width.',
                },
                {
                  since: '1.9.0',
                  value: 'never',
                  description: 'Do not wrap prose.',
                },
                {
                  since: '1.9.0',
                  value: 'preserve',
                  description: 'Wrap prose as-is.',
                },
                { value: !1, deprecated: '1.9.0', redirect: 'never' },
                { value: !0, deprecated: '1.9.0', redirect: 'always' },
              ],
            },
          },
          Pu = { singleQuote: Iu.singleQuote },
          Mu = function(e, t) {
            var n = {};
            for (var r in e)
              n['languageId' === r ? 'linguistLanguageId' : r] = e[r];
            return t(n);
          },
          Lu = ['.css'],
          Ru = {
            name: 'CSS',
            type: 'markup',
            tmScope: 'source.css',
            aceMode: 'css',
            codemirrorMode: 'css',
            codemirrorMimeType: 'text/css',
            color: '#563d7c',
            extensions: Lu,
            languageId: 50,
          },
          ju = Object.freeze({
            __proto__: null,
            name: 'CSS',
            type: 'markup',
            tmScope: 'source.css',
            aceMode: 'css',
            codemirrorMode: 'css',
            codemirrorMimeType: 'text/css',
            color: '#563d7c',
            extensions: Lu,
            languageId: 50,
            default: Ru,
          }),
          Uu = ['.pcss'],
          Vu = {
            name: 'PostCSS',
            type: 'markup',
            tmScope: 'source.postcss',
            group: 'CSS',
            extensions: Uu,
            aceMode: 'text',
            languageId: 262764437,
          },
          Wu = Object.freeze({
            __proto__: null,
            name: 'PostCSS',
            type: 'markup',
            tmScope: 'source.postcss',
            group: 'CSS',
            extensions: Uu,
            aceMode: 'text',
            languageId: 262764437,
            default: Vu,
          }),
          $u = ['.less'],
          qu = {
            name: 'Less',
            type: 'markup',
            group: 'CSS',
            extensions: $u,
            tmScope: 'source.css.less',
            aceMode: 'less',
            codemirrorMode: 'css',
            codemirrorMimeType: 'text/css',
            languageId: 198,
          },
          Yu = Object.freeze({
            __proto__: null,
            name: 'Less',
            type: 'markup',
            group: 'CSS',
            extensions: $u,
            tmScope: 'source.css.less',
            aceMode: 'less',
            codemirrorMode: 'css',
            codemirrorMimeType: 'text/css',
            languageId: 198,
            default: qu,
          }),
          Ju = ['.scss'],
          Ku = {
            name: 'SCSS',
            type: 'markup',
            tmScope: 'source.css.scss',
            group: 'CSS',
            aceMode: 'scss',
            codemirrorMode: 'css',
            codemirrorMimeType: 'text/x-scss',
            extensions: Ju,
            languageId: 329,
          },
          zu = Object.freeze({
            __proto__: null,
            name: 'SCSS',
            type: 'markup',
            tmScope: 'source.css.scss',
            group: 'CSS',
            aceMode: 'scss',
            codemirrorMode: 'css',
            codemirrorMimeType: 'text/x-scss',
            extensions: Ju,
            languageId: 329,
            default: Ku,
          }),
          Hu = pt(ju),
          Xu = pt(Wu),
          Gu = pt(Yu),
          Qu = pt(zu),
          Zu = {
            languages: [
              Mu(Hu, function(e) {
                return Object.assign(e, {
                  since: '1.4.0',
                  parsers: ['css'],
                  vscodeLanguageIds: ['css'],
                });
              }),
              Mu(Xu, function(e) {
                return Object.assign(e, {
                  since: '1.4.0',
                  parsers: ['css'],
                  vscodeLanguageIds: ['postcss'],
                  extensions: e.extensions.concat('.postcss'),
                });
              }),
              Mu(Gu, function(e) {
                return Object.assign(e, {
                  since: '1.4.0',
                  parsers: ['less'],
                  vscodeLanguageIds: ['less'],
                });
              }),
              Mu(Qu, function(e) {
                return Object.assign(e, {
                  since: '1.4.0',
                  parsers: ['scss'],
                  vscodeLanguageIds: ['scss'],
                });
              }),
            ],
            options: Pu,
            printers: { postcss: Bu },
          },
          ec = function(e) {
            return '# @format\n\n' + e;
          },
          tc = ea.builders,
          nc = tc.concat,
          rc = tc.join,
          ic = tc.hardline,
          ac = tc.line,
          oc = tc.softline,
          sc = tc.group,
          uc = tc.indent,
          cc = tc.ifBreak,
          lc = Oi.hasIgnoreComment,
          pc = na.isNextLineEmpty;
        function fc(e, t, n) {
          return 0 === n.directives.length
            ? ''
            : nc([
                ' ',
                sc(
                  uc(
                    nc([oc, rc(nc([cc('', ' '), oc]), e.map(t, 'directives'))]),
                  ),
                ),
              ]);
        }
        function hc(e, t, n) {
          var r = e.getValue().length;
          return e.map(function(e, i) {
            var a = n(e);
            return pc(t.originalText, e.getValue(), t) && i < r - 1
              ? nc([a, ic])
              : a;
          });
        }
        function dc(e) {
          var t = e.indexOf('implements');
          if (-1 === t) throw new Error('Must implement interfaces: ' + e);
          var n = e.indexOf('{');
          return (
            -1 === n && (n = e.length),
            e.substr(t, n).includes('&') ? ' & ' : ', '
          );
        }
        var mc = {
            print: function(e, t, n) {
              var r = e.getValue();
              if (!r) return '';
              if ('string' == typeof r) return r;
              switch (r.kind) {
                case 'Document':
                  var i = [];
                  return (
                    e.map(function(e, a) {
                      i.push(nc([e.call(n)])),
                        a !== r.definitions.length - 1 &&
                          (i.push(ic),
                          pc(t.originalText, e.getValue(), t) && i.push(ic));
                    }, 'definitions'),
                    nc([nc(i), ic])
                  );
                case 'OperationDefinition':
                  var a = '{' !== t.originalText[t.locStart(r)],
                    o = !!r.name;
                  return nc([
                    a ? r.operation : '',
                    a && o ? nc([' ', e.call(n, 'name')]) : '',
                    r.variableDefinitions && r.variableDefinitions.length
                      ? sc(
                          nc([
                            '(',
                            uc(
                              nc([
                                oc,
                                rc(
                                  nc([cc('', ', '), oc]),
                                  e.map(n, 'variableDefinitions'),
                                ),
                              ]),
                            ),
                            oc,
                            ')',
                          ]),
                        )
                      : '',
                    fc(e, n, r),
                    r.selectionSet && (a || o) ? ' ' : '',
                    e.call(n, 'selectionSet'),
                  ]);
                case 'FragmentDefinition':
                  return nc([
                    'fragment ',
                    e.call(n, 'name'),
                    r.variableDefinitions && r.variableDefinitions.length
                      ? sc(
                          nc([
                            '(',
                            uc(
                              nc([
                                oc,
                                rc(
                                  nc([cc('', ', '), oc]),
                                  e.map(n, 'variableDefinitions'),
                                ),
                              ]),
                            ),
                            oc,
                            ')',
                          ]),
                        )
                      : '',
                    ' on ',
                    e.call(n, 'typeCondition'),
                    fc(e, n, r),
                    ' ',
                    e.call(n, 'selectionSet'),
                  ]);
                case 'SelectionSet':
                  return nc([
                    '{',
                    uc(
                      nc([
                        ic,
                        rc(
                          ic,
                          e.call(function(e) {
                            return hc(e, t, n);
                          }, 'selections'),
                        ),
                      ]),
                    ),
                    ic,
                    '}',
                  ]);
                case 'Field':
                  return sc(
                    nc([
                      r.alias ? nc([e.call(n, 'alias'), ': ']) : '',
                      e.call(n, 'name'),
                      r.arguments.length > 0
                        ? sc(
                            nc([
                              '(',
                              uc(
                                nc([
                                  oc,
                                  rc(
                                    nc([cc('', ', '), oc]),
                                    e.call(function(e) {
                                      return hc(e, t, n);
                                    }, 'arguments'),
                                  ),
                                ]),
                              ),
                              oc,
                              ')',
                            ]),
                          )
                        : '',
                      fc(e, n, r),
                      r.selectionSet ? ' ' : '',
                      e.call(n, 'selectionSet'),
                    ]),
                  );
                case 'Name':
                  return r.value;
                case 'StringValue':
                  return r.block
                    ? nc([
                        '"""',
                        ic,
                        rc(ic, r.value.replace(/"""/g, '\\$&').split('\n')),
                        ic,
                        '"""',
                      ])
                    : nc([
                        '"',
                        r.value.replace(/["\\]/g, '\\$&').replace(/\n/g, '\\n'),
                        '"',
                      ]);
                case 'IntValue':
                case 'FloatValue':
                case 'EnumValue':
                  return r.value;
                case 'BooleanValue':
                  return r.value ? 'true' : 'false';
                case 'NullValue':
                  return 'null';
                case 'Variable':
                  return nc(['$', e.call(n, 'name')]);
                case 'ListValue':
                  return sc(
                    nc([
                      '[',
                      uc(
                        nc([
                          oc,
                          rc(nc([cc('', ', '), oc]), e.map(n, 'values')),
                        ]),
                      ),
                      oc,
                      ']',
                    ]),
                  );
                case 'ObjectValue':
                  return sc(
                    nc([
                      '{',
                      t.bracketSpacing && r.fields.length > 0 ? ' ' : '',
                      uc(
                        nc([
                          oc,
                          rc(nc([cc('', ', '), oc]), e.map(n, 'fields')),
                        ]),
                      ),
                      oc,
                      cc(
                        '',
                        t.bracketSpacing && r.fields.length > 0 ? ' ' : '',
                      ),
                      '}',
                    ]),
                  );
                case 'ObjectField':
                case 'Argument':
                  return nc([e.call(n, 'name'), ': ', e.call(n, 'value')]);
                case 'Directive':
                  return nc([
                    '@',
                    e.call(n, 'name'),
                    r.arguments.length > 0
                      ? sc(
                          nc([
                            '(',
                            uc(
                              nc([
                                oc,
                                rc(
                                  nc([cc('', ', '), oc]),
                                  e.call(function(e) {
                                    return hc(e, t, n);
                                  }, 'arguments'),
                                ),
                              ]),
                            ),
                            oc,
                            ')',
                          ]),
                        )
                      : '',
                  ]);
                case 'NamedType':
                  return e.call(n, 'name');
                case 'VariableDefinition':
                  return nc([
                    e.call(n, 'variable'),
                    ': ',
                    e.call(n, 'type'),
                    r.defaultValue
                      ? nc([' = ', e.call(n, 'defaultValue')])
                      : '',
                    fc(e, n, r),
                  ]);
                case 'TypeExtensionDefinition':
                  return nc(['extend ', e.call(n, 'definition')]);
                case 'ObjectTypeExtension':
                case 'ObjectTypeDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? ic : '',
                    'ObjectTypeExtension' === r.kind ? 'extend ' : '',
                    'type ',
                    e.call(n, 'name'),
                    r.interfaces.length > 0
                      ? nc([
                          ' implements ',
                          rc(
                            dc(
                              t.originalText.substr(t.locStart(r), t.locEnd(r)),
                            ),
                            e.map(n, 'interfaces'),
                          ),
                        ])
                      : '',
                    fc(e, n, r),
                    r.fields.length > 0
                      ? nc([
                          ' {',
                          uc(
                            nc([
                              ic,
                              rc(
                                ic,
                                e.call(function(e) {
                                  return hc(e, t, n);
                                }, 'fields'),
                              ),
                            ]),
                          ),
                          ic,
                          '}',
                        ])
                      : '',
                  ]);
                case 'FieldDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? ic : '',
                    e.call(n, 'name'),
                    r.arguments.length > 0
                      ? sc(
                          nc([
                            '(',
                            uc(
                              nc([
                                oc,
                                rc(
                                  nc([cc('', ', '), oc]),
                                  e.call(function(e) {
                                    return hc(e, t, n);
                                  }, 'arguments'),
                                ),
                              ]),
                            ),
                            oc,
                            ')',
                          ]),
                        )
                      : '',
                    ': ',
                    e.call(n, 'type'),
                    fc(e, n, r),
                  ]);
                case 'DirectiveDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? ic : '',
                    'directive ',
                    '@',
                    e.call(n, 'name'),
                    r.arguments.length > 0
                      ? sc(
                          nc([
                            '(',
                            uc(
                              nc([
                                oc,
                                rc(
                                  nc([cc('', ', '), oc]),
                                  e.call(function(e) {
                                    return hc(e, t, n);
                                  }, 'arguments'),
                                ),
                              ]),
                            ),
                            oc,
                            ')',
                          ]),
                        )
                      : '',
                    nc([' on ', rc(' | ', e.map(n, 'locations'))]),
                  ]);
                case 'EnumTypeExtension':
                case 'EnumTypeDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? ic : '',
                    'EnumTypeExtension' === r.kind ? 'extend ' : '',
                    'enum ',
                    e.call(n, 'name'),
                    fc(e, n, r),
                    r.values.length > 0
                      ? nc([
                          ' {',
                          uc(
                            nc([
                              ic,
                              rc(
                                ic,
                                e.call(function(e) {
                                  return hc(e, t, n);
                                }, 'values'),
                              ),
                            ]),
                          ),
                          ic,
                          '}',
                        ])
                      : '',
                  ]);
                case 'EnumValueDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? ic : '',
                    e.call(n, 'name'),
                    fc(e, n, r),
                  ]);
                case 'InputValueDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? (r.description.block ? ic : ac) : '',
                    e.call(n, 'name'),
                    ': ',
                    e.call(n, 'type'),
                    r.defaultValue
                      ? nc([' = ', e.call(n, 'defaultValue')])
                      : '',
                    fc(e, n, r),
                  ]);
                case 'InputObjectTypeExtension':
                case 'InputObjectTypeDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? ic : '',
                    'InputObjectTypeExtension' === r.kind ? 'extend ' : '',
                    'input ',
                    e.call(n, 'name'),
                    fc(e, n, r),
                    r.fields.length > 0
                      ? nc([
                          ' {',
                          uc(
                            nc([
                              ic,
                              rc(
                                ic,
                                e.call(function(e) {
                                  return hc(e, t, n);
                                }, 'fields'),
                              ),
                            ]),
                          ),
                          ic,
                          '}',
                        ])
                      : '',
                  ]);
                case 'SchemaDefinition':
                  return nc([
                    'schema',
                    fc(e, n, r),
                    ' {',
                    r.operationTypes.length > 0
                      ? uc(
                          nc([
                            ic,
                            rc(
                              ic,
                              e.call(function(e) {
                                return hc(e, t, n);
                              }, 'operationTypes'),
                            ),
                          ]),
                        )
                      : '',
                    ic,
                    '}',
                  ]);
                case 'OperationTypeDefinition':
                  return nc([e.call(n, 'operation'), ': ', e.call(n, 'type')]);
                case 'InterfaceTypeExtension':
                case 'InterfaceTypeDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? ic : '',
                    'InterfaceTypeExtension' === r.kind ? 'extend ' : '',
                    'interface ',
                    e.call(n, 'name'),
                    fc(e, n, r),
                    r.fields.length > 0
                      ? nc([
                          ' {',
                          uc(
                            nc([
                              ic,
                              rc(
                                ic,
                                e.call(function(e) {
                                  return hc(e, t, n);
                                }, 'fields'),
                              ),
                            ]),
                          ),
                          ic,
                          '}',
                        ])
                      : '',
                  ]);
                case 'FragmentSpread':
                  return nc(['...', e.call(n, 'name'), fc(e, n, r)]);
                case 'InlineFragment':
                  return nc([
                    '...',
                    r.typeCondition
                      ? nc([' on ', e.call(n, 'typeCondition')])
                      : '',
                    fc(e, n, r),
                    ' ',
                    e.call(n, 'selectionSet'),
                  ]);
                case 'UnionTypeExtension':
                case 'UnionTypeDefinition':
                  return sc(
                    nc([
                      e.call(n, 'description'),
                      r.description ? ic : '',
                      sc(
                        nc([
                          'UnionTypeExtension' === r.kind ? 'extend ' : '',
                          'union ',
                          e.call(n, 'name'),
                          fc(e, n, r),
                          r.types.length > 0
                            ? nc([
                                ' =',
                                cc('', ' '),
                                uc(
                                  nc([
                                    cc(nc([ac, '  '])),
                                    rc(nc([ac, '| ']), e.map(n, 'types')),
                                  ]),
                                ),
                              ])
                            : '',
                        ]),
                      ),
                    ]),
                  );
                case 'ScalarTypeExtension':
                case 'ScalarTypeDefinition':
                  return nc([
                    e.call(n, 'description'),
                    r.description ? ic : '',
                    'ScalarTypeExtension' === r.kind ? 'extend ' : '',
                    'scalar ',
                    e.call(n, 'name'),
                    fc(e, n, r),
                  ]);
                case 'NonNullType':
                  return nc([e.call(n, 'type'), '!']);
                case 'ListType':
                  return nc(['[', e.call(n, 'type'), ']']);
                default:
                  throw new Error(
                    'unknown graphql type: ' + JSON.stringify(r.kind),
                  );
              }
            },
            massageAstNode: function(e, t) {
              delete t.loc, delete t.comments;
            },
            hasPrettierIgnore: lc,
            insertPragma: ec,
            printComment: function(e) {
              var t = e.getValue();
              if ('Comment' === t.kind) return '#' + t.value.trimRight();
              throw new Error('Not a comment: ' + JSON.stringify(t));
            },
            canAttachComment: function(e) {
              return e.kind && 'Comment' !== e.kind;
            },
          },
          gc = { bracketSpacing: Iu.bracketSpacing },
          yc = ['.graphql', '.gql', '.graphqls'],
          vc = {
            name: 'GraphQL',
            type: 'data',
            extensions: yc,
            tmScope: 'source.graphql',
            aceMode: 'text',
            languageId: 139,
          },
          Dc = {
            languages: [
              Mu(
                pt(
                  Object.freeze({
                    __proto__: null,
                    name: 'GraphQL',
                    type: 'data',
                    extensions: yc,
                    tmScope: 'source.graphql',
                    aceMode: 'text',
                    languageId: 139,
                    default: vc,
                  }),
                ),
                function(e) {
                  return Object.assign(e, {
                    since: '1.5.0',
                    parsers: ['graphql'],
                    vscodeLanguageIds: ['graphql'],
                  });
                },
              ),
            ],
            options: gc,
            printers: { graphql: mc },
          },
          Ec = ea.builders,
          Cc = Ec.concat,
          bc = Ec.join,
          xc = Ec.softline,
          Ac = Ec.hardline,
          Sc = Ec.line,
          wc = Ec.group,
          Fc = Ec.indent,
          kc = Ec.ifBreak,
          Tc = [
            'area',
            'base',
            'br',
            'col',
            'embed',
            'hr',
            'img',
            'input',
            'link',
            'meta',
            'param',
            'source',
            'track',
            'wbr',
          ];
        function _c(e, t, n) {
          return Cc(
            e.map(function(r, i) {
              var a = e.getValue(),
                o = 0 === i,
                s = i == e.getParentNode(0).children.length - 1 && !o;
              return Rc(a) && s
                ? n(r, t, n)
                : o
                ? Cc([xc, n(r, t, n)])
                : n(r, t, n);
            }, 'children'),
          );
        }
        function Oc(e, t) {
          var n = { quote: '"', regex: /"/g },
            r = { quote: "'", regex: /'/g },
            i = t.singleQuote ? r : n,
            a = i === r ? n : r,
            o = !1;
          (e.includes(i.quote) || e.includes(a.quote)) &&
            (o =
              (e.match(i.regex) || []).length >
              (e.match(a.regex) || []).length);
          var s = o ? a : i,
            u = e.replace(s.regex, '\\'.concat(s.quote));
          return ''
            .concat(s.quote)
            .concat(u)
            .concat(s.quote);
        }
        function Nc(e, t) {
          return e.call(t, 'path');
        }
        function Bc(e, t) {
          var n = e.getValue(),
            r = [];
          return (
            n.params.length > 0 && (r = r.concat(e.map(t, 'params'))),
            n.hash && n.hash.pairs.length > 0 && r.push(e.call(t, 'hash')),
            r
          );
        }
        function Ic(e, t, n) {
          var r = [];
          return (
            (n = Object.assign({ group: !0 }, n || {})),
            r.push(Nc(e, t)),
            (r = r.concat(Bc(e, t))),
            n.group ? Fc(wc(bc(Sc, r))) : Fc(bc(Sc, r))
          );
        }
        function Pc(e) {
          var t = e.getValue();
          return t.program && t.program.blockParams.length
            ? Cc([' as |', t.program.blockParams.join(' '), '|'])
            : '';
        }
        function Mc(e, t) {
          return wc(Cc(['{{#', Ic(e, t), Pc(e), xc, '}}']));
        }
        function Lc(e, t) {
          return Cc(['{{/', e.call(t, 'path'), '}}']);
        }
        function Rc(e) {
          return 'TextNode' === e.type && !/\S/.test(e.chars);
        }
        function jc(e) {
          var t = e.getValue(),
            n = e.getParentNode(0),
            r = n.children || n.body;
          if (r) {
            var i = r.indexOf(t);
            if (i > 0) return r[i - 1];
          }
        }
        function Uc(e) {
          var t = e.getValue(),
            n = e.getParentNode(0),
            r = n.children || n.body;
          if (r) {
            var i = r.indexOf(t);
            if (i < r.length) return r[i + 1];
          }
        }
        function Vc(e, t) {
          var n = jc(e);
          return (
            !!n &&
            t.some(function(e) {
              return n.type === e;
            })
          );
        }
        function Wc(e, t) {
          var n = Uc(e);
          return n && n.type === t;
        }
        function $c(e) {
          return (e = 'string' == typeof e ? e : '').split('\n').length - 1;
        }
        function qc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 0,
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0;
          return new Array(Math.min(e, t)).fill(Ac);
        }
        var Yc = {
            print: function(e, t, n) {
              var r = e.getValue();
              if (!r) return '';
              switch (r.type) {
                case 'Block':
                case 'Program':
                case 'Template':
                  return wc(
                    Cc(
                      e.map(n, 'body').filter(function(e) {
                        return '' !== e;
                      }),
                    ),
                  );
                case 'ElementNode':
                  var i = r.tag[0],
                    a = -1 !== r.tag.indexOf('.'),
                    o = i.toUpperCase() === i || a,
                    s = r.children.length > 0,
                    u = r.children.some(function(e) {
                      return !Rc(e);
                    }),
                    c = (o && (!s || !u)) || -1 !== Tc.indexOf(r.tag),
                    l = c ? Cc([' />', xc]) : '>',
                    p = c ? '/>' : '>',
                    f = Uc(e);
                  return Cc([
                    wc(
                      Cc([
                        '<',
                        r.tag,
                        (function(e, t) {
                          return Fc(
                            Cc([
                              r.attributes.length ? Sc : '',
                              bc(Sc, e.map(t, 'attributes')),
                              r.modifiers.length ? Sc : '',
                              bc(Sc, e.map(t, 'modifiers')),
                              r.comments.length ? Sc : '',
                              bc(Sc, e.map(t, 'comments')),
                            ]),
                          );
                        })(e, n),
                        r.blockParams.length
                          ? ' as |'.concat(r.blockParams.join(' '), '|')
                          : '',
                        kc(xc, ''),
                        kc(p, l),
                      ]),
                    ),
                    c
                      ? ''
                      : wc(
                          Cc([
                            u ? Fc(_c(e, t, n)) : '',
                            kc(s ? Ac : '', ''),
                            Cc(['</', r.tag, '>']),
                          ]),
                        ),
                    f && 'ElementNode' === f.type ? Ac : '',
                  ]);
                case 'BlockStatement':
                  var h = e.getParentNode(1),
                    d =
                      h &&
                      h.inverse &&
                      1 === h.inverse.body.length &&
                      h.inverse.body[0] === r &&
                      'if' === h.inverse.body[0].path.parts[0],
                    m =
                      r.inverse &&
                      1 === r.inverse.body.length &&
                      'BlockStatement' === r.inverse.body[0].type &&
                      'if' === r.inverse.body[0].path.parts[0],
                    g = m
                      ? function(e) {
                          return e;
                        }
                      : Fc;
                  if (r.inverse)
                    return Cc([
                      d ? Cc(['{{else ', Ic(e, n), '}}']) : Mc(e, n),
                      Fc(Cc([Ac, e.call(n, 'program')])),
                      r.inverse && !m ? Cc([Ac, '{{else}}']) : '',
                      r.inverse ? g(Cc([Ac, e.call(n, 'inverse')])) : '',
                      d ? '' : Cc([Ac, Lc(e, n)]),
                    ]);
                  if (d)
                    return Cc([
                      Cc(['{{else ', Ic(e, n), '}}']),
                      Fc(Cc([Ac, e.call(n, 'program')])),
                    ]);
                  var y = r.program.body.some(function(e) {
                    return !Rc(e);
                  });
                  return Cc([
                    Mc(e, n),
                    wc(
                      Cc([
                        Fc(Cc([xc, e.call(n, 'program')])),
                        y ? Ac : xc,
                        Lc(e, n),
                      ]),
                    ),
                  ]);
                case 'ElementModifierStatement':
                case 'MustacheStatement':
                  var v = e.getParentNode(1),
                    D = v && 'ConcatStatement' === v.type;
                  return wc(
                    Cc([
                      !1 === r.escaped ? '{{{' : '{{',
                      Ic(e, n, { group: !1 }),
                      D ? '' : xc,
                      !1 === r.escaped ? '}}}' : '}}',
                    ]),
                  );
                case 'SubExpression':
                  var E = Bc(e, n),
                    C = E.length > 0 ? Fc(Cc([Sc, wc(bc(Sc, E))])) : '';
                  return wc(Cc(['(', Nc(e, n), C, xc, ')']));
                case 'AttrNode':
                  var b = 'TextNode' === r.value.type;
                  if (b && r.value.loc.start.column === r.value.loc.end.column)
                    return Cc([r.name]);
                  var x = e.call(n, 'value'),
                    S = b ? Oc(x.parts.join(), t) : x;
                  return Cc([r.name, '=', S]);
                case 'ConcatStatement':
                  return Cc([
                    '"',
                    wc(
                      Fc(
                        bc(
                          xc,
                          e
                            .map(function(e) {
                              return n(e);
                            }, 'parts')
                            .filter(function(e) {
                              return '' !== e;
                            }),
                        ),
                      ),
                    ),
                    '"',
                  ]);
                case 'Hash':
                  return Cc([bc(Sc, e.map(n, 'pairs'))]);
                case 'HashPair':
                  return Cc([r.key, '=', e.call(n, 'value')]);
                case 'TextNode':
                  var w = !jc(e),
                    F = !Uc(e),
                    k = !/\S/.test(r.chars),
                    T = $c(r.chars),
                    _ = 'Block' === e.getParentNode(0).type,
                    O = 'ElementNode' === e.getParentNode(0).type,
                    N = 'Template' === e.getParentNode(0).type,
                    B = (function(e) {
                      return $c(
                        ((e = 'string' == typeof e ? e : '').match(
                          /^([^\S\r\n]*[\r\n])+/g,
                        ) || [])[0] || '',
                      );
                    })(r.chars),
                    I = (function(e) {
                      return $c(
                        ((e = 'string' == typeof e ? e : '').match(
                          /([\r\n][^\S\r\n]*)+$/g,
                        ) || [])[0] || '',
                      );
                    })(r.chars);
                  if ((w || F) && k && (_ || O || N)) return '';
                  k && T
                    ? ((B = Math.min(T, 2)), (I = 0))
                    : ((Wc(e, 'ElementNode') || Wc(e, 'BlockStatement')) &&
                        (I = Math.max(I, 1)),
                      (Vc(e, ['ElementNode']) || Vc(e, ['BlockStatement'])) &&
                        (B = Math.max(B, 1)));
                  var P = '',
                    M = '';
                  if (e.stack.indexOf('attributes') >= 0) {
                    var L = e.getParentNode(0);
                    if ('ConcatStatement' === L.type) {
                      var R = L.parts,
                        j = R.indexOf(r);
                      j > 0 &&
                        'MustacheStatement' === R[j - 1].type &&
                        (P = ' '),
                        j < R.length - 1 &&
                          'MustacheStatement' === R[j + 1].type &&
                          (M = ' ');
                    }
                  } else
                    0 === I && Wc(e, 'MustacheStatement') && (M = ' '),
                      0 === B && Vc(e, ['MustacheStatement']) && (P = ' '),
                      w && ((B = 0), (P = '')),
                      F && ((I = 0), (M = ''));
                  return Cc(
                    []
                      .concat(
                        A(qc(B, 2)),
                        [r.chars.replace(/^[\s ]+/g, P).replace(/[\s ]+$/, M)],
                        A(qc(I, 2)),
                      )
                      .filter(Boolean),
                  );
                case 'MustacheCommentStatement':
                  var U = r.value.indexOf('}}') > -1 ? '--' : '';
                  return Cc(['{{!', U, r.value, U, '}}']);
                case 'PathExpression':
                  return r.original;
                case 'BooleanLiteral':
                  return String(r.value);
                case 'CommentStatement':
                  return Cc(['\x3c!--', r.value, '--\x3e']);
                case 'StringLiteral':
                  return Oc(r.value, t);
                case 'NumberLiteral':
                  return String(r.value);
                case 'UndefinedLiteral':
                  return 'undefined';
                case 'NullLiteral':
                  return 'null';
                default:
                  throw new Error(
                    'unknown glimmer type: ' + JSON.stringify(r.type),
                  );
              }
            },
            massageAstNode: function(e, t) {
              if ((delete t.loc, delete t.selfClosing, 'TextNode' === e.type)) {
                if ('' === e.chars.replace(/\s+/, '')) return null;
                t.chars = e.chars.replace(/^\s+/, '').replace(/\s+$/, '');
              }
            },
          },
          Jc = ['hbs', 'htmlbars'],
          Kc = ['.handlebars', '.hbs'],
          zc = {
            name: 'Handlebars',
            type: 'markup',
            group: 'HTML',
            aliases: Jc,
            extensions: Kc,
            tmScope: 'text.html.handlebars',
            aceMode: 'handlebars',
            languageId: 155,
          },
          Hc = {
            languages: [
              Mu(
                pt(
                  Object.freeze({
                    __proto__: null,
                    name: 'Handlebars',
                    type: 'markup',
                    group: 'HTML',
                    aliases: Jc,
                    extensions: Kc,
                    tmScope: 'text.html.handlebars',
                    aceMode: 'handlebars',
                    languageId: 155,
                    default: zc,
                  }),
                ),
                function(e) {
                  return Object.assign(e, {
                    since: null,
                    parsers: ['glimmer'],
                    vscodeLanguageIds: ['handlebars'],
                  });
                },
              ),
            ],
            printers: { glimmer: Yc },
          },
          Xc = {
            area: 'none',
            base: 'none',
            basefont: 'none',
            datalist: 'none',
            head: 'none',
            link: 'none',
            meta: 'none',
            noembed: 'none',
            noframes: 'none',
            param: 'none',
            rp: 'none',
            script: 'block',
            source: 'block',
            style: 'none',
            template: 'inline',
            track: 'block',
            title: 'none',
            html: 'block',
            body: 'block',
            address: 'block',
            blockquote: 'block',
            center: 'block',
            div: 'block',
            figure: 'block',
            figcaption: 'block',
            footer: 'block',
            form: 'block',
            header: 'block',
            hr: 'block',
            legend: 'block',
            listing: 'block',
            main: 'block',
            p: 'block',
            plaintext: 'block',
            pre: 'block',
            xmp: 'block',
            slot: 'contents',
            ruby: 'ruby',
            rt: 'ruby-text',
            article: 'block',
            aside: 'block',
            h1: 'block',
            h2: 'block',
            h3: 'block',
            h4: 'block',
            h5: 'block',
            h6: 'block',
            hgroup: 'block',
            nav: 'block',
            section: 'block',
            dir: 'block',
            dd: 'block',
            dl: 'block',
            dt: 'block',
            ol: 'block',
            ul: 'block',
            li: 'list-item',
            table: 'table',
            caption: 'table-caption',
            colgroup: 'table-column-group',
            col: 'table-column',
            thead: 'table-header-group',
            tbody: 'table-row-group',
            tfoot: 'table-footer-group',
            tr: 'table-row',
            td: 'table-cell',
            th: 'table-cell',
            fieldset: 'block',
            button: 'inline-block',
            video: 'inline-block',
            audio: 'inline-block',
          },
          Gc = 'inline',
          Qc = {
            listing: 'pre',
            plaintext: 'pre',
            pre: 'pre',
            xmp: 'pre',
            nobr: 'nowrap',
            table: 'initial',
            textarea: 'pre-wrap',
          },
          Zc = 'normal',
          el = [
            'accesskey',
            'charset',
            'coords',
            'download',
            'href',
            'hreflang',
            'name',
            'ping',
            'referrerpolicy',
            'rel',
            'rev',
            'shape',
            'tabindex',
            'target',
            'type',
          ],
          tl = ['title'],
          nl = [
            'align',
            'alt',
            'archive',
            'code',
            'codebase',
            'height',
            'hspace',
            'name',
            'object',
            'vspace',
            'width',
          ],
          rl = [
            'accesskey',
            'alt',
            'coords',
            'download',
            'href',
            'hreflang',
            'nohref',
            'ping',
            'referrerpolicy',
            'rel',
            'shape',
            'tabindex',
            'target',
            'type',
          ],
          il = [
            'autoplay',
            'controls',
            'crossorigin',
            'loop',
            'muted',
            'preload',
            'src',
          ],
          al = ['href', 'target'],
          ol = ['color', 'face', 'size'],
          sl = ['dir'],
          ul = ['cite'],
          cl = ['alink', 'background', 'bgcolor', 'link', 'text', 'vlink'],
          ll = ['clear'],
          pl = [
            'accesskey',
            'autofocus',
            'disabled',
            'form',
            'formaction',
            'formenctype',
            'formmethod',
            'formnovalidate',
            'formtarget',
            'name',
            'tabindex',
            'type',
            'value',
          ],
          fl = ['height', 'width'],
          hl = ['align'],
          dl = ['align', 'char', 'charoff', 'span', 'valign', 'width'],
          ml = ['align', 'char', 'charoff', 'span', 'valign', 'width'],
          gl = ['value'],
          yl = ['cite', 'datetime'],
          vl = ['open'],
          Dl = ['title'],
          El = ['open'],
          Cl = ['compact'],
          bl = ['align'],
          xl = ['compact'],
          Al = ['height', 'src', 'type', 'width'],
          Sl = ['disabled', 'form', 'name'],
          wl = ['color', 'face', 'size'],
          Fl = [
            'accept',
            'accept-charset',
            'action',
            'autocomplete',
            'enctype',
            'method',
            'name',
            'novalidate',
            'target',
          ],
          kl = [
            'frameborder',
            'longdesc',
            'marginheight',
            'marginwidth',
            'name',
            'noresize',
            'scrolling',
            'src',
          ],
          Tl = ['cols', 'rows'],
          _l = ['align'],
          Ol = ['align'],
          Nl = ['align'],
          Bl = ['align'],
          Il = ['align'],
          Pl = ['align'],
          Ml = ['profile'],
          Ll = ['align', 'noshade', 'size', 'width'],
          Rl = ['manifest', 'version'],
          jl = [
            'align',
            'allow',
            'allowfullscreen',
            'allowpaymentrequest',
            'allowusermedia',
            'frameborder',
            'height',
            'longdesc',
            'marginheight',
            'marginwidth',
            'name',
            'referrerpolicy',
            'sandbox',
            'scrolling',
            'src',
            'srcdoc',
            'width',
          ],
          Ul = [
            'align',
            'alt',
            'border',
            'crossorigin',
            'decoding',
            'height',
            'hspace',
            'ismap',
            'longdesc',
            'name',
            'referrerpolicy',
            'sizes',
            'src',
            'srcset',
            'usemap',
            'vspace',
            'width',
          ],
          Vl = [
            'accept',
            'accesskey',
            'align',
            'alt',
            'autocomplete',
            'autofocus',
            'checked',
            'dirname',
            'disabled',
            'form',
            'formaction',
            'formenctype',
            'formmethod',
            'formnovalidate',
            'formtarget',
            'height',
            'ismap',
            'list',
            'max',
            'maxlength',
            'min',
            'minlength',
            'multiple',
            'name',
            'pattern',
            'placeholder',
            'readonly',
            'required',
            'size',
            'src',
            'step',
            'tabindex',
            'title',
            'type',
            'usemap',
            'value',
            'width',
          ],
          Wl = ['cite', 'datetime'],
          $l = ['prompt'],
          ql = ['accesskey', 'for', 'form'],
          Yl = ['accesskey', 'align'],
          Jl = ['type', 'value'],
          Kl = [
            'as',
            'charset',
            'color',
            'crossorigin',
            'href',
            'hreflang',
            'imagesizes',
            'imagesrcset',
            'integrity',
            'media',
            'nonce',
            'referrerpolicy',
            'rel',
            'rev',
            'sizes',
            'target',
            'title',
            'type',
          ],
          zl = ['name'],
          Hl = ['compact'],
          Xl = ['charset', 'content', 'http-equiv', 'name', 'scheme'],
          Gl = ['high', 'low', 'max', 'min', 'optimum', 'value'],
          Ql = [
            'align',
            'archive',
            'border',
            'classid',
            'codebase',
            'codetype',
            'data',
            'declare',
            'form',
            'height',
            'hspace',
            'name',
            'standby',
            'tabindex',
            'type',
            'typemustmatch',
            'usemap',
            'vspace',
            'width',
          ],
          Zl = ['compact', 'reversed', 'start', 'type'],
          ep = ['disabled', 'label'],
          tp = ['disabled', 'label', 'selected', 'value'],
          np = ['for', 'form', 'name'],
          rp = ['align'],
          ip = ['name', 'type', 'value', 'valuetype'],
          ap = ['width'],
          op = ['max', 'value'],
          sp = ['cite'],
          up = [
            'async',
            'charset',
            'crossorigin',
            'defer',
            'integrity',
            'language',
            'nomodule',
            'nonce',
            'referrerpolicy',
            'src',
            'type',
          ],
          cp = [
            'autocomplete',
            'autofocus',
            'disabled',
            'form',
            'multiple',
            'name',
            'required',
            'size',
            'tabindex',
          ],
          lp = ['name'],
          pp = ['media', 'sizes', 'src', 'srcset', 'type'],
          fp = ['media', 'nonce', 'title', 'type'],
          hp = [
            'align',
            'bgcolor',
            'border',
            'cellpadding',
            'cellspacing',
            'frame',
            'rules',
            'summary',
            'width',
          ],
          dp = ['align', 'char', 'charoff', 'valign'],
          mp = [
            'abbr',
            'align',
            'axis',
            'bgcolor',
            'char',
            'charoff',
            'colspan',
            'headers',
            'height',
            'nowrap',
            'rowspan',
            'scope',
            'valign',
            'width',
          ],
          gp = [
            'accesskey',
            'autocomplete',
            'autofocus',
            'cols',
            'dirname',
            'disabled',
            'form',
            'maxlength',
            'minlength',
            'name',
            'placeholder',
            'readonly',
            'required',
            'rows',
            'tabindex',
            'wrap',
          ],
          yp = ['align', 'char', 'charoff', 'valign'],
          vp = [
            'abbr',
            'align',
            'axis',
            'bgcolor',
            'char',
            'charoff',
            'colspan',
            'headers',
            'height',
            'nowrap',
            'rowspan',
            'scope',
            'valign',
            'width',
          ],
          Dp = ['align', 'char', 'charoff', 'valign'],
          Ep = ['datetime'],
          Cp = ['align', 'bgcolor', 'char', 'charoff', 'valign'],
          bp = ['default', 'kind', 'label', 'src', 'srclang'],
          xp = ['compact', 'type'],
          Ap = [
            'autoplay',
            'controls',
            'crossorigin',
            'height',
            'loop',
            'muted',
            'playsinline',
            'poster',
            'preload',
            'src',
            'width',
          ],
          Sp = {
            '*': [
              'accesskey',
              'autocapitalize',
              'autofocus',
              'class',
              'contenteditable',
              'dir',
              'draggable',
              'enterkeyhint',
              'hidden',
              'id',
              'inputmode',
              'is',
              'itemid',
              'itemprop',
              'itemref',
              'itemscope',
              'itemtype',
              'lang',
              'nonce',
              'slot',
              'spellcheck',
              'style',
              'tabindex',
              'title',
              'translate',
            ],
            a: el,
            abbr: tl,
            applet: nl,
            area: rl,
            audio: il,
            base: al,
            basefont: ol,
            bdo: sl,
            blockquote: ul,
            body: cl,
            br: ll,
            button: pl,
            canvas: fl,
            caption: hl,
            col: dl,
            colgroup: ml,
            data: gl,
            del: yl,
            details: vl,
            dfn: Dl,
            dialog: El,
            dir: Cl,
            div: bl,
            dl: xl,
            embed: Al,
            fieldset: Sl,
            font: wl,
            form: Fl,
            frame: kl,
            frameset: Tl,
            h1: _l,
            h2: Ol,
            h3: Nl,
            h4: Bl,
            h5: Il,
            h6: Pl,
            head: Ml,
            hr: Ll,
            html: Rl,
            iframe: jl,
            img: Ul,
            input: Vl,
            ins: Wl,
            isindex: $l,
            label: ql,
            legend: Yl,
            li: Jl,
            link: Kl,
            map: zl,
            menu: Hl,
            meta: Xl,
            meter: Gl,
            object: Ql,
            ol: Zl,
            optgroup: ep,
            option: tp,
            output: np,
            p: rp,
            param: ip,
            pre: ap,
            progress: op,
            q: sp,
            script: up,
            select: cp,
            slot: lp,
            source: pp,
            style: fp,
            table: hp,
            tbody: dp,
            td: mp,
            textarea: gp,
            tfoot: yp,
            th: vp,
            thead: Dp,
            time: Ep,
            tr: Cp,
            track: bp,
            ul: xp,
            video: Ap,
          },
          wp = pt(
            Object.freeze({
              __proto__: null,
              a: el,
              abbr: tl,
              applet: nl,
              area: rl,
              audio: il,
              base: al,
              basefont: ol,
              bdo: sl,
              blockquote: ul,
              body: cl,
              br: ll,
              button: pl,
              canvas: fl,
              caption: hl,
              col: dl,
              colgroup: ml,
              data: gl,
              del: yl,
              details: vl,
              dfn: Dl,
              dialog: El,
              dir: Cl,
              div: bl,
              dl: xl,
              embed: Al,
              fieldset: Sl,
              font: wl,
              form: Fl,
              frame: kl,
              frameset: Tl,
              h1: _l,
              h2: Ol,
              h3: Nl,
              h4: Bl,
              h5: Il,
              h6: Pl,
              head: Ml,
              hr: Ll,
              html: Rl,
              iframe: jl,
              img: Ul,
              input: Vl,
              ins: Wl,
              isindex: $l,
              label: ql,
              legend: Yl,
              li: Jl,
              link: Kl,
              map: zl,
              menu: Hl,
              meta: Xl,
              meter: Gl,
              object: Ql,
              ol: Zl,
              optgroup: ep,
              option: tp,
              output: np,
              p: rp,
              param: ip,
              pre: ap,
              progress: op,
              q: sp,
              script: up,
              select: cp,
              slot: lp,
              source: pp,
              style: fp,
              table: hp,
              tbody: dp,
              td: mp,
              textarea: gp,
              tfoot: yp,
              th: vp,
              thead: Dp,
              time: Ep,
              tr: Cp,
              track: bp,
              ul: xp,
              video: Ap,
              default: Sp,
            }),
          ),
          Fp = Xc,
          kp = Gc,
          Tp = Qc,
          _p = Zc;
        function Op(e) {
          var t = Object.create(null),
            n = !0,
            r = !1,
            i = void 0;
          try {
            for (
              var a, o = e[Symbol.iterator]();
              !(n = (a = o.next()).done);
              n = !0
            )
              t[a.value] = !0;
          } catch (e) {
            (r = !0), (i = e);
          } finally {
            try {
              n || null == o.return || o.return();
            } finally {
              if (r) throw i;
            }
          }
          return t;
        }
        function Np(e, t) {
          return (
            !(
              'element' !== e.type ||
              'template' !== e.fullName ||
              !e.attrMap.lang ||
              'html' === e.attrMap.lang
            ) ||
            !(
              'ieConditionalComment' !== e.type ||
              !e.lastChild ||
              e.lastChild.isSelfClosing ||
              e.lastChild.endSourceSpan
            ) ||
            ('ieConditionalComment' === e.type && !e.complete) ||
            ('vue' === t.parser &&
              'element' === e.type &&
              'root' === e.parent.type &&
              -1 ===
                ['template', 'style', 'script', 'html'].indexOf(e.fullName)) ||
            !(
              !Yp(e) ||
              !e.children.some(function(e) {
                return 'text' !== e.type && 'interpolation' !== e.type;
              })
            )
          );
        }
        function Bp(e) {
          return (
            'attribute' !== e.type &&
            !Ip(e) &&
            !!e.parent &&
            'number' == typeof e.index &&
            0 !== e.index &&
            (function(e) {
              return (
                'comment' === e.type && 'prettier-ignore' === e.value.trim()
              );
            })(e.parent.children[e.index - 1])
          );
        }
        function Ip(e) {
          return 'text' === e.type || 'comment' === e.type;
        }
        function Pp(e) {
          return (
            'element' === e.type &&
            ('script' === e.fullName ||
              'style' === e.fullName ||
              'svg:style' === e.fullName)
          );
        }
        function Mp(e) {
          return 'yaml' === e.type || 'toml' === e.type;
        }
        function Lp(e) {
          return Jp(e).startsWith('pre');
        }
        function Rp(e) {
          return (
            'element' === e.type &&
            0 !== e.children.length &&
            (-1 !== ['html', 'head', 'ul', 'ol', 'select'].indexOf(e.name) ||
              (e.cssDisplay.startsWith('table') &&
                'table-cell' !== e.cssDisplay))
          );
        }
        function jp(e) {
          return (
            $p(e) || ('element' === e.type && 'br' === e.fullName) || Up(e)
          );
        }
        function Up(e) {
          return Vp(e) && Wp(e);
        }
        function Vp(e) {
          return (
            e.hasLeadingSpaces &&
            (e.prev
              ? e.prev.sourceSpan.end.line < e.sourceSpan.start.line
              : 'root' === e.parent.type ||
                e.parent.startSourceSpan.end.line < e.sourceSpan.start.line)
          );
        }
        function Wp(e) {
          return (
            e.hasTrailingSpaces &&
            (e.next
              ? e.next.sourceSpan.start.line > e.sourceSpan.end.line
              : 'root' === e.parent.type ||
                e.parent.endSourceSpan.start.line > e.sourceSpan.end.line)
          );
        }
        function $p(e) {
          switch (e.type) {
            case 'ieConditionalComment':
            case 'comment':
            case 'directive':
              return !0;
            case 'element':
              return -1 !== ['script', 'select'].indexOf(e.name);
          }
          return !1;
        }
        function qp(e) {
          return 'block' === e || 'list-item' === e || e.startsWith('table');
        }
        function Yp(e) {
          return Jp(e).startsWith('pre');
        }
        function Jp(e) {
          return ('element' === e.type && !e.namespace && Tp[e.name]) || _p;
        }
        function Kp(e) {
          var t = 1 / 0,
            n = !0,
            r = !1,
            i = void 0;
          try {
            for (
              var a, o = e.split('\n')[Symbol.iterator]();
              !(n = (a = o.next()).done);
              n = !0
            ) {
              var s = a.value;
              if (0 !== s.length) {
                if (/\S/.test(s[0])) return 0;
                var u = s.match(/^\s*/)[0].length;
                s.length !== u && u < t && (t = u);
              }
            }
          } catch (e) {
            (r = !0), (i = e);
          } finally {
            try {
              n || null == o.return || o.return();
            } finally {
              if (r) throw i;
            }
          }
          return t === 1 / 0 ? 0 : t;
        }
        Op(oo),
          (function(e, t) {
            for (
              var n = Object.create(null), r = 0, i = Object.keys(e);
              r < i.length;
              r++
            ) {
              var a = i[r];
              n[a] = t(e[a], a);
            }
          })(wp, Op);
        var zp = function(e) {
            return e.children && !Pp(e);
          },
          Hp = function(e, t) {
            for (var n = 0, r = 0; r < e.length; r++) e[r] === t && n++;
            return n;
          },
          Xp = function(e) {
            for (
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : function() {
                        return !0;
                      },
                n = 0,
                r = e.stack.length - 1;
              r >= 0;
              r--
            ) {
              var i = e.stack[r];
              i && 'object' === c(i) && !Array.isArray(i) && t(i) && n++;
            }
            return n;
          },
          Gp = function(e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : Kp(e);
            return 0 === t
              ? e
              : e
                  .split('\n')
                  .map(function(e) {
                    return e.slice(t);
                  })
                  .join('\n');
          },
          Qp = Rp,
          Zp = function(e) {
            return (
              Rp(e) ||
              ('element' === e.type &&
                0 !== e.children.length &&
                (-1 !== ['body', 'script', 'style'].indexOf(e.name) ||
                  e.children.some(function(e) {
                    return (function(e) {
                      return (
                        e.children &&
                        e.children.some(function(e) {
                          return 'text' !== e.type;
                        })
                      );
                    })(e);
                  }))) ||
              (e.firstChild &&
                e.firstChild === e.lastChild &&
                Vp(e.firstChild) &&
                (!e.lastChild.isTrailingSpaceSensitive || Wp(e.lastChild)))
            );
          },
          ef = function(e) {
            return (
              Mp(e) ||
              (e.next &&
                e.sourceSpan.end.line + 1 < e.next.sourceSpan.start.line)
            );
          },
          tf = function e(t) {
            return t.lastChild ? e(t.lastChild) : t;
          },
          nf = function(e) {
            var t = e.trim().match(/^prettier-ignore-attribute(?:\s+([^]+))?$/);
            return !!t && (!t[1] || t[1].split(/\s+/));
          },
          rf = Bp,
          af = function(e) {
            if ('script' === e.name && !e.attrMap.src) {
              if (
                (!e.attrMap.lang && !e.attrMap.type) ||
                'module' === e.attrMap.type ||
                'text/javascript' === e.attrMap.type ||
                'text/babel' === e.attrMap.type ||
                'application/javascript' === e.attrMap.type
              )
                return 'babel';
              if (
                'application/x-typescript' === e.attrMap.type ||
                'ts' === e.attrMap.lang ||
                'tsx' === e.attrMap.lang
              )
                return 'typescript';
              if ('text/markdown' === e.attrMap.type) return 'markdown';
              if (
                e.attrMap.type.endsWith('json') ||
                e.attrMap.type.endsWith('importmap')
              )
                return 'json';
            }
            if ('style' === e.name) {
              if (
                !e.attrMap.lang ||
                'postcss' === e.attrMap.lang ||
                'css' === e.attrMap.lang
              )
                return 'css';
              if ('scss' === e.attrMap.lang) return 'scss';
              if ('less' === e.attrMap.lang) return 'less';
            }
            return null;
          },
          of = function(e) {
            return !(qp((t = e.cssDisplay)) || 'inline-block' === t || Pp(e));
            var t;
          },
          sf = function(e) {
            var t,
              n = !(
                Mp(e) ||
                ((('text' !== e.type && 'interpolation' !== e.type) ||
                  !e.prev ||
                  ('text' !== e.prev.type &&
                    'interpolation' !== e.prev.type)) &&
                  (!e.parent ||
                    'none' === e.parent.cssDisplay ||
                    (!Yp(e.parent) &&
                      ((!e.prev &&
                        ('root' === e.parent.type ||
                          Pp(e.parent) ||
                          ((t = e.parent.cssDisplay),
                          qp(t) || 'inline-block' === t))) ||
                        (e.prev &&
                          !(function(e) {
                            return !qp(e);
                          })(e.prev.cssDisplay))))))
              );
            return n &&
              !e.prev &&
              e.parent &&
              e.parent.tagDefinition &&
              e.parent.tagDefinition.ignoreFirstLf
              ? 'interpolation' === e.type
              : n;
          },
          uf = Pp,
          cf = Ip,
          lf = function(e) {
            for (var t = [], n = e.slice(); 0 !== n.length; ) {
              var r = n.shift();
              r &&
                ('concat' !== r.type
                  ? 0 === t.length ||
                    'string' != typeof t[t.length - 1] ||
                    'string' != typeof r
                    ? t.push(r)
                    : t.push(t.pop() + r)
                  : Array.prototype.unshift.apply(n, r.parts));
            }
            return t;
          },
          pf = function(e) {
            return $p(e) || (e.prev && jp(e.prev)) || Up(e);
          },
          ff = function(e, t) {
            return (
              !e.isSelfClosing && !e.endSourceSpan && (Bp(e) || Np(e.parent, t))
            );
          },
          hf = Np,
          df = function(e) {
            return e.replace(/&apos;/g, "'").replace(/&quot;/g, '"');
          },
          mf = zp,
          gf = function(e, t) {
            if (e.prev && 'comment' === e.prev.type) {
              var n = e.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);
              if (n) return n[1];
            }
            var r = !1;
            if ('element' === e.type && 'svg' === e.namespace) {
              if (
                !(function(e, t) {
                  for (var n = e; n; ) {
                    if (t(n)) return !0;
                    n = n.parent;
                  }
                  return !1;
                })(e, function(e) {
                  return 'svg:foreignObject' === e.fullName;
                })
              )
                return 'svg' === e.name ? 'inline-block' : 'block';
              r = !0;
            }
            switch (t.htmlWhitespaceSensitivity) {
              case 'strict':
                return 'inline';
              case 'ignore':
                return 'block';
              default:
                return (
                  ('element' === e.type && (!e.namespace || r) && Fp[e.name]) ||
                  kp
                );
            }
          },
          yf = of,
          vf = Lp,
          Df = sf,
          Ef = function(e) {
            return !(
              Mp(e) ||
              ((('text' !== e.type && 'interpolation' !== e.type) ||
                !e.next ||
                ('text' !== e.next.type && 'interpolation' !== e.next.type)) &&
                (!e.parent ||
                  'none' === e.parent.cssDisplay ||
                  (!Yp(e.parent) &&
                    ((!e.next &&
                      ('root' === e.parent.type ||
                        Pp(e.parent) ||
                        ((t = e.parent.cssDisplay),
                        qp(t) || 'inline-block' === t))) ||
                      (e.next &&
                        !(function(e) {
                          return !qp(e);
                        })(e.next.cssDisplay))))))
            );
            var t;
          },
          Cf = function(e) {
            return Pp(e) || 'interpolation' === e.type || Lp(e);
          },
          bf = [
            function(e) {
              return e.map(function(e) {
                if (
                  'element' === e.type &&
                  e.tagDefinition.ignoreFirstLf &&
                  0 !== e.children.length &&
                  'text' === e.children[0].type &&
                  '\n' === e.children[0].value[0]
                ) {
                  var t = e.children[0];
                  return e.clone({
                    children:
                      1 === t.value.length
                        ? e.children.slice(1)
                        : [].concat(
                            t.clone({ value: t.value.slice(1) }),
                            e.children.slice(1),
                          ),
                  });
                }
                return e;
              });
            },
            function(e) {
              var t = function(e) {
                return (
                  'element' === e.type &&
                  e.prev &&
                  'ieConditionalStartComment' === e.prev.type &&
                  e.prev.sourceSpan.end.offset ===
                    e.startSourceSpan.start.offset &&
                  e.firstChild &&
                  'ieConditionalEndComment' === e.firstChild.type &&
                  e.firstChild.sourceSpan.start.offset ===
                    e.startSourceSpan.end.offset
                );
              };
              return e.map(function(e) {
                if (e.children) {
                  var n = e.children.map(t);
                  if (n.some(Boolean)) {
                    for (var r = [], i = 0; i < e.children.length; i++) {
                      var a = e.children[i];
                      if (!n[i + 1])
                        if (n[i]) {
                          var o = a.prev,
                            s = a.firstChild,
                            u = a.sourceSpan.constructor,
                            c = new u(o.sourceSpan.start, s.sourceSpan.end),
                            l = new u(c.start, a.sourceSpan.end);
                          r.push(
                            a.clone({
                              condition: o.condition,
                              sourceSpan: l,
                              startSourceSpan: c,
                              children: a.children.slice(1),
                            }),
                          );
                        } else r.push(a);
                    }
                    return e.clone({ children: r });
                  }
                }
                return e;
              });
            },
            function(e) {
              return (function(e, t, n) {
                return e.map(function(e) {
                  if (e.children) {
                    var r = e.children.map(t);
                    if (r.some(Boolean)) {
                      for (var i = [], a = 0; a < e.children.length; a++) {
                        var o = e.children[a];
                        if ('text' === o.type || r[a]) {
                          var s =
                            'text' === o.type
                              ? o
                              : o.clone({ type: 'text', value: n(o) });
                          if (
                            0 !== i.length &&
                            'text' === i[i.length - 1].type
                          ) {
                            var u = i.pop(),
                              c = u.sourceSpan.constructor;
                            i.push(
                              u.clone({
                                value: u.value + s.value,
                                sourceSpan: new c(
                                  u.sourceSpan.start,
                                  s.sourceSpan.end,
                                ),
                              }),
                            );
                          } else i.push(s);
                        } else i.push(o);
                      }
                      return e.clone({ children: i });
                    }
                  }
                  return e;
                });
              })(
                e,
                function(e) {
                  return 'cdata' === e.type;
                },
                function(e) {
                  return '<![CDATA['.concat(e.value, ']]>');
                },
              );
            },
            function(e, t) {
              if ('html' === t.parser) return e;
              var n = /\{\{([\s\S]+?)\}\}/g;
              return e.map(function(e) {
                if (!mf(e)) return e;
                var t = [],
                  r = !0,
                  i = !1,
                  a = void 0;
                try {
                  for (
                    var o, s = e.children[Symbol.iterator]();
                    !(r = (o = s.next()).done);
                    r = !0
                  ) {
                    var u = o.value;
                    if ('text' === u.type)
                      for (
                        var c = u.sourceSpan.constructor,
                          l = u.sourceSpan.start,
                          p = null,
                          f = u.value.split(n),
                          h = 0;
                        h < f.length;
                        h++, l = p
                      ) {
                        var d = f[h];
                        h % 2 != 0
                          ? ((p = l.moveBy(d.length + 4)),
                            t.push({
                              type: 'interpolation',
                              sourceSpan: new c(l, p),
                              children:
                                0 === d.length
                                  ? []
                                  : [
                                      {
                                        type: 'text',
                                        value: d,
                                        sourceSpan: new c(
                                          l.moveBy(2),
                                          p.moveBy(-2),
                                        ),
                                      },
                                    ],
                            }))
                          : ((p = l.moveBy(d.length)),
                            0 !== d.length &&
                              t.push({
                                type: 'text',
                                value: d,
                                sourceSpan: new c(l, p),
                              }));
                      }
                    else t.push(u);
                  }
                } catch (e) {
                  (i = !0), (a = e);
                } finally {
                  try {
                    r || null == s.return || s.return();
                  } finally {
                    if (i) throw a;
                  }
                }
                return e.clone({ children: t });
              });
            },
            function(e) {
              return e.map(function(e) {
                if (!e.children) return e;
                if (
                  0 === e.children.length ||
                  (1 === e.children.length &&
                    'text' === e.children[0].type &&
                    0 === e.children[0].value.trim().length)
                )
                  return e.clone({
                    children: [],
                    hasDanglingSpaces: 0 !== e.children.length,
                  });
                var t = Cf(e),
                  n = vf(e);
                return e.clone({
                  isWhitespaceSensitive: t,
                  isIndentationSensitive: n,
                  children: e.children
                    .reduce(function(e, n) {
                      if ('text' !== n.type || t) return e.concat(n);
                      var r = [],
                        i = x(n.value.match(/^(\s*)([\s\S]*?)(\s*)$/), 4),
                        a = i[1],
                        o = i[2],
                        s = i[3];
                      a && r.push({ type: 'whitespace' });
                      var u = n.sourceSpan.constructor;
                      return (
                        o &&
                          r.push({
                            type: 'text',
                            value: o,
                            sourceSpan: new u(
                              n.sourceSpan.start.moveBy(a.length),
                              n.sourceSpan.end.moveBy(-s.length),
                            ),
                          }),
                        s && r.push({ type: 'whitespace' }),
                        e.concat(r)
                      );
                    }, [])
                    .reduce(function(e, t, n, r) {
                      if ('whitespace' === t.type) return e;
                      var i = 0 !== n && 'whitespace' === r[n - 1].type,
                        a =
                          n !== r.length - 1 && 'whitespace' === r[n + 1].type;
                      return e.concat(
                        Object.assign({}, t, {
                          hasLeadingSpaces: i,
                          hasTrailingSpaces: a,
                        }),
                      );
                    }, []),
                });
              });
            },
            function(e, t) {
              return e.map(function(e) {
                return Object.assign(e, { cssDisplay: gf(e, t) });
              });
            },
            function(e) {
              return e.map(function(e) {
                return Object.assign(e, {
                  isSelfClosing:
                    !e.children ||
                    ('element' === e.type &&
                      (e.tagDefinition.isVoid ||
                        e.startSourceSpan === e.endSourceSpan)),
                });
              });
            },
            function(e, t) {
              return e.map(function(e) {
                return 'element' !== e.type
                  ? e
                  : Object.assign(e, {
                      hasHtmComponentClosingTag:
                        e.endSourceSpan &&
                        /^<\s*\/\s*\/\s*>$/.test(
                          t.originalText.slice(
                            e.endSourceSpan.start.offset,
                            e.endSourceSpan.end.offset,
                          ),
                        ),
                    });
              });
            },
            function(e) {
              return e.map(function(e) {
                return e.children
                  ? 0 === e.children.length
                    ? e.clone({ isDanglingSpaceSensitive: yf(e) })
                    : e.clone({
                        children: e.children
                          .map(function(e) {
                            return Object.assign({}, e, {
                              isLeadingSpaceSensitive: Df(e),
                              isTrailingSpaceSensitive: Ef(e),
                            });
                          })
                          .map(function(e, t, n) {
                            return Object.assign({}, e, {
                              isLeadingSpaceSensitive:
                                (0 === t ||
                                  n[t - 1].isTrailingSpaceSensitive) &&
                                e.isLeadingSpaceSensitive,
                              isTrailingSpaceSensitive:
                                (t === n.length - 1 ||
                                  n[t + 1].isLeadingSpaceSensitive) &&
                                e.isTrailingSpaceSensitive,
                            });
                          }),
                      })
                  : e;
              });
            },
            function(e) {
              var t = function(e) {
                return (
                  'element' === e.type &&
                  0 === e.attrs.length &&
                  1 === e.children.length &&
                  'text' === e.firstChild.type &&
                  !/[^\S\xA0]/.test(e.children[0].value) &&
                  !e.firstChild.hasLeadingSpaces &&
                  !e.firstChild.hasTrailingSpaces &&
                  e.isLeadingSpaceSensitive &&
                  !e.hasLeadingSpaces &&
                  e.isTrailingSpaceSensitive &&
                  !e.hasTrailingSpaces &&
                  e.prev &&
                  'text' === e.prev.type &&
                  e.next &&
                  'text' === e.next.type
                );
              };
              return e.map(function(e) {
                if (e.children) {
                  var n = e.children.map(t);
                  if (n.some(Boolean)) {
                    for (var r = [], i = 0; i < e.children.length; i++) {
                      var a = e.children[i];
                      if (n[i]) {
                        var o = r.pop(),
                          s = e.children[++i],
                          u = e.sourceSpan.constructor,
                          c = s.isTrailingSpaceSensitive,
                          l = s.hasTrailingSpaces;
                        r.push(
                          o.clone({
                            value:
                              o.value +
                              '<'.concat(a.rawName, '>') +
                              a.firstChild.value +
                              '</'.concat(a.rawName, '>') +
                              s.value,
                            sourceSpan: new u(
                              o.sourceSpan.start,
                              s.sourceSpan.end,
                            ),
                            isTrailingSpaceSensitive: c,
                            hasTrailingSpaces: l,
                          }),
                        );
                      } else r.push(a);
                    }
                    return e.clone({ children: r });
                  }
                }
                return e;
              });
            },
          ],
          xf = function(e, t) {
            var n = !0,
              r = !1,
              i = void 0;
            try {
              for (
                var a, o = bf[Symbol.iterator]();
                !(n = (a = o.next()).done);
                n = !0
              )
                e = (0, a.value)(e, t);
            } catch (e) {
              (r = !0), (i = e);
            } finally {
              try {
                n || null == o.return || o.return();
              } finally {
                if (r) throw i;
              }
            }
            return e;
          },
          Af = function(e) {
            return '\x3c!-- @format --\x3e\n\n' + e.replace(/^\s*\n/, '');
          },
          Sf = ea.builders,
          wf = Sf.concat,
          Ff = Sf.group,
          kf = function(e) {
            var t = e.trim();
            return (
              /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/.test(t) ||
              /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/.test(
                t,
              )
            );
          },
          Tf = function(e, t) {
            var n = (function(e) {
                var t = /,([^,}\]]*)(?:,([^,}\]]*))?$/,
                  n = e.match(/([^]*?)\s+(in|of)\s+([^]*)/);
                if (n) {
                  var r = {};
                  r.for = n[3].trim();
                  var i = n[1].trim().replace(/^\(|\)$/g, ''),
                    a = i.match(t);
                  return (
                    a
                      ? ((r.alias = i.replace(t, '')),
                        (r.iterator1 = a[1].trim()),
                        a[2] && (r.iterator2 = a[2].trim()))
                      : (r.alias = i),
                    {
                      left: ''.concat(
                        [r.alias, r.iterator1, r.iterator2]
                          .filter(Boolean)
                          .join(','),
                      ),
                      operator: n[2],
                      right: r.for,
                    }
                  );
                }
              })(e),
              r = n.left,
              i = n.operator,
              a = n.right;
            return wf([
              Ff(
                t('function _('.concat(r, ') {}'), {
                  parser: 'babel',
                  __isVueForBindingLeft: !0,
                }),
              ),
              ' ',
              i,
              ' ',
              t(a, { parser: '__js_expression' }),
            ]);
          },
          _f = function(e, t) {
            return t('function _('.concat(e, ') {}'), {
              parser: 'babel',
              __isVueSlotScope: !0,
            });
          },
          Of = lt(function(e) {
            var t, n;
            (t = ut),
              (n = function() {
                return function(e, t) {
                  var n = (t && t.logger) || console;
                  function r(e) {
                    return (
                      ' ' === e ||
                      '\t' === e ||
                      '\n' === e ||
                      '\f' === e ||
                      '\r' === e
                    );
                  }
                  function i(t) {
                    var n,
                      r = t.exec(e.substring(y));
                    if (r) return (n = r[0]), (y += n.length), n;
                  }
                  for (
                    var a,
                      o,
                      s,
                      u,
                      c,
                      l = e.length,
                      p = /^[ \t\n\r\u000c]+/,
                      f = /^[, \t\n\r\u000c]+/,
                      h = /^[^ \t\n\r\u000c]+/,
                      d = /[,]+$/,
                      m = /^\d+$/,
                      g = /^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,
                      y = 0,
                      v = [];
                    ;

                  ) {
                    if ((i(f), y >= l)) return v;
                    (a = i(h)),
                      (o = []),
                      ',' === a.slice(-1) ? ((a = a.replace(d, '')), E()) : D();
                  }
                  function D() {
                    for (i(p), s = '', u = 'in descriptor'; ; ) {
                      if (((c = e.charAt(y)), 'in descriptor' === u))
                        if (r(c))
                          s && (o.push(s), (s = ''), (u = 'after descriptor'));
                        else {
                          if (',' === c)
                            return (y += 1), s && o.push(s), void E();
                          if ('(' === c) (s += c), (u = 'in parens');
                          else {
                            if ('' === c) return s && o.push(s), void E();
                            s += c;
                          }
                        }
                      else if ('in parens' === u)
                        if (')' === c) (s += c), (u = 'in descriptor');
                        else {
                          if ('' === c) return o.push(s), void E();
                          s += c;
                        }
                      else if ('after descriptor' === u)
                        if (r(c));
                        else {
                          if ('' === c) return void E();
                          (u = 'in descriptor'), (y -= 1);
                        }
                      y += 1;
                    }
                  }
                  function E() {
                    var t,
                      r,
                      i,
                      s,
                      u,
                      c,
                      l,
                      p,
                      f,
                      h = !1,
                      d = {};
                    for (s = 0; s < o.length; s++)
                      (c = (u = o[s])[u.length - 1]),
                        (l = u.substring(0, u.length - 1)),
                        (p = parseInt(l, 10)),
                        (f = parseFloat(l)),
                        m.test(l) && 'w' === c
                          ? ((t || r) && (h = !0), 0 === p ? (h = !0) : (t = p))
                          : g.test(l) && 'x' === c
                          ? ((t || r || i) && (h = !0),
                            f < 0 ? (h = !0) : (r = f))
                          : m.test(l) && 'h' === c
                          ? ((i || r) && (h = !0), 0 === p ? (h = !0) : (i = p))
                          : (h = !0);
                    h
                      ? n &&
                        n.error &&
                        n.error(
                          "Invalid srcset descriptor found in '" +
                            e +
                            "' at '" +
                            u +
                            "'.",
                        )
                      : ((d.url = a),
                        t && (d.w = t),
                        r && (d.d = r),
                        i && (d.h = i),
                        v.push(d));
                  }
                };
              }),
              e.exports ? (e.exports = n()) : (t.parseSrcset = n());
          }),
          Nf = ea.builders,
          Bf = Nf.concat,
          If = Nf.ifBreak,
          Pf = Nf.join,
          Mf = Nf.line,
          Lf = function(e) {
            var t = Of(e, {
                logger: {
                  error: function(e) {
                    throw new Error(e);
                  },
                },
              }),
              n = t.some(function(e) {
                return e.w;
              }),
              r = t.some(function(e) {
                return e.h;
              });
            if (
              n +
                r +
                t.some(function(e) {
                  return e.d;
                }) !==
              1
            )
              throw new Error('Mixed descriptor in srcset is not supported');
            var i = n ? 'w' : r ? 'h' : 'd',
              a = n ? 'w' : r ? 'h' : 'x',
              o = function(e) {
                return Math.max.apply(Math, e);
              },
              s = t.map(function(e) {
                return e.url;
              }),
              u = o(
                s.map(function(e) {
                  return e.length;
                }),
              ),
              c = t
                .map(function(e) {
                  return e[i];
                })
                .map(function(e) {
                  return e ? e.toString() : '';
                }),
              l = c.map(function(e) {
                var t = e.indexOf('.');
                return -1 === t ? e.length : t;
              }),
              p = o(l);
            return Pf(
              Bf([',', Mf]),
              s.map(function(e, t) {
                var n = [e],
                  r = c[t];
                if (r) {
                  var i = u - e.length + 1,
                    o = p - l[t],
                    s = ' '.repeat(i + o);
                  n.push(If(s, ' '), r + a);
                }
                return Bf(n);
              }),
            );
          },
          Rf = ea.builders,
          jf = ea.utils,
          Uf = jf.stripTrailingHardline,
          Vf = jf.mapDoc,
          Wf = Rf.breakParent,
          $f = Rf.dedentToRoot,
          qf = Rf.fill,
          Yf = Rf.group,
          Jf = Rf.hardline,
          Kf = Rf.ifBreak,
          zf = Rf.indent,
          Hf = Rf.join,
          Xf = Rf.line,
          Gf = Rf.literalline,
          Qf = Rf.markAsRoot,
          Zf = Rf.softline,
          eh = Hp,
          th = Xp,
          nh = Gp,
          rh = Qp,
          ih = Zp,
          ah = ef,
          oh = tf,
          sh = nf,
          uh = rf,
          ch = af,
          lh = uf,
          ph = cf,
          fh = lf,
          hh = pf,
          dh = ff,
          mh = hf,
          gh = df,
          yh = Oi.replaceEndOfLineWith,
          vh = Tf,
          Dh = _f,
          Eh = kf,
          Ch = Lf;
        function bh(e) {
          var t = fh(e);
          return 0 === t.length ? '' : 1 === t.length ? t[0] : Rf.concat(t);
        }
        function xh(e, t, n) {
          var r = e.getValue();
          if (rh(r))
            return bh([
              Wf,
              bh(
                e.map(function(e) {
                  var t = e.getValue(),
                    n = t.prev ? o(t.prev, t) : '';
                  return bh([n ? bh([n, ah(t.prev) ? Jf : '']) : '', a(e)]);
                }, 'children'),
              ),
            ]);
          var i = r.children.map(function() {
            return Symbol('');
          });
          return bh(
            e.map(function(e, t) {
              var n = e.getValue();
              if (ph(n)) {
                if (n.prev && ph(n.prev)) {
                  var r = o(n.prev, n);
                  if (r) return ah(n.prev) ? bh([Jf, Jf, a(e)]) : bh([r, a(e)]);
                }
                return a(e);
              }
              var s = [],
                u = [],
                c = [],
                l = [],
                p = n.prev ? o(n.prev, n) : '',
                f = n.next ? o(n, n.next) : '';
              return (
                p &&
                  (ah(n.prev)
                    ? s.push(Jf, Jf)
                    : p === Jf
                    ? s.push(Jf)
                    : ph(n.prev)
                    ? u.push(p)
                    : u.push(Kf('', Zf, { groupId: i[t - 1] }))),
                f &&
                  (ah(n)
                    ? ph(n.next) && l.push(Jf, Jf)
                    : f === Jf
                    ? ph(n.next) && l.push(Jf)
                    : c.push(f)),
                bh(
                  [].concat(
                    s,
                    Yf(bh([bh(u), Yf(bh([a(e), bh(c)]), { id: i[t] })])),
                    l,
                  ),
                )
              );
            }, 'children'),
          );
          function a(e) {
            var r = e.getValue();
            return uh(r)
              ? bh(
                  [].concat(
                    Ph(r, t),
                    yh(
                      t.originalText.slice(
                        t.locStart(r) +
                          (r.prev && _h(r.prev) ? Rh(r).length : 0),
                        t.locEnd(r) -
                          (r.next && Nh(r.next) ? Vh(r, t).length : 0),
                      ),
                      Gf,
                    ),
                    Lh(r, t),
                  ),
                )
              : mh(r, t)
              ? bh(
                  [].concat(
                    Ph(r, t),
                    Yf(Ah(e, t, n)),
                    yh(
                      t.originalText.slice(
                        r.startSourceSpan.end.offset +
                          (r.firstChild && Oh(r.firstChild)
                            ? -jh(r).length
                            : 0),
                        r.endSourceSpan.start.offset +
                          (r.lastChild && Ih(r.lastChild)
                            ? Uh(r, t).length
                            : Bh(r)
                            ? -Vh(r.lastChild, t).length
                            : 0),
                      ),
                      Gf,
                    ),
                    Fh(r, t),
                    Lh(r, t),
                  ),
                )
              : n(e);
          }
          function o(e, t) {
            return ph(e) && ph(t)
              ? e.isTrailingSpaceSensitive
                ? e.hasTrailingSpaces
                  ? hh(t)
                    ? Jf
                    : Xf
                  : ''
                : hh(t)
                ? Jf
                : Zf
              : (_h(e) &&
                  (t.firstChild ||
                    t.isSelfClosing ||
                    ('element' === t.type && 0 !== t.attrs.length))) ||
                ('element' === e.type && e.isSelfClosing && Nh(t))
              ? ''
              : !t.isLeadingSpaceSensitive ||
                hh(t) ||
                (Nh(t) &&
                  e.lastChild &&
                  Ih(e.lastChild) &&
                  e.lastChild.lastChild &&
                  Ih(e.lastChild.lastChild))
              ? Jf
              : t.hasLeadingSpaces
              ? Xf
              : Zf;
          }
        }
        function Ah(e, t, n) {
          var r,
            i,
            a = e.getValue(),
            o =
              'element' === a.type &&
              'script' === a.fullName &&
              1 === a.attrs.length &&
              'src' === a.attrs[0].fullName &&
              0 === a.children.length;
          return bh([
            Sh(a, t),
            a.attrs && 0 !== a.attrs.length
              ? bh([
                  zf(
                    bh([
                      o ? ' ' : Xf,
                      Hf(
                        Xf,
                        ((r =
                          a.prev &&
                          'comment' === a.prev.type &&
                          sh(a.prev.value)),
                        (i =
                          'boolean' == typeof r
                            ? function() {
                                return r;
                              }
                            : Array.isArray(r)
                            ? function(e) {
                                return -1 !== r.indexOf(e.rawName);
                              }
                            : function() {
                                return !1;
                              }),
                        e.map(function(e) {
                          var r = e.getValue();
                          return i(r)
                            ? bh(
                                yh(
                                  t.originalText.slice(
                                    t.locStart(r),
                                    t.locEnd(r),
                                  ),
                                  Gf,
                                ),
                              )
                            : n(e);
                        }, 'attrs')),
                      ),
                    ]),
                  ),
                  (a.firstChild && Oh(a.firstChild)) ||
                  (a.isSelfClosing && Bh(a.parent))
                    ? ''
                    : a.isSelfClosing
                    ? o
                      ? ' '
                      : Xf
                    : o
                    ? ''
                    : Zf,
                ])
              : a.isSelfClosing
              ? ' '
              : '',
            a.isSelfClosing ? '' : wh(a),
          ]);
        }
        function Sh(e, t) {
          return e.prev && _h(e.prev) ? '' : bh([Ph(e, t), Rh(e)]);
        }
        function wh(e) {
          return e.firstChild && Oh(e.firstChild) ? '' : jh(e);
        }
        function Fh(e, t) {
          return bh([e.isSelfClosing ? '' : kh(e, t), Th(e, t)]);
        }
        function kh(e, t) {
          return e.lastChild && Ih(e.lastChild) ? '' : bh([Mh(e, t), Uh(e, t)]);
        }
        function Th(e, t) {
          return (e.next
          ? Nh(e.next)
          : Bh(e.parent))
            ? ''
            : bh([Vh(e, t), Lh(e, t)]);
        }
        function _h(e) {
          return (
            e.next &&
            !ph(e.next) &&
            ph(e) &&
            e.isTrailingSpaceSensitive &&
            !e.hasTrailingSpaces
          );
        }
        function Oh(e) {
          return !e.prev && e.isLeadingSpaceSensitive && !e.hasLeadingSpaces;
        }
        function Nh(e) {
          return (
            e.prev &&
            !ph(e.prev) &&
            e.isLeadingSpaceSensitive &&
            !e.hasLeadingSpaces
          );
        }
        function Bh(e) {
          return (
            e.lastChild &&
            e.lastChild.isTrailingSpaceSensitive &&
            !e.lastChild.hasTrailingSpaces &&
            !ph(oh(e.lastChild))
          );
        }
        function Ih(e) {
          return (
            !e.next &&
            !e.hasTrailingSpaces &&
            e.isTrailingSpaceSensitive &&
            ph(oh(e))
          );
        }
        function Ph(e, t) {
          return Oh(e) ? jh(e.parent) : Nh(e) ? Vh(e.prev, t) : '';
        }
        function Mh(e, t) {
          return Bh(e) ? Vh(e.lastChild, t) : '';
        }
        function Lh(e, t) {
          return Ih(e) ? Uh(e.parent, t) : _h(e) ? Rh(e.next) : '';
        }
        function Rh(e) {
          switch (e.type) {
            case 'ieConditionalComment':
            case 'ieConditionalStartComment':
              return '\x3c!--[if '.concat(e.condition);
            case 'ieConditionalEndComment':
              return '\x3c!--<!';
            case 'interpolation':
              return '{{';
            case 'docType':
              return '<!DOCTYPE';
            case 'element':
              if (e.condition)
                return '\x3c!--[if '
                  .concat(e.condition, ']>\x3c!--\x3e<')
                  .concat(e.rawName);
            default:
              return '<'.concat(e.rawName);
          }
        }
        function jh(e) {
          switch ((e.isSelfClosing, e.type)) {
            case 'ieConditionalComment':
              return ']>';
            case 'element':
              if (e.condition) return '>\x3c!--<![endif]--\x3e';
            default:
              return '>';
          }
        }
        function Uh(e, t) {
          if ((e.isSelfClosing, dh(e, t))) return '';
          switch (e.type) {
            case 'ieConditionalComment':
              return '<!';
            case 'element':
              if (e.hasHtmComponentClosingTag) return '<//';
            default:
              return '</'.concat(e.rawName);
          }
        }
        function Vh(e, t) {
          if (dh(e, t)) return '';
          switch (e.type) {
            case 'ieConditionalComment':
            case 'ieConditionalEndComment':
              return '[endif]--\x3e';
            case 'ieConditionalStartComment':
              return ']>\x3c!--\x3e';
            case 'interpolation':
              return '}}';
            case 'element':
              if (e.isSelfClosing) return '/>';
            default:
              return '>';
          }
        }
        function Wh(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : e.value;
          return e.parent.isWhitespaceSensitive
            ? e.parent.isIndentationSensitive
              ? yh(t, Gf)
              : yh(nh(t.replace(/^\s*?\n|\n\s*?$/g, '')), Jf)
            : Hf(Xf, t.split(/[\t\n\f\r ]+/)).parts;
        }
        var $h = {
            preprocess: xf,
            print: function(e, t, n) {
              var r,
                i = e.getValue();
              switch (i.type) {
                case 'root':
                  return Rf.concat([Yf(xh(e, t, n)), Jf]);
                case 'element':
                case 'ieConditionalComment':
                  var a =
                      1 === i.children.length &&
                      'interpolation' === i.firstChild.type &&
                      i.firstChild.isLeadingSpaceSensitive &&
                      !i.firstChild.hasLeadingSpaces &&
                      i.lastChild.isTrailingSpaceSensitive &&
                      !i.lastChild.hasTrailingSpaces,
                    o = Symbol('element-attr-group-id');
                  return bh([
                    Yf(
                      bh([
                        Yf(Ah(e, t, n), { id: o }),
                        0 === i.children.length
                          ? i.hasDanglingSpaces && i.isDanglingSpaceSensitive
                            ? Xf
                            : ''
                          : bh([
                              ih(i) ? Wf : '',
                              ((r = bh([
                                a
                                  ? Kf(Zf, '', { groupId: o })
                                  : i.firstChild.hasLeadingSpaces &&
                                    i.firstChild.isLeadingSpaceSensitive
                                  ? Xf
                                  : 'text' === i.firstChild.type &&
                                    i.isWhitespaceSensitive &&
                                    i.isIndentationSensitive
                                  ? $f(Zf)
                                  : Zf,
                                xh(e, t, n),
                              ])),
                              a
                                ? Kf(zf(r), r, { groupId: o })
                                : lh(i) &&
                                  'root' === i.parent.type &&
                                  'vue' === t.parser &&
                                  !t.vueIndentScriptAndStyle
                                ? r
                                : zf(r)),
                              (i.next
                              ? Nh(i.next)
                              : Bh(i.parent))
                                ? i.lastChild.hasTrailingSpaces &&
                                  i.lastChild.isTrailingSpaceSensitive
                                  ? ' '
                                  : ''
                                : a
                                ? Kf(Zf, '', { groupId: o })
                                : i.lastChild.hasTrailingSpaces &&
                                  i.lastChild.isTrailingSpaceSensitive
                                ? Xf
                                : ('comment' === i.lastChild.type ||
                                    ('text' === i.lastChild.type &&
                                      i.isWhitespaceSensitive &&
                                      i.isIndentationSensitive)) &&
                                  new RegExp(
                                    '\\n\\s{'.concat(
                                      t.tabWidth *
                                        th(e, function(e) {
                                          return (
                                            e.parent && 'root' !== e.parent.type
                                          );
                                        }),
                                      '}$',
                                    ),
                                  ).test(i.lastChild.value)
                                ? ''
                                : Zf,
                            ]),
                      ]),
                    ),
                    Fh(i, t),
                  ]);
                case 'ieConditionalStartComment':
                case 'ieConditionalEndComment':
                  return bh([Sh(i), Th(i)]);
                case 'interpolation':
                  return bh([Sh(i, t), bh(e.map(n, 'children')), Th(i, t)]);
                case 'text':
                  if ('interpolation' === i.parent.type) {
                    var s = /\n[^\S\n]*?$/,
                      u = s.test(i.value),
                      c = u ? i.value.replace(s, '') : i.value;
                    return bh([bh(yh(c, Gf)), u ? Jf : '']);
                  }
                  return qf(fh([].concat(Ph(i, t), Wh(i), Lh(i, t))));
                case 'docType':
                  return bh([
                    Yf(
                      bh([
                        Sh(i, t),
                        ' ',
                        i.value
                          .replace(/^html\b/i, 'html')
                          .replace(/\s+/g, ' '),
                      ]),
                    ),
                    Th(i, t),
                  ]);
                case 'comment':
                  return bh([
                    Ph(i, t),
                    bh(
                      yh(t.originalText.slice(t.locStart(i), t.locEnd(i)), Gf),
                    ),
                    Lh(i, t),
                  ]);
                case 'attribute':
                  if (null === i.value) return i.rawName;
                  var l = gh(i.value),
                    p = eh(l, "'") < eh(l, '"') ? "'" : '"';
                  return bh([
                    i.rawName,
                    bh([
                      '=',
                      p,
                      bh(
                        yh(
                          '"' === p
                            ? l.replace(/"/g, '&quot;')
                            : l.replace(/'/g, '&apos;'),
                          Gf,
                        ),
                      ),
                      p,
                    ]),
                  ]);
                case 'yaml':
                case 'toml':
                  return bh(yh(i.raw, Gf));
                default:
                  throw new Error('Unexpected node type '.concat(i.type));
              }
            },
            insertPragma: Af,
            massageAstNode: function(e, t) {
              return (
                delete t.sourceSpan,
                delete t.startSourceSpan,
                delete t.endSourceSpan,
                delete t.nameSpan,
                delete t.valueSpan,
                'text' === e.type ||
                'comment' === e.type ||
                'yaml' === e.type ||
                'toml' === e.type
                  ? null
                  : ('attribute' === e.type && delete t.value,
                    void ('docType' === e.type && delete t.value))
              );
            },
            embed: function(e, t, n, r) {
              var i = e.getValue();
              switch (i.type) {
                case 'text':
                  if (lh(i.parent)) {
                    var a = ch(i.parent);
                    if (a) {
                      var o =
                        'markdown' === a
                          ? nh(i.value.replace(/^[^\S\n]*?\n/, ''))
                          : i.value;
                      return Rf.concat([
                        bh([Wf, Ph(i, r), Uf(n(o, { parser: a })), Lh(i, r)]),
                      ]);
                    }
                  } else if ('interpolation' === i.parent.type)
                    return bh([
                      zf(
                        bh([
                          Xf,
                          n(
                            i.value,
                            Object.assign(
                              { __isInHtmlInterpolation: !0 },
                              'angular' === r.parser
                                ? {
                                    parser: '__ng_interpolation',
                                    trailingComma: 'none',
                                  }
                                : 'vue' === r.parser
                                ? { parser: '__vue_expression' }
                                : { parser: '__js_expression' },
                            ),
                          ),
                        ]),
                      ),
                      i.parent.next && Nh(i.parent.next) ? ' ' : Xf,
                    ]);
                  break;
                case 'attribute':
                  if (!i.value) break;
                  if (
                    /^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(
                      r.originalText.slice(
                        i.valueSpan.start.offset,
                        i.valueSpan.end.offset,
                      ),
                    )
                  )
                    return bh([i.rawName, '=', i.value]);
                  if (
                    'lwc' === r.parser &&
                    /^\{[\s\S]*\}$/.test(
                      r.originalText.slice(
                        i.valueSpan.start.offset,
                        i.valueSpan.end.offset,
                      ),
                    )
                  )
                    return bh([i.rawName, '=', i.value]);
                  var s = (function(e, t, n) {
                    var r = function(t) {
                        return new RegExp(t.join('|')).test(e.fullName);
                      },
                      i = function() {
                        return gh(e.value);
                      },
                      a = !1,
                      o = function(e) {
                        var t =
                          'NGRoot' === e.type
                            ? 'NGMicrosyntax' === e.node.type &&
                              1 === e.node.body.length &&
                              'NGMicrosyntaxExpression' === e.node.body[0].type
                              ? e.node.body[0].expression
                              : e.node
                            : 'JsExpressionRoot' === e.type
                            ? e.node
                            : e;
                        !t ||
                          ('ObjectExpression' !== t.type &&
                            'ArrayExpression' !== t.type) ||
                          (a = !0);
                      },
                      s = function(e) {
                        return Yf(bh([zf(bh([Zf, e])), Zf]));
                      },
                      u = function(e) {
                        return a
                          ? (function(e) {
                              return Yf(e);
                            })(e)
                          : s(e);
                      },
                      c = function(e, n) {
                        return t(
                          e,
                          Object.assign({ __onHtmlBindingRoot: o }, n),
                        );
                      };
                    if (
                      'srcset' === e.fullName &&
                      ('img' === e.parent.fullName ||
                        'source' === e.parent.fullName)
                    )
                      return s(Ch(i()));
                    if ('vue' === n.parser) {
                      if ('v-for' === e.fullName) return vh(i(), c);
                      if ('slot-scope' === e.fullName) return Dh(i(), c);
                      if (r(['^@', '^v-on:'])) {
                        var l = i();
                        return u(
                          Eh(l)
                            ? c(l, { parser: '__js_expression' })
                            : Uf(c(l, { parser: '__vue_event_binding' })),
                        );
                      }
                      if (r(['^:', '^v-bind:']))
                        return u(c(i(), { parser: '__vue_expression' }));
                      if (r(['^v-']))
                        return u(c(i(), { parser: '__js_expression' }));
                    }
                    if ('angular' === n.parser) {
                      var p = function(e, t) {
                        return c(
                          e,
                          Object.assign({ trailingComma: 'none' }, t),
                        );
                      };
                      if (r(['^\\(.+\\)$', '^on-']))
                        return u(p(i(), { parser: '__ng_action' }));
                      if (r(['^\\[.+\\]$', '^bind(on)?-']))
                        return u(p(i(), { parser: '__ng_binding' }));
                      if (r(['^i18n(-.+)?$'])) return s(qf(Wh(e, i())));
                      if (r(['^\\*']))
                        return u(p(i(), { parser: '__ng_directive' }));
                      var f = /\{\{([\s\S]+?)\}\}/g,
                        h = i();
                      if (f.test(h)) {
                        var d = [];
                        return (
                          h.split(f).forEach(function(e, t) {
                            if (t % 2 == 0) d.push(bh(yh(e, Gf)));
                            else
                              try {
                                d.push(
                                  Yf(
                                    bh([
                                      '{{',
                                      zf(
                                        bh([
                                          Xf,
                                          p(e, {
                                            parser: '__ng_interpolation',
                                            __isInHtmlInterpolation: !0,
                                          }),
                                        ]),
                                      ),
                                      Xf,
                                      '}}',
                                    ]),
                                  ),
                                );
                              } catch (t) {
                                d.push('{{', bh(yh(e, Gf)), '}}');
                              }
                          }),
                          Yf(bh(d))
                        );
                      }
                    }
                    return null;
                  })(
                    i,
                    function(e, t) {
                      return n(
                        e,
                        Object.assign({ __isInHtmlAttribute: !0 }, t),
                      );
                    },
                    r,
                  );
                  if (s)
                    return bh([
                      i.rawName,
                      '="',
                      Yf(
                        Vf(s, function(e) {
                          return 'string' == typeof e
                            ? e.replace(/"/g, '&quot;')
                            : e;
                        }),
                      ),
                      '"',
                    ]);
                  break;
                case 'yaml':
                  return Qf(
                    bh([
                      '---',
                      Jf,
                      0 === i.value.trim().length
                        ? ''
                        : n(i.value, { parser: 'yaml' }),
                      '---',
                    ]),
                  );
              }
            },
          },
          qh = {
            htmlWhitespaceSensitivity: {
              since: '1.15.0',
              category: 'HTML',
              type: 'choice',
              default: 'css',
              description: 'How to handle whitespaces in HTML.',
              choices: [
                {
                  value: 'css',
                  description:
                    'Respect the default value of CSS display property.',
                },
                {
                  value: 'strict',
                  description: 'Whitespaces are considered sensitive.',
                },
                {
                  value: 'ignore',
                  description: 'Whitespaces are considered insensitive.',
                },
              ],
            },
            vueIndentScriptAndStyle: {
              since: '1.19.0',
              category: 'HTML',
              type: 'boolean',
              default: !1,
              description: 'Indent script and style tags in Vue files.',
            },
          },
          Yh = ['xhtml'],
          Jh = ['.html', '.htm', '.html.hl', '.inc', '.st', '.xht', '.xhtml'],
          Kh = {
            name: 'HTML',
            type: 'markup',
            tmScope: 'text.html.basic',
            aceMode: 'html',
            codemirrorMode: 'htmlmixed',
            codemirrorMimeType: 'text/html',
            color: '#e34c26',
            aliases: Yh,
            extensions: Jh,
            languageId: 146,
          },
          zh = Object.freeze({
            __proto__: null,
            name: 'HTML',
            type: 'markup',
            tmScope: 'text.html.basic',
            aceMode: 'html',
            codemirrorMode: 'htmlmixed',
            codemirrorMimeType: 'text/html',
            color: '#e34c26',
            aliases: Yh,
            extensions: Jh,
            languageId: 146,
            default: Kh,
          }),
          Hh = ['.vue'],
          Xh = {
            name: 'Vue',
            type: 'markup',
            color: '#2c3e50',
            extensions: Hh,
            tmScope: 'text.html.vue',
            aceMode: 'html',
            languageId: 391,
          },
          Gh = Object.freeze({
            __proto__: null,
            name: 'Vue',
            type: 'markup',
            color: '#2c3e50',
            extensions: Hh,
            tmScope: 'text.html.vue',
            aceMode: 'html',
            languageId: 391,
            default: Xh,
          }),
          Qh = pt(zh),
          Zh = pt(Gh),
          ed = {
            languages: [
              Mu(Qh, function(e) {
                return Object.assign(e, {
                  name: 'Angular',
                  since: '1.15.0',
                  parsers: ['angular'],
                  vscodeLanguageIds: ['html'],
                  extensions: ['.component.html'],
                  filenames: [],
                });
              }),
              Mu(Qh, function(e) {
                return Object.assign(e, {
                  since: '1.15.0',
                  parsers: ['html'],
                  vscodeLanguageIds: ['html'],
                  extensions: e.extensions.concat(['.mjml']),
                });
              }),
              Mu(Qh, function(e) {
                return Object.assign(e, {
                  name: 'Lightning Web Components',
                  since: '1.17.0',
                  parsers: ['lwc'],
                  vscodeLanguageIds: ['html'],
                  extensions: [],
                  filenames: [],
                });
              }),
              Mu(Zh, function(e) {
                return Object.assign(e, {
                  since: '1.10.0',
                  parsers: ['vue'],
                  vscodeLanguageIds: ['vue'],
                });
              }),
            ],
            printers: { html: $h },
            options: qh,
          },
          td = na.addLeadingComment,
          nd = na.addTrailingComment,
          rd = na.addDanglingComment;
        function id(e, t) {
          var n = e.body.filter(function(e) {
            return 'EmptyStatement' !== e.type;
          });
          0 === n.length ? rd(e, t) : td(n[0], t);
        }
        function ad(e, t) {
          'BlockStatement' === e.type ? id(e, t) : td(e, t);
        }
        function od(e, t, n, r, i, a) {
          return !(
            !n ||
            'IfStatement' !== n.type ||
            !r ||
            (')' === Oi.getNextNonSpaceNonCommentCharacter(e, i, a.locEnd)
              ? (nd(t, i), 0)
              : t === n.consequent && r === n.alternate
              ? ('BlockStatement' === t.type ? nd(t, i) : rd(n, i), 0)
              : 'BlockStatement' === r.type
              ? (id(r, i), 0)
              : 'IfStatement' === r.type
              ? (ad(r.consequent, i), 0)
              : n.consequent !== r || (td(r, i), 0))
          );
        }
        function sd(e, t, n, r, i, a) {
          return !(
            !n ||
            'WhileStatement' !== n.type ||
            !r ||
            (')' === Oi.getNextNonSpaceNonCommentCharacter(e, i, a.locEnd)
              ? (nd(t, i), 0)
              : 'BlockStatement' !== r.type || (id(r, i), 0))
          );
        }
        function ud(e, t, n, r) {
          return !(
            !e ||
            ('TryStatement' !== e.type && 'CatchClause' !== e.type) ||
            !n ||
            ('CatchClause' === e.type && t
              ? (nd(t, r), 0)
              : 'BlockStatement' === n.type
              ? (id(n, r), 0)
              : 'TryStatement' === n.type
              ? (ad(n.finalizer, r), 0)
              : 'CatchClause' !== n.type || (ad(n.body, r), 0))
          );
        }
        function cd(e, t, n, r) {
          return !(
            !(
              e &&
              ('ClassDeclaration' === e.type || 'ClassExpression' === e.type) &&
              e.decorators &&
              e.decorators.length > 0
            ) ||
            (n && 'Decorator' === n.type) ||
            (e.decorators && 0 !== e.decorators.length
              ? nd(e.decorators[e.decorators.length - 1], r)
              : td(e, r),
            0)
          );
        }
        function ld(e, t, n, r, i) {
          return (
            ((t &&
              n &&
              ('Property' === t.type || 'MethodDefinition' === t.type) &&
              'Identifier' === n.type &&
              t.key === n &&
              ':' !== Oi.getNextNonSpaceNonCommentCharacter(e, n, i.locEnd)) ||
              !(
                !n ||
                !t ||
                'Decorator' !== n.type ||
                ('ClassMethod' !== t.type &&
                  'ClassProperty' !== t.type &&
                  'TSAbstractClassProperty' !== t.type &&
                  'TSAbstractMethodDefinition' !== t.type &&
                  'MethodDefinition' !== t.type)
              )) &&
            (nd(n, r), !0)
          );
        }
        function pd(e, t, n, r, i, a) {
          if (
            t &&
            'FunctionTypeParam' === t.type &&
            n &&
            'FunctionTypeAnnotation' === n.type &&
            r &&
            'FunctionTypeParam' !== r.type
          )
            return nd(t, i), !0;
          if (
            t &&
            ('Identifier' === t.type || 'AssignmentPattern' === t.type) &&
            n &&
            ('ArrowFunctionExpression' === n.type ||
              'FunctionExpression' === n.type ||
              'FunctionDeclaration' === n.type ||
              'ObjectMethod' === n.type ||
              'ClassMethod' === n.type) &&
            ')' === Oi.getNextNonSpaceNonCommentCharacter(e, i, a.locEnd)
          )
            return nd(t, i), !0;
          if (
            n &&
            'FunctionDeclaration' === n.type &&
            r &&
            'BlockStatement' === r.type
          ) {
            var o = (function() {
              if (0 !== n.params.length)
                return Oi.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(
                  e,
                  a.locEnd(Oi.getLast(n.params)),
                );
              var t = Oi.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(
                e,
                a.locEnd(n.id),
              );
              return Oi.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(
                e,
                t + 1,
              );
            })();
            if (a.locStart(i) > o) return id(r, i), !0;
          }
          return !1;
        }
        function fd(e, t) {
          return !(!e || 'ImportSpecifier' !== e.type || (td(e, t), 0));
        }
        function hd(e, t, n, r) {
          return t && t.body && 0 === t.body.length
            ? (r ? rd(t, n) : td(t, n), !0)
            : !(
                !e ||
                'Program' !== e.type ||
                0 !== e.body.length ||
                !e.directives ||
                0 !== e.directives.length ||
                (r ? rd(e, n) : td(e, n), 0)
              );
        }
        var dd = {
            handleOwnLineComment: function(e, t, n, r, i) {
              var a = e.precedingNode,
                o = e.enclosingNode,
                s = e.followingNode;
              return !!(
                pd(t, a, o, s, e, n) ||
                (function(e, t, n) {
                  return (
                    !(
                      !e ||
                      ('MemberExpression' !== e.type &&
                        'OptionalMemberExpression' !== e.type) ||
                      !t ||
                      'Identifier' !== t.type
                    ) && (td(e, n), !0)
                  );
                })(o, s, e) ||
                od(t, a, o, s, e, n) ||
                sd(t, a, o, s, e, n) ||
                ud(o, a, s, e) ||
                cd(o, 0, s, e) ||
                fd(o, e) ||
                (function(e, t, n) {
                  return (
                    !(
                      !e ||
                      ('ForInStatement' !== e.type &&
                        'ForOfStatement' !== e.type)
                    ) && (td(e, n), !0)
                  );
                })(o, 0, e) ||
                (function(e, t, n, r) {
                  return (
                    !(
                      !t ||
                      ('UnionTypeAnnotation' !== t.type &&
                        'TSUnionType' !== t.type)
                    ) && (nd(e, r), !0)
                  );
                })(a, o, 0, e) ||
                hd(o, r, e, i) ||
                (function(e, t, n, r, i) {
                  return (
                    !!(
                      n &&
                      'ImportSpecifier' === n.type &&
                      t &&
                      'ImportDeclaration' === t.type &&
                      Oi.hasNewline(e, i.locEnd(r))
                    ) && (nd(n, r), !0)
                  );
                })(t, o, a, e, n) ||
                (function(e, t) {
                  return (
                    !(!e || 'AssignmentPattern' !== e.type) && (td(e, t), !0)
                  );
                })(o, e) ||
                ld(t, o, a, e, n)
              );
            },
            handleEndOfLineComment: function(e, t, n, r, i) {
              var a = e.precedingNode,
                o = e.enclosingNode,
                s = e.followingNode;
              return !!(
                pd(t, a, o, s, e, n) ||
                (function(e, t, n, r, i, a) {
                  var o =
                    t && !Oi.hasNewlineInRange(i, a.locEnd(t), a.locStart(r));
                  return (
                    !(
                      (t && o) ||
                      !e ||
                      'ConditionalExpression' !== e.type ||
                      !n
                    ) && (td(n, r), !0)
                  );
                })(o, a, s, e, t, n) ||
                fd(o, e) ||
                od(t, a, o, s, e, n) ||
                sd(t, a, o, s, e, n) ||
                ud(o, a, s, e) ||
                cd(o, 0, s, e) ||
                (function(e, t) {
                  return (
                    !(!e || 'LabeledStatement' !== e.type) && (td(e, t), !0)
                  );
                })(o, e) ||
                (function(e, t, n) {
                  return (
                    !!(
                      t &&
                      ('CallExpression' === t.type ||
                        'OptionalCallExpression' === t.type) &&
                      e &&
                      t.callee === e &&
                      t.arguments.length > 0
                    ) && (td(t.arguments[0], n), !0)
                  );
                })(a, o, e) ||
                (function(e, t) {
                  return (
                    !(
                      !e ||
                      ('Property' !== e.type && 'ObjectProperty' !== e.type)
                    ) && (td(e, t), !0)
                  );
                })(o, e) ||
                hd(o, r, e, i) ||
                (function(e, t, n) {
                  return !(!e || 'TypeAlias' !== e.type) && (td(e, n), !0);
                })(o, 0, e) ||
                (function(e, t, n) {
                  return (
                    !(
                      !e ||
                      ('VariableDeclarator' !== e.type &&
                        'AssignmentExpression' !== e.type) ||
                      !t ||
                      ('ObjectExpression' !== t.type &&
                        'ArrayExpression' !== t.type &&
                        'TemplateLiteral' !== t.type &&
                        'TaggedTemplateExpression' !== t.type)
                    ) && (td(t, n), !0)
                  );
                })(o, s, e)
              );
            },
            handleRemainingComment: function(e, t, n, r, i) {
              var a = e.precedingNode,
                o = e.enclosingNode,
                s = e.followingNode;
              return !!(
                od(t, a, o, s, e, n) ||
                sd(t, a, o, s, e, n) ||
                (function(e, t, n) {
                  return (
                    !(
                      !e ||
                      ('ObjectProperty' !== e.type && 'Property' !== e.type) ||
                      !e.shorthand ||
                      e.key !== t ||
                      'AssignmentPattern' !== e.value.type
                    ) && (nd(e.value.left, n), !0)
                  );
                })(o, a, e) ||
                (function(e, t, n, r) {
                  return (
                    ')' ===
                      Oi.getNextNonSpaceNonCommentCharacter(e, n, r.locEnd) &&
                    (!t ||
                    ((('FunctionDeclaration' !== t.type &&
                      'FunctionExpression' !== t.type &&
                      'ArrowFunctionExpression' !== t.type &&
                      'ClassMethod' !== t.type &&
                      'ObjectMethod' !== t.type) ||
                      0 !== t.params.length) &&
                      (('CallExpression' !== t.type &&
                        'OptionalCallExpression' !== t.type &&
                        'NewExpression' !== t.type) ||
                        0 !== t.arguments.length))
                      ? !(
                          !t ||
                          'MethodDefinition' !== t.type ||
                          0 !== t.value.params.length
                        ) && (rd(t.value, n), !0)
                      : (rd(t, n), !0))
                  );
                })(t, o, e, n) ||
                ld(t, o, a, e, n) ||
                hd(o, r, e, i) ||
                (function(e, t, n, r) {
                  if (!t || 'ArrowFunctionExpression' !== t.type) return !1;
                  var i = na.getNextNonSpaceNonCommentCharacterIndex(e, n, r);
                  return '=>' === e.substr(i, 2) && (rd(t, n), !0);
                })(t, o, e, n) ||
                (function(e, t, n, r, i) {
                  return (
                    '(' ===
                      Oi.getNextNonSpaceNonCommentCharacter(e, r, i.locEnd) &&
                    !(
                      !n ||
                      !t ||
                      ('FunctionDeclaration' !== t.type &&
                        'FunctionExpression' !== t.type &&
                        'ClassMethod' !== t.type &&
                        'MethodDefinition' !== t.type &&
                        'ObjectMethod' !== t.type)
                    ) &&
                      (nd(n, r), !0)
                  );
                })(t, o, a, e, n) ||
                (function(e, t, n, r, i) {
                  return (
                    !(!t || 'TSMappedType' !== t.type) &&
                    (r && 'TSTypeParameter' === r.type && r.name
                      ? (td(r.name, i), !0)
                      : !(
                          !n ||
                          'TSTypeParameter' !== n.type ||
                          !n.constraint
                        ) && (nd(n.constraint, i), !0))
                  );
                })(0, o, a, s, e) ||
                (function(e, t) {
                  return (
                    !(
                      !e ||
                      ('ContinueStatement' !== e.type &&
                        'BreakStatement' !== e.type) ||
                      e.label
                    ) && (nd(e, t), !0)
                  );
                })(o, e)
              );
            },
            hasLeadingComment: function(e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : function() {
                      return !0;
                    };
              return e.leadingComments
                ? e.leadingComments.some(t)
                : !!e.comments &&
                    e.comments.some(function(e) {
                      return e.leading && t(e);
                    });
            },
            isBlockComment: function(e) {
              return 'Block' === e.type || 'CommentBlock' === e.type;
            },
          },
          md = dd.isBlockComment,
          gd = dd.hasLeadingComment,
          yd = ea.builders,
          vd = yd.indent,
          Dd = yd.join,
          Ed = yd.hardline,
          Cd = yd.softline,
          bd = yd.literalline,
          xd = yd.concat,
          Ad = yd.group,
          Sd = yd.dedentToRoot,
          wd = ea.utils,
          Fd = wd.mapDoc,
          kd = wd.stripTrailingHardline;
        function Td(e) {
          return e.replace(/([\\`]|\$\{)/g, '\\$1');
        }
        function _d(e, t) {
          return Fd(e, function(e) {
            if (!e.parts) return e;
            var n = [];
            return (
              e.parts.forEach(function(e) {
                'string' == typeof e
                  ? n.push(t ? e.replace(/(\\*)`/g, '$1$1\\`') : Td(e))
                  : n.push(e);
              }),
              Object.assign({}, e, { parts: n })
            );
          });
        }
        function Od(e) {
          var t = [],
            n = !1;
          return (
            e
              .map(function(e) {
                return e.trim();
              })
              .forEach(function(e, r, i) {
                '' !== e &&
                  ('' === i[r - 1] && n ? t.push(xd([Ed, e])) : t.push(e),
                  (n = !0));
              }),
            0 === t.length ? null : Dd(Ed, t)
          );
        }
        function Nd(e) {
          var t = e.getValue(),
            n = e.getParentNode(),
            r = e.getParentNode(1);
          return (
            (r &&
              t.quasis &&
              'JSXExpressionContainer' === n.type &&
              'JSXElement' === r.type &&
              'style' === r.openingElement.name.name &&
              r.openingElement.attributes.some(function(e) {
                return 'jsx' === e.name.name;
              })) ||
            (n &&
              'TaggedTemplateExpression' === n.type &&
              'Identifier' === n.tag.type &&
              'css' === n.tag.name) ||
            (n &&
              'TaggedTemplateExpression' === n.type &&
              'MemberExpression' === n.tag.type &&
              'css' === n.tag.object.name &&
              ('global' === n.tag.property.name ||
                'resolve' === n.tag.property.name))
          );
        }
        function Bd(e) {
          return jd(
            e,
            [
              function(e) {
                return 'TemplateLiteral' === e.type;
              },
              function(e, t) {
                return 'ArrayExpression' === e.type && 'elements' === t;
              },
              function(e, t) {
                return (
                  'Property' === e.type &&
                  'Identifier' === e.key.type &&
                  'styles' === e.key.name &&
                  'value' === t
                );
              },
            ].concat([
              function(e, t) {
                return 'ObjectExpression' === e.type && 'properties' === t;
              },
              function(e, t) {
                return (
                  'CallExpression' === e.type &&
                  'Identifier' === e.callee.type &&
                  'Component' === e.callee.name &&
                  'arguments' === t
                );
              },
              function(e, t) {
                return 'Decorator' === e.type && 'expression' === t;
              },
            ]),
          );
        }
        function Id(e) {
          var t = e.getParentNode();
          if (!t || 'TaggedTemplateExpression' !== t.type) return !1;
          var n = t.tag;
          switch (n.type) {
            case 'MemberExpression':
              return Md(n.object) || Ld(n);
            case 'CallExpression':
              return (
                Md(n.callee) ||
                ('MemberExpression' === n.callee.type &&
                  (('MemberExpression' === n.callee.object.type &&
                    (Md(n.callee.object.object) || Ld(n.callee.object))) ||
                    ('CallExpression' === n.callee.object.type &&
                      Md(n.callee.object.callee))))
              );
            case 'Identifier':
              return 'css' === n.name;
            default:
              return !1;
          }
        }
        function Pd(e) {
          var t = e.getParentNode(),
            n = e.getParentNode(1);
          return (
            n &&
            'JSXExpressionContainer' === t.type &&
            'JSXAttribute' === n.type &&
            'JSXIdentifier' === n.name.type &&
            'css' === n.name.name
          );
        }
        function Md(e) {
          return 'Identifier' === e.type && 'styled' === e.name;
        }
        function Ld(e) {
          return /^[A-Z]/.test(e.object.name) && 'extend' === e.property.name;
        }
        function Rd(e, t) {
          return gd(e, function(e) {
            return md(e) && e.value === ' '.concat(t, ' ');
          });
        }
        function jd(e, t) {
          var n = e.stack.slice(),
            r = null,
            i = n.pop(),
            a = !0,
            o = !1,
            s = void 0;
          try {
            for (
              var u, c = t[Symbol.iterator]();
              !(a = (u = c.next()).done);
              a = !0
            ) {
              var l = u.value;
              if (void 0 === i) return !1;
              if (
                ('number' == typeof r && ((r = n.pop()), (i = n.pop())),
                !l(i, r))
              )
                return !1;
              (r = n.pop()), (i = n.pop());
            }
          } catch (e) {
            (o = !0), (s = e);
          } finally {
            try {
              a || null == c.return || c.return();
            } finally {
              if (o) throw s;
            }
          }
          return !0;
        }
        var Ud = 0,
          Vd = function(e, t, n, r) {
            var i,
              a = e.getValue(),
              o = e.getParentNode(),
              s = e.getParentNode(1);
            switch (a.type) {
              case 'TemplateLiteral':
                if (
                  [Nd, Id, Pd, Bd].some(function(t) {
                    return t(e);
                  })
                ) {
                  var u = a.quasis.map(function(e) {
                      return e.value.raw;
                    }),
                    c = 0,
                    l = u.reduce(function(e, t, n) {
                      return 0 == n
                        ? t
                        : e + '@prettier-placeholder-' + c++ + '-id' + t;
                    }, '');
                  return (function(e, t, n) {
                    var r = t.getValue();
                    if (1 === r.quasis.length && !r.quasis[0].value.raw.trim())
                      return '``';
                    var i = r.expressions ? t.map(n, 'expressions') : [],
                      a = (function(e, t) {
                        if (!t || !t.length) return e;
                        var n = t.slice(),
                          r = 0,
                          i = Fd(e, function(e) {
                            if (!e || !e.parts || !e.parts.length) return e;
                            var t = e.parts,
                              i = t.indexOf('@'),
                              a = i + 1;
                            if (
                              i > -1 &&
                              'string' == typeof t[a] &&
                              t[a].startsWith('prettier-placeholder')
                            ) {
                              var o = t[i],
                                s = t[a],
                                u = t.slice(a + 1);
                              t = t
                                .slice(0, i)
                                .concat([o + s])
                                .concat(u);
                            }
                            var c = t.findIndex(function(e) {
                              return (
                                'string' == typeof e &&
                                e.startsWith('@prettier-placeholder')
                              );
                            });
                            if (c > -1) {
                              var l = t[c],
                                p = t.slice(c + 1),
                                f = l.match(
                                  /@prettier-placeholder-(.+)-id([\s\S]*)/,
                                ),
                                h = f[1],
                                d = f[2],
                                m = n[h];
                              r++,
                                (t = t
                                  .slice(0, c)
                                  .concat(['${', m, '}' + d])
                                  .concat(p));
                            }
                            return Object.assign({}, e, { parts: t });
                          });
                        return n.length === r ? i : null;
                      })(e, i);
                    if (!a)
                      throw new Error("Couldn't insert all the expressions");
                    return xd(['`', vd(xd([Ed, kd(a)])), Cd, '`']);
                  })(n(l, { parser: 'css' }), e, t);
                }
                if (
                  (function(e) {
                    var t = e.getValue(),
                      n = e.getParentNode();
                    return (
                      Rd(t, 'GraphQL') ||
                      (n &&
                        (('TaggedTemplateExpression' === n.type &&
                          (('MemberExpression' === n.tag.type &&
                            'graphql' === n.tag.object.name &&
                            'experimental' === n.tag.property.name) ||
                            ('Identifier' === n.tag.type &&
                              ('gql' === n.tag.name ||
                                'graphql' === n.tag.name)))) ||
                          ('CallExpression' === n.type &&
                            'Identifier' === n.callee.type &&
                            'graphql' === n.callee.name)))
                    );
                  })(e)
                ) {
                  var p = a.expressions ? e.map(t, 'expressions') : [],
                    f = a.quasis.length;
                  if (1 === f && '' === a.quasis[0].value.raw.trim())
                    return '``';
                  for (var h = [], d = 0; d < f; d++) {
                    var m = 0 === d,
                      g = d === f - 1,
                      y = a.quasis[d].value.cooked;
                    if ('string' != typeof y) return null;
                    var v = y.split('\n'),
                      D = v.length,
                      E = p[d],
                      C = D > 2 && '' === v[0].trim() && '' === v[1].trim(),
                      b =
                        D > 2 &&
                        '' === v[D - 1].trim() &&
                        '' === v[D - 2].trim(),
                      x = v.every(function(e) {
                        return /^\s*(?:#[^\r\n]*)?$/.test(e);
                      });
                    if (!g && /#[^\r\n]*$/.test(v[D - 1])) return null;
                    var A = null;
                    (A = x ? Od(v) : kd(n(y, { parser: 'graphql' })))
                      ? ((A = _d(A, !1)),
                        !m && C && h.push(''),
                        h.push(A),
                        !g && b && h.push(''))
                      : m || g || !C || h.push(''),
                      E && h.push(xd(['${', E, '}']));
                  }
                  return xd(['`', vd(xd([Ed, Dd(Ed, h)])), Ed, '`']);
                }
                var S = (function(e) {
                  return (
                    Rd(e.getValue(), 'HTML') ||
                    jd(e, [
                      function(e) {
                        return 'TemplateLiteral' === e.type;
                      },
                      function(e, t) {
                        return (
                          'TaggedTemplateExpression' === e.type &&
                          'Identifier' === e.tag.type &&
                          'html' === e.tag.name &&
                          'quasi' === t
                        );
                      },
                    ])
                  );
                })(e)
                  ? 'html'
                  : (function(e) {
                      return jd(
                        e,
                        [
                          function(e) {
                            return 'TemplateLiteral' === e.type;
                          },
                          function(e, t) {
                            return (
                              'Property' === e.type &&
                              'Identifier' === e.key.type &&
                              'template' === e.key.name &&
                              'value' === t
                            );
                          },
                        ].concat([
                          function(e, t) {
                            return (
                              'ObjectExpression' === e.type &&
                              'properties' === t
                            );
                          },
                          function(e, t) {
                            return (
                              'CallExpression' === e.type &&
                              'Identifier' === e.callee.type &&
                              'Component' === e.callee.name &&
                              'arguments' === t
                            );
                          },
                          function(e, t) {
                            return 'Decorator' === e.type && 'expression' === t;
                          },
                        ]),
                      );
                    })(e)
                  ? 'angular'
                  : void 0;
                if (S)
                  return (function(e, t, n, r, i) {
                    var a = e.getValue(),
                      o = Ud;
                    Ud = (Ud + 1) >>> 0;
                    var s = function(e) {
                        return 'PRETTIER_HTML_PLACEHOLDER_'
                          .concat(e, '_')
                          .concat(o, '_IN_JS');
                      },
                      u = a.quasis
                        .map(function(e, t, n) {
                          return t === n.length - 1
                            ? e.value.cooked
                            : e.value.cooked + s(t);
                        })
                        .join(''),
                      c = e.map(t, 'expressions');
                    if (0 === c.length && 0 === u.trim().length) return '``';
                    var l = RegExp(s('(\\d+)'), 'g'),
                      p = Fd(kd(n(u, { parser: r })), function(e) {
                        if ('string' != typeof e) return e;
                        for (
                          var t = [], n = e.split(l), r = 0;
                          r < n.length;
                          r++
                        ) {
                          var a = n[r];
                          if (r % 2 != 0) {
                            var o = +a;
                            t.push(xd(['${', Ad(c[o]), '}']));
                          } else
                            a &&
                              ((a = Td(a)),
                              i && (a = a.replace(/<\/(script)\b/gi, '<\\/$1')),
                              t.push(a));
                        }
                        return xd(t);
                      });
                    return Ad(xd(['`', vd(xd([Ed, Ad(p)])), Cd, '`']));
                  })(e, t, n, S, r.embeddedInHtml);
                break;
              case 'TemplateElement':
                if (
                  s &&
                  'TaggedTemplateExpression' === s.type &&
                  1 === o.quasis.length &&
                  'Identifier' === s.tag.type &&
                  ('md' === s.tag.name || 'markdown' === s.tag.name)
                ) {
                  var w = o.quasis[0].value.raw.replace(
                      /((?:\\\\)*)\\`/g,
                      function(e, t) {
                        return '\\'.repeat(t.length / 2) + '`';
                      },
                    ),
                    F = null === (i = w.match(/^([^\S\n]*)\S/m)) ? '' : i[1];
                  return xd([
                    '' !== F
                      ? vd(
                          xd([
                            Cd,
                            k(w.replace(new RegExp('^'.concat(F), 'gm'), '')),
                          ]),
                        )
                      : xd([bd, Sd(k(w))]),
                    Cd,
                  ]);
                }
            }
            function k(e) {
              var t = n(e, { parser: 'markdown', __inJsTemplate: !0 });
              return kd(_d(t, !0));
            }
          };
        function Wd(e) {
          return (
            'LogicalExpression' === e.type &&
            'LogicalExpression' === e.right.type &&
            e.operator === e.right.operator
          );
        }
        var $d = function(e, t, n) {
            if (
              ([
                'range',
                'raw',
                'comments',
                'leadingComments',
                'trailingComments',
                'extra',
                'start',
                'end',
                'flags',
                'errors',
              ].forEach(function(e) {
                delete t[e];
              }),
              'BigIntLiteral' === e.type && (t.value = t.value.toLowerCase()),
              'EmptyStatement' === e.type)
            )
              return null;
            if ('JSXText' === e.type) return null;
            if (
              'JSXExpressionContainer' === e.type &&
              'Literal' === e.expression.type &&
              ' ' === e.expression.value
            )
              return null;
            if (Wd(t))
              return (function e(t) {
                return Wd(t)
                  ? e({
                      type: 'LogicalExpression',
                      operator: t.operator,
                      left: e({
                        type: 'LogicalExpression',
                        operator: t.operator,
                        left: t.left,
                        right: t.right.left,
                        loc: {},
                      }),
                      right: t.right.right,
                      loc: {},
                    })
                  : t;
              })(t);
            if (
              'TSParameterProperty' === e.type &&
              null === e.accessibility &&
              !e.readonly
            )
              return {
                type: 'Identifier',
                name: e.parameter.name,
                typeAnnotation: t.parameter.typeAnnotation,
                decorators: t.decorators,
              };
            'TSNamespaceExportDeclaration' === e.type &&
              e.specifiers &&
              0 === e.specifiers.length &&
              delete t.specifiers,
              'JSXOpeningElement' === e.type && delete t.selfClosing,
              'JSXElement' === e.type && delete t.closingElement,
              ('Property' !== e.type &&
                'ObjectProperty' !== e.type &&
                'MethodDefinition' !== e.type &&
                'ClassProperty' !== e.type &&
                'TSPropertySignature' !== e.type &&
                'ObjectTypeProperty' !== e.type) ||
                'object' !== c(e.key) ||
                !e.key ||
                ('Literal' !== e.key.type &&
                  'StringLiteral' !== e.key.type &&
                  'Identifier' !== e.key.type) ||
                delete t.key,
              'OptionalMemberExpression' === e.type &&
                !1 === e.optional &&
                ((t.type = 'MemberExpression'), delete t.optional),
              'JSXElement' === e.type &&
                'style' === e.openingElement.name.name &&
                e.openingElement.attributes.some(function(e) {
                  return 'jsx' === e.name.name;
                }) &&
                t.children
                  .filter(function(e) {
                    return (
                      'JSXExpressionContainer' === e.type &&
                      'TemplateLiteral' === e.expression.type
                    );
                  })
                  .map(function(e) {
                    return e.expression;
                  })
                  .reduce(function(e, t) {
                    return e.concat(t.quasis);
                  }, [])
                  .forEach(function(e) {
                    return delete e.value;
                  }),
              'JSXAttribute' === e.type &&
                'css' === e.name.name &&
                'JSXExpressionContainer' === e.value.type &&
                'TemplateLiteral' === e.value.expression.type &&
                t.value.expression.quasis.forEach(function(e) {
                  return delete e.value;
                });
            var r = e.expression || e.callee;
            if (
              'Decorator' === e.type &&
              'CallExpression' === r.type &&
              'Component' === r.callee.name &&
              1 === r.arguments.length
            ) {
              var i = e.expression.arguments[0].properties;
              t.expression.arguments[0].properties.forEach(function(e, t) {
                var n = null;
                switch (i[t].key.name) {
                  case 'styles':
                    'ArrayExpression' === e.value.type &&
                      (n = e.value.elements[0]);
                    break;
                  case 'template':
                    'TemplateLiteral' === e.value.type && (n = e.value);
                }
                n &&
                  n.quasis.forEach(function(e) {
                    return delete e.value;
                  });
              });
            }
            'TaggedTemplateExpression' !== e.type ||
              ('MemberExpression' !== e.tag.type &&
                ('Identifier' !== e.tag.type ||
                  ('gql' !== e.tag.name &&
                    'graphql' !== e.tag.name &&
                    'css' !== e.tag.name &&
                    'md' !== e.tag.name &&
                    'markdown' !== e.tag.name &&
                    'html' !== e.tag.name)) &&
                'CallExpression' !== e.tag.type) ||
              t.quasi.quasis.forEach(function(e) {
                return delete e.value;
              }),
              'TemplateLiteral' === e.type &&
                ((e.leadingComments &&
                  e.leadingComments.some(function(e) {
                    return (
                      'CommentBlock' === e.type &&
                      ['GraphQL', 'HTML'].some(function(t) {
                        return e.value === ' '.concat(t, ' ');
                      })
                    );
                  })) ||
                  ('CallExpression' === n.type &&
                    'graphql' === n.callee.name)) &&
                t.quasis.forEach(function(e) {
                  return delete e.value;
                });
          },
          qd = Oi.getLast,
          Yd = Oi.hasNewline,
          Jd = Oi.hasNewlineInRange,
          Kd = Oi.hasIgnoreComment,
          zd = Oi.hasNodeIgnoreComment,
          Hd = Oi.skipWhitespace,
          Xd = Ar.keyword.isIdentifierNameES5,
          Gd = new RegExp('^'.concat('(?:(?=.)\\s)', '*:')),
          Qd = new RegExp('^'.concat('(?:(?=.)\\s)', '*::'));
        function Zd(e, t) {
          if (!e || 'object' !== c(e)) return !1;
          if (Array.isArray(e))
            return e.some(function(e) {
              return Zd(e, t);
            });
          var n = t(e);
          return 'boolean' == typeof n
            ? n
            : Object.keys(e).some(function(n) {
                return Zd(e[n], t);
              });
        }
        function em(e) {
          return (
            'AssignmentExpression' === e.type ||
            'BinaryExpression' === e.type ||
            'LogicalExpression' === e.type ||
            'NGPipeExpression' === e.type ||
            'ConditionalExpression' === e.type ||
            'CallExpression' === e.type ||
            'OptionalCallExpression' === e.type ||
            'MemberExpression' === e.type ||
            'OptionalMemberExpression' === e.type ||
            'SequenceExpression' === e.type ||
            'TaggedTemplateExpression' === e.type ||
            'BindExpression' === e.type ||
            ('UpdateExpression' === e.type && !e.prefix) ||
            'TSAsExpression' === e.type ||
            'TSNonNullExpression' === e.type
          );
        }
        function tm(e) {
          return (
            'BooleanLiteral' === e.type ||
            'DirectiveLiteral' === e.type ||
            'Literal' === e.type ||
            'NullLiteral' === e.type ||
            'NumericLiteral' === e.type ||
            'RegExpLiteral' === e.type ||
            'StringLiteral' === e.type ||
            'TemplateLiteral' === e.type ||
            'TSTypeLiteral' === e.type ||
            'JSXText' === e.type
          );
        }
        function nm(e) {
          return (
            'NumericLiteral' === e.type ||
            ('Literal' === e.type && 'number' == typeof e.value)
          );
        }
        function rm(e) {
          return (
            'StringLiteral' === e.type ||
            ('Literal' === e.type && 'string' == typeof e.value)
          );
        }
        function im(e) {
          return (
            'FunctionExpression' === e.type ||
            'ArrowFunctionExpression' === e.type
          );
        }
        function am(e) {
          return !(
            ('CallExpression' !== e.type &&
              'OptionalCallExpression' !== e.type) ||
            'Identifier' !== e.callee.type ||
            ('async' !== e.callee.name &&
              'inject' !== e.callee.name &&
              'fakeAsync' !== e.callee.name)
          );
        }
        function om(e) {
          return 'JSXElement' === e.type || 'JSXFragment' === e.type;
        }
        function sm(e) {
          return 'get' === e.kind || 'set' === e.kind;
        }
        function um(e, t, n) {
          return n.locStart(e) === n.locStart(t);
        }
        function cm(e, t) {
          return sm(e) || um(e, e.value, t);
        }
        var lm = /^(skip|[fx]?(it|describe|test))$/;
        function pm(e) {
          return (
            'CallExpression' === e.type || 'OptionalCallExpression' === e.type
          );
        }
        var fm = new RegExp('([ \n\r\t]+)'),
          hm = new RegExp('[^ \n\r\t]');
        function dm(e) {
          return tm(e) && (hm.test(ym(e)) || !/\n/.test(ym(e)));
        }
        function mm(e, t, n) {
          return om(t)
            ? zd(t)
            : t.comments &&
                t.comments.some(function(t) {
                  return t.leading && Yd(e, n.locEnd(t));
                });
        }
        function gm(e) {
          return e.quasis.some(function(e) {
            return e.value.raw.includes('\n');
          });
        }
        function ym(e) {
          return e.extra ? e.extra.raw : e.raw;
        }
        var vm = {
            classChildNeedsASIProtection: function(e) {
              if (e) {
                if (e.static || e.accessibility) return !1;
                if (!e.computed) {
                  var t = e.key && e.key.name;
                  if ('in' === t || 'instanceof' === t) return !0;
                }
                switch (e.type) {
                  case 'ClassProperty':
                  case 'TSAbstractClassProperty':
                    return e.computed;
                  case 'MethodDefinition':
                  case 'TSAbstractMethodDefinition':
                  case 'ClassMethod':
                  case 'ClassPrivateMethod':
                    var n = e.value ? e.value.async : e.async,
                      r = e.value ? e.value.generator : e.generator;
                    return !(
                      n ||
                      'get' === e.kind ||
                      'set' === e.kind ||
                      (!e.computed && !r)
                    );
                  case 'TSIndexSignature':
                    return !0;
                  default:
                    return !1;
                }
              }
            },
            classPropMayCauseASIProblems: function(e) {
              var t = e.getNode();
              if ('ClassProperty' !== t.type) return !1;
              var n = t.key && t.key.name;
              return (
                !(
                  ('static' !== n && 'get' !== n && 'set' !== n) ||
                  t.value ||
                  t.typeAnnotation
                ) || void 0
              );
            },
            conditionalExpressionChainContainsJSX: function(e) {
              return Boolean(
                (function(e) {
                  var t = [];
                  return (
                    (function e(n) {
                      'ConditionalExpression' === n.type
                        ? (e(n.test), e(n.consequent), e(n.alternate))
                        : t.push(n);
                    })(e),
                    t
                  );
                })(e).find(om),
              );
            },
            getFlowVariance: function(e) {
              if (!e.variance) return null;
              var t = e.variance.kind || e.variance;
              switch (t) {
                case 'plus':
                  return '+';
                case 'minus':
                  return '-';
                default:
                  return t;
              }
            },
            getLeftSidePathName: function(e, t) {
              if (t.expressions) return ['expressions', 0];
              if (t.left) return ['left'];
              if (t.test) return ['test'];
              if (t.object) return ['object'];
              if (t.callee) return ['callee'];
              if (t.tag) return ['tag'];
              if (t.argument) return ['argument'];
              if (t.expression) return ['expression'];
              throw new Error('Unexpected node has no left side', t);
            },
            getTypeScriptMappedTypeModifier: function(e, t) {
              return '+' === e ? '+' + t : '-' === e ? '-' + t : t;
            },
            hasDanglingComments: function(e) {
              return (
                e.comments &&
                e.comments.some(function(e) {
                  return !e.leading && !e.trailing;
                })
              );
            },
            hasFlowAnnotationComment: function(e) {
              return e && e[0].value.match(Qd);
            },
            hasFlowShorthandAnnotationComment: function(e) {
              return (
                e.extra &&
                e.extra.parenthesized &&
                e.trailingComments &&
                e.trailingComments[0].value.match(Gd)
              );
            },
            hasLeadingComment: function(e) {
              return (
                e.comments &&
                e.comments.some(function(e) {
                  return e.leading;
                })
              );
            },
            hasLeadingOwnLineComment: mm,
            hasNakedLeftSide: em,
            hasNewlineBetweenOrAfterDecorators: function(e, t) {
              return (
                Jd(
                  t.originalText,
                  t.locStart(e.decorators[0]),
                  t.locEnd(qd(e.decorators)),
                ) || Yd(t.originalText, t.locEnd(qd(e.decorators)))
              );
            },
            hasNgSideEffect: function(e) {
              return Zd(e.getValue(), function(e) {
                switch (e.type) {
                  case void 0:
                    return !1;
                  case 'CallExpression':
                  case 'OptionalCallExpression':
                  case 'AssignmentExpression':
                    return !0;
                }
              });
            },
            hasNode: Zd,
            hasPrettierIgnore: function(e) {
              return (
                Kd(e) ||
                (function(e) {
                  var t = e.getValue(),
                    n = e.getParentNode();
                  if (!(n && t && om(t) && om(n))) return !1;
                  for (var r = null, i = n.children.indexOf(t); i > 0; i--) {
                    var a = n.children[i - 1];
                    if ('JSXText' !== a.type || dm(a)) {
                      r = a;
                      break;
                    }
                  }
                  return (
                    r &&
                    'JSXExpressionContainer' === r.type &&
                    'JSXEmptyExpression' === r.expression.type &&
                    r.expression.comments &&
                    r.expression.comments.find(function(e) {
                      return 'prettier-ignore' === e.value.trim();
                    })
                  );
                })(e)
              );
            },
            hasTrailingComment: function(e) {
              return (
                e.comments &&
                e.comments.some(function(e) {
                  return e.trailing;
                })
              );
            },
            identity: function(e) {
              return e;
            },
            isBinaryish: function(e) {
              return (
                'BinaryExpression' === e.type ||
                'LogicalExpression' === e.type ||
                'NGPipeExpression' === e.type
              );
            },
            isCallOrOptionalCallExpression: pm,
            isEmptyJSXElement: function(e) {
              if (0 === e.children.length) return !0;
              if (e.children.length > 1) return !1;
              var t = e.children[0];
              return tm(t) && !dm(t);
            },
            isFlowAnnotationComment: function(e, t, n) {
              var r = n.locStart(t),
                i = Hd(e, n.locEnd(t));
              return '/*' === e.substr(r, 2) && '*/' === e.substr(i, 2);
            },
            isFunctionCompositionArgs: function(e) {
              if (e.length <= 1) return !1;
              var t = 0,
                n = !0,
                r = !1,
                i = void 0;
              try {
                for (
                  var a, o = e[Symbol.iterator]();
                  !(n = (a = o.next()).done);
                  n = !0
                ) {
                  var s = a.value;
                  if (im(s)) {
                    if ((t += 1) > 1) return !0;
                  } else if (pm(s)) {
                    var u = !0,
                      c = !1,
                      l = void 0;
                    try {
                      for (
                        var p, f = s.arguments[Symbol.iterator]();
                        !(u = (p = f.next()).done);
                        u = !0
                      )
                        if (im(p.value)) return !0;
                    } catch (e) {
                      (c = !0), (l = e);
                    } finally {
                      try {
                        u || null == f.return || f.return();
                      } finally {
                        if (c) throw l;
                      }
                    }
                  }
                }
              } catch (e) {
                (r = !0), (i = e);
              } finally {
                try {
                  n || null == o.return || o.return();
                } finally {
                  if (r) throw i;
                }
              }
              return !1;
            },
            isFunctionNotation: cm,
            isFunctionOrArrowExpression: im,
            isGetterOrSetter: sm,
            isJestEachTemplateLiteral: function(e, t) {
              var n = /^[xf]?(describe|it|test)$/;
              return (
                'TaggedTemplateExpression' === t.type &&
                t.quasi === e &&
                'MemberExpression' === t.tag.type &&
                'Identifier' === t.tag.property.type &&
                'each' === t.tag.property.name &&
                (('Identifier' === t.tag.object.type &&
                  n.test(t.tag.object.name)) ||
                  ('MemberExpression' === t.tag.object.type &&
                    'Identifier' === t.tag.object.property.type &&
                    ('only' === t.tag.object.property.name ||
                      'skip' === t.tag.object.property.name) &&
                    'Identifier' === t.tag.object.object.type &&
                    n.test(t.tag.object.object.name)))
              );
            },
            isJSXNode: om,
            isJSXWhitespaceExpression: function(e) {
              return (
                'JSXExpressionContainer' === e.type &&
                tm(e.expression) &&
                ' ' === e.expression.value &&
                !e.expression.comments
              );
            },
            isLastStatement: function(e) {
              var t = e.getParentNode();
              if (!t) return !0;
              var n = e.getValue(),
                r = (t.body || t.consequent).filter(function(e) {
                  return 'EmptyStatement' !== e.type;
                });
              return r && r[r.length - 1] === n;
            },
            isLiteral: tm,
            isLongCurriedCallExpression: function(e) {
              var t = e.getValue(),
                n = e.getParentNode();
              return (
                pm(t) &&
                pm(n) &&
                n.callee === t &&
                t.arguments.length > n.arguments.length &&
                n.arguments.length > 0
              );
            },
            isMeaningfulJSXText: dm,
            isMemberExpressionChain: function e(t) {
              return (
                ('MemberExpression' === t.type ||
                  'OptionalMemberExpression' === t.type) &&
                ('Identifier' === t.object.type || e(t.object))
              );
            },
            isMemberish: function(e) {
              return (
                'MemberExpression' === e.type ||
                'OptionalMemberExpression' === e.type ||
                ('BindExpression' === e.type && e.object)
              );
            },
            isNgForOf: function(e, t, n) {
              return (
                'NGMicrosyntaxKeyedExpression' === e.type &&
                'of' === e.key.name &&
                1 === t &&
                'NGMicrosyntaxLet' === n.body[0].type &&
                null === n.body[0].value
              );
            },
            isNumericLiteral: nm,
            isObjectType: function(e) {
              return (
                'ObjectTypeAnnotation' === e.type || 'TSTypeLiteral' === e.type
              );
            },
            isObjectTypePropertyAFunction: function(e, t) {
              return !(
                ('ObjectTypeProperty' !== e.type &&
                  'ObjectTypeInternalSlot' !== e.type) ||
                'FunctionTypeAnnotation' !== e.value.type ||
                e.static ||
                cm(e, t)
              );
            },
            isSimpleFlowType: function(e) {
              return (
                e &&
                -1 !==
                  [
                    'AnyTypeAnnotation',
                    'NullLiteralTypeAnnotation',
                    'GenericTypeAnnotation',
                    'ThisTypeAnnotation',
                    'NumberTypeAnnotation',
                    'VoidTypeAnnotation',
                    'EmptyTypeAnnotation',
                    'MixedTypeAnnotation',
                    'BooleanTypeAnnotation',
                    'BooleanLiteralTypeAnnotation',
                    'StringTypeAnnotation',
                  ].indexOf(e.type) &&
                !('GenericTypeAnnotation' === e.type && e.typeParameters)
              );
            },
            isSimpleTemplateLiteral: function(e) {
              return (
                0 !== e.expressions.length &&
                e.expressions.every(function(e) {
                  if (e.comments) return !1;
                  if ('Identifier' === e.type || 'ThisExpression' === e.type)
                    return !0;
                  if (
                    'MemberExpression' === e.type ||
                    'OptionalMemberExpression' === e.type
                  ) {
                    for (
                      var t = e;
                      'MemberExpression' === t.type ||
                      'OptionalMemberExpression' === t.type;

                    ) {
                      if (
                        'Identifier' !== t.property.type &&
                        'Literal' !== t.property.type &&
                        'StringLiteral' !== t.property.type &&
                        'NumericLiteral' !== t.property.type
                      )
                        return !1;
                      if ((t = t.object).comments) return !1;
                    }
                    return (
                      'Identifier' === t.type || 'ThisExpression' === t.type
                    );
                  }
                  return !1;
                })
              );
            },
            isStringLiteral: rm,
            isStringPropSafeToCoerceToIdentifier: function(e, t) {
              return (
                rm(e.key) &&
                Xd(e.key.value) &&
                'json' !== t.parser &&
                !('typescript' === t.parser && 'ClassProperty' === e.type)
              );
            },
            isTemplateOnItsOwnLine: function(e, t, n) {
              return (
                (('TemplateLiteral' === e.type && gm(e)) ||
                  ('TaggedTemplateExpression' === e.type && gm(e.quasi))) &&
                !Yd(t, n.locStart(e), { backwards: !0 })
              );
            },
            isTestCall: function e(t, n) {
              if ('CallExpression' !== t.type) return !1;
              if (1 === t.arguments.length) {
                if (am(t) && n && e(n)) return im(t.arguments[0]);
                if (
                  (function(e) {
                    return (
                      'Identifier' === e.callee.type &&
                      /^(before|after)(Each|All)$/.test(e.callee.name) &&
                      1 === e.arguments.length
                    );
                  })(t)
                )
                  return am(t.arguments[0]);
              } else if (
                (2 === t.arguments.length || 3 === t.arguments.length) &&
                (('Identifier' === t.callee.type && lm.test(t.callee.name)) ||
                  (('MemberExpression' === (r = t).callee.type ||
                    'OptionalMemberExpression' === r.callee.type) &&
                    'Identifier' === r.callee.object.type &&
                    'Identifier' === r.callee.property.type &&
                    lm.test(r.callee.object.name) &&
                    ('only' === r.callee.property.name ||
                      'skip' === r.callee.property.name))) &&
                ((function(e) {
                  return 'TemplateLiteral' === e.type;
                })(t.arguments[0]) ||
                  rm(t.arguments[0]))
              )
                return (
                  !(t.arguments[2] && !nm(t.arguments[2])) &&
                  ((2 === t.arguments.length
                    ? im(t.arguments[1])
                    : (function(e) {
                        return (
                          'FunctionExpression' === e.type ||
                          ('ArrowFunctionExpression' === e.type &&
                            'BlockStatement' === e.body.type)
                        );
                      })(t.arguments[1]) &&
                      t.arguments[1].params.length <= 1) ||
                    am(t.arguments[1]))
                );
              var r;
              return !1;
            },
            isTheOnlyJSXElementInMarkdown: function(e, t) {
              if ('markdown' !== e.parentParser && 'mdx' !== e.parentParser)
                return !1;
              var n = t.getNode();
              if (!n.expression || !om(n.expression)) return !1;
              var r = t.getParentNode();
              return 'Program' === r.type && 1 == r.body.length;
            },
            isTSXFile: function(e) {
              return e.filepath && /\.tsx$/i.test(e.filepath);
            },
            isTypeAnnotationAFunction: function(e, t) {
              return !(
                ('TypeAnnotation' !== e.type &&
                  'TSTypeAnnotation' !== e.type) ||
                'FunctionTypeAnnotation' !== e.typeAnnotation.type ||
                e.static ||
                um(e, e.typeAnnotation, t)
              );
            },
            matchJsxWhitespaceRegex: fm,
            needsHardlineAfterDanglingComment: function(e) {
              if (!e.comments) return !1;
              var t = qd(
                e.comments.filter(function(e) {
                  return !e.leading && !e.trailing;
                }),
              );
              return t && !dd.isBlockComment(t);
            },
            rawText: ym,
            returnArgumentHasLeadingComment: function(e, t) {
              if (mm(e.originalText, t, e)) return !0;
              if (em(t))
                for (
                  var n, r = t;
                  (n = (i = r).expressions
                    ? i.expressions[0]
                    : i.left ||
                      i.test ||
                      i.callee ||
                      i.object ||
                      i.tag ||
                      i.argument ||
                      i.expression);

                )
                  if (((r = n), mm(e.originalText, r, e))) return !0;
              var i;
              return !1;
            },
          },
          Dm = vm.getLeftSidePathName,
          Em = vm.hasFlowShorthandAnnotationComment,
          Cm = vm.hasNakedLeftSide,
          bm = vm.hasNode;
        function xm(e, t) {
          var n = t.getValue();
          return (
            i(n) &&
            (r(n) ||
              (function e(n) {
                var a = t.getParentNode(n);
                return !(!a || i(a)) && (r(a) || e(n + 1));
              })(0))
          );
          function r(e) {
            return (
              e.comments &&
              e.comments.some(function(e) {
                return (
                  e.leading &&
                  dd.isBlockComment(e) &&
                  (function(e) {
                    var t = e
                      .trim()
                      .split('\n')
                      .map(function(e) {
                        return e.replace(/^[\s*]+/, '');
                      })
                      .join(' ')
                      .trim();
                    if (!/^@type\s*\{[^]+\}$/.test(t)) return !1;
                    var n = !1,
                      r = 0,
                      i = !0,
                      a = !1,
                      o = void 0;
                    try {
                      for (
                        var s, u = t[Symbol.iterator]();
                        !(i = (s = u.next()).done);
                        i = !0
                      ) {
                        var c = s.value;
                        if ('{' === c) {
                          if (n) return !1;
                          r++;
                        } else if ('}' === c) {
                          if (0 === r) return !1;
                          0 == --r && (n = !0);
                        }
                      }
                    } catch (e) {
                      (a = !0), (o = e);
                    } finally {
                      try {
                        i || null == u.return || u.return();
                      } finally {
                        if (a) throw o;
                      }
                    }
                    return 0 === r;
                  })(e.value)
                );
              })
            );
          }
          function i(e) {
            return e.extra && e.extra.parenthesized;
          }
        }
        function Am(e, t) {
          var n = e.getParentNode();
          if (!n) return !1;
          var r = e.getName(),
            i = e.getNode();
          if (e.getValue() !== i) return !1;
          if (
            t.__isInHtmlInterpolation &&
            !t.bracketSpacing &&
            (function(e) {
              switch (e.type) {
                case 'ObjectExpression':
                  return !0;
                default:
                  return !1;
              }
            })(i) &&
            Sm(e)
          )
            return !0;
          if (
            (function(e) {
              return (
                'BlockStatement' === e.type ||
                'BreakStatement' === e.type ||
                'ClassBody' === e.type ||
                'ClassDeclaration' === e.type ||
                'ClassMethod' === e.type ||
                'ClassProperty' === e.type ||
                'ClassPrivateProperty' === e.type ||
                'ContinueStatement' === e.type ||
                'DebuggerStatement' === e.type ||
                'DeclareClass' === e.type ||
                'DeclareExportAllDeclaration' === e.type ||
                'DeclareExportDeclaration' === e.type ||
                'DeclareFunction' === e.type ||
                'DeclareInterface' === e.type ||
                'DeclareModule' === e.type ||
                'DeclareModuleExports' === e.type ||
                'DeclareVariable' === e.type ||
                'DoWhileStatement' === e.type ||
                'EnumDeclaration' === e.type ||
                'ExportAllDeclaration' === e.type ||
                'ExportDefaultDeclaration' === e.type ||
                'ExportNamedDeclaration' === e.type ||
                'ExpressionStatement' === e.type ||
                'ForAwaitStatement' === e.type ||
                'ForInStatement' === e.type ||
                'ForOfStatement' === e.type ||
                'ForStatement' === e.type ||
                'FunctionDeclaration' === e.type ||
                'IfStatement' === e.type ||
                'ImportDeclaration' === e.type ||
                'InterfaceDeclaration' === e.type ||
                'LabeledStatement' === e.type ||
                'MethodDefinition' === e.type ||
                'ReturnStatement' === e.type ||
                'SwitchStatement' === e.type ||
                'ThrowStatement' === e.type ||
                'TryStatement' === e.type ||
                'TSDeclareFunction' === e.type ||
                'TSEnumDeclaration' === e.type ||
                'TSImportEqualsDeclaration' === e.type ||
                'TSInterfaceDeclaration' === e.type ||
                'TSModuleDeclaration' === e.type ||
                'TSNamespaceExportDeclaration' === e.type ||
                'TypeAlias' === e.type ||
                'VariableDeclaration' === e.type ||
                'WhileStatement' === e.type ||
                'WithStatement' === e.type
              );
            })(i)
          )
            return !1;
          if (xm(t.originalText, e)) return !0;
          if ('flow' !== t.parser && Em(e.getValue())) return !0;
          if ('Identifier' === i.type)
            return !!(
              i.extra &&
              i.extra.parenthesized &&
              /^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(i.name)
            );
          if ('ParenthesizedExpression' === n.type) return !1;
          if (
            !(
              ('ClassDeclaration' !== n.type && 'ClassExpression' !== n.type) ||
              n.superClass !== i ||
              ('ArrowFunctionExpression' !== i.type &&
                'AssignmentExpression' !== i.type &&
                'AwaitExpression' !== i.type &&
                'BinaryExpression' !== i.type &&
                'ConditionalExpression' !== i.type &&
                'LogicalExpression' !== i.type &&
                'NewExpression' !== i.type &&
                'ObjectExpression' !== i.type &&
                'ParenthesizedExpression' !== i.type &&
                'SequenceExpression' !== i.type &&
                'TaggedTemplateExpression' !== i.type &&
                'UnaryExpression' !== i.type &&
                'UpdateExpression' !== i.type &&
                'YieldExpression' !== i.type)
            )
          )
            return !0;
          if ('ExportDefaultDeclaration' === n.type)
            return (function e(t, n) {
              var r = t.getValue(),
                i = t.getParentNode();
              return 'FunctionExpression' === r.type ||
                'ClassExpression' === r.type
                ? 'ExportDefaultDeclaration' === i.type || !Am(t, n)
                : !(
                    !Cm(r) ||
                    ('ExportDefaultDeclaration' !== i.type && Am(t, n))
                  ) &&
                    t.call.apply(
                      t,
                      [
                        function(t) {
                          return e(t, n);
                        },
                      ].concat(Dm(t, r)),
                    );
            })(e, t);
          if ('Decorator' === n.type && n.expression === i) {
            for (var a = !1, o = !1, s = i; s; )
              switch (s.type) {
                case 'MemberExpression':
                  (o = !0), (s = s.object);
                  break;
                case 'CallExpression':
                  if (o || a) return !0;
                  (a = !0), (s = s.callee);
                  break;
                case 'Identifier':
                  return !1;
                default:
                  return !0;
              }
            return !0;
          }
          if (
            ('ArrowFunctionExpression' === n.type &&
              n.body === i &&
              'SequenceExpression' !== i.type &&
              Oi.startsWithNoLookaheadToken(i, !1)) ||
            ('ExpressionStatement' === n.type &&
              Oi.startsWithNoLookaheadToken(i, !0))
          )
            return !0;
          switch (i.type) {
            case 'SpreadElement':
            case 'SpreadProperty':
              return (
                'MemberExpression' === n.type &&
                'object' === r &&
                n.object === i
              );
            case 'UpdateExpression':
              if ('UnaryExpression' === n.type)
                return (
                  i.prefix &&
                  (('++' === i.operator && '+' === n.operator) ||
                    ('--' === i.operator && '-' === n.operator))
                );
            case 'UnaryExpression':
              switch (n.type) {
                case 'UnaryExpression':
                  return (
                    i.operator === n.operator &&
                    ('+' === i.operator || '-' === i.operator)
                  );
                case 'BindExpression':
                  return !0;
                case 'MemberExpression':
                case 'OptionalMemberExpression':
                  return 'object' === r;
                case 'TaggedTemplateExpression':
                  return !0;
                case 'NewExpression':
                case 'CallExpression':
                case 'OptionalCallExpression':
                  return 'callee' === r;
                case 'BinaryExpression':
                  return '**' === n.operator && 'left' === r;
                case 'TSNonNullExpression':
                  return !0;
                default:
                  return !1;
              }
            case 'BinaryExpression':
              if ('UpdateExpression' === n.type) return !0;
              if (
                'in' === i.operator &&
                (function(t) {
                  for (var n = 0; t; ) {
                    var r = e.getParentNode(n++);
                    if (!r) return !1;
                    if ('ForStatement' === r.type && r.init === t) return !0;
                    t = r;
                  }
                  return !1;
                })(i)
              )
                return !0;
            case 'TSTypeAssertion':
            case 'TSAsExpression':
            case 'LogicalExpression':
              switch (n.type) {
                case 'ConditionalExpression':
                  return 'TSAsExpression' === i.type;
                case 'CallExpression':
                case 'NewExpression':
                case 'OptionalCallExpression':
                  return 'callee' === r;
                case 'ClassExpression':
                case 'ClassDeclaration':
                  return 'superClass' === r && n.superClass === i;
                case 'TSTypeAssertion':
                case 'TaggedTemplateExpression':
                case 'UnaryExpression':
                case 'JSXSpreadAttribute':
                case 'SpreadElement':
                case 'SpreadProperty':
                case 'BindExpression':
                case 'AwaitExpression':
                case 'TSAsExpression':
                case 'TSNonNullExpression':
                case 'UpdateExpression':
                  return !0;
                case 'MemberExpression':
                case 'OptionalMemberExpression':
                  return 'object' === r;
                case 'AssignmentExpression':
                  return (
                    n.left === i &&
                    ('TSTypeAssertion' === i.type ||
                      'TSAsExpression' === i.type)
                  );
                case 'LogicalExpression':
                  if ('LogicalExpression' === i.type)
                    return n.operator !== i.operator;
                case 'BinaryExpression':
                  if (!i.operator && 'TSTypeAssertion' !== i.type) return !0;
                  var u = n.operator,
                    c = Oi.getPrecedence(u),
                    l = i.operator,
                    p = Oi.getPrecedence(l);
                  return (
                    c > p ||
                    (c === p && 'right' === r
                      ? (Wr.strictEqual(n.right, i), !0)
                      : (c === p && !Oi.shouldFlatten(u, l)) ||
                        (c < p && '%' === l
                          ? '+' === u || '-' === u
                          : !!Oi.isBitwiseOperator(u)))
                  );
                default:
                  return !1;
              }
            case 'SequenceExpression':
              switch (n.type) {
                case 'ReturnStatement':
                case 'ForStatement':
                  return !1;
                case 'ExpressionStatement':
                  return 'expression' !== r;
                case 'ArrowFunctionExpression':
                  return 'body' !== r;
                default:
                  return !0;
              }
            case 'YieldExpression':
              if (
                'UnaryExpression' === n.type ||
                'AwaitExpression' === n.type ||
                'TSAsExpression' === n.type ||
                'TSNonNullExpression' === n.type
              )
                return !0;
            case 'AwaitExpression':
              switch (n.type) {
                case 'TaggedTemplateExpression':
                case 'UnaryExpression':
                case 'BinaryExpression':
                case 'LogicalExpression':
                case 'SpreadElement':
                case 'SpreadProperty':
                case 'TSAsExpression':
                case 'TSNonNullExpression':
                case 'BindExpression':
                  return !0;
                case 'MemberExpression':
                case 'OptionalMemberExpression':
                  return 'object' === r;
                case 'NewExpression':
                case 'CallExpression':
                case 'OptionalCallExpression':
                  return 'callee' === r;
                case 'ConditionalExpression':
                  return n.test === i;
                default:
                  return !1;
              }
            case 'TSConditionalType':
              if ('TSConditionalType' === n.type && i === n.extendsType)
                return !0;
            case 'TSFunctionType':
            case 'TSConstructorType':
              if ('TSConditionalType' === n.type && i === n.checkType)
                return !0;
            case 'TSUnionType':
            case 'TSIntersectionType':
              if ('TSUnionType' === n.type || 'TSIntersectionType' === n.type)
                return !0;
            case 'TSTypeOperator':
            case 'TSInferType':
              return (
                'TSArrayType' === n.type ||
                'TSOptionalType' === n.type ||
                'TSRestType' === n.type ||
                ('TSIndexedAccessType' === n.type && i === n.objectType) ||
                'TSTypeOperator' === n.type
              );
            case 'ArrayTypeAnnotation':
              return 'NullableTypeAnnotation' === n.type;
            case 'IntersectionTypeAnnotation':
            case 'UnionTypeAnnotation':
              return (
                'ArrayTypeAnnotation' === n.type ||
                'NullableTypeAnnotation' === n.type ||
                'IntersectionTypeAnnotation' === n.type ||
                'UnionTypeAnnotation' === n.type
              );
            case 'NullableTypeAnnotation':
              return 'ArrayTypeAnnotation' === n.type;
            case 'FunctionTypeAnnotation':
              var f =
                'NullableTypeAnnotation' === n.type ? e.getParentNode(1) : n;
              return (
                'UnionTypeAnnotation' === f.type ||
                'IntersectionTypeAnnotation' === f.type ||
                'ArrayTypeAnnotation' === f.type ||
                'NullableTypeAnnotation' === f.type
              );
            case 'StringLiteral':
            case 'NumericLiteral':
            case 'Literal':
              if (
                'string' == typeof i.value &&
                'ExpressionStatement' === n.type &&
                (('typescript' !== t.parser && !n.directive) ||
                  ('typescript' === t.parser &&
                    '(' === t.originalText.substr(t.locStart(i) - 1, 1)))
              ) {
                var h = e.getParentNode(1);
                return 'Program' === h.type || 'BlockStatement' === h.type;
              }
              return (
                'MemberExpression' === n.type &&
                'number' == typeof i.value &&
                'object' === r &&
                n.object === i
              );
            case 'AssignmentExpression':
              var d = e.getParentNode(1);
              return !(
                ('ArrowFunctionExpression' !== n.type || n.body !== i) &&
                (('ClassProperty' === n.type && n.key === i && n.computed) ||
                  ('TSPropertySignature' === n.type && n.name === i) ||
                  ('ForStatement' === n.type &&
                    (n.init === i || n.update === i)) ||
                  ('ExpressionStatement' === n.type
                    ? 'ObjectPattern' !== i.left.type
                    : ('TSPropertySignature' === n.type && n.key === i) ||
                      'AssignmentExpression' === n.type ||
                      ('SequenceExpression' === n.type &&
                        d &&
                        'ForStatement' === d.type &&
                        (d.init === n || d.update === n)) ||
                      ('Property' === n.type && n.value === i) ||
                      'NGChainedExpression' === n.type))
              );
            case 'ConditionalExpression':
              switch (n.type) {
                case 'TaggedTemplateExpression':
                case 'UnaryExpression':
                case 'SpreadElement':
                case 'SpreadProperty':
                case 'BinaryExpression':
                case 'LogicalExpression':
                case 'NGPipeExpression':
                case 'ExportDefaultDeclaration':
                case 'AwaitExpression':
                case 'JSXSpreadAttribute':
                case 'TSTypeAssertion':
                case 'TypeCastExpression':
                case 'TSAsExpression':
                case 'TSNonNullExpression':
                  return !0;
                case 'NewExpression':
                case 'CallExpression':
                case 'OptionalCallExpression':
                  return 'callee' === r;
                case 'ConditionalExpression':
                  return 'test' === r && n.test === i;
                case 'MemberExpression':
                case 'OptionalMemberExpression':
                  return 'object' === r;
                default:
                  return !1;
              }
            case 'FunctionExpression':
              switch (n.type) {
                case 'NewExpression':
                case 'CallExpression':
                case 'OptionalCallExpression':
                  return 'callee' === r;
                case 'TaggedTemplateExpression':
                  return !0;
                default:
                  return !1;
              }
            case 'ArrowFunctionExpression':
              switch (n.type) {
                case 'NewExpression':
                case 'CallExpression':
                case 'OptionalCallExpression':
                  return 'callee' === r;
                case 'MemberExpression':
                case 'OptionalMemberExpression':
                  return 'object' === r;
                case 'TSAsExpression':
                case 'BindExpression':
                case 'TaggedTemplateExpression':
                case 'UnaryExpression':
                case 'LogicalExpression':
                case 'BinaryExpression':
                case 'AwaitExpression':
                case 'TSTypeAssertion':
                  return !0;
                case 'ConditionalExpression':
                  return 'test' === r;
                default:
                  return !1;
              }
            case 'ClassExpression':
              switch (n.type) {
                case 'NewExpression':
                  return 'callee' === r && n.callee === i;
                default:
                  return !1;
              }
            case 'OptionalMemberExpression':
            case 'OptionalCallExpression':
              if (
                (('MemberExpression' === n.type && 'object' === r) ||
                  ('CallExpression' === n.type && 'callee' === r)) &&
                ('flow' !== t.parser || n.range[0] !== i.range[0])
              )
                return !0;
            case 'CallExpression':
            case 'MemberExpression':
            case 'TaggedTemplateExpression':
            case 'TSNonNullExpression':
              if (
                ('BindExpression' === n.type || 'NewExpression' === n.type) &&
                'callee' === r
              )
                for (var m = i; m; )
                  switch (m.type) {
                    case 'CallExpression':
                    case 'OptionalCallExpression':
                      return !0;
                    case 'MemberExpression':
                    case 'OptionalMemberExpression':
                    case 'BindExpression':
                      m = m.object;
                      break;
                    case 'TaggedTemplateExpression':
                      m = m.tag;
                      break;
                    case 'TSNonNullExpression':
                      m = m.expression;
                      break;
                    default:
                      return !1;
                  }
              return !1;
            case 'BindExpression':
              return (
                (('BindExpression' === n.type || 'NewExpression' === n.type) &&
                  'callee' === r) ||
                (('MemberExpression' === n.type ||
                  'OptionalMemberExpression' === n.type) &&
                  'object' === r)
              );
            case 'NGPipeExpression':
              return !(
                'NGRoot' === n.type ||
                'NGMicrosyntaxExpression' === n.type ||
                'ObjectProperty' === n.type ||
                'ArrayExpression' === n.type ||
                (('CallExpression' === n.type ||
                  'OptionalCallExpression' === n.type) &&
                  n.arguments[r] === i) ||
                ('NGPipeExpression' === n.type && 'right' === r) ||
                ('MemberExpression' === n.type && 'property' === r) ||
                'AssignmentExpression' === n.type
              );
            case 'JSXFragment':
            case 'JSXElement':
              return (
                'callee' === r ||
                ('ArrayExpression' !== n.type &&
                  'ArrowFunctionExpression' !== n.type &&
                  'AssignmentExpression' !== n.type &&
                  'AssignmentPattern' !== n.type &&
                  'BinaryExpression' !== n.type &&
                  'CallExpression' !== n.type &&
                  'ConditionalExpression' !== n.type &&
                  'ExpressionStatement' !== n.type &&
                  'JsExpressionRoot' !== n.type &&
                  'JSXAttribute' !== n.type &&
                  'JSXElement' !== n.type &&
                  'JSXExpressionContainer' !== n.type &&
                  'JSXFragment' !== n.type &&
                  'LogicalExpression' !== n.type &&
                  'ObjectProperty' !== n.type &&
                  'OptionalCallExpression' !== n.type &&
                  'Property' !== n.type &&
                  'ReturnStatement' !== n.type &&
                  'TypeCastExpression' !== n.type &&
                  'VariableDeclarator' !== n.type)
              );
            case 'TypeAnnotation':
              return (
                'returnType' === r &&
                'ArrowFunctionExpression' === n.type &&
                (function(e) {
                  return bm(e, function(e) {
                    return (
                      ('ObjectTypeAnnotation' === e.type &&
                        bm(e, function(e) {
                          return 'FunctionTypeAnnotation' === e.type || void 0;
                        })) ||
                      void 0
                    );
                  });
                })(i)
              );
          }
          return !1;
        }
        function Sm(e) {
          var t = e.getValue(),
            n = e.getParentNode(),
            r = e.getName();
          switch (n.type) {
            case 'NGPipeExpression':
              if (
                'number' == typeof r &&
                n.arguments[r] === t &&
                n.arguments.length - 1 === r
              )
                return e.callParent(Sm);
              break;
            case 'ObjectProperty':
              if ('value' === r) {
                var i = e.getParentNode(1);
                return i.properties[i.properties.length - 1] === n;
              }
              break;
            case 'BinaryExpression':
            case 'LogicalExpression':
              if ('right' === r) return e.callParent(Sm);
              break;
            case 'ConditionalExpression':
              if ('alternate' === r) return e.callParent(Sm);
              break;
            case 'UnaryExpression':
              if (n.prefix) return e.callParent(Sm);
          }
          return !1;
        }
        var wm = Am,
          Fm = ea.builders,
          km = Fm.concat,
          Tm = Fm.join,
          _m = Fm.line,
          Om = function e(t) {
            switch (t.type) {
              case 'MemberExpression':
                switch (t.property.type) {
                  case 'Identifier':
                  case 'NumericLiteral':
                  case 'StringLiteral':
                    return e(t.object);
                }
                return !1;
              case 'Identifier':
                return !0;
              default:
                return !1;
            }
          },
          Nm = function(e, t, n) {
            var r = e.getValue();
            if (
              (t.__onHtmlBindingRoot &&
                null === e.getName() &&
                t.__onHtmlBindingRoot(r),
              'File' === r.type)
            )
              return t.__isVueForBindingLeft
                ? e.call(
                    function(e) {
                      var t = e.getValue().params;
                      return km([
                        t.length > 1 ? '(' : '',
                        Tm(km([',', _m]), e.map(n, 'params')),
                        t.length > 1 ? ')' : '',
                      ]);
                    },
                    'program',
                    'body',
                    0,
                  )
                : t.__isVueSlotScope
                ? e.call(
                    function(e) {
                      return Tm(km([',', _m]), e.map(n, 'params'));
                    },
                    'program',
                    'body',
                    0,
                  )
                : void 0;
          },
          Bm = function(e, t) {
            switch (t.parser) {
              case 'json':
              case 'json5':
              case 'json-stringify':
              case '__js_expression':
              case '__vue_expression':
                return Object.assign({}, e, {
                  type: t.parser.startsWith('__')
                    ? 'JsExpressionRoot'
                    : 'JsonRoot',
                  node: e,
                  comments: [],
                });
              default:
                return e;
            }
          },
          Im = Oi.getParentExportDeclaration,
          Pm = Oi.isExportDeclaration,
          Mm = Oi.shouldFlatten,
          Lm = Oi.getNextNonSpaceNonCommentCharacter,
          Rm = Oi.hasNewline,
          jm = Oi.hasNewlineInRange,
          Um = Oi.getLast,
          Vm = Oi.getStringWidth,
          Wm = Oi.printString,
          $m = Oi.printNumber,
          qm = Oi.hasIgnoreComment,
          Ym = Oi.hasNodeIgnoreComment,
          Jm = Oi.getPenultimate,
          Km = Oi.startsWithNoLookaheadToken,
          zm = Oi.getIndentSize,
          Hm = Oi.matchAncestorTypes,
          Xm = Oi.getPreferredQuote,
          Gm = na.isNextLineEmpty,
          Qm = na.isNextLineEmptyAfterIndex,
          Zm = na.getNextNonSpaceNonCommentCharacterIndex,
          eg = vo.insertPragma,
          tg = Nm,
          ng = Om,
          rg = vm.classChildNeedsASIProtection,
          ig = vm.classPropMayCauseASIProblems,
          ag = vm.conditionalExpressionChainContainsJSX,
          og = vm.getFlowVariance,
          sg = vm.getLeftSidePathName,
          ug = vm.getTypeScriptMappedTypeModifier,
          cg = vm.hasDanglingComments,
          lg = vm.hasFlowAnnotationComment,
          pg = vm.hasFlowShorthandAnnotationComment,
          fg = vm.hasLeadingComment,
          hg = vm.hasLeadingOwnLineComment,
          dg = vm.hasNakedLeftSide,
          mg = vm.hasNewlineBetweenOrAfterDecorators,
          gg = vm.hasNgSideEffect,
          yg = vm.hasPrettierIgnore,
          vg = vm.hasTrailingComment,
          Dg = vm.identity,
          Eg = vm.isBinaryish,
          Cg = vm.isCallOrOptionalCallExpression,
          bg = vm.isEmptyJSXElement,
          xg = vm.isFlowAnnotationComment,
          Ag = vm.isFunctionCompositionArgs,
          Sg = vm.isFunctionNotation,
          wg = vm.isFunctionOrArrowExpression,
          Fg = vm.isGetterOrSetter,
          kg = vm.isJestEachTemplateLiteral,
          Tg = vm.isJSXNode,
          _g = vm.isJSXWhitespaceExpression,
          Og = vm.isLastStatement,
          Ng = vm.isLiteral,
          Bg = vm.isLongCurriedCallExpression,
          Ig = vm.isMeaningfulJSXText,
          Pg = vm.isMemberExpressionChain,
          Mg = vm.isMemberish,
          Lg = vm.isNgForOf,
          Rg = vm.isNumericLiteral,
          jg = vm.isObjectType,
          Ug = vm.isObjectTypePropertyAFunction,
          Vg = vm.isSimpleFlowType,
          Wg = vm.isSimpleTemplateLiteral,
          $g = vm.isStringLiteral,
          qg = vm.isStringPropSafeToCoerceToIdentifier,
          Yg = vm.isTemplateOnItsOwnLine,
          Jg = vm.isTestCall,
          Kg = vm.isTheOnlyJSXElementInMarkdown,
          zg = vm.isTSXFile,
          Hg = vm.isTypeAnnotationAFunction,
          Xg = vm.matchJsxWhitespaceRegex,
          Gg = vm.needsHardlineAfterDanglingComment,
          Qg = vm.rawText,
          Zg = vm.returnArgumentHasLeadingComment,
          ey = new WeakMap(),
          ty = ea.builders,
          ny = ty.concat,
          ry = ty.join,
          iy = ty.line,
          ay = ty.hardline,
          oy = ty.softline,
          sy = ty.literalline,
          uy = ty.group,
          cy = ty.indent,
          ly = ty.align,
          py = ty.conditionalGroup,
          fy = ty.fill,
          hy = ty.ifBreak,
          dy = ty.breakParent,
          my = ty.lineSuffixBoundary,
          gy = ty.addAlignmentToDoc,
          yy = ty.dedent,
          vy = ea.utils,
          Dy = vy.willBreak,
          Ey = vy.isLineNext,
          Cy = vy.isEmpty,
          by = vy.removeLines,
          xy = ea.printer.printDocToString,
          Ay = 0;
        function Sy(e, t) {
          switch (((t = t || 'es5'), e.trailingComma)) {
            case 'all':
              if ('all' === t) return !0;
            case 'es5':
              if ('es5' === t) return !0;
            case 'none':
            default:
              return !1;
          }
        }
        function wy(e, t, n) {
          var r = e.getValue();
          return uy(ny([ry(iy, e.map(n, 'decorators')), mg(r, t) ? ay : iy]));
        }
        function Fy(e, t, n, r) {
          var i,
            a,
            o = e.getValue(),
            s = o[r.testNodePropertyName],
            u = o[r.consequentNodePropertyName],
            c = o[r.alternateNodePropertyName],
            l = [],
            p = !1,
            f = e.getParentNode(),
            h = f.type === r.conditionalNodeType,
            d = 0;
          do {
            (a = i || o), (i = e.getParentNode(d)), d++;
          } while (i && i.type === r.conditionalNodeType);
          var m = i || f,
            g = a;
          if (r.shouldCheckJsx && (Tg(s) || Tg(u) || Tg(c) || ag(g))) {
            (p = !0), (h = !0);
            var y = function(e) {
                return ny([hy('(', ''), cy(ny([oy, e])), oy, hy(')', '')]);
              },
              v = function(e) {
                return (
                  'NullLiteral' === e.type ||
                  ('Literal' === e.type && null === e.value)
                );
              };
            l.push(
              ' ? ',
              v(u)
                ? e.call(n, r.consequentNodePropertyName)
                : y(e.call(n, r.consequentNodePropertyName)),
              ' : ',
              c.type === r.conditionalNodeType || v(c)
                ? e.call(n, r.alternateNodePropertyName)
                : y(e.call(n, r.alternateNodePropertyName)),
            );
          } else {
            var D = ny([
              iy,
              '? ',
              u.type === r.conditionalNodeType ? hy('', '(') : '',
              ly(2, e.call(n, r.consequentNodePropertyName)),
              u.type === r.conditionalNodeType ? hy('', ')') : '',
              iy,
              ': ',
              c.type === r.conditionalNodeType
                ? e.call(n, r.alternateNodePropertyName)
                : ly(2, e.call(n, r.alternateNodePropertyName)),
            ]);
            l.push(
              f.type !== r.conditionalNodeType ||
                f[r.alternateNodePropertyName] === o
                ? D
                : t.useTabs
                ? yy(cy(D))
                : ly(Math.max(0, t.tabWidth - 2), D),
            );
          }
          var E,
            C =
              !p &&
              ('MemberExpression' === f.type ||
                'OptionalMemberExpression' === f.type ||
                ('NGPipeExpression' === f.type &&
                  f.left === o &&
                  r.breakNested)) &&
              !f.computed;
          return (function(e) {
            return r.breakNested ? (f === m ? uy(e) : e) : uy(e);
          })(
            ny(
              [].concat(
                ((E = ny(r.beforeParts())),
                f.type === r.conditionalNodeType &&
                f[r.alternateNodePropertyName] === o
                  ? ly(2, E)
                  : E),
                h ? ny(l) : cy(ny(l)),
                r.afterParts(C),
              ),
            ),
          );
        }
        function ky(e, t, n) {
          var r = [],
            i = e.getNode(),
            a = 'ClassBody' === i.type;
          return (
            e.map(function(e, o) {
              var s = e.getValue();
              if (s && 'EmptyStatement' !== s.type) {
                var u = n(e),
                  c = t.originalText,
                  l = [];
                if (
                  (t.semi ||
                  a ||
                  Kg(t, e) ||
                  !(function(e, t) {
                    return (
                      'ExpressionStatement' === e.getNode().type &&
                      e.call(function(e) {
                        return (function e(t, n) {
                          var r = t.getValue();
                          return (
                            !!(
                              wm(t, n) ||
                              'ParenthesizedExpression' === r.type ||
                              'TypeCastExpression' === r.type ||
                              ('ArrowFunctionExpression' === r.type &&
                                !Ly(t, n)) ||
                              'ArrayExpression' === r.type ||
                              'ArrayPattern' === r.type ||
                              ('UnaryExpression' === r.type &&
                                r.prefix &&
                                ('+' === r.operator || '-' === r.operator)) ||
                              'TemplateLiteral' === r.type ||
                              'TemplateElement' === r.type ||
                              Tg(r) ||
                              ('BindExpression' === r.type && !r.object) ||
                              'RegExpLiteral' === r.type ||
                              ('Literal' === r.type && r.pattern) ||
                              ('Literal' === r.type && r.regex)
                            ) ||
                            (!!dg(r) &&
                              t.call.apply(
                                t,
                                [
                                  function(t) {
                                    return e(t, n);
                                  },
                                ].concat(sg(t, r)),
                              ))
                          );
                        })(e, t);
                      }, 'expression')
                    );
                  })(e, t)
                    ? l.push(u)
                    : s.comments &&
                      s.comments.some(function(e) {
                        return e.leading;
                      })
                    ? l.push(n(e, { needsSemi: !0 }))
                    : l.push(';', u),
                  !t.semi && a)
                )
                  if (ig(e)) l.push(';');
                  else if ('ClassProperty' === s.type) {
                    var p = i.body[o + 1];
                    rg(p) && l.push(';');
                  }
                Gm(c, s, t) && !Og(e) && l.push(ay), r.push(ny(l));
              }
            }),
            ry(ay, r)
          );
        }
        function Ty(e, t, n) {
          var r = e.getNode();
          if (r.computed) return ny(['[', e.call(n, 'key'), ']']);
          var i = e.getParentNode(),
            a = r.key;
          if ('consistent' === t.quoteProps && !ey.has(i)) {
            var o = (i.properties || i.body || i.members).some(function(e) {
              return !e.computed && e.key && $g(e.key) && !qg(e, t);
            });
            ey.set(i, o);
          }
          if (
            'Identifier' === a.type &&
            ('json' === t.parser ||
              ('consistent' === t.quoteProps && ey.get(i)))
          ) {
            var s = Wm(JSON.stringify(a.name), t);
            return e.call(function(e) {
              return xa.printComments(
                e,
                function() {
                  return s;
                },
                t,
              );
            }, 'key');
          }
          return qg(r, t) &&
            ('as-needed' === t.quoteProps ||
              ('consistent' === t.quoteProps && !ey.get(i)))
            ? e.call(function(e) {
                return xa.printComments(
                  e,
                  function() {
                    return a.value;
                  },
                  t,
                );
              }, 'key')
            : e.call(n, 'key');
        }
        function _y(e, t, n) {
          var r = e.getNode(),
            i = r.kind,
            a = r.value || r,
            o = [];
          return (
            i && 'init' !== i && 'method' !== i && 'constructor' !== i
              ? (Wr.ok('get' === i || 'set' === i), o.push(i, ' '))
              : (a.async && o.push('async '), a.generator && o.push('*')),
            o.push(
              Ty(e, t, n),
              r.optional || r.key.optional ? '?' : '',
              r === a
                ? Oy(e, t, n)
                : e.call(function(e) {
                    return Oy(e, t, n);
                  }, 'value'),
            ),
            ny(o)
          );
        }
        function Oy(e, t, n) {
          var r = [Py(e, 0, n), uy(ny([My(e, n, t), jy(e, n, t)]))];
          return (
            e.getNode().body
              ? r.push(' ', e.call(n, 'body'))
              : r.push(t.semi ? ';' : ''),
            ny(r)
          );
        }
        function Ny(e) {
          return (
            ('ObjectExpression' === e.type &&
              (e.properties.length > 0 || e.comments)) ||
            ('ArrayExpression' === e.type &&
              (e.elements.length > 0 || e.comments)) ||
            ('TSTypeAssertion' === e.type && Ny(e.expression)) ||
            ('TSAsExpression' === e.type && Ny(e.expression)) ||
            'FunctionExpression' === e.type ||
            ('ArrowFunctionExpression' === e.type &&
              (!e.returnType ||
                !e.returnType.typeAnnotation ||
                'TSTypeReference' !== e.returnType.typeAnnotation.type) &&
              ('BlockStatement' === e.body.type ||
                'ArrowFunctionExpression' === e.body.type ||
                'ObjectExpression' === e.body.type ||
                'ArrayExpression' === e.body.type ||
                'CallExpression' === e.body.type ||
                'OptionalCallExpression' === e.body.type ||
                'ConditionalExpression' === e.body.type ||
                Tg(e.body)))
          );
        }
        function By(e, t, n) {
          var r = e.getValue(),
            i = r.arguments;
          if (0 === i.length)
            return ny(['(', xa.printDanglingComments(e, t, !0), ')']);
          if (
            2 === i.length &&
            'ArrowFunctionExpression' === i[0].type &&
            0 === i[0].params.length &&
            'BlockStatement' === i[0].body.type &&
            'ArrayExpression' === i[1].type &&
            !i.find(function(e) {
              return e.comments;
            })
          )
            return ny([
              '(',
              e.call(n, 'arguments', 0),
              ', ',
              e.call(n, 'arguments', 1),
              ')',
            ]);
          var a = !1,
            o = !1,
            s = !1,
            u = i.length - 1,
            c = e.map(function(e, r) {
              var i = e.getNode(),
                c = [n(e)];
              return (
                r === u ||
                  (Gm(t.originalText, i, t)
                    ? (0 === r && (s = !0), (a = !0), c.push(',', ay, ay))
                    : c.push(',', iy)),
                (o = (function(e, t) {
                  if (
                    !e ||
                    'ArrowFunctionExpression' !== e.type ||
                    !e.body ||
                    'BlockStatement' !== e.body.type ||
                    !e.params ||
                    e.params.length < 1
                  )
                    return !1;
                  var r = !1;
                  return (
                    t.each(function(e) {
                      var t = ny([n(e)]);
                      r = r || Dy(t);
                    }, 'params'),
                    r
                  );
                })(i, e)),
                ny(c)
              );
            }, 'arguments'),
            l =
              (r.callee && 'Import' === r.callee.type) || !Sy(t, 'all')
                ? ''
                : ',';
          function p() {
            return uy(ny(['(', cy(ny([iy, ny(c)])), l, iy, ')']), {
              shouldBreak: !0,
            });
          }
          if (Ag(i)) return p();
          var f = (function(e) {
              if (2 !== e.length) return !1;
              var t = e[0],
                n = e[1];
              return !(
                (t.comments && t.comments.length) ||
                ('FunctionExpression' !== t.type &&
                  ('ArrowFunctionExpression' !== t.type ||
                    'BlockStatement' !== t.body.type)) ||
                'FunctionExpression' === n.type ||
                'ArrowFunctionExpression' === n.type ||
                'ConditionalExpression' === n.type ||
                Ny(n)
              );
            })(i),
            h = (function(e) {
              var t = Um(e),
                n = Jm(e);
              return !fg(t) && !vg(t) && Ny(t) && (!n || n.type !== t.type);
            })(i);
          if (f || h) {
            var d,
              m = (f ? c.slice(1).some(Dy) : c.slice(0, -1).some(Dy)) || a || o,
              g = 0;
            e.each(function(e) {
              f &&
                0 === g &&
                (d = [
                  ny([
                    e.call(function(e) {
                      return n(e, { expandFirstArg: !0 });
                    }),
                    c.length > 1 ? ',' : '',
                    s ? ay : iy,
                    s ? ay : '',
                  ]),
                ].concat(c.slice(1))),
                h &&
                  g === i.length - 1 &&
                  (d = c.slice(0, -1).concat(
                    e.call(function(e) {
                      return n(e, { expandLastArg: !0 });
                    }),
                  )),
                g++;
            }, 'arguments');
            var y = c.some(Dy),
              v = ny(['(', ny(d), ')']);
            return ny([
              y ? dy : '',
              py(
                [
                  y || r.typeArguments || r.typeParameters ? hy(p(), v) : v,
                  ny(
                    f
                      ? [
                          '(',
                          uy(d[0], { shouldBreak: !0 }),
                          ny(d.slice(1)),
                          ')',
                        ]
                      : [
                          '(',
                          ny(c.slice(0, -1)),
                          uy(Um(d), { shouldBreak: !0 }),
                          ')',
                        ],
                  ),
                  p(),
                ],
                { shouldBreak: m },
              ),
            ]);
          }
          var D = ny(['(', cy(ny([oy, ny(c)])), hy(l), oy, ')']);
          return Bg(e) ? D : uy(D, { shouldBreak: c.some(Dy) || a });
        }
        function Iy(e, t, n) {
          var r = e.getValue();
          if (!r.typeAnnotation) return '';
          var i = e.getParentNode(),
            a =
              r.definite ||
              (i && 'VariableDeclarator' === i.type && i.definite),
            o = 'DeclareFunction' === i.type && i.id === r;
          return xg(t.originalText, r.typeAnnotation, t)
            ? ny([' /*: ', e.call(n, 'typeAnnotation'), ' */'])
            : ny([o ? '' : a ? '!: ' : ': ', e.call(n, 'typeAnnotation')]);
        }
        function Py(e, t, n) {
          var r = e.getValue();
          return r.typeArguments
            ? e.call(n, 'typeArguments')
            : r.typeParameters
            ? e.call(n, 'typeParameters')
            : '';
        }
        function My(e, t, n, r, i) {
          var a = e.getValue(),
            o = e.getParentNode(),
            s = a.parameters ? 'parameters' : 'params',
            u = Jg(o),
            c = rv(a),
            l =
              r &&
              !(
                a[s] &&
                a[s].some(function(e) {
                  return e.comments;
                })
              ),
            p = i ? Py(e, 0, t) : '',
            f = [];
          if (a[s]) {
            var h = a[s].length - 1;
            f = e.map(function(e, r) {
              var i = [],
                o = e.getValue();
              return (
                i.push(t(e)),
                r === h
                  ? a.rest && i.push(',', iy)
                  : u || c || l
                  ? i.push(', ')
                  : Gm(n.originalText, o, n)
                  ? i.push(',', ay, ay)
                  : i.push(',', iy),
                ny(i)
              );
            }, s);
          }
          if (
            (a.rest && f.push(ny(['...', e.call(t, 'rest')])), 0 === f.length)
          )
            return ny([
              p,
              '(',
              xa.printDanglingComments(e, n, !0, function(e) {
                return ')' === Lm(n.originalText, e, n.locEnd);
              }),
              ')',
            ]);
          var d = Um(a[s]);
          if (l) return uy(ny([by(p), '(', ny(f.map(by)), ')']));
          var m = a[s].every(function(e) {
            return !e.decorators;
          });
          if (c && m) return ny([p, '(', ny(f), ')']);
          if (u) return ny([p, '(', ny(f), ')']);
          if (
            (Ug(o, n) ||
              Hg(o, n) ||
              'TypeAlias' === o.type ||
              'UnionTypeAnnotation' === o.type ||
              'TSUnionType' === o.type ||
              'IntersectionTypeAnnotation' === o.type ||
              ('FunctionTypeAnnotation' === o.type && o.returnType === a)) &&
            1 === a[s].length &&
            null === a[s][0].name &&
            a[s][0].typeAnnotation &&
            null === a.typeParameters &&
            Vg(a[s][0].typeAnnotation) &&
            !a.rest
          )
            return 'always' === n.arrowParens ? ny(['(', ny(f), ')']) : ny(f);
          var g = !((d && 'RestElement' === d.type) || a.rest);
          return ny([
            p,
            '(',
            cy(ny([oy, ny(f)])),
            hy(g && Sy(n, 'all') ? ',' : ''),
            oy,
            ')',
          ]);
        }
        function Ly(e, t) {
          return (
            'always' !== t.arrowParens &&
            'avoid' === t.arrowParens &&
            (function(e) {
              return !(
                1 !== e.params.length ||
                e.rest ||
                e.typeParameters ||
                cg(e) ||
                'Identifier' !== e.params[0].type ||
                e.params[0].typeAnnotation ||
                e.params[0].comments ||
                e.params[0].optional ||
                e.predicate ||
                e.returnType
              );
            })(e.getValue())
          );
        }
        function Ry(e, t, n) {
          var r = e.getValue(),
            i = [];
          return (
            r.async && i.push('async '),
            i.push('function'),
            r.generator && i.push('*'),
            r.id && i.push(' ', e.call(t, 'id')),
            i.push(
              Py(e, 0, t),
              uy(ny([My(e, t, n), jy(e, t, n)])),
              r.body ? ' ' : '',
              e.call(t, 'body'),
            ),
            ny(i)
          );
        }
        function jy(e, t, n) {
          var r = e.getValue(),
            i = e.call(t, 'returnType');
          if (r.returnType && xg(n.originalText, r.returnType, n))
            return ny([' /*: ', i, ' */']);
          var a = [i];
          return (
            r.returnType && r.returnType.typeAnnotation && a.unshift(': '),
            r.predicate &&
              a.push(r.returnType ? ' ' : ': ', e.call(t, 'predicate')),
            ny(a)
          );
        }
        function Uy(e, t, n) {
          var r = e.getValue(),
            i = t.semi ? ';' : '',
            a = ['export '],
            o = r.default || 'ExportDefaultDeclaration' === r.type;
          if (
            (o && a.push('default '),
            a.push(xa.printDanglingComments(e, t, !0)),
            Gg(r) && a.push(ay),
            r.declaration)
          )
            a.push(e.call(n, 'declaration')),
              o &&
                'ClassDeclaration' !== r.declaration.type &&
                'FunctionDeclaration' !== r.declaration.type &&
                'TSInterfaceDeclaration' !== r.declaration.type &&
                'DeclareClass' !== r.declaration.type &&
                'DeclareFunction' !== r.declaration.type &&
                'TSDeclareFunction' !== r.declaration.type &&
                a.push(i);
          else {
            if (r.specifiers && r.specifiers.length > 0) {
              var s = [],
                u = [],
                c = [];
              e.each(function(t) {
                var r = e.getValue().type;
                'ExportSpecifier' === r
                  ? s.push(n(t))
                  : 'ExportDefaultSpecifier' === r
                  ? u.push(n(t))
                  : 'ExportNamespaceSpecifier' === r &&
                    c.push(ny(['* as ', n(t)]));
              }, 'specifiers');
              var l = 0 !== c.length && 0 !== s.length,
                p = 0 !== u.length && (0 !== c.length || 0 !== s.length),
                f =
                  s.length > 1 ||
                  u.length > 0 ||
                  (r.specifiers &&
                    r.specifiers.some(function(e) {
                      return e.comments;
                    })),
                h = '';
              0 !== s.length &&
                (h = f
                  ? uy(
                      ny([
                        '{',
                        cy(
                          ny([
                            t.bracketSpacing ? iy : oy,
                            ry(ny([',', iy]), s),
                          ]),
                        ),
                        hy(Sy(t) ? ',' : ''),
                        t.bracketSpacing ? iy : oy,
                        '}',
                      ]),
                    )
                  : ny([
                      '{',
                      t.bracketSpacing ? ' ' : '',
                      ny(s),
                      t.bracketSpacing ? ' ' : '',
                      '}',
                    ])),
                a.push(
                  'type' === r.exportKind ? 'type ' : '',
                  ny(u),
                  ny([p ? ', ' : '']),
                  ny(c),
                  ny([l ? ', ' : '']),
                  h,
                );
            } else a.push('{}');
            r.source && a.push(' from ', e.call(n, 'source')), a.push(i);
          }
          return ny(a);
        }
        function Vy(e, t) {
          var n = Im(e);
          return (
            n
              ? Wr.strictEqual(n.type, 'DeclareExportDeclaration')
              : t.unshift('declare '),
            ny(t)
          );
        }
        function Wy(e, t, n) {
          var r = e.getValue();
          return r.modifiers && r.modifiers.length
            ? ny([ry(' ', e.map(n, 'modifiers')), ' '])
            : '';
        }
        function $y(e, t, n, r) {
          var i = e.getValue();
          if (!i[r]) return '';
          if (!Array.isArray(i[r])) return e.call(n, r);
          var a = e.getNode(2),
            o = e.getNode(4);
          return (null != a && Jg(a)) ||
            0 === i[r].length ||
            (1 === i[r].length &&
              (nv(i[r][0]) ||
                ('GenericTypeAnnotation' === i[r][0].type && nv(i[r][0].id)) ||
                ('TSTypeReference' === i[r][0].type && nv(i[r][0].typeName)) ||
                'NullableTypeAnnotation' === i[r][0].type ||
                (o &&
                  'VariableDeclarator' === o.type &&
                  a &&
                  'TSTypeAnnotation' === a.type &&
                  'TSUnionType' !== i[r][0].type &&
                  'UnionTypeAnnotation' !== i[r][0].type &&
                  'TSConditionalType' !== i[r][0].type &&
                  'TSMappedType' !== i[r][0].type)))
            ? ny(['<', ry(', ', e.map(n, r)), '>'])
            : uy(
                ny([
                  '<',
                  cy(ny([oy, ry(ny([',', iy]), e.map(n, r))])),
                  hy('typescript' !== t.parser && Sy(t, 'all') ? ',' : ''),
                  oy,
                  '>',
                ]),
              );
        }
        function qy(e, t, n) {
          var r = e.getValue(),
            i = [];
          r.abstract && i.push('abstract '),
            i.push('class'),
            r.id && i.push(' ', e.call(n, 'id')),
            i.push(e.call(n, 'typeParameters'));
          var a = [];
          if (r.superClass) {
            var o = ny([
              'extends ',
              e.call(n, 'superClass'),
              e.call(n, 'superTypeParameters'),
            ]);
            (r.implements && 0 !== r.implements.length) ||
            (r.superClass.comments && 0 !== r.superClass.comments.length)
              ? a.push(
                  uy(
                    ny([
                      iy,
                      e.call(function(e) {
                        return xa.printComments(
                          e,
                          function() {
                            return o;
                          },
                          t,
                        );
                      }, 'superClass'),
                    ]),
                  ),
                )
              : i.push(
                  ny([
                    ' ',
                    e.call(function(e) {
                      return xa.printComments(
                        e,
                        function() {
                          return o;
                        },
                        t,
                      );
                    }, 'superClass'),
                  ]),
                );
          } else
            r.extends &&
              r.extends.length > 0 &&
              i.push(' extends ', ry(', ', e.map(n, 'extends')));
          return (
            r.mixins &&
              r.mixins.length > 0 &&
              a.push(
                iy,
                'mixins ',
                uy(cy(ry(ny([',', iy]), e.map(n, 'mixins')))),
              ),
            r.implements &&
              r.implements.length > 0 &&
              a.push(
                iy,
                'implements',
                uy(cy(ny([iy, ry(ny([',', iy]), e.map(n, 'implements'))]))),
              ),
            a.length > 0 && i.push(uy(cy(ny(a)))),
            r.body && r.body.comments && hg(t.originalText, r.body, t)
              ? i.push(ay)
              : i.push(' '),
            i.push(e.call(n, 'body')),
            i
          );
        }
        function Yy(e) {
          var t = e.getValue();
          return !t.optional ||
            ('Identifier' === t.type && t === e.getParentNode().key)
            ? ''
            : 'OptionalCallExpression' === t.type ||
              ('OptionalMemberExpression' === t.type && t.computed)
            ? '?.'
            : '?';
        }
        function Jy(e, t, n) {
          var r = e.call(n, 'property'),
            i = e.getValue(),
            a = Yy(e);
          return i.computed
            ? !i.property || Rg(i.property)
              ? ny([a, '[', r, ']'])
              : uy(ny([a, '[', cy(ny([oy, r])), oy, ']']))
            : ny([a, '.', r]);
        }
        function Ky(e, t, n) {
          return ny(['::', e.call(n, 'callee')]);
        }
        function zy(e, t, n, r) {
          return e
            ? ''
            : ('JSXElement' === n.type && !n.closingElement) ||
              (r && 'JSXElement' === r.type && !r.closingElement)
            ? 1 === t.length
              ? oy
              : ay
            : oy;
        }
        function Hy(e, t, n, r) {
          return e
            ? ay
            : 1 === t.length
            ? ('JSXElement' === n.type && !n.closingElement) ||
              (r && 'JSXElement' === r.type && !r.closingElement)
              ? ay
              : oy
            : ay;
        }
        function Xy(e) {
          return (
            'LogicalExpression' === e.type &&
            (('ObjectExpression' === e.right.type &&
              0 !== e.right.properties.length) ||
              ('ArrayExpression' === e.right.type &&
                0 !== e.right.elements.length) ||
              !!Tg(e.right))
          );
        }
        function Gy(e, t, n, r) {
          return hg(r.originalText, t, r)
            ? cy(ny([ay, n]))
            : (Eg(t) && !Xy(t)) ||
              ('ConditionalExpression' === t.type &&
                Eg(t.test) &&
                !Xy(t.test)) ||
              'StringLiteralTypeAnnotation' === t.type ||
              ('ClassExpression' === t.type &&
                t.decorators &&
                t.decorators.length) ||
              (('Identifier' === e.type ||
                $g(e) ||
                'MemberExpression' === e.type) &&
                ($g(t) || Pg(t)) &&
                'json' !== r.parser &&
                'json5' !== r.parser) ||
              'SequenceExpression' === t.type
            ? uy(cy(ny([iy, n])))
            : ny([' ', n]);
        }
        function Qy(e, t, n, r, i, a) {
          if (!r) return t;
          var o = Gy(e, r, i, a);
          return uy(ny([t, n, o]));
        }
        function Zy(e, t, n) {
          return 'EmptyStatement' === e.type
            ? ';'
            : 'BlockStatement' === e.type || n
            ? ny([' ', t])
            : cy(ny([iy, t]));
        }
        function ev(e, t, n) {
          var r = Qg(e),
            i = n || 'DirectiveLiteral' === e.type;
          return Wm(r, t, i);
        }
        function tv(e) {
          var t = e.flags
            .split('')
            .sort()
            .join('');
          return '/'.concat(e.pattern, '/').concat(t);
        }
        function nv(e) {
          if (Vg(e) || jg(e)) return !0;
          if ('UnionTypeAnnotation' === e.type || 'TSUnionType' === e.type) {
            var t = e.types.filter(function(e) {
                return (
                  'VoidTypeAnnotation' === e.type ||
                  'TSVoidKeyword' === e.type ||
                  'NullLiteralTypeAnnotation' === e.type ||
                  'TSNullKeyword' === e.type
                );
              }).length,
              n = e.types.filter(function(e) {
                return (
                  'ObjectTypeAnnotation' === e.type ||
                  'TSTypeLiteral' === e.type ||
                  'GenericTypeAnnotation' === e.type ||
                  'TSTypeReference' === e.type
                );
              }).length;
            if (e.types.length - 1 === t && n > 0) return !0;
          }
          return !1;
        }
        function rv(e) {
          return (
            e &&
            e.params &&
            1 === e.params.length &&
            !e.params[0].comments &&
            ('ObjectPattern' === e.params[0].type ||
              'ArrayPattern' === e.params[0].type ||
              ('Identifier' === e.params[0].type &&
                e.params[0].typeAnnotation &&
                ('TypeAnnotation' === e.params[0].typeAnnotation.type ||
                  'TSTypeAnnotation' === e.params[0].typeAnnotation.type) &&
                jg(e.params[0].typeAnnotation.typeAnnotation)) ||
              ('FunctionTypeParam' === e.params[0].type &&
                jg(e.params[0].typeAnnotation)) ||
              ('AssignmentPattern' === e.params[0].type &&
                ('ObjectPattern' === e.params[0].left.type ||
                  'ArrayPattern' === e.params[0].left.type) &&
                ('Identifier' === e.params[0].right.type ||
                  ('ObjectExpression' === e.params[0].right.type &&
                    0 === e.params[0].right.properties.length) ||
                  ('ArrayExpression' === e.params[0].right.type &&
                    0 === e.params[0].right.elements.length)))) &&
            !e.rest
          );
        }
        function iv(e, t, n, r) {
          var i = [],
            a = [];
          return (
            e.each(function(e) {
              i.push(ny(a)),
                i.push(uy(r(e))),
                (a = [',', iy]),
                e.getValue() &&
                  Gm(t.originalText, e.getValue(), t) &&
                  a.push(oy);
            }, n),
            ny(i)
          );
        }
        var av = {
            preprocess: Bm,
            print: function(e, t, n, r) {
              var i = e.getValue(),
                a = !1,
                o = (function(e, t, n, r) {
                  var i = e.getValue(),
                    a = t.semi ? ';' : '';
                  if (!i) return '';
                  if ('string' == typeof i) return i;
                  var o = tg(e, t, n);
                  if (o) return o;
                  var s = [];
                  switch (i.type) {
                    case 'JsExpressionRoot':
                      return e.call(n, 'node');
                    case 'JsonRoot':
                      return ny([e.call(n, 'node'), ay]);
                    case 'File':
                      return (
                        i.program &&
                          i.program.interpreter &&
                          s.push(
                            e.call(function(e) {
                              return e.call(n, 'interpreter');
                            }, 'program'),
                          ),
                        s.push(e.call(n, 'program')),
                        ny(s)
                      );
                    case 'Program':
                      return (
                        i.directives &&
                          e.each(function(e) {
                            s.push(n(e), a, ay),
                              Gm(t.originalText, e.getValue(), t) && s.push(ay);
                          }, 'directives'),
                        s.push(
                          e.call(function(e) {
                            return ky(e, t, n);
                          }, 'body'),
                        ),
                        s.push(xa.printDanglingComments(e, t, !0)),
                        (i.body.length || i.comments) && s.push(ay),
                        ny(s)
                      );
                    case 'EmptyStatement':
                      return '';
                    case 'ExpressionStatement':
                      if (i.directive) return ny([ev(i.expression, t, !0), a]);
                      if ('__vue_event_binding' === t.parser) {
                        var u = e.getParentNode();
                        if (
                          'Program' === u.type &&
                          1 === u.body.length &&
                          u.body[0] === i
                        )
                          return ny([
                            e.call(n, 'expression'),
                            ng(i.expression) ? ';' : '',
                          ]);
                      }
                      return ny([e.call(n, 'expression'), Kg(t, e) ? '' : a]);
                    case 'ParenthesizedExpression':
                      return ny(['(', e.call(n, 'expression'), ')']);
                    case 'AssignmentExpression':
                      return Qy(
                        i.left,
                        e.call(n, 'left'),
                        ny([' ', i.operator]),
                        i.right,
                        e.call(n, 'right'),
                        t,
                      );
                    case 'BinaryExpression':
                    case 'LogicalExpression':
                    case 'NGPipeExpression':
                      var l = e.getParentNode(),
                        p = e.getParentNode(1),
                        f =
                          i !== l.body &&
                          ('IfStatement' === l.type ||
                            'WhileStatement' === l.type ||
                            'SwitchStatement' === l.type ||
                            'DoWhileStatement' === l.type),
                        h = (function e(t, n, r, i, a) {
                          var o = [],
                            s = t.getValue();
                          if (Eg(s)) {
                            Mm(s.operator, s.left.operator)
                              ? (o = o.concat(
                                  t.call(function(t) {
                                    return e(t, n, r, !0, a);
                                  }, 'left'),
                                ))
                              : o.push(t.call(n, 'left'));
                            var u = Xy(s),
                              c =
                                ('|>' === s.operator ||
                                  'NGPipeExpression' === s.type ||
                                  ('|' === s.operator &&
                                    '__vue_expression' === r.parser)) &&
                                !hg(r.originalText, s.right, r),
                              l =
                                'NGPipeExpression' === s.type
                                  ? '|'
                                  : s.operator,
                              p =
                                'NGPipeExpression' === s.type &&
                                0 !== s.arguments.length
                                  ? uy(
                                      cy(
                                        ny([
                                          oy,
                                          ': ',
                                          ry(
                                            ny([oy, ':', hy(' ')]),
                                            t
                                              .map(n, 'arguments')
                                              .map(function(e) {
                                                return ly(2, uy(e));
                                              }),
                                          ),
                                        ]),
                                      ),
                                    )
                                  : '',
                              f = ny(
                                u
                                  ? [l, ' ', t.call(n, 'right'), p]
                                  : [
                                      c ? oy : '',
                                      l,
                                      c ? ' ' : iy,
                                      t.call(n, 'right'),
                                      p,
                                    ],
                              ),
                              h = t.getParentNode(),
                              d =
                                !(a && 'LogicalExpression' === s.type) &&
                                h.type !== s.type &&
                                s.left.type !== s.type &&
                                s.right.type !== s.type;
                            o.push(' ', d ? uy(f) : f),
                              i &&
                                s.comments &&
                                (o = xa.printComments(
                                  t,
                                  function() {
                                    return ny(o);
                                  },
                                  r,
                                ));
                          } else o.push(t.call(n));
                          return o;
                        })(e, n, t, !1, f);
                      if (f) return ny(h);
                      if (
                        (('CallExpression' === l.type ||
                          'OptionalCallExpression' === l.type) &&
                          l.callee === i) ||
                        'UnaryExpression' === l.type ||
                        (('MemberExpression' === l.type ||
                          'OptionalMemberExpression' === l.type) &&
                          !l.computed)
                      )
                        return uy(ny([cy(ny([oy, ny(h)])), oy]));
                      var d =
                          'ReturnStatement' === l.type ||
                          ('JSXExpressionContainer' === l.type &&
                            'JSXAttribute' === p.type) ||
                          ('NGPipeExpression' !== i.type &&
                            (('NGRoot' === l.type &&
                              '__ng_binding' === t.parser) ||
                              ('NGMicrosyntaxExpression' === l.type &&
                                'NGMicrosyntax' === p.type &&
                                1 === p.body.length))) ||
                          (i === l.body &&
                            'ArrowFunctionExpression' === l.type) ||
                          (i !== l.body && 'ForStatement' === l.type) ||
                          ('ConditionalExpression' === l.type &&
                            'ReturnStatement' !== p.type &&
                            'CallExpression' !== p.type &&
                            'OptionalCallExpression' !== p.type),
                        m =
                          'AssignmentExpression' === l.type ||
                          'VariableDeclarator' === l.type ||
                          'ClassProperty' === l.type ||
                          'TSAbstractClassProperty' === l.type ||
                          'ClassPrivateProperty' === l.type ||
                          'ObjectProperty' === l.type ||
                          'Property' === l.type,
                        g = Eg(i.left) && Mm(i.operator, i.left.operator);
                      if (d || (Xy(i) && !g) || (!Xy(i) && m)) return uy(ny(h));
                      if (0 === h.length) return '';
                      var y = Tg(i.right),
                        v = ny(y ? h.slice(1, -1) : h.slice(1)),
                        D = Symbol('logicalChain-' + ++Ay),
                        E = uy(ny([h.length > 0 ? h[0] : '', cy(v)]), {
                          id: D,
                        });
                      if (!y) return E;
                      var C = Um(h);
                      return uy(ny([E, hy(cy(C), C, { groupId: D })]));
                    case 'AssignmentPattern':
                      return ny([e.call(n, 'left'), ' = ', e.call(n, 'right')]);
                    case 'TSTypeAssertion':
                      var b = !(
                          'ArrayExpression' === i.expression.type ||
                          'ObjectExpression' === i.expression.type
                        ),
                        x = uy(
                          ny([
                            '<',
                            cy(ny([oy, e.call(n, 'typeAnnotation')])),
                            oy,
                            '>',
                          ]),
                        ),
                        S = ny([
                          hy('('),
                          cy(ny([oy, e.call(n, 'expression')])),
                          oy,
                          hy(')'),
                        ]);
                      return b
                        ? py([
                            ny([x, e.call(n, 'expression')]),
                            ny([x, uy(S, { shouldBreak: !0 })]),
                            ny([x, e.call(n, 'expression')]),
                          ])
                        : uy(ny([x, e.call(n, 'expression')]));
                    case 'OptionalMemberExpression':
                    case 'MemberExpression':
                      var w,
                        F = e.getParentNode(),
                        k = 0;
                      do {
                        (w = e.getParentNode(k)), k++;
                      } while (
                        w &&
                        ('MemberExpression' === w.type ||
                          'OptionalMemberExpression' === w.type ||
                          'TSNonNullExpression' === w.type)
                      );
                      var T =
                        (w &&
                          ('NewExpression' === w.type ||
                            'BindExpression' === w.type ||
                            ('VariableDeclarator' === w.type &&
                              'Identifier' !== w.id.type) ||
                            ('AssignmentExpression' === w.type &&
                              'Identifier' !== w.left.type))) ||
                        i.computed ||
                        ('Identifier' === i.object.type &&
                          'Identifier' === i.property.type &&
                          'MemberExpression' !== F.type &&
                          'OptionalMemberExpression' !== F.type);
                      return ny([
                        e.call(n, 'object'),
                        T ? Jy(e, 0, n) : uy(cy(ny([oy, Jy(e, 0, n)]))),
                      ]);
                    case 'MetaProperty':
                      return ny([
                        e.call(n, 'meta'),
                        '.',
                        e.call(n, 'property'),
                      ]);
                    case 'BindExpression':
                      return (
                        i.object && s.push(e.call(n, 'object')),
                        s.push(uy(cy(ny([oy, Ky(e, 0, n)])))),
                        ny(s)
                      );
                    case 'Identifier':
                      return ny([i.name, Yy(e), Iy(e, t, n)]);
                    case 'V8IntrinsicIdentifier':
                      return ny(['%', i.name]);
                    case 'SpreadElement':
                    case 'SpreadElementPattern':
                    case 'RestProperty':
                    case 'SpreadProperty':
                    case 'SpreadPropertyPattern':
                    case 'RestElement':
                    case 'ObjectTypeSpreadProperty':
                      return ny(['...', e.call(n, 'argument'), Iy(e, t, n)]);
                    case 'FunctionDeclaration':
                    case 'FunctionExpression':
                      return s.push(Ry(e, n, t)), i.body || s.push(a), ny(s);
                    case 'ArrowFunctionExpression':
                      i.async && s.push('async '),
                        Ly(e, t)
                          ? s.push(e.call(n, 'params', 0))
                          : s.push(
                              uy(
                                ny([
                                  My(
                                    e,
                                    n,
                                    t,
                                    r && (r.expandLastArg || r.expandFirstArg),
                                    !0,
                                  ),
                                  jy(e, n, t),
                                ]),
                              ),
                            );
                      var _ = xa.printDanglingComments(e, t, !0, function(e) {
                        var n = Zm(t.originalText, e, t);
                        return '=>' === t.originalText.substr(n, 2);
                      });
                      _ && s.push(' ', _), s.push(' =>');
                      var O = e.call(function(e) {
                        return n(e, r);
                      }, 'body');
                      if (
                        !hg(t.originalText, i.body, t) &&
                        ('ArrayExpression' === i.body.type ||
                          'ObjectExpression' === i.body.type ||
                          'BlockStatement' === i.body.type ||
                          Tg(i.body) ||
                          Yg(i.body, t.originalText, t) ||
                          'ArrowFunctionExpression' === i.body.type ||
                          'DoExpression' === i.body.type)
                      )
                        return uy(ny([ny(s), ' ', O]));
                      if ('SequenceExpression' === i.body.type)
                        return uy(
                          ny([ny(s), uy(ny([' (', cy(ny([oy, O])), oy, ')']))]),
                        );
                      var N =
                          ((r && r.expandLastArg) ||
                            'JSXExpressionContainer' ===
                              e.getParentNode().type) &&
                          !(i.comments && i.comments.length),
                        B = r && r.expandLastArg && Sy(t, 'all'),
                        I =
                          'ConditionalExpression' === i.body.type &&
                          !Km(i.body, !1);
                      return uy(
                        ny([
                          ny(s),
                          uy(
                            ny([
                              cy(
                                ny([
                                  iy,
                                  I ? hy('', '(') : '',
                                  O,
                                  I ? hy('', ')') : '',
                                ]),
                              ),
                              N ? ny([hy(B ? ',' : ''), oy]) : '',
                            ]),
                          ),
                        ]),
                      );
                    case 'YieldExpression':
                      return (
                        s.push('yield'),
                        i.delegate && s.push('*'),
                        i.argument && s.push(' ', e.call(n, 'argument')),
                        ny(s)
                      );
                    case 'AwaitExpression':
                      s.push('await ', e.call(n, 'argument'));
                      var P = e.getParentNode();
                      return (('CallExpression' === P.type ||
                        'OptionalCallExpression' === P.type) &&
                        P.callee === i) ||
                        (('MemberExpression' === P.type ||
                          'OptionalMemberExpression' === P.type) &&
                          P.object === i)
                        ? uy(ny([cy(ny([oy, ny(s)])), oy]))
                        : ny(s);
                    case 'ImportSpecifier':
                      return (
                        i.importKind && s.push(e.call(n, 'importKind'), ' '),
                        s.push(e.call(n, 'imported')),
                        i.local &&
                          i.local.name !== i.imported.name &&
                          s.push(' as ', e.call(n, 'local')),
                        ny(s)
                      );
                    case 'ExportSpecifier':
                      return (
                        s.push(e.call(n, 'local')),
                        i.exported &&
                          i.exported.name !== i.local.name &&
                          s.push(' as ', e.call(n, 'exported')),
                        ny(s)
                      );
                    case 'ImportNamespaceSpecifier':
                      return s.push('* as '), s.push(e.call(n, 'local')), ny(s);
                    case 'ImportDefaultSpecifier':
                      return e.call(n, 'local');
                    case 'TSExportAssignment':
                      return ny(['export = ', e.call(n, 'expression'), a]);
                    case 'ExportDefaultDeclaration':
                    case 'ExportNamedDeclaration':
                      return Uy(e, t, n);
                    case 'ExportAllDeclaration':
                      return (
                        s.push('export '),
                        'type' === i.exportKind && s.push('type '),
                        s.push('* from ', e.call(n, 'source'), a),
                        ny(s)
                      );
                    case 'ExportNamespaceSpecifier':
                    case 'ExportDefaultSpecifier':
                      return e.call(n, 'exported');
                    case 'ImportDeclaration':
                      s.push('import '),
                        i.importKind &&
                          'value' !== i.importKind &&
                          s.push(i.importKind + ' ');
                      var M = [],
                        L = [];
                      return (
                        i.specifiers && i.specifiers.length > 0
                          ? (e.each(function(e) {
                              var t = e.getValue();
                              'ImportDefaultSpecifier' === t.type ||
                              'ImportNamespaceSpecifier' === t.type
                                ? M.push(n(e))
                                : L.push(n(e));
                            }, 'specifiers'),
                            M.length > 0 && s.push(ry(', ', M)),
                            M.length > 0 && L.length > 0 && s.push(', '),
                            1 === L.length &&
                            0 === M.length &&
                            i.specifiers &&
                            !i.specifiers.some(function(e) {
                              return e.comments;
                            })
                              ? s.push(
                                  ny([
                                    '{',
                                    t.bracketSpacing ? ' ' : '',
                                    ny(L),
                                    t.bracketSpacing ? ' ' : '',
                                    '}',
                                  ]),
                                )
                              : L.length >= 1 &&
                                s.push(
                                  uy(
                                    ny([
                                      '{',
                                      cy(
                                        ny([
                                          t.bracketSpacing ? iy : oy,
                                          ry(ny([',', iy]), L),
                                        ]),
                                      ),
                                      hy(Sy(t) ? ',' : ''),
                                      t.bracketSpacing ? iy : oy,
                                      '}',
                                    ]),
                                  ),
                                ),
                            s.push(' from '))
                          : ((i.importKind && 'type' === i.importKind) ||
                              /{\s*}/.test(
                                t.originalText.slice(
                                  t.locStart(i),
                                  t.locStart(i.source),
                                ),
                              )) &&
                            s.push('{} from '),
                        s.push(e.call(n, 'source'), a),
                        ny(s)
                      );
                    case 'Import':
                      return 'import';
                    case 'TSModuleBlock':
                    case 'BlockStatement':
                      var R = e.call(function(e) {
                          return ky(e, t, n);
                        }, 'body'),
                        j = i.body.find(function(e) {
                          return 'EmptyStatement' !== e.type;
                        }),
                        U = i.directives && i.directives.length > 0,
                        V = e.getParentNode(),
                        W = e.getParentNode(1);
                      return j ||
                        U ||
                        cg(i) ||
                        ('ArrowFunctionExpression' !== V.type &&
                          'FunctionExpression' !== V.type &&
                          'FunctionDeclaration' !== V.type &&
                          'ObjectMethod' !== V.type &&
                          'ClassMethod' !== V.type &&
                          'ClassPrivateMethod' !== V.type &&
                          'ForStatement' !== V.type &&
                          'WhileStatement' !== V.type &&
                          'DoWhileStatement' !== V.type &&
                          'DoExpression' !== V.type &&
                          ('CatchClause' !== V.type || W.finalizer) &&
                          'TSModuleDeclaration' !== V.type)
                        ? (s.push('{'),
                          U &&
                            e.each(function(e) {
                              s.push(cy(ny([ay, n(e), a]))),
                                Gm(t.originalText, e.getValue(), t) &&
                                  s.push(ay);
                            }, 'directives'),
                          j && s.push(cy(ny([ay, R]))),
                          s.push(xa.printDanglingComments(e, t)),
                          s.push(ay, '}'),
                          ny(s))
                        : '{}';
                    case 'ReturnStatement':
                      return (
                        s.push('return'),
                        i.argument &&
                          (Zg(t, i.argument)
                            ? s.push(
                                ny([
                                  ' (',
                                  cy(ny([ay, e.call(n, 'argument')])),
                                  ay,
                                  ')',
                                ]),
                              )
                            : 'LogicalExpression' === i.argument.type ||
                              'BinaryExpression' === i.argument.type ||
                              'SequenceExpression' === i.argument.type
                            ? s.push(
                                uy(
                                  ny([
                                    hy(' (', ' '),
                                    cy(ny([oy, e.call(n, 'argument')])),
                                    oy,
                                    hy(')'),
                                  ]),
                                ),
                              )
                            : s.push(' ', e.call(n, 'argument'))),
                        cg(i) &&
                          s.push(' ', xa.printDanglingComments(e, t, !0)),
                        s.push(a),
                        ny(s)
                      );
                    case 'NewExpression':
                    case 'OptionalCallExpression':
                    case 'CallExpression':
                      var $ = 'NewExpression' === i.type,
                        q = Yy(e);
                      if (
                        (!$ &&
                          'Identifier' === i.callee.type &&
                          ('require' === i.callee.name ||
                            'define' === i.callee.name)) ||
                        (1 === i.arguments.length &&
                          Yg(i.arguments[0], t.originalText, t)) ||
                        (!$ && Jg(i, e.getParentNode()))
                      )
                        return ny([
                          $ ? 'new ' : '',
                          e.call(n, 'callee'),
                          q,
                          Py(e, 0, n),
                          ny(['(', ry(', ', e.map(n, 'arguments')), ')']),
                        ]);
                      var Y =
                        'Identifier' === i.callee.type &&
                        lg(i.callee.trailingComments);
                      if (
                        (Y && (i.callee.trailingComments[0].printed = !0),
                        !$ && Mg(i.callee))
                      )
                        return (function(e, t, n) {
                          var r = [];
                          function i(e) {
                            var n = t.originalText,
                              r = Zm(n, e, t);
                            return ')' == n.charAt(r)
                              ? Qm(n, r + 1, t)
                              : Gm(n, e, t);
                          }
                          var a = e.getValue();
                          r.unshift({
                            node: a,
                            printed: ny([Yy(e), Py(e, 0, n), By(e, t, n)]),
                          }),
                            e.call(function(e) {
                              return (function e(a) {
                                var o = a.getValue();
                                ('CallExpression' !== o.type &&
                                  'OptionalCallExpression' !== o.type) ||
                                (!Mg(o.callee) &&
                                  'CallExpression' !== o.callee.type &&
                                  'OptionalCallExpression' !== o.callee.type)
                                  ? Mg(o)
                                    ? (r.unshift({
                                        node: o,
                                        needsParens: wm(a, t),
                                        printed: xa.printComments(
                                          a,
                                          function() {
                                            return 'OptionalMemberExpression' ===
                                              o.type ||
                                              'MemberExpression' === o.type
                                              ? Jy(a, 0, n)
                                              : Ky(a, 0, n);
                                          },
                                          t,
                                        ),
                                      }),
                                      a.call(function(t) {
                                        return e(t);
                                      }, 'object'))
                                    : 'TSNonNullExpression' === o.type
                                    ? (r.unshift({
                                        node: o,
                                        printed: xa.printComments(
                                          a,
                                          function() {
                                            return '!';
                                          },
                                          t,
                                        ),
                                      }),
                                      a.call(function(t) {
                                        return e(t);
                                      }, 'expression'))
                                    : r.unshift({ node: o, printed: a.call(n) })
                                  : (r.unshift({
                                      node: o,
                                      printed: ny([
                                        xa.printComments(
                                          a,
                                          function() {
                                            return ny([
                                              Yy(a),
                                              Py(a, 0, n),
                                              By(a, t, n),
                                            ]);
                                          },
                                          t,
                                        ),
                                        i(o) ? ay : '',
                                      ]),
                                    }),
                                    a.call(function(t) {
                                      return e(t);
                                    }, 'callee'));
                              })(e);
                            }, 'callee');
                          for (
                            var o = [], s = [r[0]], u = 1;
                            u < r.length &&
                            ('TSNonNullExpression' === r[u].node.type ||
                              'OptionalCallExpression' === r[u].node.type ||
                              'CallExpression' === r[u].node.type ||
                              (('MemberExpression' === r[u].node.type ||
                                'OptionalMemberExpression' ===
                                  r[u].node.type) &&
                                r[u].node.computed &&
                                Rg(r[u].node.property)));
                            ++u
                          )
                            s.push(r[u]);
                          if (
                            'CallExpression' !== r[0].node.type &&
                            'OptionalCallExpression' !== r[0].node.type
                          )
                            for (
                              ;
                              u + 1 < r.length &&
                              Mg(r[u].node) &&
                              Mg(r[u + 1].node);
                              ++u
                            )
                              s.push(r[u]);
                          o.push(s), (s = []);
                          for (var c = !1; u < r.length; ++u) {
                            if (c && Mg(r[u].node)) {
                              if (
                                r[u].node.computed &&
                                Rg(r[u].node.property)
                              ) {
                                s.push(r[u]);
                                continue;
                              }
                              o.push(s), (s = []), (c = !1);
                            }
                            ('CallExpression' !== r[u].node.type &&
                              'OptionalCallExpression' !== r[u].node.type) ||
                              (c = !0),
                              s.push(r[u]),
                              r[u].node.comments &&
                                r[u].node.comments.some(function(e) {
                                  return e.trailing;
                                }) &&
                                (o.push(s), (s = []), (c = !1));
                          }
                          function l(e) {
                            return /^[A-Z]|^[_$]+$/.test(e);
                          }
                          s.length > 0 && o.push(s);
                          var p =
                            o.length >= 2 &&
                            !o[1][0].node.comments &&
                            (function(n) {
                              var r = e.getParentNode(),
                                i = r && 'ExpressionStatement' === r.type,
                                a = n[1].length && n[1][0].node.computed;
                              if (1 === n[0].length) {
                                var o = n[0][0].node;
                                return (
                                  'ThisExpression' === o.type ||
                                  ('Identifier' === o.type &&
                                    (l(o.name) ||
                                      (i &&
                                        (function(e) {
                                          return e.length <= t.tabWidth;
                                        })(o.name)) ||
                                      a))
                                );
                              }
                              var s = Um(n[0]).node;
                              return (
                                ('MemberExpression' === s.type ||
                                  'OptionalMemberExpression' === s.type) &&
                                'Identifier' === s.property.type &&
                                (l(s.property.name) || a)
                              );
                            })(o);
                          function f(e) {
                            var t = e.map(function(e) {
                              return e.printed;
                            });
                            return e.length > 0 && e[e.length - 1].needsParens
                              ? ny(['('].concat(A(t), [')']))
                              : ny(t);
                          }
                          var h = o.map(f),
                            d = ny(h),
                            m = p ? 3 : 2,
                            g = o.slice(0, m).reduce(function(e, t) {
                              return e.concat(t);
                            }, []),
                            y =
                              g.slice(1, -1).some(function(e) {
                                return fg(e.node);
                              }) ||
                              g.slice(0, -1).some(function(e) {
                                return vg(e.node);
                              }) ||
                              (o[m] && fg(o[m][0].node));
                          if (o.length <= m && !y) return Bg(e) ? d : uy(d);
                          var v,
                            D,
                            E = Um(p ? o.slice(1, 2)[0] : o[0]).node,
                            C =
                              'CallExpression' !== E.type &&
                              'OptionalCallExpression' !== E.type &&
                              i(E),
                            b = ny([
                              f(o[0]),
                              p ? ny(o.slice(1, 2).map(f)) : '',
                              C ? ay : '',
                              (function(e) {
                                return 0 === e.length
                                  ? ''
                                  : cy(uy(ny([ay, ry(ay, e.map(f))])));
                              })(o.slice(p ? 2 : 1)),
                            ]),
                            x = r
                              .map(function(e) {
                                return e.node;
                              })
                              .filter(Cg);
                          return y ||
                            x.length >= 3 ||
                            h.slice(0, -1).some(Dy) ||
                            ((v = Um(h)),
                            (D = Um(Um(o)).node),
                            Cg(D) &&
                              Dy(v) &&
                              x.slice(0, -1).some(function(e) {
                                return e.arguments.some(wg);
                              }))
                            ? uy(b)
                            : ny([Dy(d) || C ? dy : '', py([d, b])]);
                        })(e, t, n);
                      var J = ny([
                        $ ? 'new ' : '',
                        e.call(n, 'callee'),
                        q,
                        Y
                          ? '/*:: '.concat(
                              i.callee.trailingComments[0].value
                                .substring(2)
                                .trim(),
                              ' */',
                            )
                          : '',
                        Py(e, 0, n),
                        By(e, t, n),
                      ]);
                      return Cg(i.callee) ? uy(J) : J;
                    case 'TSInterfaceDeclaration':
                      return (
                        i.declare && s.push('declare '),
                        s.push(
                          i.abstract ? 'abstract ' : '',
                          Wy(e, 0, n),
                          'interface ',
                          e.call(n, 'id'),
                          i.typeParameters ? e.call(n, 'typeParameters') : '',
                          ' ',
                        ),
                        i.extends &&
                          i.extends.length &&
                          s.push(
                            uy(
                              cy(
                                ny([
                                  oy,
                                  'extends ',
                                  (1 === i.extends.length ? Dg : cy)(
                                    ry(ny([',', iy]), e.map(n, 'extends')),
                                  ),
                                  ' ',
                                ]),
                              ),
                            ),
                          ),
                        s.push(e.call(n, 'body')),
                        ny(s)
                      );
                    case 'ObjectTypeInternalSlot':
                      return ny([
                        i.static ? 'static ' : '',
                        '[[',
                        e.call(n, 'id'),
                        ']]',
                        Yy(e),
                        i.method ? '' : ': ',
                        e.call(n, 'value'),
                      ]);
                    case 'ObjectExpression':
                    case 'ObjectPattern':
                    case 'ObjectTypeAnnotation':
                    case 'TSInterfaceBody':
                    case 'TSTypeLiteral':
                      var K;
                      K =
                        'TSTypeLiteral' === i.type
                          ? 'members'
                          : 'TSInterfaceBody' === i.type
                          ? 'body'
                          : 'properties';
                      var z = 'ObjectTypeAnnotation' === i.type,
                        H = [];
                      z &&
                        H.push('indexers', 'callProperties', 'internalSlots'),
                        H.push(K);
                      var X = H.map(function(e) {
                          return i[e][0];
                        }).sort(function(e, n) {
                          return t.locStart(e) - t.locStart(n);
                        })[0],
                        G = e.getParentNode(0),
                        Q =
                          z &&
                          G &&
                          ('InterfaceDeclaration' === G.type ||
                            'DeclareInterface' === G.type ||
                            'DeclareClass' === G.type) &&
                          'body' === e.getName(),
                        Z =
                          'TSInterfaceBody' === i.type ||
                          Q ||
                          ('ObjectPattern' === i.type &&
                            'FunctionDeclaration' !== G.type &&
                            'FunctionExpression' !== G.type &&
                            'ArrowFunctionExpression' !== G.type &&
                            'ObjectMethod' !== G.type &&
                            'ClassMethod' !== G.type &&
                            'ClassPrivateMethod' !== G.type &&
                            'AssignmentPattern' !== G.type &&
                            'CatchClause' !== G.type &&
                            i.properties.some(function(e) {
                              return (
                                e.value &&
                                ('ObjectPattern' === e.value.type ||
                                  'ArrayPattern' === e.value.type)
                              );
                            })) ||
                          ('ObjectPattern' !== i.type &&
                            X &&
                            jm(t.originalText, t.locStart(i), t.locStart(X))),
                        ee = Q
                          ? ';'
                          : 'TSInterfaceBody' === i.type ||
                            'TSTypeLiteral' === i.type
                          ? hy(a, ';')
                          : ',',
                        te = i.exact ? '{|' : '{',
                        ne = i.exact ? '|}' : '}',
                        re = [];
                      H.forEach(function(r) {
                        e.each(function(e) {
                          var r = e.getValue();
                          re.push({
                            node: r,
                            printed: n(e),
                            loc: t.locStart(r),
                          });
                        }, r);
                      });
                      var ie = [],
                        ae = re
                          .sort(function(e, t) {
                            return e.loc - t.loc;
                          })
                          .map(function(e) {
                            var n = ny(ie.concat(uy(e.printed)));
                            return (
                              (ie = [ee, iy]),
                              ('TSPropertySignature' !== e.node.type &&
                                'TSMethodSignature' !== e.node.type &&
                                'TSConstructSignatureDeclaration' !==
                                  e.node.type) ||
                                !Ym(e.node) ||
                                ie.shift(),
                              Gm(t.originalText, e.node, t) && ie.push(ay),
                              n
                            );
                          });
                      i.inexact && ae.push(ny(ie.concat(uy('...'))));
                      var oe,
                        se = Um(i[K]),
                        ue = !(
                          se &&
                          ('RestProperty' === se.type ||
                            'RestElement' === se.type ||
                            Ym(se) ||
                            i.inexact)
                        );
                      if (0 === ae.length) {
                        if (!cg(i)) return ny([te, ne, Iy(e, t, n)]);
                        oe = uy(
                          ny([
                            te,
                            xa.printDanglingComments(e, t),
                            oy,
                            ne,
                            Yy(e),
                            Iy(e, t, n),
                          ]),
                        );
                      } else
                        oe = ny([
                          te,
                          cy(ny([t.bracketSpacing ? iy : oy, ny(ae)])),
                          hy(ue && (',' !== ee || Sy(t)) ? ee : ''),
                          ny([t.bracketSpacing ? iy : oy, ne]),
                          Yy(e),
                          Iy(e, t, n),
                        ]);
                      var ce = e.getParentNode(2);
                      return ('ObjectPattern' === i.type &&
                        G &&
                        rv(G) &&
                        !i.decorators &&
                        G.params[0] === i) ||
                        (nv(i) &&
                          ce &&
                          rv(ce) &&
                          ce.params[0].typeAnnotation &&
                          ce.params[0].typeAnnotation.typeAnnotation === i)
                        ? oe
                        : uy(oe, { shouldBreak: Z });
                    case 'ObjectProperty':
                    case 'Property':
                      return i.method || 'get' === i.kind || 'set' === i.kind
                        ? _y(e, t, n)
                        : (i.shorthand
                            ? s.push(e.call(n, 'value'))
                            : s.push(
                                Qy(
                                  i.key,
                                  Ty(e, t, n),
                                  ':',
                                  i.value,
                                  e.call(n, 'value'),
                                  t,
                                ),
                              ),
                          ny(s));
                    case 'ClassMethod':
                    case 'ClassPrivateMethod':
                    case 'MethodDefinition':
                    case 'TSAbstractMethodDefinition':
                      return (
                        i.decorators &&
                          0 !== i.decorators.length &&
                          s.push(wy(e, t, n)),
                        i.accessibility && s.push(i.accessibility + ' '),
                        i.static && s.push('static '),
                        'TSAbstractMethodDefinition' === i.type &&
                          s.push('abstract '),
                        s.push(_y(e, t, n)),
                        ny(s)
                      );
                    case 'ObjectMethod':
                      return _y(e, t, n);
                    case 'Decorator':
                      return ny([
                        '@',
                        e.call(n, 'expression'),
                        e.call(n, 'callee'),
                      ]);
                    case 'ArrayExpression':
                    case 'ArrayPattern':
                      if (0 === i.elements.length)
                        cg(i)
                          ? s.push(
                              uy(
                                ny([
                                  '[',
                                  xa.printDanglingComments(e, t),
                                  oy,
                                  ']',
                                ]),
                              ),
                            )
                          : s.push('[]');
                      else {
                        var le = Um(i.elements),
                          pe = !(le && 'RestElement' === le.type),
                          fe = pe && null === le,
                          he =
                            i.elements.length > 1 &&
                            i.elements.every(function(e, t, n) {
                              var r = e && e.type;
                              if (
                                'ArrayExpression' !== r &&
                                'ObjectExpression' !== r
                              )
                                return !1;
                              var i = n[t + 1];
                              if (i && r !== i.type) return !1;
                              var a =
                                'ArrayExpression' === r
                                  ? 'elements'
                                  : 'properties';
                              return e[a] && e[a].length > 1;
                            });
                        s.push(
                          uy(
                            ny([
                              '[',
                              cy(ny([oy, iv(e, t, 'elements', n)])),
                              fe ? ',' : '',
                              hy(pe && !fe && Sy(t) ? ',' : ''),
                              xa.printDanglingComments(e, t, !0),
                              oy,
                              ']',
                            ]),
                            { shouldBreak: he },
                          ),
                        );
                      }
                      return s.push(Yy(e), Iy(e, t, n)), ny(s);
                    case 'SequenceExpression':
                      var de = e.getParentNode(0);
                      if (
                        'ExpressionStatement' === de.type ||
                        'ForStatement' === de.type
                      ) {
                        var me = [];
                        return (
                          e.each(function(e) {
                            0 === e.getName()
                              ? me.push(n(e))
                              : me.push(',', cy(ny([iy, n(e)])));
                          }, 'expressions'),
                          uy(ny(me))
                        );
                      }
                      return uy(
                        ny([ry(ny([',', iy]), e.map(n, 'expressions'))]),
                      );
                    case 'ThisExpression':
                      return 'this';
                    case 'Super':
                      return 'super';
                    case 'NullLiteral':
                      return 'null';
                    case 'RegExpLiteral':
                      return tv(i);
                    case 'NumericLiteral':
                      return $m(i.extra.raw);
                    case 'BigIntLiteral':
                      return (
                        i.bigint || (i.extra ? i.extra.raw : i.raw)
                      ).toLowerCase();
                    case 'BooleanLiteral':
                    case 'StringLiteral':
                    case 'Literal':
                      if (i.regex) return tv(i.regex);
                      if ('number' == typeof i.value) return $m(i.raw);
                      if ('string' != typeof i.value) return '' + i.value;
                      var ge = e.getParentNode(1),
                        ye =
                          'typescript' === t.parser &&
                          'string' == typeof i.value &&
                          ge &&
                          ('Program' === ge.type ||
                            'BlockStatement' === ge.type);
                      return ev(i, t, ye);
                    case 'Directive':
                      return e.call(n, 'value');
                    case 'DirectiveLiteral':
                      return ev(i, t);
                    case 'UnaryExpression':
                      return (
                        s.push(i.operator),
                        /[a-z]$/.test(i.operator) && s.push(' '),
                        i.argument.comments && i.argument.comments.length > 0
                          ? s.push(
                              uy(
                                ny([
                                  '(',
                                  cy(ny([oy, e.call(n, 'argument')])),
                                  oy,
                                  ')',
                                ]),
                              ),
                            )
                          : s.push(e.call(n, 'argument')),
                        ny(s)
                      );
                    case 'UpdateExpression':
                      return (
                        s.push(e.call(n, 'argument'), i.operator),
                        i.prefix && s.reverse(),
                        ny(s)
                      );
                    case 'ConditionalExpression':
                      return Fy(e, t, n, {
                        beforeParts: function() {
                          return [e.call(n, 'test')];
                        },
                        afterParts: function(e) {
                          return [e ? oy : ''];
                        },
                        shouldCheckJsx: !0,
                        conditionalNodeType: 'ConditionalExpression',
                        consequentNodePropertyName: 'consequent',
                        alternateNodePropertyName: 'alternate',
                        testNodePropertyName: 'test',
                        breakNested: !0,
                      });
                    case 'VariableDeclaration':
                      var ve,
                        De = e.map(function(e) {
                          return n(e);
                        }, 'declarations'),
                        Ee = e.getParentNode(),
                        Ce =
                          'ForStatement' === Ee.type ||
                          'ForInStatement' === Ee.type ||
                          'ForOfStatement' === Ee.type ||
                          'ForAwaitStatement' === Ee.type,
                        be = i.declarations.some(function(e) {
                          return e.init;
                        });
                      return (
                        1 !== De.length || i.declarations[0].comments
                          ? De.length > 0 && (ve = cy(De[0]))
                          : (ve = De[0]),
                        (s = [
                          i.declare ? 'declare ' : '',
                          i.kind,
                          ve ? ny([' ', ve]) : '',
                          cy(
                            ny(
                              De.slice(1).map(function(e) {
                                return ny([',', be && !Ce ? ay : iy, e]);
                              }),
                            ),
                          ),
                        ]),
                        (Ce && Ee.body !== i) || s.push(a),
                        uy(ny(s))
                      );
                    case 'TSTypeAliasDeclaration':
                      i.declare && s.push('declare ');
                      var xe = Gy(
                        i.id,
                        i.typeAnnotation,
                        i.typeAnnotation && e.call(n, 'typeAnnotation'),
                        t,
                      );
                      return (
                        s.push(
                          'type ',
                          e.call(n, 'id'),
                          e.call(n, 'typeParameters'),
                          ' =',
                          xe,
                          a,
                        ),
                        uy(ny(s))
                      );
                    case 'VariableDeclarator':
                      return Qy(
                        i.id,
                        e.call(n, 'id'),
                        ' =',
                        i.init,
                        i.init && e.call(n, 'init'),
                        t,
                      );
                    case 'WithStatement':
                      return uy(
                        ny([
                          'with (',
                          e.call(n, 'object'),
                          ')',
                          Zy(i.body, e.call(n, 'body')),
                        ]),
                      );
                    case 'IfStatement':
                      var Ae = Zy(i.consequent, e.call(n, 'consequent')),
                        Se = uy(
                          ny([
                            'if (',
                            uy(ny([cy(ny([oy, e.call(n, 'test')])), oy])),
                            ')',
                            Ae,
                          ]),
                        );
                      if ((s.push(Se), i.alternate)) {
                        var we =
                            (vg(i.consequent) &&
                              i.consequent.comments.some(function(e) {
                                return e.trailing && !dd.isBlockComment(e);
                              })) ||
                            Gg(i),
                          Fe = 'BlockStatement' === i.consequent.type && !we;
                        s.push(Fe ? ' ' : ay),
                          cg(i) &&
                            s.push(
                              xa.printDanglingComments(e, t, !0),
                              we ? ay : ' ',
                            ),
                          s.push(
                            'else',
                            uy(
                              Zy(
                                i.alternate,
                                e.call(n, 'alternate'),
                                'IfStatement' === i.alternate.type,
                              ),
                            ),
                          );
                      }
                      return ny(s);
                    case 'ForStatement':
                      var ke = Zy(i.body, e.call(n, 'body')),
                        Te = xa.printDanglingComments(e, t, !0),
                        _e = Te ? ny([Te, oy]) : '';
                      return i.init || i.test || i.update
                        ? ny([
                            _e,
                            uy(
                              ny([
                                'for (',
                                uy(
                                  ny([
                                    cy(
                                      ny([
                                        oy,
                                        e.call(n, 'init'),
                                        ';',
                                        iy,
                                        e.call(n, 'test'),
                                        ';',
                                        iy,
                                        e.call(n, 'update'),
                                      ]),
                                    ),
                                    oy,
                                  ]),
                                ),
                                ')',
                                ke,
                              ]),
                            ),
                          ])
                        : ny([_e, uy(ny(['for (;;)', ke]))]);
                    case 'WhileStatement':
                      return uy(
                        ny([
                          'while (',
                          uy(ny([cy(ny([oy, e.call(n, 'test')])), oy])),
                          ')',
                          Zy(i.body, e.call(n, 'body')),
                        ]),
                      );
                    case 'ForInStatement':
                      return uy(
                        ny([
                          i.each ? 'for each (' : 'for (',
                          e.call(n, 'left'),
                          ' in ',
                          e.call(n, 'right'),
                          ')',
                          Zy(i.body, e.call(n, 'body')),
                        ]),
                      );
                    case 'ForOfStatement':
                    case 'ForAwaitStatement':
                      var Oe = 'ForAwaitStatement' === i.type || i.await;
                      return uy(
                        ny([
                          'for',
                          Oe ? ' await' : '',
                          ' (',
                          e.call(n, 'left'),
                          ' of ',
                          e.call(n, 'right'),
                          ')',
                          Zy(i.body, e.call(n, 'body')),
                        ]),
                      );
                    case 'DoWhileStatement':
                      var Ne = Zy(i.body, e.call(n, 'body')),
                        Be = uy(ny(['do', Ne]));
                      return (
                        (s = [Be]),
                        'BlockStatement' === i.body.type
                          ? s.push(' ')
                          : s.push(ay),
                        s.push('while ('),
                        s.push(
                          uy(ny([cy(ny([oy, e.call(n, 'test')])), oy])),
                          ')',
                          a,
                        ),
                        ny(s)
                      );
                    case 'DoExpression':
                      return ny(['do ', e.call(n, 'body')]);
                    case 'BreakStatement':
                      return (
                        s.push('break'),
                        i.label && s.push(' ', e.call(n, 'label')),
                        s.push(a),
                        ny(s)
                      );
                    case 'ContinueStatement':
                      return (
                        s.push('continue'),
                        i.label && s.push(' ', e.call(n, 'label')),
                        s.push(a),
                        ny(s)
                      );
                    case 'LabeledStatement':
                      return 'EmptyStatement' === i.body.type
                        ? ny([e.call(n, 'label'), ':;'])
                        : ny([e.call(n, 'label'), ': ', e.call(n, 'body')]);
                    case 'TryStatement':
                      return ny([
                        'try ',
                        e.call(n, 'block'),
                        i.handler ? ny([' ', e.call(n, 'handler')]) : '',
                        i.finalizer
                          ? ny([' finally ', e.call(n, 'finalizer')])
                          : '',
                      ]);
                    case 'CatchClause':
                      if (i.param) {
                        var Ie =
                            i.param.comments &&
                            i.param.comments.some(function(e) {
                              return (
                                !dd.isBlockComment(e) ||
                                (e.leading &&
                                  Rm(t.originalText, t.locEnd(e))) ||
                                (e.trailing &&
                                  Rm(t.originalText, t.locStart(e), {
                                    backwards: !0,
                                  }))
                              );
                            }),
                          Pe = e.call(n, 'param');
                        return ny([
                          'catch ',
                          ny(
                            Ie
                              ? ['(', cy(ny([oy, Pe])), oy, ') ']
                              : ['(', Pe, ') '],
                          ),
                          e.call(n, 'body'),
                        ]);
                      }
                      return ny(['catch ', e.call(n, 'body')]);
                    case 'ThrowStatement':
                      return ny(['throw ', e.call(n, 'argument'), a]);
                    case 'SwitchStatement':
                      return ny([
                        uy(
                          ny([
                            'switch (',
                            cy(ny([oy, e.call(n, 'discriminant')])),
                            oy,
                            ')',
                          ]),
                        ),
                        ' {',
                        i.cases.length > 0
                          ? cy(
                              ny([
                                ay,
                                ry(
                                  ay,
                                  e.map(function(e) {
                                    var r = e.getValue();
                                    return ny([
                                      e.call(n),
                                      i.cases.indexOf(r) !==
                                        i.cases.length - 1 &&
                                      Gm(t.originalText, r, t)
                                        ? ay
                                        : '',
                                    ]);
                                  }, 'cases'),
                                ),
                              ]),
                            )
                          : '',
                        ay,
                        '}',
                      ]);
                    case 'SwitchCase':
                      i.test
                        ? s.push('case ', e.call(n, 'test'), ':')
                        : s.push('default:');
                      var Me = i.consequent.filter(function(e) {
                        return 'EmptyStatement' !== e.type;
                      });
                      if (Me.length > 0) {
                        var Le = e.call(function(e) {
                          return ky(e, t, n);
                        }, 'consequent');
                        s.push(
                          1 === Me.length && 'BlockStatement' === Me[0].type
                            ? ny([' ', Le])
                            : cy(ny([ay, Le])),
                        );
                      }
                      return ny(s);
                    case 'DebuggerStatement':
                      return ny(['debugger', a]);
                    case 'JSXAttribute':
                      if ((s.push(e.call(n, 'name')), i.value)) {
                        var Re;
                        if ($g(i.value)) {
                          var je = Qg(i.value)
                              .replace(/&apos;/g, "'")
                              .replace(/&quot;/g, '"'),
                            Ue = Xm(je, t.jsxSingleQuote ? "'" : '"'),
                            Ve = "'" === Ue ? '&apos;' : '&quot;';
                          (je = je
                            .slice(1, -1)
                            .replace(new RegExp(Ue, 'g'), Ve)),
                            (Re = ny([Ue, je, Ue]));
                        } else Re = e.call(n, 'value');
                        s.push('=', Re);
                      }
                      return ny(s);
                    case 'JSXIdentifier':
                      return '' + i.name;
                    case 'JSXNamespacedName':
                      return ry(':', [
                        e.call(n, 'namespace'),
                        e.call(n, 'name'),
                      ]);
                    case 'JSXMemberExpression':
                      return ry('.', [
                        e.call(n, 'object'),
                        e.call(n, 'property'),
                      ]);
                    case 'TSQualifiedName':
                      return ry('.', [e.call(n, 'left'), e.call(n, 'right')]);
                    case 'JSXSpreadAttribute':
                    case 'JSXSpreadChild':
                      return ny([
                        '{',
                        e.call(
                          function(e) {
                            var r = ny(['...', n(e)]),
                              i = e.getValue();
                            return i.comments && i.comments.length
                              ? ny([
                                  cy(
                                    ny([
                                      oy,
                                      xa.printComments(
                                        e,
                                        function() {
                                          return r;
                                        },
                                        t,
                                      ),
                                    ]),
                                  ),
                                  oy,
                                ])
                              : r;
                          },
                          'JSXSpreadAttribute' === i.type
                            ? 'argument'
                            : 'expression',
                        ),
                        '}',
                      ]);
                    case 'JSXExpressionContainer':
                      var We = e.getParentNode(0),
                        $e =
                          !(
                            'JSXAttribute' === We.type &&
                            i.expression.comments &&
                            i.expression.comments.length > 0
                          ) &&
                          ('ArrayExpression' === i.expression.type ||
                            'ObjectExpression' === i.expression.type ||
                            'ArrowFunctionExpression' === i.expression.type ||
                            'CallExpression' === i.expression.type ||
                            'OptionalCallExpression' === i.expression.type ||
                            'FunctionExpression' === i.expression.type ||
                            'JSXEmptyExpression' === i.expression.type ||
                            'TemplateLiteral' === i.expression.type ||
                            'TaggedTemplateExpression' === i.expression.type ||
                            'DoExpression' === i.expression.type ||
                            (Tg(We) &&
                              ('ConditionalExpression' === i.expression.type ||
                                Eg(i.expression))));
                      return uy(
                        ny(
                          $e
                            ? ['{', e.call(n, 'expression'), my, '}']
                            : [
                                '{',
                                cy(ny([oy, e.call(n, 'expression')])),
                                oy,
                                my,
                                '}',
                              ],
                        ),
                      );
                    case 'JSXFragment':
                    case 'JSXElement':
                      var qe = xa.printComments(
                        e,
                        function() {
                          return (function(e, t, n) {
                            var r = e.getValue();
                            if ('JSXElement' === r.type && bg(r))
                              return ny([
                                e.call(n, 'openingElement'),
                                e.call(n, 'closingElement'),
                              ]);
                            var i =
                                'JSXElement' === r.type
                                  ? e.call(n, 'openingElement')
                                  : e.call(n, 'openingFragment'),
                              a =
                                'JSXElement' === r.type
                                  ? e.call(n, 'closingElement')
                                  : e.call(n, 'closingFragment');
                            if (
                              1 === r.children.length &&
                              'JSXExpressionContainer' === r.children[0].type &&
                              ('TemplateLiteral' ===
                                r.children[0].expression.type ||
                                'TaggedTemplateExpression' ===
                                  r.children[0].expression.type)
                            )
                              return ny([i, ny(e.map(n, 'children')), a]);
                            r.children = r.children.map(function(e) {
                              return _g(e)
                                ? { type: 'JSXText', value: ' ', raw: ' ' }
                                : e;
                            });
                            for (
                              var o = r.children.filter(Tg).length > 0,
                                s =
                                  r.children.filter(function(e) {
                                    return 'JSXExpressionContainer' === e.type;
                                  }).length > 1,
                                u =
                                  'JSXElement' === r.type &&
                                  r.openingElement.attributes.length > 1,
                                c = Dy(i) || o || u || s,
                                l = t.singleQuote ? "{' '}" : '{" "}',
                                p = hy(ny([l, oy]), ' '),
                                f =
                                  r.openingElement &&
                                  r.openingElement.name &&
                                  'fbt' === r.openingElement.name.name,
                                h = (function(e, t, n, r, i) {
                                  var a = e.getValue(),
                                    o = [];
                                  return (
                                    e.map(function(e, t) {
                                      var s = e.getValue();
                                      if (Ng(s)) {
                                        var u = Qg(s);
                                        if (Ig(s)) {
                                          var c,
                                            l = u.split(Xg);
                                          if ('' === l[0]) {
                                            if (
                                              (o.push(''),
                                              l.shift(),
                                              /\n/.test(l[0]))
                                            ) {
                                              var p = a.children[t + 1];
                                              o.push(Hy(i, l[1], s, p));
                                            } else o.push(r);
                                            l.shift();
                                          }
                                          if (
                                            ('' === Um(l) &&
                                              (l.pop(), (c = l.pop())),
                                            0 === l.length)
                                          )
                                            return;
                                          if (
                                            (l.forEach(function(e, t) {
                                              t % 2 == 1
                                                ? o.push(iy)
                                                : o.push(e);
                                            }),
                                            void 0 !== c)
                                          )
                                            if (/\n/.test(c)) {
                                              var f = a.children[t + 1];
                                              o.push(Hy(i, Um(o), s, f));
                                            } else o.push(r);
                                          else {
                                            var h = a.children[t + 1];
                                            o.push(zy(i, Um(o), s, h));
                                          }
                                        } else
                                          /\n/.test(u)
                                            ? u.match(/\n/g).length > 1 &&
                                              (o.push(''), o.push(ay))
                                            : (o.push(''), o.push(r));
                                      } else {
                                        var d = n(e);
                                        o.push(d);
                                        var m = a.children[t + 1];
                                        if (m && Ig(m)) {
                                          var g = Qg(m)
                                            .trim()
                                            .split(Xg)[0];
                                          o.push(zy(i, g, s, m));
                                        } else o.push(ay);
                                      }
                                    }, 'children'),
                                    o
                                  );
                                })(e, 0, n, p, f),
                                d =
                                  r.children.filter(function(e) {
                                    return Ig(e);
                                  }).length > 0,
                                m = h.length - 2;
                              m >= 0;
                              m--
                            ) {
                              var g = '' === h[m] && '' === h[m + 1],
                                y =
                                  h[m] === ay &&
                                  '' === h[m + 1] &&
                                  h[m + 2] === ay,
                                v =
                                  (h[m] === oy || h[m] === ay) &&
                                  '' === h[m + 1] &&
                                  h[m + 2] === p,
                                D =
                                  h[m] === p &&
                                  '' === h[m + 1] &&
                                  (h[m + 2] === oy || h[m + 2] === ay),
                                E =
                                  h[m] === p &&
                                  '' === h[m + 1] &&
                                  h[m + 2] === p,
                                C =
                                  (h[m] === oy &&
                                    '' === h[m + 1] &&
                                    h[m + 2] === ay) ||
                                  (h[m] === ay &&
                                    '' === h[m + 1] &&
                                    h[m + 2] === oy);
                              (y && d) || g || v || E || C
                                ? h.splice(m, 2)
                                : D && h.splice(m + 1, 2);
                            }
                            for (; h.length && (Ey(Um(h)) || Cy(Um(h))); )
                              h.pop();
                            for (
                              ;
                              h.length &&
                              (Ey(h[0]) || Cy(h[0])) &&
                              (Ey(h[1]) || Cy(h[1]));

                            )
                              h.shift(), h.shift();
                            var b = [];
                            h.forEach(function(e, t) {
                              if (e === p) {
                                if (1 === t && '' === h[t - 1])
                                  return 2 === h.length
                                    ? void b.push(l)
                                    : void b.push(ny([l, ay]));
                                if (t === h.length - 1) return void b.push(l);
                                if ('' === h[t - 1] && h[t - 2] === ay)
                                  return void b.push(l);
                              }
                              b.push(e), Dy(e) && (c = !0);
                            });
                            var x = d ? fy(b) : uy(ny(b), { shouldBreak: !0 }),
                              A = uy(ny([i, cy(ny([ay, x])), ay, a]));
                            return c ? A : py([uy(ny([i, ny(h), a])), A]);
                          })(e, t, n);
                        },
                        t,
                      );
                      return (function(e, t, n) {
                        var r = e.getParentNode();
                        if (!r) return t;
                        if (
                          {
                            ArrayExpression: !0,
                            JSXAttribute: !0,
                            JSXElement: !0,
                            JSXExpressionContainer: !0,
                            JSXFragment: !0,
                            ExpressionStatement: !0,
                            CallExpression: !0,
                            OptionalCallExpression: !0,
                            ConditionalExpression: !0,
                            JsExpressionRoot: !0,
                          }[r.type]
                        )
                          return t;
                        var i =
                            Hm(e, [
                              'ArrowFunctionExpression',
                              'CallExpression',
                              'JSXExpressionContainer',
                            ]) ||
                            Hm(e, [
                              'ArrowFunctionExpression',
                              'OptionalCallExpression',
                              'JSXExpressionContainer',
                            ]),
                          a = wm(e, n);
                        return uy(
                          ny([
                            a ? '' : hy('('),
                            cy(ny([oy, t])),
                            oy,
                            a ? '' : hy(')'),
                          ]),
                          { shouldBreak: i },
                        );
                      })(e, qe, t);
                    case 'JSXOpeningElement':
                      var Ye = e.getValue(),
                        Je =
                          (Ye.name &&
                            Ye.name.comments &&
                            Ye.name.comments.length > 0) ||
                          (Ye.typeParameters &&
                            Ye.typeParameters.comments &&
                            Ye.typeParameters.comments.length > 0);
                      if (Ye.selfClosing && !Ye.attributes.length && !Je)
                        return ny([
                          '<',
                          e.call(n, 'name'),
                          e.call(n, 'typeParameters'),
                          ' />',
                        ]);
                      if (
                        Ye.attributes &&
                        1 === Ye.attributes.length &&
                        Ye.attributes[0].value &&
                        $g(Ye.attributes[0].value) &&
                        !Ye.attributes[0].value.value.includes('\n') &&
                        !Je &&
                        (!Ye.attributes[0].comments ||
                          !Ye.attributes[0].comments.length)
                      )
                        return uy(
                          ny([
                            '<',
                            e.call(n, 'name'),
                            e.call(n, 'typeParameters'),
                            ' ',
                            ny(e.map(n, 'attributes')),
                            Ye.selfClosing ? ' />' : '>',
                          ]),
                        );
                      var Ke = Ye.attributes.length && vg(Um(Ye.attributes)),
                        ze =
                          (!Ye.attributes.length && !Je) ||
                          (t.jsxBracketSameLine &&
                            (!Je || Ye.attributes.length) &&
                            !Ke),
                        He =
                          Ye.attributes &&
                          Ye.attributes.some(function(e) {
                            return (
                              e.value &&
                              $g(e.value) &&
                              e.value.value.includes('\n')
                            );
                          });
                      return uy(
                        ny([
                          '<',
                          e.call(n, 'name'),
                          e.call(n, 'typeParameters'),
                          ny([
                            cy(
                              ny(
                                e.map(function(e) {
                                  return ny([iy, n(e)]);
                                }, 'attributes'),
                              ),
                            ),
                            Ye.selfClosing ? iy : ze ? '>' : oy,
                          ]),
                          Ye.selfClosing ? '/>' : ze ? '' : '>',
                        ]),
                        { shouldBreak: He },
                      );
                    case 'JSXClosingElement':
                      return ny(['</', e.call(n, 'name'), '>']);
                    case 'JSXOpeningFragment':
                    case 'JSXClosingFragment':
                      var Xe = i.comments && i.comments.length,
                        Ge = Xe && !i.comments.every(dd.isBlockComment),
                        Qe = 'JSXOpeningFragment' === i.type;
                      return ny([
                        Qe ? '<' : '</',
                        cy(
                          ny([
                            Ge ? ay : Xe && !Qe ? ' ' : '',
                            xa.printDanglingComments(e, t, !0),
                          ]),
                        ),
                        Ge ? ay : '',
                        '>',
                      ]);
                    case 'JSXText':
                      throw new Error(
                        'JSXTest should be handled by JSXElement',
                      );
                    case 'JSXEmptyExpression':
                      var Ze =
                        i.comments && !i.comments.every(dd.isBlockComment);
                      return ny([
                        xa.printDanglingComments(e, t, !Ze),
                        Ze ? ay : '',
                      ]);
                    case 'ClassBody':
                      return i.comments || 0 !== i.body.length
                        ? ny([
                            '{',
                            i.body.length > 0
                              ? cy(
                                  ny([
                                    ay,
                                    e.call(function(e) {
                                      return ky(e, t, n);
                                    }, 'body'),
                                  ]),
                                )
                              : xa.printDanglingComments(e, t),
                            ay,
                            '}',
                          ])
                        : '{}';
                    case 'ClassProperty':
                    case 'TSAbstractClassProperty':
                    case 'ClassPrivateProperty':
                      i.decorators &&
                        0 !== i.decorators.length &&
                        s.push(wy(e, t, n)),
                        i.accessibility && s.push(i.accessibility + ' '),
                        i.declare && s.push('declare '),
                        i.static && s.push('static '),
                        'TSAbstractClassProperty' === i.type &&
                          s.push('abstract '),
                        i.readonly && s.push('readonly ');
                      var et = og(i);
                      return (
                        et && s.push(et),
                        s.push(Ty(e, t, n), Yy(e), Iy(e, t, n)),
                        i.value &&
                          s.push(
                            ' =',
                            Gy(i.key, i.value, e.call(n, 'value'), t),
                          ),
                        s.push(a),
                        uy(ny(s))
                      );
                    case 'ClassDeclaration':
                    case 'ClassExpression':
                      return (
                        i.declare && s.push('declare '),
                        s.push(ny(qy(e, t, n))),
                        ny(s)
                      );
                    case 'TSInterfaceHeritage':
                      return (
                        s.push(e.call(n, 'expression')),
                        i.typeParameters && s.push(e.call(n, 'typeParameters')),
                        ny(s)
                      );
                    case 'TemplateElement':
                      return ry(sy, i.value.raw.split(/\r?\n/g));
                    case 'TemplateLiteral':
                      var tt = e.map(n, 'expressions'),
                        nt = e.getParentNode();
                      if (kg(i, nt)) {
                        var rt = (function(e, t, n) {
                          var r = e.quasis[0].value.raw
                            .trim()
                            .split(/\s*\|\s*/);
                          if (
                            r.length > 1 ||
                            r.some(function(e) {
                              return 0 !== e.length;
                            })
                          ) {
                            for (
                              var i = [],
                                a = t.map(function(e) {
                                  return (
                                    '${' +
                                    xy(
                                      e,
                                      Object.assign({}, n, {
                                        printWidth: 1 / 0,
                                        endOfLine: 'lf',
                                      }),
                                    ).formatted +
                                    '}'
                                  );
                                }),
                                o = [{ hasLineBreak: !1, cells: [] }],
                                s = 1;
                              s < e.quasis.length;
                              s++
                            ) {
                              var u = o[o.length - 1],
                                c = a[s - 1];
                              u.cells.push(c),
                                -1 !== c.indexOf('\n') && (u.hasLineBreak = !0),
                                -1 !== e.quasis[s].value.raw.indexOf('\n') &&
                                  o.push({ hasLineBreak: !1, cells: [] });
                            }
                            var l = o.reduce(function(e, t) {
                                return Math.max(e, t.cells.length);
                              }, r.length),
                              p = Array.from(new Array(l), function() {
                                return 0;
                              }),
                              f = [{ cells: r }].concat(
                                o.filter(function(e) {
                                  return 0 !== e.cells.length;
                                }),
                              );
                            return (
                              f
                                .filter(function(e) {
                                  return !e.hasLineBreak;
                                })
                                .forEach(function(e) {
                                  e.cells.forEach(function(e, t) {
                                    p[t] = Math.max(p[t], Vm(e));
                                  });
                                }),
                              i.push(
                                my,
                                '`',
                                cy(
                                  ny([
                                    ay,
                                    ry(
                                      ay,
                                      f.map(function(e) {
                                        return ry(
                                          ' | ',
                                          e.cells.map(function(t, n) {
                                            return e.hasLineBreak
                                              ? t
                                              : t + ' '.repeat(p[n] - Vm(t));
                                          }),
                                        );
                                      }),
                                    ),
                                  ]),
                                ),
                                ay,
                                '`',
                              ),
                              ny(i)
                            );
                          }
                        })(i, tt, t);
                        if (rt) return rt;
                      }
                      var it = Wg(i);
                      return (
                        it &&
                          (tt = tt.map(function(e) {
                            return xy(
                              e,
                              Object.assign({}, t, { printWidth: 1 / 0 }),
                            ).formatted;
                          })),
                        s.push(my, '`'),
                        e.each(function(e) {
                          var r = e.getName();
                          if ((s.push(n(e)), r < tt.length)) {
                            var a = t.tabWidth,
                              o = e.getValue(),
                              u = zm(o.value.raw, a),
                              c = tt[r];
                            it ||
                              (((i.expressions[r].comments &&
                                i.expressions[r].comments.length) ||
                                'MemberExpression' === i.expressions[r].type ||
                                'OptionalMemberExpression' ===
                                  i.expressions[r].type ||
                                'ConditionalExpression' ===
                                  i.expressions[r].type) &&
                                (c = ny([cy(ny([oy, c])), oy])));
                            var l =
                              0 === u && o.value.raw.endsWith('\n')
                                ? ly(-1 / 0, c)
                                : gy(c, u, a);
                            s.push(uy(ny(['${', l, my, '}'])));
                          }
                        }, 'quasis'),
                        s.push('`'),
                        ny(s)
                      );
                    case 'TaggedTemplateExpression':
                      return ny([
                        e.call(n, 'tag'),
                        e.call(n, 'typeParameters'),
                        e.call(n, 'quasi'),
                      ]);
                    case 'Node':
                    case 'Printable':
                    case 'SourceLocation':
                    case 'Position':
                    case 'Statement':
                    case 'Function':
                    case 'Pattern':
                    case 'Expression':
                    case 'Declaration':
                    case 'Specifier':
                    case 'NamedSpecifier':
                    case 'Comment':
                    case 'MemberTypeAnnotation':
                    case 'Type':
                      throw new Error(
                        'unprintable type: ' + JSON.stringify(i.type),
                      );
                    case 'TypeAnnotation':
                    case 'TSTypeAnnotation':
                      return i.typeAnnotation
                        ? e.call(n, 'typeAnnotation')
                        : '';
                    case 'TSTupleType':
                    case 'TupleTypeAnnotation':
                      var at =
                        'TSTupleType' === i.type ? 'elementTypes' : 'types';
                      return uy(
                        ny([
                          '[',
                          cy(ny([oy, iv(e, t, at, n)])),
                          hy(Sy(t, 'all') ? ',' : ''),
                          xa.printDanglingComments(e, t, !0),
                          oy,
                          ']',
                        ]),
                      );
                    case 'ExistsTypeAnnotation':
                      return '*';
                    case 'EmptyTypeAnnotation':
                      return 'empty';
                    case 'AnyTypeAnnotation':
                      return 'any';
                    case 'MixedTypeAnnotation':
                      return 'mixed';
                    case 'ArrayTypeAnnotation':
                      return ny([e.call(n, 'elementType'), '[]']);
                    case 'BooleanTypeAnnotation':
                      return 'boolean';
                    case 'BooleanLiteralTypeAnnotation':
                      return '' + i.value;
                    case 'DeclareClass':
                      return Vy(e, qy(e, t, n));
                    case 'TSDeclareFunction':
                      return ny([i.declare ? 'declare ' : '', Ry(e, n, t), a]);
                    case 'DeclareFunction':
                      return Vy(e, [
                        'function ',
                        e.call(n, 'id'),
                        i.predicate ? ' ' : '',
                        e.call(n, 'predicate'),
                        a,
                      ]);
                    case 'DeclareModule':
                      return Vy(e, [
                        'module ',
                        e.call(n, 'id'),
                        ' ',
                        e.call(n, 'body'),
                      ]);
                    case 'DeclareModuleExports':
                      return Vy(e, [
                        'module.exports',
                        ': ',
                        e.call(n, 'typeAnnotation'),
                        a,
                      ]);
                    case 'DeclareVariable':
                      return Vy(e, ['var ', e.call(n, 'id'), a]);
                    case 'DeclareExportAllDeclaration':
                      return ny([
                        'declare export * from ',
                        e.call(n, 'source'),
                      ]);
                    case 'DeclareExportDeclaration':
                      return ny(['declare ', Uy(e, t, n)]);
                    case 'DeclareOpaqueType':
                    case 'OpaqueType':
                      return (
                        s.push(
                          'opaque type ',
                          e.call(n, 'id'),
                          e.call(n, 'typeParameters'),
                        ),
                        i.supertype && s.push(': ', e.call(n, 'supertype')),
                        i.impltype && s.push(' = ', e.call(n, 'impltype')),
                        s.push(a),
                        'DeclareOpaqueType' === i.type ? Vy(e, s) : ny(s)
                      );
                    case 'EnumDeclaration':
                      return ny([
                        'enum ',
                        e.call(n, 'id'),
                        ' ',
                        e.call(n, 'body'),
                      ]);
                    case 'EnumBooleanBody':
                    case 'EnumNumberBody':
                    case 'EnumStringBody':
                    case 'EnumSymbolBody':
                      if ('EnumSymbolBody' === i.type || i.explicitType) {
                        var ot = null;
                        switch (i.type) {
                          case 'EnumBooleanBody':
                            ot = 'boolean';
                            break;
                          case 'EnumNumberBody':
                            ot = 'number';
                            break;
                          case 'EnumStringBody':
                            ot = 'string';
                            break;
                          case 'EnumSymbolBody':
                            ot = 'symbol';
                        }
                        s.push('of ', ot, ' ');
                      }
                      return (
                        0 === i.members.length
                          ? s.push(
                              uy(
                                ny([
                                  '{',
                                  xa.printDanglingComments(e, t),
                                  oy,
                                  '}',
                                ]),
                              ),
                            )
                          : s.push(
                              uy(
                                ny([
                                  '{',
                                  cy(
                                    ny([
                                      ay,
                                      iv(e, t, 'members', n),
                                      Sy(t) ? ',' : '',
                                    ]),
                                  ),
                                  xa.printDanglingComments(e, t, !0),
                                  ay,
                                  '}',
                                ]),
                              ),
                            ),
                        ny(s)
                      );
                    case 'EnumBooleanMember':
                    case 'EnumNumberMember':
                    case 'EnumStringMember':
                      return ny([
                        e.call(n, 'id'),
                        ' = ',
                        'object' === c(i.init)
                          ? e.call(n, 'init')
                          : String(i.init),
                      ]);
                    case 'EnumDefaultedMember':
                      return e.call(n, 'id');
                    case 'FunctionTypeAnnotation':
                    case 'TSFunctionType':
                      var st = e.getParentNode(0),
                        ut = e.getParentNode(1),
                        ct = e.getParentNode(2),
                        lt =
                          'TSFunctionType' === i.type ||
                          !(
                            (('ObjectTypeProperty' === st.type ||
                              'ObjectTypeInternalSlot' === st.type) &&
                              !og(st) &&
                              !st.optional &&
                              t.locStart(st) === t.locStart(i)) ||
                            'ObjectTypeCallProperty' === st.type ||
                            (ct && 'DeclareFunction' === ct.type)
                          ),
                        pt =
                          lt &&
                          ('TypeAnnotation' === st.type ||
                            'TSTypeAnnotation' === st.type),
                        ft =
                          pt &&
                          lt &&
                          ('TypeAnnotation' === st.type ||
                            'TSTypeAnnotation' === st.type) &&
                          'ArrowFunctionExpression' === ut.type;
                      return (
                        Ug(st, t) && ((lt = !0), (pt = !0)),
                        ft && s.push('('),
                        s.push(My(e, n, t, !1, !0)),
                        (i.returnType || i.predicate || i.typeAnnotation) &&
                          s.push(
                            lt ? ' => ' : ': ',
                            e.call(n, 'returnType'),
                            e.call(n, 'predicate'),
                            e.call(n, 'typeAnnotation'),
                          ),
                        ft && s.push(')'),
                        uy(ny(s))
                      );
                    case 'TSRestType':
                      return ny(['...', e.call(n, 'typeAnnotation')]);
                    case 'TSOptionalType':
                      return ny([e.call(n, 'typeAnnotation'), '?']);
                    case 'FunctionTypeParam':
                      return ny([
                        e.call(n, 'name'),
                        Yy(e),
                        i.name ? ': ' : '',
                        e.call(n, 'typeAnnotation'),
                      ]);
                    case 'GenericTypeAnnotation':
                      return ny([e.call(n, 'id'), e.call(n, 'typeParameters')]);
                    case 'DeclareInterface':
                    case 'InterfaceDeclaration':
                    case 'InterfaceTypeAnnotation':
                      return (
                        ('DeclareInterface' === i.type || i.declare) &&
                          s.push('declare '),
                        s.push('interface'),
                        ('DeclareInterface' !== i.type &&
                          'InterfaceDeclaration' !== i.type) ||
                          s.push(
                            ' ',
                            e.call(n, 'id'),
                            e.call(n, 'typeParameters'),
                          ),
                        i.extends.length > 0 &&
                          s.push(
                            uy(
                              cy(
                                ny([
                                  iy,
                                  'extends ',
                                  (1 === i.extends.length ? Dg : cy)(
                                    ry(ny([',', iy]), e.map(n, 'extends')),
                                  ),
                                ]),
                              ),
                            ),
                          ),
                        s.push(' ', e.call(n, 'body')),
                        uy(ny(s))
                      );
                    case 'ClassImplements':
                    case 'InterfaceExtends':
                      return ny([e.call(n, 'id'), e.call(n, 'typeParameters')]);
                    case 'TSClassImplements':
                      return ny([
                        e.call(n, 'expression'),
                        e.call(n, 'typeParameters'),
                      ]);
                    case 'TSIntersectionType':
                    case 'IntersectionTypeAnnotation':
                      for (
                        var ht = e.map(n, 'types'), dt = [], mt = !1, gt = 0;
                        gt < ht.length;
                        ++gt
                      )
                        0 === gt
                          ? dt.push(ht[gt])
                          : jg(i.types[gt - 1]) && jg(i.types[gt])
                          ? dt.push(ny([' & ', mt ? cy(ht[gt]) : ht[gt]]))
                          : jg(i.types[gt - 1]) || jg(i.types[gt])
                          ? (gt > 1 && (mt = !0),
                            dt.push(' & ', gt > 1 ? cy(ht[gt]) : ht[gt]))
                          : dt.push(cy(ny([' &', iy, ht[gt]])));
                      return uy(ny(dt));
                    case 'TSUnionType':
                    case 'UnionTypeAnnotation':
                      var yt = e.getParentNode(),
                        vt = !(
                          'TypeParameterInstantiation' === yt.type ||
                          'TSTypeParameterInstantiation' === yt.type ||
                          'GenericTypeAnnotation' === yt.type ||
                          'TSTypeReference' === yt.type ||
                          'TSTypeAssertion' === yt.type ||
                          'TupleTypeAnnotation' === yt.type ||
                          'TSTupleType' === yt.type ||
                          ('FunctionTypeParam' === yt.type && !yt.name) ||
                          (('TypeAlias' === yt.type ||
                            'VariableDeclarator' === yt.type ||
                            'TSTypeAliasDeclaration' === yt.type) &&
                            hg(t.originalText, i, t))
                        ),
                        Dt = nv(i),
                        Et = e.map(function(e) {
                          var r = e.call(n);
                          return (
                            Dt || (r = ly(2, r)),
                            xa.printComments(
                              e,
                              function() {
                                return r;
                              },
                              t,
                            )
                          );
                        }, 'types');
                      if (Dt) return ry(' | ', Et);
                      var Ct = vt && !hg(t.originalText, i, t),
                        bt = ny([
                          hy(ny([Ct ? iy : '', '| '])),
                          ry(ny([iy, '| ']), Et),
                        ]);
                      return wm(e, t)
                        ? uy(ny([cy(bt), oy]))
                        : ('TupleTypeAnnotation' === yt.type &&
                            yt.types.length > 1) ||
                          ('TSTupleType' === yt.type &&
                            yt.elementTypes.length > 1)
                        ? uy(ny([cy(ny([hy(ny(['(', oy])), bt])), oy, hy(')')]))
                        : uy(vt ? cy(bt) : bt);
                    case 'NullableTypeAnnotation':
                      return ny(['?', e.call(n, 'typeAnnotation')]);
                    case 'TSNullKeyword':
                    case 'NullLiteralTypeAnnotation':
                      return 'null';
                    case 'ThisTypeAnnotation':
                      return 'this';
                    case 'NumberTypeAnnotation':
                      return 'number';
                    case 'ObjectTypeCallProperty':
                      return (
                        i.static && s.push('static '),
                        s.push(e.call(n, 'value')),
                        ny(s)
                      );
                    case 'ObjectTypeIndexer':
                      var xt = og(i);
                      return ny([
                        xt || '',
                        '[',
                        e.call(n, 'id'),
                        i.id ? ': ' : '',
                        e.call(n, 'key'),
                        ']: ',
                        e.call(n, 'value'),
                      ]);
                    case 'ObjectTypeProperty':
                      var At = og(i),
                        St = '';
                      return (
                        i.proto
                          ? (St = 'proto ')
                          : i.static && (St = 'static '),
                        ny([
                          St,
                          Fg(i) ? i.kind + ' ' : '',
                          At || '',
                          Ty(e, t, n),
                          Yy(e),
                          Sg(i, t) ? '' : ': ',
                          e.call(n, 'value'),
                        ])
                      );
                    case 'QualifiedTypeIdentifier':
                      return ny([
                        e.call(n, 'qualification'),
                        '.',
                        e.call(n, 'id'),
                      ]);
                    case 'StringLiteralTypeAnnotation':
                      return ev(i, t);
                    case 'NumberLiteralTypeAnnotation':
                      return (
                        Wr.strictEqual(c(i.value), 'number'),
                        null != i.extra ? $m(i.extra.raw) : $m(i.raw)
                      );
                    case 'StringTypeAnnotation':
                      return 'string';
                    case 'DeclareTypeAlias':
                    case 'TypeAlias':
                      ('DeclareTypeAlias' === i.type || i.declare) &&
                        s.push('declare ');
                      var wt = Gy(i.id, i.right, e.call(n, 'right'), t);
                      return (
                        s.push(
                          'type ',
                          e.call(n, 'id'),
                          e.call(n, 'typeParameters'),
                          ' =',
                          wt,
                          a,
                        ),
                        uy(ny(s))
                      );
                    case 'TypeCastExpression':
                      var Ft = e.getValue(),
                        kt =
                          Ft &&
                          Ft.typeAnnotation &&
                          Ft.typeAnnotation.range &&
                          t.originalText
                            .substring(Ft.typeAnnotation.range[0])
                            .match(/^\/\*\s*:/);
                      return ny([
                        '(',
                        e.call(n, 'expression'),
                        kt ? ' /*' : '',
                        ': ',
                        e.call(n, 'typeAnnotation'),
                        kt ? ' */' : '',
                        ')',
                      ]);
                    case 'TypeParameterDeclaration':
                    case 'TypeParameterInstantiation':
                      var Tt = e.getValue(),
                        _t = Tt.range
                          ? t.originalText
                              .substring(0, Tt.range[0])
                              .lastIndexOf('/*')
                          : -1;
                      return _t >= 0 &&
                        t.originalText.substring(_t).match(/^\/\*\s*::/)
                        ? ny(['/*:: ', $y(e, t, n, 'params'), ' */'])
                        : $y(e, t, n, 'params');
                    case 'TSTypeParameterDeclaration':
                    case 'TSTypeParameterInstantiation':
                      return $y(e, t, n, 'params');
                    case 'TSTypeParameter':
                    case 'TypeParameter':
                      var Ot = e.getParentNode();
                      if ('TSMappedType' === Ot.type)
                        return (
                          s.push('[', e.call(n, 'name')),
                          i.constraint &&
                            s.push(' in ', e.call(n, 'constraint')),
                          s.push(']'),
                          ny(s)
                        );
                      var Nt = og(i);
                      Nt && s.push(Nt),
                        s.push(e.call(n, 'name')),
                        i.bound && (s.push(': '), s.push(e.call(n, 'bound'))),
                        i.constraint &&
                          s.push(' extends ', e.call(n, 'constraint')),
                        i.default && s.push(' = ', e.call(n, 'default'));
                      var Bt = e.getNode(2);
                      return (
                        Ot.params &&
                          1 === Ot.params.length &&
                          zg(t) &&
                          !i.constraint &&
                          'ArrowFunctionExpression' === Bt.type &&
                          s.push(','),
                        ny(s)
                      );
                    case 'TypeofTypeAnnotation':
                      return ny(['typeof ', e.call(n, 'argument')]);
                    case 'VoidTypeAnnotation':
                      return 'void';
                    case 'InferredPredicate':
                      return '%checks';
                    case 'DeclaredPredicate':
                      return ny(['%checks(', e.call(n, 'value'), ')']);
                    case 'TSAbstractKeyword':
                      return 'abstract';
                    case 'TSAnyKeyword':
                      return 'any';
                    case 'TSAsyncKeyword':
                      return 'async';
                    case 'TSBooleanKeyword':
                      return 'boolean';
                    case 'TSBigIntKeyword':
                      return 'bigint';
                    case 'TSConstKeyword':
                      return 'const';
                    case 'TSDeclareKeyword':
                      return 'declare';
                    case 'TSExportKeyword':
                      return 'export';
                    case 'TSNeverKeyword':
                      return 'never';
                    case 'TSNumberKeyword':
                      return 'number';
                    case 'TSObjectKeyword':
                      return 'object';
                    case 'TSProtectedKeyword':
                      return 'protected';
                    case 'TSPrivateKeyword':
                      return 'private';
                    case 'TSPublicKeyword':
                      return 'public';
                    case 'TSReadonlyKeyword':
                      return 'readonly';
                    case 'TSSymbolKeyword':
                      return 'symbol';
                    case 'TSStaticKeyword':
                      return 'static';
                    case 'TSStringKeyword':
                      return 'string';
                    case 'TSUndefinedKeyword':
                      return 'undefined';
                    case 'TSUnknownKeyword':
                      return 'unknown';
                    case 'TSVoidKeyword':
                      return 'void';
                    case 'TSAsExpression':
                      return ny([
                        e.call(n, 'expression'),
                        ' as ',
                        e.call(n, 'typeAnnotation'),
                      ]);
                    case 'TSArrayType':
                      return ny([e.call(n, 'elementType'), '[]']);
                    case 'TSPropertySignature':
                      return (
                        i.export && s.push('export '),
                        i.accessibility && s.push(i.accessibility + ' '),
                        i.static && s.push('static '),
                        i.readonly && s.push('readonly '),
                        s.push(Ty(e, t, n), Yy(e)),
                        i.typeAnnotation &&
                          (s.push(': '), s.push(e.call(n, 'typeAnnotation'))),
                        i.initializer &&
                          s.push(' = ', e.call(n, 'initializer')),
                        ny(s)
                      );
                    case 'TSParameterProperty':
                      return (
                        i.accessibility && s.push(i.accessibility + ' '),
                        i.export && s.push('export '),
                        i.static && s.push('static '),
                        i.readonly && s.push('readonly '),
                        s.push(e.call(n, 'parameter')),
                        ny(s)
                      );
                    case 'TSTypeReference':
                      return ny([
                        e.call(n, 'typeName'),
                        $y(e, t, n, 'typeParameters'),
                      ]);
                    case 'TSTypeQuery':
                      return ny(['typeof ', e.call(n, 'exprName')]);
                    case 'TSIndexSignature':
                      var It = e.getParentNode();
                      return ny([
                        i.export ? 'export ' : '',
                        i.accessibility ? ny([i.accessibility, ' ']) : '',
                        i.static ? 'static ' : '',
                        i.readonly ? 'readonly ' : '',
                        '[',
                        i.parameters ? ny(e.map(n, 'parameters')) : '',
                        ']: ',
                        e.call(n, 'typeAnnotation'),
                        'ClassBody' === It.type ? a : '',
                      ]);
                    case 'TSTypePredicate':
                      return ny([
                        i.asserts ? 'asserts ' : '',
                        e.call(n, 'parameterName'),
                        i.typeAnnotation
                          ? ny([' is ', e.call(n, 'typeAnnotation')])
                          : '',
                      ]);
                    case 'TSNonNullExpression':
                      return ny([e.call(n, 'expression'), '!']);
                    case 'TSThisType':
                      return 'this';
                    case 'TSImportType':
                      return ny([
                        i.isTypeOf ? 'typeof ' : '',
                        'import(',
                        e.call(n, 'parameter'),
                        ')',
                        i.qualifier ? ny(['.', e.call(n, 'qualifier')]) : '',
                        $y(e, t, n, 'typeParameters'),
                      ]);
                    case 'TSLiteralType':
                      return e.call(n, 'literal');
                    case 'TSIndexedAccessType':
                      return ny([
                        e.call(n, 'objectType'),
                        '[',
                        e.call(n, 'indexType'),
                        ']',
                      ]);
                    case 'TSConstructSignatureDeclaration':
                    case 'TSCallSignatureDeclaration':
                    case 'TSConstructorType':
                      if (
                        ('TSCallSignatureDeclaration' !== i.type &&
                          s.push('new '),
                        s.push(uy(My(e, n, t, !1, !0))),
                        i.returnType)
                      ) {
                        var Pt = 'TSConstructorType' === i.type;
                        s.push(Pt ? ' => ' : ': ', e.call(n, 'returnType'));
                      }
                      return ny(s);
                    case 'TSTypeOperator':
                      return ny([i.operator, ' ', e.call(n, 'typeAnnotation')]);
                    case 'TSMappedType':
                      var Mt = jm(t.originalText, t.locStart(i), t.locEnd(i));
                      return uy(
                        ny([
                          '{',
                          cy(
                            ny([
                              t.bracketSpacing ? iy : oy,
                              i.readonly
                                ? ny([ug(i.readonly, 'readonly'), ' '])
                                : '',
                              Wy(e, 0, n),
                              e.call(n, 'typeParameter'),
                              i.optional ? ug(i.optional, '?') : '',
                              ': ',
                              e.call(n, 'typeAnnotation'),
                              hy(a, ''),
                            ]),
                          ),
                          xa.printDanglingComments(e, t, !0),
                          t.bracketSpacing ? iy : oy,
                          '}',
                        ]),
                        { shouldBreak: Mt },
                      );
                    case 'TSMethodSignature':
                      return (
                        s.push(
                          i.accessibility ? ny([i.accessibility, ' ']) : '',
                          i.export ? 'export ' : '',
                          i.static ? 'static ' : '',
                          i.readonly ? 'readonly ' : '',
                          i.computed ? '[' : '',
                          e.call(n, 'key'),
                          i.computed ? ']' : '',
                          Yy(e),
                          My(e, n, t, !1, !0),
                        ),
                        i.returnType && s.push(': ', e.call(n, 'returnType')),
                        uy(ny(s))
                      );
                    case 'TSNamespaceExportDeclaration':
                      return (
                        s.push('export as namespace ', e.call(n, 'id')),
                        t.semi && s.push(';'),
                        uy(ny(s))
                      );
                    case 'TSEnumDeclaration':
                      return (
                        i.declare && s.push('declare '),
                        i.modifiers && s.push(Wy(e, 0, n)),
                        i.const && s.push('const '),
                        s.push('enum ', e.call(n, 'id'), ' '),
                        0 === i.members.length
                          ? s.push(
                              uy(
                                ny([
                                  '{',
                                  xa.printDanglingComments(e, t),
                                  oy,
                                  '}',
                                ]),
                              ),
                            )
                          : s.push(
                              uy(
                                ny([
                                  '{',
                                  cy(
                                    ny([
                                      ay,
                                      iv(e, t, 'members', n),
                                      Sy(t, 'es5') ? ',' : '',
                                    ]),
                                  ),
                                  xa.printDanglingComments(e, t, !0),
                                  ay,
                                  '}',
                                ]),
                              ),
                            ),
                        ny(s)
                      );
                    case 'TSEnumMember':
                      return (
                        s.push(e.call(n, 'id')),
                        i.initializer &&
                          s.push(' = ', e.call(n, 'initializer')),
                        ny(s)
                      );
                    case 'TSImportEqualsDeclaration':
                      return (
                        i.isExport && s.push('export '),
                        s.push(
                          'import ',
                          e.call(n, 'id'),
                          ' = ',
                          e.call(n, 'moduleReference'),
                        ),
                        t.semi && s.push(';'),
                        uy(ny(s))
                      );
                    case 'TSExternalModuleReference':
                      return ny(['require(', e.call(n, 'expression'), ')']);
                    case 'TSModuleDeclaration':
                      var Lt = e.getParentNode(),
                        Rt = Ng(i.id),
                        jt = 'TSModuleDeclaration' === Lt.type,
                        Ut = i.body && 'TSModuleDeclaration' === i.body.type;
                      if (jt) s.push('.');
                      else {
                        i.declare && s.push('declare '), s.push(Wy(e, 0, n));
                        var Vt = t.originalText.slice(
                          t.locStart(i),
                          t.locStart(i.id),
                        );
                        ('Identifier' === i.id.type &&
                          'global' === i.id.name &&
                          !/namespace|module/.test(Vt)) ||
                          s.push(
                            Rt || /(^|\s)module(\s|$)/.test(Vt)
                              ? 'module '
                              : 'namespace ',
                          );
                      }
                      return (
                        s.push(e.call(n, 'id')),
                        Ut
                          ? s.push(e.call(n, 'body'))
                          : i.body
                          ? s.push(' ', uy(e.call(n, 'body')))
                          : s.push(a),
                        ny(s)
                      );
                    case 'PrivateName':
                      return ny(['#', e.call(n, 'id')]);
                    case 'TSConditionalType':
                      return Fy(e, t, n, {
                        beforeParts: function() {
                          return [
                            e.call(n, 'checkType'),
                            ' ',
                            'extends',
                            ' ',
                            e.call(n, 'extendsType'),
                          ];
                        },
                        afterParts: function() {
                          return [];
                        },
                        shouldCheckJsx: !1,
                        conditionalNodeType: 'TSConditionalType',
                        consequentNodePropertyName: 'trueType',
                        alternateNodePropertyName: 'falseType',
                        testNodePropertyName: 'checkType',
                        breakNested: !0,
                      });
                    case 'TSInferType':
                      return ny(['infer', ' ', e.call(n, 'typeParameter')]);
                    case 'InterpreterDirective':
                      return (
                        s.push('#!', i.value, ay),
                        Gm(t.originalText, i, t) && s.push(ay),
                        ny(s)
                      );
                    case 'NGRoot':
                      return ny(
                        [].concat(
                          e.call(n, 'node'),
                          i.node.comments && 0 !== i.node.comments.length
                            ? ny([' //', i.node.comments[0].value.trimRight()])
                            : [],
                        ),
                      );
                    case 'NGChainedExpression':
                      return uy(
                        ry(
                          ny([';', iy]),
                          e.map(function(e) {
                            return gg(e) ? n(e) : ny(['(', n(e), ')']);
                          }, 'expressions'),
                        ),
                      );
                    case 'NGEmptyExpression':
                      return '';
                    case 'NGQuotedExpression':
                      return ny([i.prefix, ':', i.value]);
                    case 'NGMicrosyntax':
                      return ny(
                        e.map(function(e, t) {
                          return ny([
                            0 === t
                              ? ''
                              : Lg(e.getValue(), t, i)
                              ? ' '
                              : ny([';', iy]),
                            n(e),
                          ]);
                        }, 'body'),
                      );
                    case 'NGMicrosyntaxKey':
                      return /^[a-z_$][a-z0-9_$]*(-[a-z_$][a-z0-9_$])*$/i.test(
                        i.name,
                      )
                        ? i.name
                        : JSON.stringify(i.name);
                    case 'NGMicrosyntaxExpression':
                      return ny([
                        e.call(n, 'expression'),
                        null === i.alias
                          ? ''
                          : ny([' as ', e.call(n, 'alias')]),
                      ]);
                    case 'NGMicrosyntaxKeyedExpression':
                      var Wt = e.getName(),
                        $t = e.getParentNode(),
                        qt =
                          Lg(i, Wt, $t) ||
                          (((1 === Wt &&
                            ('then' === i.key.name || 'else' === i.key.name)) ||
                            (2 === Wt &&
                              'else' === i.key.name &&
                              'NGMicrosyntaxKeyedExpression' ===
                                $t.body[Wt - 1].type &&
                              'then' === $t.body[Wt - 1].key.name)) &&
                            'NGMicrosyntaxExpression' === $t.body[0].type);
                      return ny([
                        e.call(n, 'key'),
                        qt ? ' ' : ': ',
                        e.call(n, 'expression'),
                      ]);
                    case 'NGMicrosyntaxLet':
                      return ny([
                        'let ',
                        e.call(n, 'key'),
                        null === i.value ? '' : ny([' = ', e.call(n, 'value')]),
                      ]);
                    case 'NGMicrosyntaxAs':
                      return ny([e.call(n, 'key'), ' as ', e.call(n, 'alias')]);
                    case 'ArgumentPlaceholder':
                      return '?';
                    default:
                      throw new Error(
                        'unknown type: ' + JSON.stringify(i.type),
                      );
                  }
                })(e, t, n, r);
              if (!i || Cy(o)) return o;
              var s = Im(e),
                u = [];
              if (
                'ClassMethod' === i.type ||
                'ClassPrivateMethod' === i.type ||
                'ClassProperty' === i.type ||
                'TSAbstractClassProperty' === i.type ||
                'ClassPrivateProperty' === i.type ||
                'MethodDefinition' === i.type ||
                'TSAbstractMethodDefinition' === i.type
              );
              else if (
                i.decorators &&
                i.decorators.length > 0 &&
                !(
                  s &&
                  t.locStart(s, { ignoreDecorators: !0 }) >
                    t.locStart(i.decorators[0])
                )
              ) {
                var l =
                  'ClassExpression' === i.type ||
                  'ClassDeclaration' === i.type ||
                  mg(i, t)
                    ? ay
                    : iy;
                e.each(function(e) {
                  var t = e.getValue();
                  (t = t.expression ? t.expression : t.callee), u.push(n(e), l);
                }, 'decorators'),
                  s && u.unshift(ay);
              } else
                Pm(i) &&
                i.declaration &&
                i.declaration.decorators &&
                i.declaration.decorators.length > 0 &&
                t.locStart(i, { ignoreDecorators: !0 }) >
                  t.locStart(i.declaration.decorators[0])
                  ? e.each(
                      function(e) {
                        var t = 'Decorator' === e.getValue().type ? '' : '@';
                        u.push(t, n(e), ay);
                      },
                      'declaration',
                      'decorators',
                    )
                  : (a = wm(e, t));
              var p = [];
              if ((a && p.unshift('('), p.push(o), a)) {
                var f = e.getValue();
                pg(f) &&
                  (p.push(' /*'),
                  p.push(f.trailingComments[0].value.trimLeft()),
                  p.push('*/'),
                  (f.trailingComments[0].printed = !0)),
                  p.push(')');
              }
              return u.length > 0 ? uy(ny(u.concat(p))) : ny(p);
            },
            embed: Vd,
            insertPragma: eg,
            massageAstNode: $d,
            hasPrettierIgnore: yg,
            willPrintOwnComments: function(e) {
              var t = e.getValue(),
                n = e.getParentNode();
              return (
                ((t &&
                  (Tg(t) ||
                    pg(t) ||
                    (n &&
                      ('CallExpression' === n.type ||
                        'OptionalCallExpression' === n.type) &&
                      (lg(t.leadingComments) || lg(t.trailingComments))))) ||
                  (n &&
                    ('JSXSpreadAttribute' === n.type ||
                      'JSXSpreadChild' === n.type ||
                      'UnionTypeAnnotation' === n.type ||
                      'TSUnionType' === n.type ||
                      (('ClassDeclaration' === n.type ||
                        'ClassExpression' === n.type) &&
                        n.superClass === t)))) &&
                !qm(e)
              );
            },
            canAttachComment: function(e) {
              return (
                e.type &&
                'CommentBlock' !== e.type &&
                'CommentLine' !== e.type &&
                'Line' !== e.type &&
                'Block' !== e.type &&
                'EmptyStatement' !== e.type &&
                'TemplateElement' !== e.type &&
                'Import' !== e.type
              );
            },
            printComment: function(e, t) {
              var n = e.getValue();
              switch (n.type) {
                case 'CommentBlock':
                case 'Block':
                  if (
                    (function(e) {
                      var t = '*'.concat(e.value, '*').split('\n');
                      return (
                        t.length > 1 &&
                        t.every(function(e) {
                          return '*' === e.trim()[0];
                        })
                      );
                    })(n)
                  ) {
                    var r = (function(e) {
                      var t = e.value.split('\n');
                      return ny([
                        '/*',
                        ry(
                          ay,
                          t.map(function(e, n) {
                            return 0 === n
                              ? e.trimRight()
                              : ' ' +
                                  (n < t.length - 1 ? e.trim() : e.trimLeft());
                          }),
                        ),
                        '*/',
                      ]);
                    })(n);
                    return n.trailing &&
                      !Rm(t.originalText, t.locStart(n), { backwards: !0 })
                      ? ny([ay, r])
                      : r;
                  }
                  var i = '*-/' === t.originalText.substr(t.locEnd(n) - 3, 3);
                  return '/*' + n.value + (i ? '*-/' : '*/');
                case 'CommentLine':
                case 'Line':
                  return t.originalText.slice(t.locStart(n)).startsWith('#!')
                    ? '#!' + n.value.trimRight()
                    : '//' + n.value.trimRight();
                default:
                  throw new Error('Not a comment: ' + JSON.stringify(n));
              }
            },
            isBlockComment: dd.isBlockComment,
            handleComments: {
              ownLine: dd.handleOwnLineComment,
              endOfLine: dd.handleEndOfLineComment,
              remaining: dd.handleRemainingComment,
            },
          },
          ov = ea.builders,
          sv = ov.concat,
          uv = ov.hardline,
          cv = ov.indent,
          lv = ov.join,
          pv = {
            preprocess: Bm,
            print: function(e, t, n) {
              var r = e.getValue();
              switch (r.type) {
                case 'JsonRoot':
                  return sv([e.call(n, 'node'), uv]);
                case 'ArrayExpression':
                  return 0 === r.elements.length
                    ? '[]'
                    : sv([
                        '[',
                        cv(sv([uv, lv(sv([',', uv]), e.map(n, 'elements'))])),
                        uv,
                        ']',
                      ]);
                case 'ObjectExpression':
                  return 0 === r.properties.length
                    ? '{}'
                    : sv([
                        '{',
                        cv(sv([uv, lv(sv([',', uv]), e.map(n, 'properties'))])),
                        uv,
                        '}',
                      ]);
                case 'ObjectProperty':
                  return sv([e.call(n, 'key'), ': ', e.call(n, 'value')]);
                case 'UnaryExpression':
                  return sv([
                    '+' === r.operator ? '' : r.operator,
                    e.call(n, 'argument'),
                  ]);
                case 'NullLiteral':
                  return 'null';
                case 'BooleanLiteral':
                  return r.value ? 'true' : 'false';
                case 'StringLiteral':
                case 'NumericLiteral':
                  return JSON.stringify(r.value);
                case 'Identifier':
                  return JSON.stringify(r.name);
                default:
                  throw new Error('unknown type: ' + JSON.stringify(r.type));
              }
            },
            massageAstNode: function(e, t) {
              return (
                delete t.start,
                delete t.end,
                delete t.extra,
                delete t.loc,
                delete t.comments,
                delete t.errors,
                'Identifier' === e.type
                  ? { type: 'StringLiteral', value: e.name }
                  : 'UnaryExpression' === e.type && '+' === e.operator
                  ? t.argument
                  : void 0
              );
            },
          },
          fv = {
            arrowParens: {
              since: '1.9.0',
              category: 'JavaScript',
              type: 'choice',
              default: 'avoid',
              description:
                'Include parentheses around a sole arrow function parameter.',
              choices: [
                {
                  value: 'avoid',
                  description: 'Omit parens when possible. Example: `x => x`',
                },
                {
                  value: 'always',
                  description: 'Always include parens. Example: `(x) => x`',
                },
              ],
            },
            bracketSpacing: Iu.bracketSpacing,
            jsxBracketSameLine: {
              since: '0.17.0',
              category: 'JavaScript',
              type: 'boolean',
              default: !1,
              description: 'Put > on the last line instead of at a new line.',
            },
            semi: {
              since: '1.0.0',
              category: 'JavaScript',
              type: 'boolean',
              default: !0,
              description: 'Print semicolons.',
              oppositeDescription:
                'Do not print semicolons, except at the beginning of lines which may need them.',
            },
            singleQuote: Iu.singleQuote,
            jsxSingleQuote: {
              since: '1.15.0',
              category: 'JavaScript',
              type: 'boolean',
              default: !1,
              description: 'Use single quotes in JSX.',
            },
            quoteProps: {
              since: '1.17.0',
              category: 'JavaScript',
              type: 'choice',
              default: 'as-needed',
              description: 'Change when properties in objects are quoted.',
              choices: [
                {
                  value: 'as-needed',
                  description:
                    'Only add quotes around object properties where required.',
                },
                {
                  value: 'consistent',
                  description:
                    'If at least one property in an object requires quotes, quote all properties.',
                },
                {
                  value: 'preserve',
                  description:
                    'Respect the input use of quotes in object properties.',
                },
              ],
            },
            trailingComma: {
              since: '0.0.0',
              category: 'JavaScript',
              type: 'choice',
              default: [
                { since: '0.0.0', value: !1 },
                { since: '0.19.0', value: 'none' },
              ],
              description:
                'Print trailing commas wherever possible when multi-line.',
              choices: [
                { value: 'none', description: 'No trailing commas.' },
                {
                  value: 'es5',
                  description:
                    'Trailing commas where valid in ES5 (objects, arrays, etc.)',
                },
                {
                  value: 'all',
                  description:
                    'Trailing commas wherever possible (including function arguments).',
                },
                { value: !0, deprecated: '0.19.0', redirect: 'es5' },
                { value: !1, deprecated: '0.19.0', redirect: 'none' },
              ],
            },
          },
          hv = ['js', 'node'],
          dv = [
            '.js',
            '._js',
            '.bones',
            '.es',
            '.es6',
            '.frag',
            '.gs',
            '.jake',
            '.jsb',
            '.jscad',
            '.jsfl',
            '.jsm',
            '.jss',
            '.mjs',
            '.njs',
            '.pac',
            '.sjs',
            '.ssjs',
            '.xsjs',
            '.xsjslib',
          ],
          mv = ['Jakefile'],
          gv = ['chakra', 'd8', 'js', 'node', 'rhino', 'v8', 'v8-shell'],
          yv = {
            name: 'JavaScript',
            type: 'programming',
            tmScope: 'source.js',
            aceMode: 'javascript',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'text/javascript',
            color: '#f1e05a',
            aliases: hv,
            extensions: dv,
            filenames: mv,
            interpreters: gv,
            languageId: 183,
          },
          vv = Object.freeze({
            __proto__: null,
            name: 'JavaScript',
            type: 'programming',
            tmScope: 'source.js',
            aceMode: 'javascript',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'text/javascript',
            color: '#f1e05a',
            aliases: hv,
            extensions: dv,
            filenames: mv,
            interpreters: gv,
            languageId: 183,
            default: yv,
          }),
          Dv = ['.jsx'],
          Ev = {
            name: 'JSX',
            type: 'programming',
            group: 'JavaScript',
            extensions: Dv,
            tmScope: 'source.js.jsx',
            aceMode: 'javascript',
            codemirrorMode: 'jsx',
            codemirrorMimeType: 'text/jsx',
            languageId: 178,
          },
          Cv = Object.freeze({
            __proto__: null,
            name: 'JSX',
            type: 'programming',
            group: 'JavaScript',
            extensions: Dv,
            tmScope: 'source.js.jsx',
            aceMode: 'javascript',
            codemirrorMode: 'jsx',
            codemirrorMimeType: 'text/jsx',
            languageId: 178,
            default: Ev,
          }),
          bv = ['ts'],
          xv = ['deno', 'ts-node'],
          Av = ['.ts'],
          Sv = {
            name: 'TypeScript',
            type: 'programming',
            color: '#2b7489',
            aliases: bv,
            interpreters: xv,
            extensions: Av,
            tmScope: 'source.ts',
            aceMode: 'typescript',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'application/typescript',
            languageId: 378,
          },
          wv = Object.freeze({
            __proto__: null,
            name: 'TypeScript',
            type: 'programming',
            color: '#2b7489',
            aliases: bv,
            interpreters: xv,
            extensions: Av,
            tmScope: 'source.ts',
            aceMode: 'typescript',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'application/typescript',
            languageId: 378,
            default: Sv,
          }),
          Fv = ['.tsx'],
          kv = {
            name: 'TSX',
            type: 'programming',
            group: 'TypeScript',
            extensions: Fv,
            tmScope: 'source.tsx',
            aceMode: 'javascript',
            codemirrorMode: 'jsx',
            codemirrorMimeType: 'text/jsx',
            languageId: 94901924,
          },
          Tv = Object.freeze({
            __proto__: null,
            name: 'TSX',
            type: 'programming',
            group: 'TypeScript',
            extensions: Fv,
            tmScope: 'source.tsx',
            aceMode: 'javascript',
            codemirrorMode: 'jsx',
            codemirrorMimeType: 'text/jsx',
            languageId: 94901924,
            default: kv,
          }),
          _v = [
            '.json',
            '.avsc',
            '.geojson',
            '.gltf',
            '.har',
            '.ice',
            '.JSON-tmLanguage',
            '.jsonl',
            '.mcmeta',
            '.tfstate',
            '.tfstate.backup',
            '.topojson',
            '.webapp',
            '.webmanifest',
            '.yy',
            '.yyp',
          ],
          Ov = [
            '.arcconfig',
            '.htmlhintrc',
            '.tern-config',
            '.tern-project',
            '.watchmanconfig',
            'composer.lock',
            'mcmod.info',
          ],
          Nv = {
            name: 'JSON',
            type: 'data',
            tmScope: 'source.json',
            aceMode: 'json',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'application/json',
            searchable: !1,
            extensions: _v,
            filenames: Ov,
            languageId: 174,
          },
          Bv = Object.freeze({
            __proto__: null,
            name: 'JSON',
            type: 'data',
            tmScope: 'source.json',
            aceMode: 'json',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'application/json',
            searchable: !1,
            extensions: _v,
            filenames: Ov,
            languageId: 174,
            default: Nv,
          }),
          Iv = ['jsonc'],
          Pv = [
            '.sublime-build',
            '.sublime-commands',
            '.sublime-completions',
            '.sublime-keymap',
            '.sublime-macro',
            '.sublime-menu',
            '.sublime-mousemap',
            '.sublime-project',
            '.sublime-settings',
            '.sublime-theme',
            '.sublime-workspace',
            '.sublime_metrics',
            '.sublime_session',
          ],
          Mv = [
            '.babelrc',
            '.eslintrc.json',
            '.jscsrc',
            '.jshintrc',
            '.jslintrc',
            'jsconfig.json',
            'language-configuration.json',
            'tsconfig.json',
          ],
          Lv = {
            name: 'JSON with Comments',
            type: 'data',
            group: 'JSON',
            tmScope: 'source.js',
            aceMode: 'javascript',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'text/javascript',
            aliases: Iv,
            extensions: Pv,
            filenames: Mv,
            languageId: 423,
          },
          Rv = Object.freeze({
            __proto__: null,
            name: 'JSON with Comments',
            type: 'data',
            group: 'JSON',
            tmScope: 'source.js',
            aceMode: 'javascript',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'text/javascript',
            aliases: Iv,
            extensions: Pv,
            filenames: Mv,
            languageId: 423,
            default: Lv,
          }),
          jv = ['.json5'],
          Uv = {
            name: 'JSON5',
            type: 'data',
            extensions: jv,
            tmScope: 'source.js',
            aceMode: 'javascript',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'application/json',
            languageId: 175,
          },
          Vv = Object.freeze({
            __proto__: null,
            name: 'JSON5',
            type: 'data',
            extensions: jv,
            tmScope: 'source.js',
            aceMode: 'javascript',
            codemirrorMode: 'javascript',
            codemirrorMimeType: 'application/json',
            languageId: 175,
            default: Uv,
          }),
          Wv = pt(vv),
          $v = pt(Cv),
          qv = pt(wv),
          Yv = pt(Tv),
          Jv = pt(Bv),
          Kv = pt(Rv),
          zv = pt(Vv),
          Hv = {
            languages: [
              Mu(Wv, function(e) {
                return Object.assign(e, {
                  since: '0.0.0',
                  parsers: ['babel', 'flow'],
                  vscodeLanguageIds: ['javascript', 'mongo'],
                  interpreters: e.interpreters.concat(['nodejs']),
                });
              }),
              Mu(Wv, function(e) {
                return Object.assign(e, {
                  name: 'Flow',
                  since: '0.0.0',
                  parsers: ['babel', 'flow'],
                  vscodeLanguageIds: ['javascript'],
                  aliases: [],
                  filenames: [],
                  extensions: ['.js.flow'],
                });
              }),
              Mu($v, function(e) {
                return Object.assign(e, {
                  since: '0.0.0',
                  parsers: ['babel', 'flow'],
                  vscodeLanguageIds: ['javascriptreact'],
                });
              }),
              Mu(qv, function(e) {
                return Object.assign(e, {
                  since: '1.4.0',
                  parsers: ['typescript'],
                  vscodeLanguageIds: ['typescript'],
                });
              }),
              Mu(Yv, function(e) {
                return Object.assign(e, {
                  since: '1.4.0',
                  parsers: ['typescript'],
                  vscodeLanguageIds: ['typescriptreact'],
                });
              }),
              Mu(Jv, function(e) {
                return Object.assign(e, {
                  name: 'JSON.stringify',
                  since: '1.13.0',
                  parsers: ['json-stringify'],
                  vscodeLanguageIds: ['json'],
                  extensions: [],
                  filenames: [
                    'package.json',
                    'package-lock.json',
                    'composer.json',
                  ],
                });
              }),
              Mu(Jv, function(e) {
                return Object.assign(e, {
                  since: '1.5.0',
                  parsers: ['json'],
                  vscodeLanguageIds: ['json'],
                  filenames: e.filenames.concat(['.prettierrc']),
                });
              }),
              Mu(Kv, function(e) {
                return Object.assign(e, {
                  since: '1.5.0',
                  parsers: ['json'],
                  vscodeLanguageIds: ['jsonc'],
                  filenames: e.filenames.concat(['.eslintrc']),
                });
              }),
              Mu(zv, function(e) {
                return Object.assign(e, {
                  since: '1.13.0',
                  parsers: ['json5'],
                  vscodeLanguageIds: ['json5'],
                });
              }),
            ],
            options: fv,
            printers: { estree: av, 'estree-json': pv },
          },
          Xv =
            '[\\u02ea-\\u02eb\\u1100-\\u11ff\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u3000-\\u303f\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u3190-\\u3191\\u3196-\\u31ba\\u31c0-\\u31e3\\u31f0-\\u321e\\u322a-\\u3247\\u3260-\\u327e\\u328a-\\u32b0\\u32c0-\\u32cb\\u32d0-\\u3370\\u337b-\\u337f\\u33e0-\\u33fe\\u3400-\\u4db5\\u4e00-\\u9fef\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufe10-\\ufe1f\\ufe30-\\ufe6f\\uff00-\\uffef]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67]|\\ud83c[\\ude00\\ude50-\\ude51]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d]',
          Gv =
            '[\\u1100-\\u11ff\\u3001-\\u3003\\u3008-\\u3011\\u3013-\\u301f\\u302e-\\u3030\\u3037\\u30fb\\u3131-\\u318e\\u3200-\\u321e\\u3260-\\u327e\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufe45-\\ufe46\\uff61-\\uff65\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]',
          Qv =
            '[\\u0021-\\u002f\\u003a-\\u0040\\u005b-\\u0060\\u007b-\\u007e\\u00a1\\u00a7\\u00ab\\u00b6-\\u00b7\\u00bb\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589-\\u058a\\u05be\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u09fd\\u0a76\\u0af0\\u0c77\\u0c84\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f3a-\\u0f3d\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u1400\\u166e\\u169b-\\u169c\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205e\\u207d-\\u207e\\u208d-\\u208e\\u2308-\\u230b\\u2329-\\u232a\\u2768-\\u2775\\u27c5-\\u27c6\\u27e6-\\u27ef\\u2983-\\u2998\\u29d8-\\u29db\\u29fc-\\u29fd\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e2e\\u2e30-\\u2e4f\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301f\\u3030\\u303d\\u30a0\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua8fc\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufd3e-\\ufd3f\\ufe10-\\ufe19\\ufe30-\\ufe52\\ufe54-\\ufe61\\ufe63\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff0a\\uff0c-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3b-\\uff3d\\uff3f\\uff5b\\uff5d\\uff5f-\\uff65]|\\ud800[\\udd00-\\udd02\\udf9f\\udfd0]|\\ud801[\\udd6f]|\\ud802[\\udc57\\udd1f\\udd3f\\ude50-\\ude58\\ude7f\\udef0-\\udef6\\udf39-\\udf3f\\udf99-\\udf9c]|\\ud803[\\udf55-\\udf59]|\\ud804[\\udc47-\\udc4d\\udcbb-\\udcbc\\udcbe-\\udcc1\\udd40-\\udd43\\udd74-\\udd75\\uddc5-\\uddc8\\uddcd\\udddb\\udddd-\\udddf\\ude38-\\ude3d\\udea9]|\\ud805[\\udc4b-\\udc4f\\udc5b\\udc5d\\udcc6\\uddc1-\\uddd7\\ude41-\\ude43\\ude60-\\ude6c\\udf3c-\\udf3e]|\\ud806[\\udc3b\\udde2\\ude3f-\\ude46\\ude9a-\\ude9c\\ude9e-\\udea2]|\\ud807[\\udc41-\\udc45\\udc70-\\udc71\\udef7-\\udef8\\udfff]|\\ud809[\\udc70-\\udc74]|\\ud81a[\\ude6e-\\ude6f\\udef5\\udf37-\\udf3b\\udf44]|\\ud81b[\\ude97-\\ude9a\\udfe2]|\\ud82f[\\udc9f]|\\ud836[\\ude87-\\ude8b]|\\ud83a[\\udd5e-\\udd5f]',
          Zv = Oi.getLast,
          eD = [
            'liquidNode',
            'inlineCode',
            'emphasis',
            'strong',
            'delete',
            'link',
            'linkReference',
            'image',
            'imageReference',
            'footnote',
            'footnoteReference',
            'sentence',
            'whitespace',
            'word',
            'break',
            'inlineMath',
          ],
          tD = eD.concat(['tableCell', 'paragraph', 'heading']),
          nD = new RegExp(Gv),
          rD = new RegExp(Qv),
          iD = {
            mapAst: function(e, t) {
              return (function e(n, r, i) {
                var a = t(n, r, (i = i || []));
                return (
                  Array.isArray(a) ||
                    ((a = Object.assign({}, a)).children &&
                      (a.children = a.children.reduce(function(t, n, r) {
                        var o = e(n, r, [a].concat(i));
                        return (
                          Array.isArray(o) || (o = [o]), t.push.apply(t, o), t
                        );
                      }, []))),
                  a
                );
              })(e, null, null);
            },
            splitText: function(e, t) {
              var n = [];
              return (
                ('preserve' === t.proseWrap
                  ? e
                  : e.replace(
                      new RegExp('('.concat(Xv, ')\n(').concat(Xv, ')'), 'g'),
                      '$1$2',
                    )
                )
                  .split(/([ \t\n]+)/)
                  .forEach(function(e, t, i) {
                    t % 2 != 1
                      ? ((0 !== t && t !== i.length - 1) || '' !== e) &&
                        e
                          .split(new RegExp('('.concat(Xv, ')')))
                          .forEach(function(e, t, n) {
                            ((0 !== t && t !== n.length - 1) || '' !== e) &&
                              (t % 2 != 0
                                ? r(
                                    rD.test(e)
                                      ? {
                                          type: 'word',
                                          value: e,
                                          kind: 'cjk-punctuation',
                                          hasLeadingPunctuation: !0,
                                          hasTrailingPunctuation: !0,
                                        }
                                      : {
                                          type: 'word',
                                          value: e,
                                          kind: nD.test(e)
                                            ? 'k-letter'
                                            : 'cj-letter',
                                          hasLeadingPunctuation: !1,
                                          hasTrailingPunctuation: !1,
                                        },
                                  )
                                : '' !== e &&
                                  r({
                                    type: 'word',
                                    value: e,
                                    kind: 'non-cjk',
                                    hasLeadingPunctuation: rD.test(e[0]),
                                    hasTrailingPunctuation: rD.test(Zv(e)),
                                  }));
                          })
                      : n.push({
                          type: 'whitespace',
                          value: /\n/.test(e) ? '\n' : ' ',
                        });
                  }),
                n
              );
              function r(e) {
                var t,
                  r,
                  i = Zv(n);
                i &&
                  'word' === i.type &&
                  (('non-cjk' === i.kind &&
                    'cj-letter' === e.kind &&
                    !i.hasTrailingPunctuation) ||
                  ('cj-letter' === i.kind &&
                    'non-cjk' === e.kind &&
                    !e.hasLeadingPunctuation)
                    ? n.push({ type: 'whitespace', value: ' ' })
                    : ((t = 'non-cjk'),
                      (r = 'cjk-punctuation'),
                      (i.kind === t && e.kind === r) ||
                        (i.kind === r && e.kind === t) ||
                        [i.value, e.value].some(function(e) {
                          return /\u3000/.test(e);
                        }) ||
                        n.push({ type: 'whitespace', value: '' }))),
                  n.push(e);
              }
            },
            punctuationPattern: Qv,
            getFencedCodeBlockValue: function(e, t) {
              var n = t.slice(e.position.start.offset, e.position.end.offset),
                r = n.match(/^\s*/)[0].length,
                i = new RegExp('^\\s{0,'.concat(r, '}')),
                a = n.split('\n'),
                o = n[r],
                s = n.slice(r).match(new RegExp('^['.concat(o, ']+')))[0],
                u = new RegExp('^\\s{0,3}'.concat(s)).test(
                  a[a.length - 1].slice(c(a.length - 1)),
                );
              return a
                .slice(1, u ? -1 : void 0)
                .map(function(e, t) {
                  return e.slice(c(t + 1)).replace(i, '');
                })
                .join('\n');
              function c(t) {
                return e.position.indent[t - 1] - 1;
              }
            },
            getOrderedListItemInfo: function(e, t) {
              var n = x(
                t
                  .slice(e.position.start.offset, e.position.end.offset)
                  .match(/^\s*(\d+)(\.|\))(\s*)/),
                4,
              );
              return { numberText: n[1], marker: n[2], leadingSpaces: n[3] };
            },
            INLINE_NODE_TYPES: eD,
            INLINE_NODE_WRAPPER_TYPES: tD,
          },
          aD = ea.builders,
          oD = aD.hardline,
          sD = aD.literalline,
          uD = aD.concat,
          cD = aD.markAsRoot,
          lD = ea.utils.mapDoc,
          pD = iD.getFencedCodeBlockValue,
          fD = function(e, t, n, r) {
            var i = e.getValue();
            if ('code' === i.type && null !== i.lang) {
              var a = i.lang.match(/^[A-Za-z0-9_-]+/),
                o = (function(e) {
                  var t = Gt.getSupportInfo(null, {
                    plugins: r.plugins,
                  }).languages.find(function(t) {
                    return (
                      t.name.toLowerCase() === e ||
                      (t.aliases && -1 !== t.aliases.indexOf(e)) ||
                      (t.extensions &&
                        t.extensions.find(function(t) {
                          return t.substring(1) === e;
                        }))
                    );
                  });
                  return t ? t.parsers[0] : null;
                })(a ? a[0] : '');
              if (o) {
                var s = r.__inJsTemplate ? '~' : '`',
                  u = s.repeat(
                    Math.max(3, Oi.getMaxContinuousCount(i.value, s) + 1),
                  ),
                  c = n(pD(i, r.originalText), { parser: o });
                return cD(uD([u, i.lang, oD, l(c), u]));
              }
            }
            if ('yaml' === i.type)
              return cD(
                uD([
                  '---',
                  oD,
                  i.value && i.value.trim()
                    ? l(n(i.value, { parser: 'yaml' }))
                    : '',
                  '---',
                ]),
              );
            switch (i.type) {
              case 'importExport':
                return n(i.value, { parser: 'babel' });
              case 'jsx':
                return n(i.value, { parser: '__js_expression' });
            }
            return null;
            function l(e) {
              return lD(e, function(e) {
                return 'string' == typeof e && e.includes('\n')
                  ? uD(
                      e.split(/(\n)/g).map(function(e, t) {
                        return t % 2 == 0 ? e : sD;
                      }),
                    )
                  : e;
              });
            }
          },
          hD = ['format', 'prettier'];
        function dD(e) {
          var t = '@('.concat(hD.join('|'), ')'),
            n = new RegExp(
              [
                '\x3c!--\\s*'.concat(t, '\\s*--\x3e'),
                '\x3c!--.*\r?\n[\\s\\S]*(^|\n)[^\\S\n]*'.concat(
                  t,
                  '[^\\S\n]*($|\n)[\\s\\S]*\n.*--\x3e',
                ),
              ].join('|'),
              'm',
            ),
            r = e.match(n);
          return r && 0 === r.index;
        }
        var mD = {
            startWithPragma: dD,
            hasPragma: function(e) {
              return dD(Eo(e).content.trimLeft());
            },
            insertPragma: function(e) {
              var t = Eo(e),
                n = '\x3c!-- @'.concat(hD[0], ' --\x3e');
              return t.frontMatter
                ? ''
                    .concat(t.frontMatter.raw, '\n\n')
                    .concat(n, '\n\n')
                    .concat(t.content)
                : ''.concat(n, '\n\n').concat(t.content);
            },
          },
          gD = iD.getOrderedListItemInfo,
          yD = iD.mapAst,
          vD = iD.splitText,
          DD = /^([\u0000-\uffff]|[\ud800-\udbff][\udc00-\udfff])$/;
        function ED(e, t, n) {
          return yD(e, function(e) {
            if (!e.children) return e;
            var r = e.children.reduce(function(e, r) {
              var i = e[e.length - 1];
              return i && t(i, r) ? e.splice(-1, 1, n(i, r)) : e.push(r), e;
            }, []);
            return Object.assign({}, e, { children: r });
          });
        }
        var CD = function(e, t) {
            return (e = (function(e) {
              return ED(
                e,
                function(e, t) {
                  return 'importExport' === e.type && 'importExport' === t.type;
                },
                function(e, t) {
                  return {
                    type: 'importExport',
                    value: e.value + '\n\n' + t.value,
                    position: { start: e.position.start, end: t.position.end },
                  };
                },
              );
            })(
              (e = (function(e) {
                return yD(e, function(e) {
                  return 'import' !== e.type && 'export' !== e.type
                    ? e
                    : Object.assign({}, e, { type: 'importExport' });
                });
              })(
                (e = (function(e, t) {
                  return yD(e, function(e, n, r) {
                    var i = x(r, 1)[0];
                    if ('text' !== e.type) return e;
                    var a = e.value;
                    return (
                      'paragraph' === i.type &&
                        (0 === n && (a = a.trimLeft()),
                        n === i.children.length - 1 && (a = a.trimRight())),
                      {
                        type: 'sentence',
                        position: e.position,
                        children: vD(a, t),
                      }
                    );
                  });
                })(
                  (e = (function(e, t) {
                    return yD(e, function(e, r, i) {
                      if ('list' === e.type && 0 !== e.children.length) {
                        for (var a = 0; a < i.length; a++) {
                          var o = i[a];
                          if ('list' === o.type && !o.isAligned)
                            return (e.isAligned = !1), e;
                        }
                        e.isAligned = (function(e) {
                          if (!e.ordered) return !0;
                          var r = x(e.children, 2),
                            i = r[0],
                            a = r[1];
                          if (gD(i, t.originalText).leadingSpaces.length > 1)
                            return !0;
                          var o = n(i);
                          if (-1 === o) return !1;
                          if (1 === e.children.length)
                            return o % t.tabWidth == 0;
                          var s = n(a);
                          return (
                            o === s &&
                            (o % t.tabWidth == 0 ||
                              gD(a, t.originalText).leadingSpaces.length > 1)
                          );
                        })(e);
                      }
                      return e;
                    });
                    function n(e) {
                      return 0 === e.children.length
                        ? -1
                        : e.children[0].position.start.column - 1;
                    }
                  })(
                    (e = (function(e, t) {
                      return yD(e, function(e, n, r) {
                        if ('code' === e.type) {
                          var i = /^\n?( {4,}|\t)/.test(
                            t.originalText.slice(
                              e.position.start.offset,
                              e.position.end.offset,
                            ),
                          );
                          if (((e.isIndented = i), i))
                            for (var a = 0; a < r.length; a++) {
                              var o = r[a];
                              if (o.hasIndentedCodeblock) break;
                              'list' === o.type &&
                                (o.hasIndentedCodeblock = !0);
                            }
                        }
                        return e;
                      });
                    })(
                      (e = (function(e) {
                        return yD(e, function(e) {
                          return 'inlineCode' !== e.type
                            ? e
                            : Object.assign({}, e, {
                                value: e.value.replace(/\s+/g, ' '),
                              });
                        });
                      })(
                        (e = (function(e) {
                          return ED(
                            e,
                            function(e, t) {
                              return 'text' === e.type && 'text' === t.type;
                            },
                            function(e, t) {
                              return {
                                type: 'text',
                                value: e.value + t.value,
                                position: {
                                  start: e.position.start,
                                  end: t.position.end,
                                },
                              };
                            },
                          );
                        })(
                          (e = (function(e, t) {
                            return yD(e, function(e) {
                              return 'text' !== e.type
                                ? e
                                : Object.assign({}, e, {
                                    value:
                                      '*' !== e.value &&
                                      '_' !== e.value &&
                                      '$' !== e.value &&
                                      DD.test(e.value) &&
                                      e.position.end.offset -
                                        e.position.start.offset !==
                                        e.value.length
                                        ? t.originalText.slice(
                                            e.position.start.offset,
                                            e.position.end.offset,
                                          )
                                        : e.value,
                                  });
                            });
                          })(e, t)),
                        )),
                      )),
                      t,
                    )),
                    t,
                  )),
                  t,
                )),
              )),
            ));
          },
          bD = ea.builders,
          xD = bD.breakParent,
          AD = bD.concat,
          SD = bD.join,
          wD = bD.line,
          FD = bD.literalline,
          kD = bD.markAsRoot,
          TD = bD.hardline,
          _D = bD.softline,
          OD = bD.ifBreak,
          ND = bD.fill,
          BD = bD.align,
          ID = bD.indent,
          PD = bD.group,
          MD = ea.utils.mapDoc,
          LD = ea.printer.printDocToString,
          RD = iD.getFencedCodeBlockValue,
          jD = iD.getOrderedListItemInfo,
          UD = iD.splitText,
          VD = iD.punctuationPattern,
          WD = iD.INLINE_NODE_TYPES,
          $D = iD.INLINE_NODE_WRAPPER_TYPES,
          qD = Oi.replaceEndOfLineWith,
          YD = ['importExport'],
          JD = ['heading', 'tableCell', 'link'],
          KD = ['listItem', 'definition', 'footnoteDefinition', 'jsx'];
        function zD(e, t, n, r) {
          var i = e.getValue(),
            a = null === i.checked ? '' : i.checked ? '[x] ' : '[ ] ';
          return AD([
            a,
            eE(e, t, n, {
              processor: function(e, i) {
                if (0 === i && 'list' !== e.getValue().type)
                  return BD(' '.repeat(a.length), e.call(n));
                var o,
                  s,
                  u,
                  c = ' '.repeat(
                    ((o = t.tabWidth - r.length),
                    (u = 3),
                    o < (s = 0) ? s : o > u ? u : o),
                  );
                return AD([c, BD(c, e.call(n))]);
              },
            }),
          ]);
        }
        function HD(e, t) {
          return (function(e, t, n) {
            n =
              n ||
              function() {
                return !0;
              };
            var r = -1,
              i = !0,
              a = !1,
              o = void 0;
            try {
              for (
                var s, u = t.children[Symbol.iterator]();
                !(i = (s = u.next()).done);
                i = !0
              ) {
                var c = s.value;
                if ((c.type === e.type && n(c) ? r++ : (r = -1), c === e))
                  return r;
              }
            } catch (e) {
              (a = !0), (o = e);
            } finally {
              try {
                i || null == u.return || u.return();
              } finally {
                if (a) throw o;
              }
            }
          })(e, t, function(t) {
            return t.ordered === e.ordered;
          });
        }
        function XD(e, t) {
          for (var n, r = [].concat(t), i = -1; (n = e.getParentNode(++i)); )
            if (-1 !== r.indexOf(n.type)) return i;
          return -1;
        }
        function GD(e, t) {
          var n = XD(e, t);
          return -1 === n ? null : e.getParentNode(n);
        }
        function QD(e, t, n) {
          if ('preserve' === n.proseWrap && '\n' === t) return TD;
          var r = 'always' === n.proseWrap && !GD(e, JD);
          return '' !== t ? (r ? wD : ' ') : r ? _D : '';
        }
        function ZD(e, t, n) {
          var r = [],
            i = null,
            a = e.getValue().children;
          return (
            a.forEach(function(e, t) {
              switch (nE(e)) {
                case 'start':
                  null === i &&
                    (i = { index: t, offset: e.position.end.offset });
                  break;
                case 'end':
                  null !== i &&
                    (r.push({
                      start: i,
                      end: { index: t, offset: e.position.start.offset },
                    }),
                    (i = null));
              }
            }),
            eE(e, t, n, {
              processor: function(e, i) {
                if (0 !== r.length) {
                  var o = r[0];
                  if (i === o.start.index)
                    return AD([
                      a[o.start.index].value,
                      t.originalText.slice(o.start.offset, o.end.offset),
                      a[o.end.index].value,
                    ]);
                  if (o.start.index < i && i < o.end.index) return !1;
                  if (i === o.end.index) return r.shift(), !1;
                }
                return e.call(n);
              },
            })
          );
        }
        function eE(e, t, n, r) {
          var i,
            a = (r = r || {}).postprocessor || AD,
            o =
              r.processor ||
              function(e) {
                return e.call(n);
              },
            s = e.getValue(),
            u = [];
          return (
            e.map(function(e, n) {
              var r = e.getValue(),
                a = o(e, n);
              if (!1 !== a) {
                var c = { parts: u, prevNode: i, parentNode: s, options: t };
                (function(e, t) {
                  var n,
                    r = t.parentNode,
                    i = t.parts,
                    a = t.prevNode,
                    o = 0 === i.length,
                    s = 'html' === e.type && -1 !== $D.indexOf(r.type),
                    u = a && (iE(a) || iE((n = a.children) && n[n.length - 1]));
                  return o || rE(e) || s || u;
                })(r, c) ||
                  (u.push(TD),
                  (i && -1 !== YD.indexOf(i.type)) ||
                    (((function(e, t) {
                      var n = t.parentNode,
                        r = t.prevNode,
                        i = r && r.type,
                        a = e.type,
                        o = i === a && -1 !== KD.indexOf(a),
                        s = 'listItem' === n.type && !n.loose,
                        u = 'listItem' === i && r.loose,
                        c = 'next' === nE(r),
                        l =
                          'html' === a &&
                          'html' === i &&
                          r.position.end.line + 1 === e.position.start.line,
                        p = ('jsx' === i && rE(e)) || ('jsx' === a && rE(r));
                      return u || !(o || s || c || l || p);
                    })(r, c) ||
                      aE(r, c)) &&
                      u.push(TD)),
                  aE(r, c) && u.push(TD)),
                  u.push(a),
                  (i = r);
              }
            }, 'children'),
            a(u)
          );
        }
        function tE(e) {
          for (var t = e; t.children && 0 !== t.children.length; )
            t = t.children[t.children.length - 1];
          return t;
        }
        function nE(e) {
          if ('html' !== e.type) return !1;
          var t = e.value.match(
            /^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/,
          );
          return null !== t && (t[1] ? t[1] : 'next');
        }
        function rE(e) {
          return e && -1 !== WD.indexOf(e.type);
        }
        function iE(e) {
          return e && /\n+$/.test(e.value);
        }
        function aE(e, t) {
          var n = t.prevNode && 'list' === t.prevNode.type,
            r = 'code' === e.type && e.isIndented;
          return n && r;
        }
        function oE(e) {
          return MD(e, function(e) {
            if (!e.parts) return e;
            if ('concat' === e.type && 1 === e.parts.length) return e.parts[0];
            var t = [];
            return (
              e.parts.forEach(function(e) {
                'concat' === e.type
                  ? t.push.apply(t, e.parts)
                  : '' !== e && t.push(e);
              }),
              Object.assign({}, e, { parts: cE(t) })
            );
          });
        }
        function sE(e, t) {
          var n = [' '].concat(t || []);
          return new RegExp(
            n
              .map(function(e) {
                return '\\'.concat(e);
              })
              .join('|'),
          ).test(e)
            ? '<'.concat(e, '>')
            : e;
        }
        function uE(e, t, n) {
          if ((null == n && (n = !0), !e)) return '';
          if (n) return ' ' + uE(e, t, !1);
          if (e.includes('"') && e.includes("'") && !e.includes(')'))
            return '('.concat(e, ')');
          var r = e.split("'").length - 1,
            i = e.split('"').length - 1,
            a = r > i ? '"' : i > r || t.singleQuote ? "'" : '"';
          return (
            (e = e.replace(new RegExp('('.concat(a, ')'), 'g'), '\\$1')),
            ''
              .concat(a)
              .concat(e)
              .concat(a)
          );
        }
        function cE(e) {
          return e.reduce(function(e, t) {
            var n = Oi.getLast(e);
            return (
              'string' == typeof n && 'string' == typeof t
                ? e.splice(-1, 1, n + t)
                : e.push(t),
              e
            );
          }, []);
        }
        var lE = {
            preprocess: CD,
            print: function(e, t, n) {
              var r = e.getValue();
              if (
                (function(e) {
                  var t = GD(e, ['linkReference', 'imageReference']);
                  return (
                    t &&
                    ('linkReference' !== t.type || 'full' !== t.referenceType)
                  );
                })(e)
              )
                return AD(
                  UD(
                    t.originalText.slice(
                      r.position.start.offset,
                      r.position.end.offset,
                    ),
                    t,
                  ).map(function(n) {
                    return 'word' === n.type
                      ? n.value
                      : '' === n.value
                      ? ''
                      : QD(e, n.value, t);
                  }),
                );
              switch (r.type) {
                case 'root':
                  return 0 === r.children.length
                    ? ''
                    : AD([
                        oE(ZD(e, t, n)),
                        -1 === YD.indexOf(tE(r).type) ? TD : '',
                      ]);
                case 'paragraph':
                  return eE(e, t, n, { postprocessor: ND });
                case 'sentence':
                  return eE(e, t, n);
                case 'word':
                  return r.value
                    .replace(/[*$]/g, '\\$&')
                    .replace(
                      new RegExp(
                        [
                          '(^|'.concat(VD, ')(_+)'),
                          '(_+)('.concat(VD, '|$)'),
                        ].join('|'),
                        'g',
                      ),
                      function(e, t, n, r, i) {
                        return (n
                          ? ''.concat(t).concat(n)
                          : ''.concat(r).concat(i)
                        ).replace(/_/g, '\\_');
                      },
                    );
                case 'whitespace':
                  var i = e.getParentNode(),
                    a = i.children.indexOf(r),
                    o = i.children[a + 1],
                    s =
                      o && /^>|^([-+*]|#{1,6}|[0-9]+[.)])$/.test(o.value)
                        ? 'never'
                        : t.proseWrap;
                  return QD(e, r.value, { proseWrap: s });
                case 'emphasis':
                  var u = e.getParentNode(),
                    c = u.children.indexOf(r),
                    l = u.children[c - 1],
                    p = u.children[c + 1],
                    f =
                      (l &&
                        'sentence' === l.type &&
                        l.children.length > 0 &&
                        'word' === Oi.getLast(l.children).type &&
                        !Oi.getLast(l.children).hasTrailingPunctuation) ||
                      (p &&
                        'sentence' === p.type &&
                        p.children.length > 0 &&
                        'word' === p.children[0].type &&
                        !p.children[0].hasLeadingPunctuation) ||
                      GD(e, 'emphasis')
                        ? '*'
                        : '_';
                  return AD([f, eE(e, t, n), f]);
                case 'strong':
                  return AD(['**', eE(e, t, n), '**']);
                case 'delete':
                  return AD(['~~', eE(e, t, n), '~~']);
                case 'inlineCode':
                  var h = Oi.getMinNotPresentContinuousCount(r.value, '`'),
                    d = '`'.repeat(h || 1),
                    m = h ? ' ' : '';
                  return AD([d, m, r.value, m, d]);
                case 'link':
                  switch (t.originalText[r.position.start.offset]) {
                    case '<':
                      var g =
                        r.url.startsWith('mailto:') &&
                        'mailto:' !==
                          t.originalText.slice(
                            r.position.start.offset + 1,
                            r.position.start.offset + 1 + 'mailto:'.length,
                          )
                          ? r.url.slice('mailto:'.length)
                          : r.url;
                      return AD(['<', g, '>']);
                    case '[':
                      return AD([
                        '[',
                        eE(e, t, n),
                        '](',
                        sE(r.url, ')'),
                        uE(r.title, t),
                        ')',
                      ]);
                    default:
                      return t.originalText.slice(
                        r.position.start.offset,
                        r.position.end.offset,
                      );
                  }
                case 'image':
                  return AD([
                    '![',
                    r.alt || '',
                    '](',
                    sE(r.url, ')'),
                    uE(r.title, t),
                    ')',
                  ]);
                case 'blockquote':
                  return AD(['> ', BD('> ', eE(e, t, n))]);
                case 'heading':
                  return AD(['#'.repeat(r.depth) + ' ', eE(e, t, n)]);
                case 'code':
                  if (r.isIndented) {
                    var y = ' '.repeat(4);
                    return BD(y, AD([y, AD(qD(r.value, TD))]));
                  }
                  var v = t.__inJsTemplate ? '~' : '`',
                    D = v.repeat(
                      Math.max(3, Oi.getMaxContinuousCount(r.value, v) + 1),
                    );
                  return AD([
                    D,
                    r.lang || '',
                    TD,
                    AD(qD(RD(r, t.originalText), TD)),
                    TD,
                    D,
                  ]);
                case 'yaml':
                case 'toml':
                  return t.originalText.slice(
                    r.position.start.offset,
                    r.position.end.offset,
                  );
                case 'html':
                  var E = e.getParentNode(),
                    C =
                      'root' === E.type && Oi.getLast(E.children) === r
                        ? r.value.trimRight()
                        : r.value,
                    b = /^<!--[\s\S]*-->$/.test(C);
                  return AD(qD(C, b ? TD : kD(FD)));
                case 'list':
                  var x = HD(r, e.getParentNode()),
                    A =
                      r.ordered &&
                      r.children.length > 1 &&
                      1 == +jD(r.children[1], t.originalText).numberText;
                  return eE(e, t, n, {
                    processor: function(e, i) {
                      var a,
                        o =
                          ((a = r.ordered
                            ? (0 === i ? r.start : A ? 1 : r.start + i) +
                              (x % 2 == 0 ? '. ' : ') ')
                            : x % 2 == 0
                            ? '- '
                            : '* '),
                          r.isAligned || r.hasIndentedCodeblock
                            ? (function(e, t) {
                                var n,
                                  r =
                                    0 == (n = e.length % t.tabWidth)
                                      ? 0
                                      : t.tabWidth - n;
                                return e + ' '.repeat(r >= 4 ? 0 : r);
                              })(a, t)
                            : a);
                      return AD([o, BD(' '.repeat(o.length), zD(e, t, n, o))]);
                    },
                  });
                case 'thematicBreak':
                  var S = XD(e, 'list');
                  return -1 === S
                    ? '---'
                    : HD(e.getParentNode(S), e.getParentNode(S + 1)) % 2 == 0
                    ? '***'
                    : '---';
                case 'linkReference':
                  return AD([
                    '[',
                    eE(e, t, n),
                    ']',
                    'full' === r.referenceType
                      ? AD(['[', r.identifier, ']'])
                      : 'collapsed' === r.referenceType
                      ? '[]'
                      : '',
                  ]);
                case 'imageReference':
                  switch (r.referenceType) {
                    case 'full':
                      return AD(['![', r.alt || '', '][', r.identifier, ']']);
                    default:
                      return AD([
                        '![',
                        r.alt,
                        ']',
                        'collapsed' === r.referenceType ? '[]' : '',
                      ]);
                  }
                case 'definition':
                  var w = 'always' === t.proseWrap ? wD : ' ';
                  return PD(
                    AD([
                      AD(['[', r.identifier, ']:']),
                      ID(
                        AD([
                          w,
                          sE(r.url),
                          null === r.title ? '' : AD([w, uE(r.title, t, !1)]),
                        ]),
                      ),
                    ]),
                  );
                case 'footnote':
                  return AD(['[^', eE(e, t, n), ']']);
                case 'footnoteReference':
                  return AD(['[^', r.identifier, ']']);
                case 'footnoteDefinition':
                  var F = e.getParentNode().children[e.getName() + 1],
                    k =
                      1 === r.children.length &&
                      'paragraph' === r.children[0].type &&
                      ('never' === t.proseWrap ||
                        ('preserve' === t.proseWrap &&
                          r.children[0].position.start.line ===
                            r.children[0].position.end.line));
                  return AD([
                    '[^',
                    r.identifier,
                    ']: ',
                    k
                      ? eE(e, t, n)
                      : PD(
                          AD([
                            BD(
                              ' '.repeat(t.tabWidth),
                              eE(e, t, n, {
                                processor: function(e, t) {
                                  return 0 === t
                                    ? PD(AD([_D, _D, e.call(n)]))
                                    : e.call(n);
                                },
                              }),
                            ),
                            F && 'footnoteDefinition' === F.type ? _D : '',
                          ]),
                        ),
                  ]);
                case 'table':
                  return (function(e, t, n) {
                    var r = TD.parts[0],
                      i = e.getValue(),
                      a = [];
                    e.map(function(e) {
                      var r = [];
                      e.map(function(e) {
                        r.push(LD(e.call(n), t).formatted);
                      }, 'children'),
                        a.push(r);
                    }, 'children');
                    var o = a.reduce(
                        function(e, t) {
                          return e.map(function(e, n) {
                            return Math.max(e, Oi.getStringWidth(t[n]));
                          });
                        },
                        a[0].map(function() {
                          return 3;
                        }),
                      ),
                      s = SD(r, [
                        l(a[0]),
                        c(),
                        SD(
                          r,
                          a.slice(1).map(function(e) {
                            return l(e);
                          }),
                        ),
                      ]);
                    if ('never' !== t.proseWrap) return AD([xD, s]);
                    var u = SD(r, [
                      l(a[0], !0),
                      c(!0),
                      SD(
                        r,
                        a.slice(1).map(function(e) {
                          return l(e, !0);
                        }),
                      ),
                    ]);
                    return AD([xD, PD(OD(u, s))]);
                    function c(e) {
                      return AD([
                        '| ',
                        SD(
                          ' | ',
                          o.map(function(t, n) {
                            var r = e ? 3 : t;
                            switch (i.align[n]) {
                              case 'left':
                                return ':' + '-'.repeat(r - 1);
                              case 'right':
                                return '-'.repeat(r - 1) + ':';
                              case 'center':
                                return ':' + '-'.repeat(r - 2) + ':';
                              default:
                                return '-'.repeat(r);
                            }
                          }),
                        ),
                        ' |',
                      ]);
                    }
                    function l(e, t) {
                      return AD([
                        '| ',
                        SD(
                          ' | ',
                          t
                            ? e
                            : e.map(function(e, t) {
                                switch (i.align[t]) {
                                  case 'right':
                                    return (
                                      (n = e),
                                      (r = o[t]),
                                      (a = r - Oi.getStringWidth(n)),
                                      AD([' '.repeat(a), n])
                                    );
                                  case 'center':
                                    return (function(e, t) {
                                      var n = t - Oi.getStringWidth(e),
                                        r = Math.floor(n / 2),
                                        i = n - r;
                                      return AD([
                                        ' '.repeat(r),
                                        e,
                                        ' '.repeat(i),
                                      ]);
                                    })(e, o[t]);
                                  default:
                                    return (function(e, t) {
                                      var n = t - Oi.getStringWidth(e);
                                      return AD([e, ' '.repeat(n)]);
                                    })(e, o[t]);
                                }
                                var n, r, a;
                              }),
                        ),
                        ' |',
                      ]);
                    }
                  })(e, t, n);
                case 'tableCell':
                  return eE(e, t, n);
                case 'break':
                  return /\s/.test(t.originalText[r.position.start.offset])
                    ? AD(['  ', kD(FD)])
                    : AD(['\\', TD]);
                case 'liquidNode':
                  return AD(qD(r.value, TD));
                case 'importExport':
                case 'jsx':
                  return r.value;
                case 'math':
                  return AD([
                    '$$',
                    TD,
                    r.value ? AD([AD(qD(r.value, TD)), TD]) : '',
                    '$$',
                  ]);
                case 'inlineMath':
                  return t.originalText.slice(t.locStart(r), t.locEnd(r));
                case 'tableRow':
                case 'listItem':
                default:
                  throw new Error(
                    'Unknown markdown type '.concat(JSON.stringify(r.type)),
                  );
              }
            },
            embed: fD,
            massageAstNode: function(e, t, n) {
              return (
                delete t.position,
                delete t.raw,
                ('code' !== e.type &&
                  'yaml' !== e.type &&
                  'import' !== e.type &&
                  'export' !== e.type &&
                  'jsx' !== e.type) ||
                  delete t.value,
                'list' === e.type && delete t.isAligned,
                'text' === e.type
                  ? null
                  : ('inlineCode' === e.type &&
                      (t.value = e.value.replace(/[ \t\n]+/g, ' ')),
                    n &&
                    'root' === n.type &&
                    n.children.length > 0 &&
                    (n.children[0] === e ||
                      (('yaml' === n.children[0].type ||
                        'toml' === n.children[0].type) &&
                        n.children[1] === e)) &&
                    'html' === e.type &&
                    mD.startWithPragma(e.value)
                      ? null
                      : void 0)
              );
            },
            hasPrettierIgnore: function(e) {
              var t = +e.getName();
              return (
                0 !== t && 'next' === nE(e.getParentNode().children[t - 1])
              );
            },
            insertPragma: mD.insertPragma,
          },
          pE = { proseWrap: Iu.proseWrap, singleQuote: Iu.singleQuote },
          fE = ['pandoc'],
          hE = [
            '.md',
            '.markdown',
            '.mdown',
            '.mdwn',
            '.mdx',
            '.mkd',
            '.mkdn',
            '.mkdown',
            '.ronn',
            '.workbook',
          ],
          dE = ['contents.lr'],
          mE = {
            name: 'Markdown',
            type: 'prose',
            aliases: fE,
            aceMode: 'markdown',
            codemirrorMode: 'gfm',
            codemirrorMimeType: 'text/x-gfm',
            wrap: !0,
            extensions: hE,
            filenames: dE,
            tmScope: 'source.gfm',
            languageId: 222,
          },
          gE = pt(
            Object.freeze({
              __proto__: null,
              name: 'Markdown',
              type: 'prose',
              aliases: fE,
              aceMode: 'markdown',
              codemirrorMode: 'gfm',
              codemirrorMimeType: 'text/x-gfm',
              wrap: !0,
              extensions: hE,
              filenames: dE,
              tmScope: 'source.gfm',
              languageId: 222,
              default: mE,
            }),
          ),
          yE = {
            languages: [
              Mu(gE, function(e) {
                return Object.assign(e, {
                  since: '1.8.0',
                  parsers: ['remark'],
                  vscodeLanguageIds: ['markdown'],
                  filenames: e.filenames.concat(['README']),
                  extensions: e.extensions.filter(function(e) {
                    return '.mdx' !== e;
                  }),
                });
              }),
              Mu(gE, function(e) {
                return Object.assign(e, {
                  name: 'MDX',
                  since: '1.15.0',
                  parsers: ['mdx'],
                  vscodeLanguageIds: ['mdx'],
                  filenames: [],
                  extensions: ['.mdx'],
                });
              }),
            ],
            options: pE,
            printers: { mdast: lE },
          },
          vE = function(e) {
            return /^\s*@(prettier|format)\s*$/.test(e);
          },
          DE = function(e) {
            return '# @format\n\n'.concat(e);
          },
          EE = Oi.getLast;
        function CE(e, t) {
          return (
            e && 'string' == typeof e.type && (!t || -1 !== t.indexOf(e.type))
          );
        }
        function bE(e) {
          return 'prettier-ignore' === e.value.trim();
        }
        function xE(e) {
          return e && e.leadingComments && 0 !== e.leadingComments.length;
        }
        function AE(e) {
          return e && e.middleComments && 0 !== e.middleComments.length;
        }
        function SE(e) {
          return e && e.indicatorComment;
        }
        function wE(e) {
          return e && e.trailingComment;
        }
        function FE(e) {
          return e && e.endComments && 0 !== e.endComments.length;
        }
        function kE(e) {
          var t = [],
            n = void 0,
            r = !0,
            i = !1,
            a = void 0;
          try {
            for (
              var o, s = e.split(/( +)/g)[Symbol.iterator]();
              !(r = (o = s.next()).done);
              r = !0
            ) {
              var u = o.value;
              ' ' !== u
                ? ' ' === n
                  ? t.push(u)
                  : t.push((t.pop() || '') + u)
                : void 0 === n && t.unshift(''),
                (n = u);
            }
          } catch (e) {
            (i = !0), (a = e);
          } finally {
            try {
              r || null == s.return || s.return();
            } finally {
              if (i) throw a;
            }
          }
          return (
            ' ' === n && t.push((t.pop() || '') + ' '),
            '' === t[0] && (t.shift(), t.unshift(' ' + (t.shift() || ''))),
            t
          );
        }
        var TE = {
            getLast: EE,
            getAncestorCount: function(e, t) {
              for (var n = 0, r = e.stack.length - 1, i = 0; i < r; i++) {
                var a = e.stack[i];
                CE(a) && t(a) && n++;
              }
              return n;
            },
            isNode: CE,
            isEmptyNode: function(e) {
              return !(
                (e.children && 0 !== e.children.length) ||
                (function(e) {
                  return xE(e) || AE(e) || SE(e) || wE(e) || FE(e);
                })(e)
              );
            },
            mapNode: function e(t, n, r) {
              return n(
                'children' in t
                  ? Object.assign({}, t, {
                      children: t.children.map(function(r) {
                        return e(r, n, t);
                      }),
                    })
                  : t,
                r,
              );
            },
            defineShortcut: function(e, t, n) {
              Object.defineProperty(e, t, { get: n, enumerable: !1 });
            },
            isNextLineEmpty: function(e, t) {
              for (
                var n = 0, r = t.length, i = e.position.end.offset - 1;
                i < r;
                i++
              ) {
                var a = t[i];
                if (('\n' === a && n++, 1 === n && /\S/.test(a))) return !1;
                if (2 === n) return !0;
              }
              return !1;
            },
            isLastDescendantNode: function(e) {
              switch (e.getValue().type) {
                case 'tag':
                case 'anchor':
                case 'comment':
                  return !1;
              }
              for (var t = e.stack.length, n = 1; n < t; n++) {
                var r = e.stack[n],
                  i = e.stack[n - 1];
                if (
                  Array.isArray(i) &&
                  'number' == typeof r &&
                  r !== i.length - 1
                )
                  return !1;
              }
              return !0;
            },
            getBlockValueLineContents: function(e, t) {
              var n,
                r = t.parentIndent,
                i = t.isLastDescendant,
                a = t.options,
                o =
                  e.position.start.line === e.position.end.line
                    ? ''
                    : a.originalText
                        .slice(e.position.start.offset, e.position.end.offset)
                        .match(/^[^\n]*?\n([\s\S]*)$/)[1],
                s =
                  null === e.indent
                    ? (n = o.match(/^( *)\S/m))
                      ? n[1].length
                      : 1 / 0
                    : e.indent - 1 + r,
                u = o.split('\n').map(function(e) {
                  return e.slice(s);
                });
              return 'preserve' === a.proseWrap || 'blockLiteral' === e.type
                ? c(
                    u.map(function(e) {
                      return 0 === e.length ? [] : [e];
                    }),
                  )
                : c(
                    u
                      .map(function(e) {
                        return 0 === e.length ? [] : kE(e);
                      })
                      .reduce(function(e, t, n) {
                        return 0 === n ||
                          0 === u[n - 1].length ||
                          0 === t.length ||
                          /^\s/.test(t[0]) ||
                          /^\s|\s$/.test(EE(e))
                          ? e.concat([t])
                          : e.concat([e.pop().concat(t)]);
                      }, [])
                      .map(function(e) {
                        return e.reduce(function(e, t) {
                          return 0 !== e.length && /\s$/.test(EE(e))
                            ? e.concat(e.pop() + ' ' + t)
                            : e.concat(t);
                        }, []);
                      })
                      .map(function(e) {
                        return 'never' === a.proseWrap ? [e.join(' ')] : e;
                      }),
                  );
              function c(t) {
                if ('keep' === e.chomping)
                  return 0 === EE(t).length ? t.slice(0, -1) : t;
                for (
                  var n = 0, r = t.length - 1;
                  r >= 0 && 0 === t[r].length;
                  r--
                )
                  n++;
                return 0 === n
                  ? t
                  : n >= 2 && !i
                  ? t.slice(0, -(n - 1))
                  : t.slice(0, -n);
              }
            },
            getFlowScalarLineContents: function(e, t, n) {
              var r = t.split('\n').map(function(e, t, n) {
                return 0 === t && t === n.length - 1
                  ? e
                  : 0 !== t && t !== n.length - 1
                  ? e.trim()
                  : 0 === t
                  ? e.trimRight()
                  : e.trimLeft();
              });
              return 'preserve' === n.proseWrap
                ? r.map(function(e) {
                    return 0 === e.length ? [] : [e];
                  })
                : r
                    .map(function(e) {
                      return 0 === e.length ? [] : kE(e);
                    })
                    .reduce(function(t, n, i) {
                      return 0 === i ||
                        0 === r[i - 1].length ||
                        0 === n.length ||
                        ('quoteDouble' === e && EE(EE(t)).endsWith('\\'))
                        ? t.concat([n])
                        : t.concat([t.pop().concat(n)]);
                    }, [])
                    .map(function(e) {
                      return 'never' === n.proseWrap ? [e.join(' ')] : e;
                    });
            },
            getLastDescendantNode: function e(t) {
              return 'children' in t && 0 !== t.children.length
                ? e(EE(t.children))
                : t;
            },
            hasPrettierIgnore: function(e) {
              var t = e.getValue();
              if ('documentBody' === t.type) {
                var n = e.getParentNode();
                return FE(n.head) && bE(EE(n.head.endComments));
              }
              return xE(t) && bE(EE(t.leadingComments));
            },
            hasLeadingComments: xE,
            hasMiddleComments: AE,
            hasIndicatorComment: SE,
            hasTrailingComment: wE,
            hasEndComments: FE,
          },
          _E = DE,
          OE = vE,
          NE = TE.getAncestorCount,
          BE = TE.getBlockValueLineContents,
          IE = TE.getFlowScalarLineContents,
          PE = TE.getLast,
          ME = TE.getLastDescendantNode,
          LE = TE.hasLeadingComments,
          RE = TE.hasMiddleComments,
          jE = TE.hasIndicatorComment,
          UE = TE.hasTrailingComment,
          VE = TE.hasEndComments,
          WE = TE.hasPrettierIgnore,
          $E = TE.isLastDescendantNode,
          qE = TE.isNextLineEmpty,
          YE = TE.isNode,
          JE = TE.isEmptyNode,
          KE = TE.defineShortcut,
          zE = TE.mapNode,
          HE = ea.builders,
          XE = HE.conditionalGroup,
          GE = HE.breakParent,
          QE = HE.concat,
          ZE = HE.dedent,
          eC = HE.dedentToRoot,
          tC = HE.fill,
          nC = HE.group,
          rC = HE.hardline,
          iC = HE.ifBreak,
          aC = HE.join,
          oC = HE.line,
          sC = HE.lineSuffix,
          uC = HE.literalline,
          cC = HE.markAsRoot,
          lC = HE.softline,
          pC = Oi.replaceEndOfLineWith;
        function fC(e) {
          switch (e.type) {
            case 'document':
              KE(e, 'head', function() {
                return e.children[0];
              }),
                KE(e, 'body', function() {
                  return e.children[1];
                });
              break;
            case 'documentBody':
            case 'sequenceItem':
            case 'flowSequenceItem':
            case 'mappingKey':
            case 'mappingValue':
              KE(e, 'content', function() {
                return e.children[0];
              });
              break;
            case 'mappingItem':
            case 'flowMappingItem':
              KE(e, 'key', function() {
                return e.children[0];
              }),
                KE(e, 'value', function() {
                  return e.children[1];
                });
          }
          return e;
        }
        function hC(e, t, n, r, i) {
          switch (e.type) {
            case 'root':
              return QE([
                aC(
                  rC,
                  n.map(function(t, r) {
                    var a = e.children[r],
                      o = e.children[r + 1];
                    return QE([
                      i(t),
                      gC(a, o)
                        ? QE([
                            rC,
                            '...',
                            UE(a)
                              ? QE([' ', n.call(i, 'trailingComment')])
                              : '',
                          ])
                        : !o || UE(o.head)
                        ? ''
                        : QE([rC, '---']),
                    ]);
                  }, 'children'),
                ),
                0 === e.children.length ||
                ((S = ME(e)),
                YE(S, ['blockLiteral', 'blockFolded']) && 'keep' === S.chomping)
                  ? ''
                  : rC,
              ]);
            case 'document':
              var a = t.children[n.getName() + 1];
              return aC(
                rC,
                [
                  'head' === yC(e, a, t, r)
                    ? aC(
                        rC,
                        [
                          0 === e.head.children.length &&
                          0 === e.head.endComments.length
                            ? ''
                            : n.call(i, 'head'),
                          QE([
                            '---',
                            UE(e.head)
                              ? QE([' ', n.call(i, 'head', 'trailingComment')])
                              : '',
                          ]),
                        ].filter(Boolean),
                      )
                    : '',
                  ((A = e),
                  0 !== A.body.children.length || VE(A.body)
                    ? n.call(i, 'body')
                    : ''),
                ].filter(Boolean),
              );
            case 'documentHead':
              return aC(
                rC,
                [].concat(n.map(i, 'children'), n.map(i, 'endComments')),
              );
            case 'documentBody':
              var o = aC(rC, n.map(i, 'children')).parts,
                s = aC(rC, n.map(i, 'endComments')).parts,
                u =
                  0 === o.length || 0 === s.length
                    ? ''
                    : (function(e) {
                        return YE(e, ['blockFolded', 'blockLiteral'])
                          ? 'keep' === e.chomping
                            ? ''
                            : QE([rC, rC])
                          : rC;
                      })(ME(e));
              return QE([].concat(o, u, s));
            case 'directive':
              return QE(['%', aC(' ', [e.name].concat(e.parameters))]);
            case 'comment':
              return QE(['#', e.value]);
            case 'alias':
              return QE(['*', e.value]);
            case 'tag':
              return r.originalText.slice(
                e.position.start.offset,
                e.position.end.offset,
              );
            case 'anchor':
              return QE(['&', e.value]);
            case 'plain':
              return CC(
                e.type,
                r.originalText.slice(
                  e.position.start.offset,
                  e.position.end.offset,
                ),
                r,
              );
            case 'quoteDouble':
            case 'quoteSingle':
              var c = r.originalText.slice(
                e.position.start.offset + 1,
                e.position.end.offset - 1,
              );
              if (
                ('quoteSingle' === e.type && c.includes('\\')) ||
                ('quoteDouble' === e.type && /\\[^"]/.test(c))
              ) {
                var l = 'quoteDouble' === e.type ? '"' : "'";
                return QE([l, CC(e.type, c, r), l]);
              }
              if (c.includes('"'))
                return QE([
                  "'",
                  CC(
                    e.type,
                    'quoteDouble' === e.type
                      ? c.replace(/\\"/g, '"').replace(/'/g, "'".repeat(2))
                      : c,
                    r,
                  ),
                  "'",
                ]);
              if (c.includes("'"))
                return QE([
                  '"',
                  CC(
                    e.type,
                    'quoteSingle' === e.type ? c.replace(/''/g, "'") : c,
                    r,
                  ),
                  '"',
                ]);
              var p = r.singleQuote ? "'" : '"';
              return QE([p, CC(e.type, c, r), p]);
            case 'blockFolded':
            case 'blockLiteral':
              var f = NE(n, function(e) {
                  return YE(e, ['sequence', 'mapping']);
                }),
                h = $E(n);
              return QE([
                'blockFolded' === e.type ? '>' : '|',
                null === e.indent ? '' : e.indent.toString(),
                'clip' === e.chomping ? '' : 'keep' === e.chomping ? '+' : '-',
                jE(e) ? QE([' ', n.call(i, 'indicatorComment')]) : '',
                (null === e.indent ? ZE : eC)(
                  dC(
                    null === e.indent ? r.tabWidth : e.indent - 1 + f,
                    QE(
                      BE(e, {
                        parentIndent: f,
                        isLastDescendant: h,
                        options: r,
                      }).reduce(function(t, n, r, i) {
                        return t.concat(
                          0 === r ? rC : '',
                          tC(aC(oC, n).parts),
                          r !== i.length - 1
                            ? 0 === n.length
                              ? rC
                              : cC(uC)
                            : 'keep' === e.chomping && h
                            ? 0 === n.length
                              ? eC(rC)
                              : eC(uC)
                            : '',
                        );
                      }, []),
                    ),
                  ),
                ),
              ]);
            case 'sequence':
              return aC(rC, n.map(i, 'children'));
            case 'sequenceItem':
              return QE(['- ', dC(2, e.content ? n.call(i, 'content') : '')]);
            case 'mappingKey':
            case 'mappingValue':
              return e.content ? n.call(i, 'content') : '';
            case 'mapping':
              return aC(rC, n.map(i, 'children'));
            case 'mappingItem':
            case 'flowMappingItem':
              var d = JE(e.key),
                m = JE(e.value);
              if (d && m) return QE([': ']);
              var g = n.call(i, 'key'),
                y = n.call(i, 'value');
              if (m)
                return 'flowMappingItem' === e.type && 'flowMapping' === t.type
                  ? g
                  : 'mappingItem' !== e.type ||
                    !vC(e.key.content, r) ||
                    UE(e.key.content) ||
                    (t.tag && 'tag:yaml.org,2002:set' === t.tag.value)
                  ? QE(['? ', dC(2, g)])
                  : QE([g, DC(e) ? ' ' : '', ':']);
              if (d) return QE([': ', dC(2, y)]);
              var v = Symbol('mappingKey');
              return LE(e.value) || !mC(e.key.content)
                ? QE([
                    '? ',
                    dC(2, g),
                    rC,
                    aC(
                      '',
                      n.map(i, 'value', 'leadingComments').map(function(e) {
                        return QE([e, rC]);
                      }),
                    ),
                    ': ',
                    dC(2, y),
                  ])
                : !(function(e) {
                    if (!e) return !0;
                    switch (e.type) {
                      case 'plain':
                      case 'quoteDouble':
                      case 'quoteSingle':
                        return e.position.start.line === e.position.end.line;
                      case 'alias':
                        return !0;
                      default:
                        return !1;
                    }
                  })(e.key.content) ||
                  LE(e.key.content) ||
                  RE(e.key.content) ||
                  UE(e.key.content) ||
                  VE(e.key) ||
                  LE(e.value.content) ||
                  RE(e.value.content) ||
                  VE(e.value) ||
                  !vC(e.value.content, r)
                ? XE([
                    QE([
                      nC(QE([iC('? '), nC(dC(2, g), { id: v })])),
                      iC(
                        QE([rC, ': ', dC(2, y)]),
                        w(
                          QE([
                            DC(e) ? ' ' : '',
                            ':',
                            LE(e.value.content) ||
                            (VE(e.value) &&
                              e.value.content &&
                              !YE(e.value.content, ['mapping', 'sequence'])) ||
                            ('mapping' === t.type &&
                              UE(e.key.content) &&
                              mC(e.value.content)) ||
                            (YE(e.value.content, ['mapping', 'sequence']) &&
                              null === e.value.content.tag &&
                              null === e.value.content.anchor)
                              ? rC
                              : e.value.content
                              ? oC
                              : '',
                            y,
                          ]),
                        ),
                        { groupId: v },
                      ),
                    ]),
                  ])
                : QE([g, DC(e) ? ' ' : '', ': ', y]);
            case 'flowMapping':
            case 'flowSequence':
              var D = 'flowMapping' === e.type ? '{' : '[',
                E = 'flowMapping' === e.type ? '}' : ']',
                C =
                  'flowMapping' === e.type &&
                  0 !== e.children.length &&
                  r.bracketSpacing
                    ? oC
                    : lC,
                b =
                  0 !== e.children.length &&
                  'flowMappingItem' === (x = PE(e.children)).type &&
                  JE(x.key) &&
                  JE(x.value);
              return QE([
                D,
                w(
                  QE([
                    C,
                    QE(
                      n.map(function(t, n) {
                        return QE([
                          i(t),
                          n === e.children.length - 1
                            ? ''
                            : QE([
                                ',',
                                oC,
                                e.children[n].position.start.line !==
                                e.children[n + 1].position.start.line
                                  ? EC(t, r.originalText)
                                  : '',
                              ]),
                        ]);
                      }, 'children'),
                    ),
                    iC(',', ''),
                  ]),
                ),
                b ? '' : C,
                E,
              ]);
            case 'flowSequenceItem':
              return n.call(i, 'content');
            default:
              throw new Error('Unexpected node type '.concat(e.type));
          }
          var x, A, S;
          function w(e) {
            return HE.align(' '.repeat(r.tabWidth), e);
          }
        }
        function dC(e, t) {
          return 'number' == typeof e && e > 0
            ? HE.align(' '.repeat(e), t)
            : HE.align(e, t);
        }
        function mC(e) {
          if (!e) return !0;
          switch (e.type) {
            case 'plain':
            case 'quoteDouble':
            case 'quoteSingle':
            case 'alias':
            case 'flowMapping':
            case 'flowSequence':
              return !0;
            default:
              return !1;
          }
        }
        function gC(e, t) {
          return UE(e) || (t && (0 !== t.head.children.length || VE(t.head)));
        }
        function yC(e, t, n, r) {
          return (n.children[0] === e &&
            /---(\s|$)/.test(
              r.originalText.slice(r.locStart(e), r.locStart(e) + 4),
            )) ||
            0 !== e.head.children.length ||
            VE(e.head) ||
            UE(e.head)
            ? 'head'
            : !gC(e, t) && !!t && 'root';
        }
        function vC(e, t) {
          if (!e) return !0;
          switch (e.type) {
            case 'plain':
            case 'quoteSingle':
            case 'quoteDouble':
              break;
            case 'alias':
              return !0;
            default:
              return !1;
          }
          if ('preserve' === t.proseWrap)
            return e.position.start.line === e.position.end.line;
          if (
            /\\$/m.test(
              t.originalText.slice(
                e.position.start.offset,
                e.position.end.offset,
              ),
            )
          )
            return !1;
          switch (t.proseWrap) {
            case 'never':
              return -1 === e.value.indexOf('\n');
            case 'always':
              return !/[\n ]/.test(e.value);
            default:
              return !1;
          }
        }
        function DC(e) {
          return e.key.content && 'alias' === e.key.content.type;
        }
        function EC(e, t) {
          var n = e.getValue(),
            r = e.stack[0];
          return (
            (r.isNextEmptyLinePrintedChecklist =
              r.isNextEmptyLinePrintedChecklist || []),
            !r.isNextEmptyLinePrintedChecklist[n.position.end.line] && qE(n, t)
              ? ((r.isNextEmptyLinePrintedChecklist[n.position.end.line] = !0),
                lC)
              : ''
          );
        }
        function CC(e, t, n) {
          var r = IE(e, t, n);
          return aC(
            rC,
            r.map(function(e) {
              return tC(aC(oC, e).parts);
            }),
          );
        }
        var bC = {
            preprocess: function(e) {
              return zE(e, fC);
            },
            print: function(e, t, n) {
              var r = e.getValue(),
                i = e.getParentNode(),
                a = r.tag ? e.call(n, 'tag') : '',
                o = r.anchor ? e.call(n, 'anchor') : '',
                s =
                  YE(r, [
                    'mapping',
                    'sequence',
                    'comment',
                    'directive',
                    'mappingItem',
                    'sequenceItem',
                  ]) && !$E(e)
                    ? EC(e, t.originalText)
                    : '';
              return QE([
                'mappingValue' !== r.type && LE(r)
                  ? QE([aC(rC, e.map(n, 'leadingComments')), rC])
                  : '',
                a,
                a && o ? ' ' : '',
                o,
                a || o
                  ? YE(r, ['sequence', 'mapping']) && !RE(r)
                    ? rC
                    : ' '
                  : '',
                RE(r)
                  ? QE([
                      1 === r.middleComments.length ? '' : rC,
                      aC(rC, e.map(n, 'middleComments')),
                      rC,
                    ])
                  : '',
                WE(e)
                  ? QE(
                      pC(
                        t.originalText.slice(
                          r.position.start.offset,
                          r.position.end.offset,
                        ),
                        uC,
                      ),
                    )
                  : nC(hC(r, i, e, t, n)),
                UE(r) && !YE(r, ['document', 'documentHead'])
                  ? sC(
                      QE([
                        'mappingValue' !== r.type || r.content ? ' ' : '',
                        'mappingKey' === i.type &&
                        'mapping' === e.getParentNode(2).type &&
                        mC(r)
                          ? ''
                          : GE,
                        e.call(n, 'trailingComment'),
                      ]),
                    )
                  : '',
                s,
                VE(r) && !YE(r, ['documentHead', 'documentBody'])
                  ? dC(
                      'sequenceItem' === r.type ? 2 : 0,
                      QE([rC, aC(rC, e.map(n, 'endComments'))]),
                    )
                  : '',
              ]);
            },
            massageAstNode: function(e, t) {
              if (YE(t))
                switch ((delete t.position, t.type)) {
                  case 'comment':
                    if (OE(t.value)) return null;
                    break;
                  case 'quoteDouble':
                  case 'quoteSingle':
                    t.type = 'quote';
                }
            },
            insertPragma: _E,
          },
          xC = {
            bracketSpacing: Iu.bracketSpacing,
            singleQuote: Iu.singleQuote,
            proseWrap: Iu.proseWrap,
          },
          AC = ['yml'],
          SC = [
            '.yml',
            '.mir',
            '.reek',
            '.rviz',
            '.sublime-syntax',
            '.syntax',
            '.yaml',
            '.yaml-tmlanguage',
            '.yml.mysql',
          ],
          wC = ['.clang-format', '.clang-tidy', '.gemrc', 'glide.lock'],
          FC = {
            name: 'YAML',
            type: 'data',
            tmScope: 'source.yaml',
            aliases: AC,
            extensions: SC,
            filenames: wC,
            aceMode: 'yaml',
            codemirrorMode: 'yaml',
            codemirrorMimeType: 'text/x-yaml',
            languageId: 407,
          },
          kC = {
            languages: [
              Mu(
                pt(
                  Object.freeze({
                    __proto__: null,
                    name: 'YAML',
                    type: 'data',
                    tmScope: 'source.yaml',
                    aliases: AC,
                    extensions: SC,
                    filenames: wC,
                    aceMode: 'yaml',
                    codemirrorMode: 'yaml',
                    codemirrorMimeType: 'text/x-yaml',
                    languageId: 407,
                    default: FC,
                  }),
                ),
                function(e) {
                  return Object.assign(e, {
                    since: '1.14.0',
                    parsers: ['yaml'],
                    vscodeLanguageIds: ['yaml'],
                  });
                },
              ),
            ],
            printers: { yaml: bC },
            options: xC,
          },
          TC = zt.version,
          _C = Gt.getSupportInfo,
          OC = [Zu, Dc, Hc, ed, Hv, yE, kC],
          NC =
            Array.isArray ||
            function(e) {
              return '[object Array]' === Object.prototype.toString.call(e);
            };
        function BC(e) {
          return function() {
            var t = Array.from(arguments),
              n = (t[1] && t[1].plugins) || [];
            return (
              NC(n) || (n = Object.values(n)),
              (t[1] = Object.assign({}, t[1], { plugins: OC.concat(n) })),
              e.apply(null, t)
            );
          };
        }
        var IC = BC(eo);
        return {
          formatWithCursor: IC,
          format: function(e, t) {
            return IC(e, t).formatted;
          },
          check: function(e, t) {
            return IC(e, t).formatted === e;
          },
          doc: ea,
          getSupportInfo: BC(_C),
          version: TC,
          util: na,
          __debug: {
            parse: BC(to),
            formatAST: BC(no),
            formatDoc: BC(ro),
            printToDoc: BC(io),
            printDocToString: BC(ao),
          },
        };
      }),
        (e.exports = n());
    }.call(this, n(7)));
  },
  function(e, t, n) {
    (function(e) {
      !(function(t) {
        'use strict';
        var n =
          'undefined' != typeof globalThis
            ? globalThis
            : 'undefined' != typeof window
            ? window
            : void 0 !== e
            ? e
            : 'undefined' != typeof self
            ? self
            : {};
        function r(e) {
          return e &&
            e.__esModule &&
            Object.prototype.hasOwnProperty.call(e, 'default')
            ? e.default
            : e;
        }
        function i(e, t) {
          return e((t = { exports: {} }), t.exports), t.exports;
        }
        function a(e) {
          return (a =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function(e) {
                  return typeof e;
                }
              : function(e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e;
                })(e);
        }
        function o(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function s(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              'value' in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function u(e, t, n) {
          return t && s(e.prototype, t), n && s(e, n), e;
        }
        function c(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function',
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && p(e, t);
        }
        function l(e) {
          return (l = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function p(e, t) {
          return (p =
            Object.setPrototypeOf ||
            function(e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function f(e, t, n) {
          return (f = (function() {
            if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ('function' == typeof Proxy) return !0;
            try {
              return (
                Date.prototype.toString.call(
                  Reflect.construct(Date, [], function() {}),
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })()
            ? Reflect.construct
            : function(e, t, n) {
                var r = [null];
                r.push.apply(r, t);
                var i = new (Function.bind.apply(e, r))();
                return n && p(i, n.prototype), i;
              }).apply(null, arguments);
        }
        function h(e) {
          var t = 'function' == typeof Map ? new Map() : void 0;
          return (h = function(e) {
            if (
              null === e ||
              ((n = e),
              -1 === Function.toString.call(n).indexOf('[native code]'))
            )
              return e;
            var n;
            if ('function' != typeof e)
              throw new TypeError(
                'Super expression must either be null or a function',
              );
            if (void 0 !== t) {
              if (t.has(e)) return t.get(e);
              t.set(e, r);
            }
            function r() {
              return f(e, arguments, l(this).constructor);
            }
            return (
              (r.prototype = Object.create(e.prototype, {
                constructor: {
                  value: r,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              p(r, e)
            );
          })(e);
        }
        function d(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function m(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? d(e)
            : t;
        }
        function g(e, t, n) {
          return (g =
            'undefined' != typeof Reflect && Reflect.get
              ? Reflect.get
              : function(e, t, n) {
                  var r = (function(e, t) {
                    for (
                      ;
                      !Object.prototype.hasOwnProperty.call(e, t) &&
                      null !== (e = l(e));

                    );
                    return e;
                  })(e, t);
                  if (r) {
                    var i = Object.getOwnPropertyDescriptor(r, t);
                    return i.get ? i.get.call(n) : i.value;
                  }
                })(e, t, n || e);
        }
        function y(e, t) {
          return (
            D(e) ||
            (function(e, t) {
              if (
                Symbol.iterator in Object(e) ||
                '[object Arguments]' === Object.prototype.toString.call(e)
              ) {
                var n = [],
                  r = !0,
                  i = !1,
                  a = void 0;
                try {
                  for (
                    var o, s = e[Symbol.iterator]();
                    !(r = (o = s.next()).done) &&
                    (n.push(o.value), !t || n.length !== t);
                    r = !0
                  );
                } catch (e) {
                  (i = !0), (a = e);
                } finally {
                  try {
                    r || null == s.return || s.return();
                  } finally {
                    if (i) throw a;
                  }
                }
                return n;
              }
            })(e, t) ||
            E()
          );
        }
        function v(e) {
          return (
            D(e) ||
            (function(e) {
              if (
                Symbol.iterator in Object(e) ||
                '[object Arguments]' === Object.prototype.toString.call(e)
              )
                return Array.from(e);
            })(e) ||
            E()
          );
        }
        function D(e) {
          if (Array.isArray(e)) return e;
        }
        function E() {
          throw new TypeError(
            'Invalid attempt to destructure non-iterable instance',
          );
        }
        /*! *****************************************************************************
  Copyright (c) Microsoft Corporation. All rights reserved.
  Licensed under the Apache License, Version 2.0 (the "License"); you may not use
  this file except in compliance with the License. You may obtain a copy of the
  License at http://www.apache.org/licenses/LICENSE-2.0

  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
  MERCHANTABLITY OR NON-INFRINGEMENT.

  See the Apache Version 2.0 License for specific language governing permissions
  and limitations under the License.
  ***************************************************************************** */ var C = function(
            e,
            t,
          ) {
            return (C =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function(e, t) {
                  e.__proto__ = t;
                }) ||
              function(e, t) {
                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
              })(e, t);
          },
          b = function() {
            return (b =
              Object.assign ||
              function(e) {
                for (var t, n = 1, r = arguments.length; n < r; n++)
                  for (var i in (t = arguments[n]))
                    Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e;
              }).apply(this, arguments);
          };
        function x(e) {
          var t = 'function' == typeof Symbol && e[Symbol.iterator],
            n = 0;
          return t
            ? t.call(e)
            : {
                next: function() {
                  return (
                    e && n >= e.length && (e = void 0),
                    { value: e && e[n++], done: !e }
                  );
                },
              };
        }
        function A(e, t) {
          var n = 'function' == typeof Symbol && e[Symbol.iterator];
          if (!n) return e;
          var r,
            i,
            a = n.call(e),
            o = [];
          try {
            for (; (void 0 === t || t-- > 0) && !(r = a.next()).done; )
              o.push(r.value);
          } catch (e) {
            i = { error: e };
          } finally {
            try {
              r && !r.done && (n = a.return) && n.call(a);
            } finally {
              if (i) throw i.error;
            }
          }
          return o;
        }
        function S(e) {
          return this instanceof S ? ((this.v = e), this) : new S(e);
        }
        var w = Object.freeze({
            __proto__: null,
            __extends: function(e, t) {
              function n() {
                this.constructor = e;
              }
              C(e, t),
                (e.prototype =
                  null === t
                    ? Object.create(t)
                    : ((n.prototype = t.prototype), new n()));
            },
            get __assign() {
              return b;
            },
            __rest: function(e, t) {
              var n = {};
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) &&
                  t.indexOf(r) < 0 &&
                  (n[r] = e[r]);
              if (
                null != e &&
                'function' == typeof Object.getOwnPropertySymbols
              ) {
                var i = 0;
                for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                  t.indexOf(r[i]) < 0 &&
                    Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                    (n[r[i]] = e[r[i]]);
              }
              return n;
            },
            __decorate: function(e, t, n, r) {
              var i,
                o = arguments.length,
                s =
                  o < 3
                    ? t
                    : null === r
                    ? (r = Object.getOwnPropertyDescriptor(t, n))
                    : r;
              if (
                'object' ===
                  ('undefined' == typeof Reflect ? 'undefined' : a(Reflect)) &&
                'function' == typeof Reflect.decorate
              )
                s = Reflect.decorate(e, t, n, r);
              else
                for (var u = e.length - 1; u >= 0; u--)
                  (i = e[u]) &&
                    (s = (o < 3 ? i(s) : o > 3 ? i(t, n, s) : i(t, n)) || s);
              return o > 3 && s && Object.defineProperty(t, n, s), s;
            },
            __param: function(e, t) {
              return function(n, r) {
                t(n, r, e);
              };
            },
            __metadata: function(e, t) {
              if (
                'object' ===
                  ('undefined' == typeof Reflect ? 'undefined' : a(Reflect)) &&
                'function' == typeof Reflect.metadata
              )
                return Reflect.metadata(e, t);
            },
            __awaiter: function(e, t, n, r) {
              return new (n || (n = Promise))(function(i, a) {
                function o(e) {
                  try {
                    u(r.next(e));
                  } catch (e) {
                    a(e);
                  }
                }
                function s(e) {
                  try {
                    u(r.throw(e));
                  } catch (e) {
                    a(e);
                  }
                }
                function u(e) {
                  e.done
                    ? i(e.value)
                    : new n(function(t) {
                        t(e.value);
                      }).then(o, s);
                }
                u((r = r.apply(e, t || [])).next());
              });
            },
            __generator: function(e, t) {
              var n,
                r,
                i,
                a,
                o = {
                  label: 0,
                  sent: function() {
                    if (1 & i[0]) throw i[1];
                    return i[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (a = { next: s(0), throw: s(1), return: s(2) }),
                'function' == typeof Symbol &&
                  (a[Symbol.iterator] = function() {
                    return this;
                  }),
                a
              );
              function s(a) {
                return function(s) {
                  return (function(a) {
                    if (n)
                      throw new TypeError('Generator is already executing.');
                    for (; o; )
                      try {
                        if (
                          ((n = 1),
                          r &&
                            (i =
                              2 & a[0]
                                ? r.return
                                : a[0]
                                ? r.throw || ((i = r.return) && i.call(r), 0)
                                : r.next) &&
                            !(i = i.call(r, a[1])).done)
                        )
                          return i;
                        switch (
                          ((r = 0), i && (a = [2 & a[0], i.value]), a[0])
                        ) {
                          case 0:
                          case 1:
                            i = a;
                            break;
                          case 4:
                            return o.label++, { value: a[1], done: !1 };
                          case 5:
                            o.label++, (r = a[1]), (a = [0]);
                            continue;
                          case 7:
                            (a = o.ops.pop()), o.trys.pop();
                            continue;
                          default:
                            if (
                              !(i =
                                (i = o.trys).length > 0 && i[i.length - 1]) &&
                              (6 === a[0] || 2 === a[0])
                            ) {
                              o = 0;
                              continue;
                            }
                            if (
                              3 === a[0] &&
                              (!i || (a[1] > i[0] && a[1] < i[3]))
                            ) {
                              o.label = a[1];
                              break;
                            }
                            if (6 === a[0] && o.label < i[1]) {
                              (o.label = i[1]), (i = a);
                              break;
                            }
                            if (i && o.label < i[2]) {
                              (o.label = i[2]), o.ops.push(a);
                              break;
                            }
                            i[2] && o.ops.pop(), o.trys.pop();
                            continue;
                        }
                        a = t.call(e, o);
                      } catch (e) {
                        (a = [6, e]), (r = 0);
                      } finally {
                        n = i = 0;
                      }
                    if (5 & a[0]) throw a[1];
                    return { value: a[0] ? a[1] : void 0, done: !0 };
                  })([a, s]);
                };
              }
            },
            __exportStar: function(e, t) {
              for (var n in e) t.hasOwnProperty(n) || (t[n] = e[n]);
            },
            __values: x,
            __read: A,
            __spread: function() {
              for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(A(arguments[t]));
              return e;
            },
            __spreadArrays: function() {
              for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                e += arguments[t].length;
              var r = Array(e),
                i = 0;
              for (t = 0; t < n; t++)
                for (var a = arguments[t], o = 0, s = a.length; o < s; o++, i++)
                  r[i] = a[o];
              return r;
            },
            __await: S,
            __asyncGenerator: function(e, t, n) {
              if (!Symbol.asyncIterator)
                throw new TypeError('Symbol.asyncIterator is not defined.');
              var r,
                i = n.apply(e, t || []),
                a = [];
              return (
                (r = {}),
                o('next'),
                o('throw'),
                o('return'),
                (r[Symbol.asyncIterator] = function() {
                  return this;
                }),
                r
              );
              function o(e) {
                i[e] &&
                  (r[e] = function(t) {
                    return new Promise(function(n, r) {
                      a.push([e, t, n, r]) > 1 || s(e, t);
                    });
                  });
              }
              function s(e, t) {
                try {
                  (n = i[e](t)).value instanceof S
                    ? Promise.resolve(n.value.v).then(u, c)
                    : l(a[0][2], n);
                } catch (e) {
                  l(a[0][3], e);
                }
                var n;
              }
              function u(e) {
                s('next', e);
              }
              function c(e) {
                s('throw', e);
              }
              function l(e, t) {
                e(t), a.shift(), a.length && s(a[0][0], a[0][1]);
              }
            },
            __asyncDelegator: function(e) {
              var t, n;
              return (
                (t = {}),
                r('next'),
                r('throw', function(e) {
                  throw e;
                }),
                r('return'),
                (t[Symbol.iterator] = function() {
                  return this;
                }),
                t
              );
              function r(r, i) {
                t[r] = e[r]
                  ? function(t) {
                      return (n = !n)
                        ? { value: S(e[r](t)), done: 'return' === r }
                        : i
                        ? i(t)
                        : t;
                    }
                  : i;
              }
            },
            __asyncValues: function(e) {
              if (!Symbol.asyncIterator)
                throw new TypeError('Symbol.asyncIterator is not defined.');
              var t,
                n = e[Symbol.asyncIterator];
              return n
                ? n.call(e)
                : ((e = x(e)),
                  (t = {}),
                  r('next'),
                  r('throw'),
                  r('return'),
                  (t[Symbol.asyncIterator] = function() {
                    return this;
                  }),
                  t);
              function r(n) {
                t[n] =
                  e[n] &&
                  function(t) {
                    return new Promise(function(r, i) {
                      !(function(e, t, n, r) {
                        Promise.resolve(r).then(function(t) {
                          e({ value: t, done: n });
                        }, t);
                      })(r, i, (t = e[n](t)).done, t.value);
                    });
                  };
              }
            },
            __makeTemplateObject: function(e, t) {
              return (
                Object.defineProperty
                  ? Object.defineProperty(e, 'raw', { value: t })
                  : (e.raw = t),
                e
              );
            },
            __importStar: function(e) {
              if (e && e.__esModule) return e;
              var t = {};
              if (null != e)
                for (var n in e)
                  Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
              return (t.default = e), t;
            },
            __importDefault: function(e) {
              return e && e.__esModule ? e : { default: e };
            },
          }),
          F = i(function(e, t) {
            var n = '\n',
              r = (function() {
                function e(e) {
                  this.string = e;
                  for (var t = [0], r = 0; r < e.length; )
                    switch (e[r]) {
                      case n:
                        (r += n.length), t.push(r);
                        break;
                      case '\r':
                        e[(r += '\r'.length)] === n && (r += n.length),
                          t.push(r);
                        break;
                      default:
                        r++;
                    }
                  this.offsets = t;
                }
                return (
                  (e.prototype.locationForIndex = function(e) {
                    if (e < 0 || e > this.string.length) return null;
                    for (var t = 0, n = this.offsets; n[t + 1] <= e; ) t++;
                    return { line: t, column: e - n[t] };
                  }),
                  (e.prototype.indexForLocation = function(e) {
                    var t = e.line,
                      n = e.column;
                    return t < 0 ||
                      t >= this.offsets.length ||
                      n < 0 ||
                      n > this.lengthOfLine(t)
                      ? null
                      : this.offsets[t] + n;
                  }),
                  (e.prototype.lengthOfLine = function(e) {
                    var t = this.offsets[e];
                    return (
                      (e === this.offsets.length - 1
                        ? this.string.length
                        : this.offsets[e + 1]) - t
                    );
                  }),
                  e
                );
              })();
            (t.__esModule = !0), (t.default = r);
          });
        r(F);
        var k = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.Type = t.Char = void 0),
            (t.Char = {
              ANCHOR: '&',
              COMMENT: '#',
              TAG: '!',
              DIRECTIVES_END: '-',
              DOCUMENT_END: '.',
            }),
            (t.Type = {
              ALIAS: 'ALIAS',
              BLANK_LINE: 'BLANK_LINE',
              BLOCK_FOLDED: 'BLOCK_FOLDED',
              BLOCK_LITERAL: 'BLOCK_LITERAL',
              COMMENT: 'COMMENT',
              DIRECTIVE: 'DIRECTIVE',
              DOCUMENT: 'DOCUMENT',
              FLOW_MAP: 'FLOW_MAP',
              FLOW_SEQ: 'FLOW_SEQ',
              MAP: 'MAP',
              MAP_KEY: 'MAP_KEY',
              MAP_VALUE: 'MAP_VALUE',
              PLAIN: 'PLAIN',
              QUOTE_DOUBLE: 'QUOTE_DOUBLE',
              QUOTE_SINGLE: 'QUOTE_SINGLE',
              SEQ: 'SEQ',
              SEQ_ITEM: 'SEQ_ITEM',
            });
        });
        r(k), k.Type, k.Char;
        var T = i(function(e, t) {
          function n(e) {
            for (var t = [0], n = e.indexOf('\n'); -1 !== n; )
              (n += 1), t.push(n), (n = e.indexOf('\n', n));
            return t;
          }
          function r(e) {
            var t, r;
            return (
              'string' == typeof e
                ? ((t = n(e)), (r = e))
                : (Array.isArray(e) && (e = e[0]),
                  e &&
                    e.context &&
                    (e.lineStarts || (e.lineStarts = n(e.context.src)),
                    (t = e.lineStarts),
                    (r = e.context.src))),
              { lineStarts: t, src: r }
            );
          }
          function i(e, t) {
            var n = r(t),
              i = n.lineStarts,
              a = n.src;
            if (!i || !(e >= 1) || e > i.length) return null;
            for (var o = i[e - 1], s = i[e]; s && s > o && '\n' === a[s - 1]; )
              --s;
            return a.slice(o, s);
          }
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.getLinePos = function(e, t) {
              if ('number' != typeof e || e < 0) return null;
              var n = r(t),
                i = n.lineStarts,
                a = n.src;
              if (!i || !a || e > a.length) return null;
              for (var o = 0; o < i.length; ++o) {
                var s = i[o];
                if (e < s) return { line: o, col: e - i[o - 1] + 1 };
                if (e === s) return { line: o + 1, col: 1 };
              }
              var u = i.length;
              return { line: u, col: e - i[u - 1] + 1 };
            }),
            (t.getLine = i),
            (t.getPrettyContext = function(e, t) {
              var n = e.start,
                r = e.end,
                a =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 80,
                o = i(n.line, t);
              if (!o) return null;
              var s = n.col;
              if (o.length > a)
                if (s <= a - 10) o = o.substr(0, a - 1) + '…';
                else {
                  var u = Math.round(a / 2);
                  o.length > s + u && (o = o.substr(0, s + u - 1) + '…'),
                    (s -= o.length - a),
                    (o = '…' + o.substr(1 - a));
                }
              var c = 1,
                l = '';
              r &&
                (r.line === n.line && s + (r.col - n.col) <= a + 1
                  ? (c = r.col - n.col)
                  : ((c = Math.min(o.length + 1, a) - s), (l = '…')));
              var p = s > 1 ? ' '.repeat(s - 1) : '',
                f = '^'.repeat(c);
              return ''
                .concat(o, '\n')
                .concat(p)
                .concat(f)
                .concat(l);
            });
        });
        r(T), T.getLinePos, T.getLine, T.getPrettyContext;
        var _ = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = (function() {
            function e(t, n) {
              o(this, e), (this.start = t), (this.end = n || t);
            }
            return (
              u(e, null, [
                {
                  key: 'copy',
                  value: function(t) {
                    return new e(t.start, t.end);
                  },
                },
              ]),
              u(e, [
                {
                  key: 'isEmpty',
                  value: function() {
                    return (
                      'number' != typeof this.start ||
                      !this.end ||
                      this.end <= this.start
                    );
                  },
                },
                {
                  key: 'setOrigRange',
                  value: function(e, t) {
                    var n = this.start,
                      r = this.end;
                    if (0 === e.length || r <= e[0])
                      return (this.origStart = n), (this.origEnd = r), t;
                    for (var i = t; i < e.length && !(e[i] > n); ) ++i;
                    this.origStart = n + i;
                    for (var a = i; i < e.length && !(e[i] >= r); ) ++i;
                    return (this.origEnd = r + i), a;
                  },
                },
              ]),
              e
            );
          })();
          t.default = n;
        });
        r(_);
        var O = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n,
            r = (n = _) && n.__esModule ? n : { default: n },
            i = (function() {
              function e(t, n, r) {
                o(this, e),
                  Object.defineProperty(this, 'context', {
                    value: r || null,
                    writable: !0,
                  }),
                  (this.error = null),
                  (this.range = null),
                  (this.valueRange = null),
                  (this.props = n || []),
                  (this.type = t),
                  (this.value = null);
              }
              return (
                u(e, null, [
                  {
                    key: 'addStringTerminator',
                    value: function(t, n, r) {
                      if ('\n' === r[r.length - 1]) return r;
                      var i = e.endOfWhiteSpace(t, n);
                      return i >= t.length || '\n' === t[i] ? r + '\n' : r;
                    },
                  },
                  {
                    key: 'atDocumentBoundary',
                    value: function(e, t, n) {
                      var r = e[t];
                      if (!r) return !0;
                      var i = e[t - 1];
                      if (i && '\n' !== i) return !1;
                      if (n) {
                        if (r !== n) return !1;
                      } else if (
                        r !== k.Char.DIRECTIVES_END &&
                        r !== k.Char.DOCUMENT_END
                      )
                        return !1;
                      var a = e[t + 1],
                        o = e[t + 2];
                      if (a !== r || o !== r) return !1;
                      var s = e[t + 3];
                      return !s || '\n' === s || '\t' === s || ' ' === s;
                    },
                  },
                  {
                    key: 'endOfIdentifier',
                    value: function(e, t) {
                      for (
                        var n = e[t],
                          r = '<' === n,
                          i = r
                            ? ['\n', '\t', ' ', '>']
                            : ['\n', '\t', ' ', '[', ']', '{', '}', ','];
                        n && -1 === i.indexOf(n);

                      )
                        n = e[(t += 1)];
                      return r && '>' === n && (t += 1), t;
                    },
                  },
                  {
                    key: 'endOfIndent',
                    value: function(e, t) {
                      for (var n = e[t]; ' ' === n; ) n = e[(t += 1)];
                      return t;
                    },
                  },
                  {
                    key: 'endOfLine',
                    value: function(e, t) {
                      for (var n = e[t]; n && '\n' !== n; ) n = e[(t += 1)];
                      return t;
                    },
                  },
                  {
                    key: 'endOfWhiteSpace',
                    value: function(e, t) {
                      for (var n = e[t]; '\t' === n || ' ' === n; )
                        n = e[(t += 1)];
                      return t;
                    },
                  },
                  {
                    key: 'startOfLine',
                    value: function(e, t) {
                      var n = e[t - 1];
                      if ('\n' === n) return t;
                      for (; n && '\n' !== n; ) n = e[(t -= 1)];
                      return t + 1;
                    },
                  },
                  {
                    key: 'endOfBlockIndent',
                    value: function(t, n, r) {
                      var i = e.endOfIndent(t, r);
                      if (i > r + n) return i;
                      var a = e.endOfWhiteSpace(t, i),
                        o = t[a];
                      return o && '\n' !== o ? null : a;
                    },
                  },
                  {
                    key: 'atBlank',
                    value: function(e, t, n) {
                      var r = e[t];
                      return '\n' === r || '\t' === r || ' ' === r || (n && !r);
                    },
                  },
                  {
                    key: 'atCollectionItem',
                    value: function(t, n) {
                      var r = t[n];
                      return (
                        ('?' === r || ':' === r || '-' === r) &&
                        e.atBlank(t, n + 1, !0)
                      );
                    },
                  },
                  {
                    key: 'nextNodeIsIndented',
                    value: function(e, t, n) {
                      return !(!e || t < 0) && (t > 0 || (n && '-' === e));
                    },
                  },
                  {
                    key: 'normalizeOffset',
                    value: function(t, n) {
                      var r = t[n];
                      return r
                        ? '\n' !== r && '\n' === t[n - 1]
                          ? n - 1
                          : e.endOfWhiteSpace(t, n)
                        : n;
                    },
                  },
                  {
                    key: 'foldNewline',
                    value: function(t, n, r) {
                      for (
                        var i = 0, a = !1, o = '', s = t[n + 1];
                        ' ' === s || '\t' === s || '\n' === s;

                      ) {
                        switch (s) {
                          case '\n':
                            (i = 0), (n += 1), (o += '\n');
                            break;
                          case '\t':
                            i <= r && (a = !0),
                              (n = e.endOfWhiteSpace(t, n + 2) - 1);
                            break;
                          case ' ':
                            (i += 1), (n += 1);
                        }
                        s = t[n + 1];
                      }
                      return (
                        o || (o = ' '),
                        s && i <= r && (a = !0),
                        { fold: o, offset: n, error: a }
                      );
                    },
                  },
                ]),
                u(e, [
                  {
                    key: 'getPropValue',
                    value: function(e, t, n) {
                      if (!this.context) return null;
                      var r = this.context.src,
                        i = this.props[e];
                      return i && r[i.start] === t
                        ? r.slice(i.start + (n ? 1 : 0), i.end)
                        : null;
                    },
                  },
                  {
                    key: 'commentHasRequiredWhitespace',
                    value: function(t) {
                      var n = this.context.src;
                      if (this.header && t === this.header.end) return !1;
                      if (!this.valueRange) return !1;
                      var r = this.valueRange.end;
                      return t !== r || e.atBlank(n, r - 1);
                    },
                  },
                  {
                    key: 'parseComment',
                    value: function(t) {
                      var n = this.context.src;
                      if (n[t] === k.Char.COMMENT) {
                        var i = e.endOfLine(n, t + 1),
                          a = new r.default(t, i);
                        return this.props.push(a), i;
                      }
                      return t;
                    },
                  },
                  {
                    key: 'setOrigRanges',
                    value: function(e, t) {
                      return (
                        this.range && (t = this.range.setOrigRange(e, t)),
                        this.valueRange && this.valueRange.setOrigRange(e, t),
                        this.props.forEach(function(n) {
                          return n.setOrigRange(e, t);
                        }),
                        t
                      );
                    },
                  },
                  {
                    key: 'toString',
                    value: function() {
                      var t = this.context.src,
                        n = this.range,
                        r = this.value;
                      if (null != r) return r;
                      var i = t.slice(n.start, n.end);
                      return e.addStringTerminator(t, n.end, i);
                    },
                  },
                  {
                    key: 'anchor',
                    get: function() {
                      for (var e = 0; e < this.props.length; ++e) {
                        var t = this.getPropValue(e, k.Char.ANCHOR, !0);
                        if (null != t) return t;
                      }
                      return null;
                    },
                  },
                  {
                    key: 'comment',
                    get: function() {
                      for (var e = [], t = 0; t < this.props.length; ++t) {
                        var n = this.getPropValue(t, k.Char.COMMENT, !0);
                        null != n && e.push(n);
                      }
                      return e.length > 0 ? e.join('\n') : null;
                    },
                  },
                  {
                    key: 'hasComment',
                    get: function() {
                      if (this.context)
                        for (
                          var e = this.context.src, t = 0;
                          t < this.props.length;
                          ++t
                        )
                          if (e[this.props[t].start] === k.Char.COMMENT)
                            return !0;
                      return !1;
                    },
                  },
                  {
                    key: 'hasProps',
                    get: function() {
                      if (this.context)
                        for (
                          var e = this.context.src, t = 0;
                          t < this.props.length;
                          ++t
                        )
                          if (e[this.props[t].start] !== k.Char.COMMENT)
                            return !0;
                      return !1;
                    },
                  },
                  {
                    key: 'includesTrailingLines',
                    get: function() {
                      return !1;
                    },
                  },
                  {
                    key: 'jsonLike',
                    get: function() {
                      return (
                        -1 !==
                        [
                          k.Type.FLOW_MAP,
                          k.Type.FLOW_SEQ,
                          k.Type.QUOTE_DOUBLE,
                          k.Type.QUOTE_SINGLE,
                        ].indexOf(this.type)
                      );
                    },
                  },
                  {
                    key: 'rangeAsLinePos',
                    get: function() {
                      if (this.range && this.context) {
                        var e = (0, T.getLinePos)(
                          this.range.start,
                          this.context.root,
                        );
                        if (e)
                          return {
                            start: e,
                            end: (0, T.getLinePos)(
                              this.range.end,
                              this.context.root,
                            ),
                          };
                      }
                    },
                  },
                  {
                    key: 'rawValue',
                    get: function() {
                      if (!this.valueRange || !this.context) return null;
                      var e = this.valueRange,
                        t = e.start,
                        n = e.end;
                      return this.context.src.slice(t, n);
                    },
                  },
                  {
                    key: 'tag',
                    get: function() {
                      for (var e = 0; e < this.props.length; ++e) {
                        var t = this.getPropValue(e, k.Char.TAG, !1);
                        if (null != t) {
                          if ('<' === t[1]) return { verbatim: t.slice(2, -1) };
                          var n = y(t.match(/^(.*!)([^!]*)$/), 3);
                          return n[0], { handle: n[1], suffix: n[2] };
                        }
                      }
                      return null;
                    },
                  },
                  {
                    key: 'valueRangeContainsNewline',
                    get: function() {
                      if (!this.valueRange || !this.context) return !1;
                      for (
                        var e = this.valueRange,
                          t = e.start,
                          n = e.end,
                          r = this.context.src,
                          i = t;
                        i < n;
                        ++i
                      )
                        if ('\n' === r[i]) return !0;
                      return !1;
                    },
                  },
                ]),
                e
              );
            })();
          t.default = i;
        });
        r(O);
        var N = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.YAMLWarning = t.YAMLSyntaxError = t.YAMLSemanticError = t.YAMLReferenceError = t.YAMLError = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = (function(e) {
            function t(e, r, i) {
              var a;
              if ((o(this, t), !(i && r instanceof n.default)))
                throw new Error('Invalid arguments for new '.concat(e));
              return (
                ((a = m(this, l(t).call(this))).name = e),
                (a.message = i),
                (a.source = r),
                a
              );
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'makePretty',
                  value: function() {
                    if (this.source) {
                      this.nodeType = this.source.type;
                      var e = this.source.context && this.source.context.root;
                      if ('number' == typeof this.offset) {
                        this.range = new r.default(
                          this.offset,
                          this.offset + 1,
                        );
                        var t = e && (0, T.getLinePos)(this.offset, e);
                        if (t) {
                          var n = { line: t.line, col: t.col + 1 };
                          this.linePos = { start: t, end: n };
                        }
                        delete this.offset;
                      } else
                        (this.range = this.source.range),
                          (this.linePos = this.source.rangeAsLinePos);
                      if (this.linePos) {
                        var i = this.linePos.start,
                          a = i.line,
                          o = i.col;
                        this.message += ' at line '
                          .concat(a, ', column ')
                          .concat(o);
                        var s = e && (0, T.getPrettyContext)(this.linePos, e);
                        s && (this.message += ':\n\n'.concat(s, '\n'));
                      }
                      delete this.source;
                    }
                  },
                },
              ]),
              t
            );
          })(h(Error));
          t.YAMLError = a;
          var s = (function(e) {
            function t(e, n) {
              return (
                o(this, t), m(this, l(t).call(this, 'YAMLReferenceError', e, n))
              );
            }
            return c(t, e), t;
          })(a);
          t.YAMLReferenceError = s;
          var p = (function(e) {
            function t(e, n) {
              return (
                o(this, t), m(this, l(t).call(this, 'YAMLSemanticError', e, n))
              );
            }
            return c(t, e), t;
          })(a);
          t.YAMLSemanticError = p;
          var f = (function(e) {
            function t(e, n) {
              return (
                o(this, t), m(this, l(t).call(this, 'YAMLSyntaxError', e, n))
              );
            }
            return c(t, e), t;
          })(a);
          t.YAMLSyntaxError = f;
          var d = (function(e) {
            function t(e, n) {
              return o(this, t), m(this, l(t).call(this, 'YAMLWarning', e, n));
            }
            return c(t, e), t;
          })(a);
          t.YAMLWarning = d;
        });
        r(N),
          N.YAMLWarning,
          N.YAMLSyntaxError,
          N.YAMLSemanticError,
          N.YAMLReferenceError,
          N.YAMLError;
        var B = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = (function(e) {
            function t() {
              return o(this, t), m(this, l(t).call(this, k.Type.BLANK_LINE));
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'parse',
                  value: function(e, t) {
                    this.context = e;
                    for (var i = e.src, a = t + 1; n.default.atBlank(i, a); ) {
                      var o = n.default.endOfWhiteSpace(i, a);
                      if ('\n' !== o) break;
                      a = o + 1;
                    }
                    return (this.range = new r.default(t, a)), a;
                  },
                },
                {
                  key: 'includesTrailingLines',
                  get: function() {
                    return !0;
                  },
                },
              ]),
              t
            );
          })(n.default);
          t.default = a;
        });
        r(B);
        var I = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = a(B),
            r = a(O),
            i = a(_);
          function a(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var s = (function(e) {
            function t(e, n) {
              var r;
              return (
                o(this, t),
                ((r = m(this, l(t).call(this, e, n))).node = null),
                r
              );
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'parse',
                  value: function(e, t) {
                    this.context = e;
                    var a = e.parseNode,
                      o = e.src,
                      s = e.atLineStart,
                      u = e.lineStart;
                    s ||
                      this.type !== k.Type.SEQ_ITEM ||
                      (this.error = new N.YAMLSemanticError(
                        this,
                        'Sequence items must not have preceding content on the same line',
                      ));
                    for (
                      var c = s ? t - u : e.indent,
                        l = r.default.endOfWhiteSpace(o, t + 1),
                        p = o[l],
                        f = '#' === p,
                        h = [],
                        d = null;
                      '\n' === p || '#' === p;

                    ) {
                      if ('#' === p) {
                        var m = r.default.endOfLine(o, l + 1);
                        h.push(new i.default(l, m)), (l = m);
                      } else
                        (s = !0),
                          (u = l + 1),
                          '\n' === o[r.default.endOfWhiteSpace(o, u)] &&
                            0 === h.length &&
                            (u = (d = new n.default()).parse({ src: o }, u)),
                          (l = r.default.endOfIndent(o, u));
                      p = o[l];
                    }
                    if (
                      (r.default.nextNodeIsIndented(
                        p,
                        l - (u + c),
                        this.type !== k.Type.SEQ_ITEM,
                      )
                        ? (this.node = a(
                            {
                              atLineStart: s,
                              inCollection: !1,
                              indent: c,
                              lineStart: u,
                              parent: this,
                            },
                            l,
                          ))
                        : p && u > t + 1 && (l = u - 1),
                      this.node)
                    ) {
                      if (d) {
                        var g = e.parent.items || e.parent.contents;
                        g && g.push(d);
                      }
                      h.length && Array.prototype.push.apply(this.props, h),
                        (l = this.node.range.end);
                    } else if (f) {
                      var y = h[0];
                      this.props.push(y), (l = y.end);
                    } else l = r.default.endOfLine(o, t + 1);
                    var v = this.node ? this.node.valueRange.end : l;
                    return (this.valueRange = new i.default(t, v)), l;
                  },
                },
                {
                  key: 'setOrigRanges',
                  value: function(e, n) {
                    return (
                      (n = g(l(t.prototype), 'setOrigRanges', this).call(
                        this,
                        e,
                        n,
                      )),
                      this.node ? this.node.setOrigRanges(e, n) : n
                    );
                  },
                },
                {
                  key: 'toString',
                  value: function() {
                    var e = this.context.src,
                      t = this.node,
                      n = this.range,
                      i = this.value;
                    if (null != i) return i;
                    var a = t
                      ? e.slice(n.start, t.range.start) + String(t)
                      : e.slice(n.start, n.end);
                    return r.default.addStringTerminator(e, n.end, a);
                  },
                },
                {
                  key: 'includesTrailingLines',
                  get: function() {
                    return !!this.node && this.node.includesTrailingLines;
                  },
                },
              ]),
              t
            );
          })(r.default);
          t.default = s;
        });
        r(I);
        var P = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = (function(e) {
            function t() {
              return o(this, t), m(this, l(t).call(this, k.Type.COMMENT));
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'parse',
                  value: function(e, t) {
                    this.context = e;
                    var n = this.parseComment(t);
                    return (this.range = new r.default(t, n)), n;
                  },
                },
              ]),
              t
            );
          })(n.default);
          t.default = a;
        });
        r(P);
        var M = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.grabCollectionEndComments = f),
            (t.default = void 0);
          var n = p(B),
            r = p(I),
            i = p(P),
            a = p(O),
            s = p(_);
          function p(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function f(e) {
            for (var t = e; t instanceof r.default; ) t = t.node;
            if (!(t instanceof h)) return null;
            for (var n = t.items.length, i = -1, a = n - 1; a >= 0; --a) {
              var o = t.items[a];
              if (o.type === k.Type.COMMENT) {
                var s = o.context,
                  u = s.indent,
                  c = s.lineStart;
                if (u > 0 && o.range.start >= c + u) break;
                i = a;
              } else {
                if (o.type !== k.Type.BLANK_LINE) break;
                i = a;
              }
            }
            if (-1 === i) return null;
            for (
              var l = t.items.splice(i, n - i), p = l[0].range.start;
              (t.range.end = p),
                t.valueRange && t.valueRange.end > p && (t.valueRange.end = p),
                t !== e;

            )
              t = t.context.parent;
            return l;
          }
          var h = (function(e) {
            function t(e) {
              var n;
              o(this, t),
                (n = m(
                  this,
                  l(t).call(
                    this,
                    e.type === k.Type.SEQ_ITEM ? k.Type.SEQ : k.Type.MAP,
                  ),
                ));
              for (var r = e.props.length - 1; r >= 0; --r)
                if (e.props[r].start < e.context.lineStart) {
                  (n.props = e.props.slice(0, r + 1)),
                    (e.props = e.props.slice(r + 1));
                  var i = e.props[0] || e.valueRange;
                  e.range.start = i.start;
                  break;
                }
              n.items = [e];
              var a = f(e);
              return a && Array.prototype.push.apply(n.items, a), n;
            }
            return (
              c(t, e),
              u(t, null, [
                {
                  key: 'nextContentHasIndent',
                  value: function(e, n, r) {
                    var i = a.default.endOfLine(e, n) + 1,
                      o = e[(n = a.default.endOfWhiteSpace(e, i))];
                    return (
                      !!o &&
                      (n >= i + r ||
                        (('#' === o || '\n' === o) &&
                          t.nextContentHasIndent(e, n, r)))
                    );
                  },
                },
              ]),
              u(t, [
                {
                  key: 'parse',
                  value: function(e, r) {
                    this.context = e;
                    var o = e.parseNode,
                      u = e.src,
                      c = a.default.startOfLine(u, r),
                      l = this.items[0];
                    (l.context.parent = this),
                      (this.valueRange = s.default.copy(l.valueRange));
                    for (
                      var p = l.range.start - l.context.lineStart,
                        h = r,
                        d = u[(h = a.default.normalizeOffset(u, h))],
                        m = a.default.endOfWhiteSpace(u, c) === h,
                        g = !1;
                      d;

                    ) {
                      for (; '\n' === d || '#' === d; ) {
                        if (m && '\n' === d && !g) {
                          var y = new n.default();
                          if (
                            ((h = y.parse({ src: u }, h)),
                            (this.valueRange.end = h),
                            h >= u.length)
                          ) {
                            d = null;
                            break;
                          }
                          this.items.push(y), (h -= 1);
                        } else if ('#' === d) {
                          if (h < c + p && !t.nextContentHasIndent(u, h, p))
                            return h;
                          var v = new i.default();
                          if (
                            ((h = v.parse(
                              { indent: p, lineStart: c, src: u },
                              h,
                            )),
                            this.items.push(v),
                            (this.valueRange.end = h),
                            h >= u.length)
                          ) {
                            d = null;
                            break;
                          }
                        }
                        if (
                          ((c = h + 1),
                          (h = a.default.endOfIndent(u, c)),
                          a.default.atBlank(u, h))
                        ) {
                          var D = a.default.endOfWhiteSpace(u, h),
                            E = u[D];
                          (E && '\n' !== E && '#' !== E) || (h = D);
                        }
                        (d = u[h]), (m = !0);
                      }
                      if (!d) break;
                      if (h !== c + p && (m || ':' !== d)) {
                        c > r && (h = c);
                        break;
                      }
                      if ((l.type === k.Type.SEQ_ITEM) != ('-' === d)) {
                        var C = !0;
                        if ('-' === d) {
                          var b = u[h + 1];
                          C = !b || '\n' === b || '\t' === b || ' ' === b;
                        }
                        if (C) {
                          c > r && (h = c);
                          break;
                        }
                      }
                      var x = o(
                        {
                          atLineStart: m,
                          inCollection: !0,
                          indent: p,
                          lineStart: c,
                          parent: this,
                        },
                        h,
                      );
                      if (!x) return h;
                      if (
                        (this.items.push(x),
                        (this.valueRange.end = x.valueRange.end),
                        (d =
                          u[(h = a.default.normalizeOffset(u, x.range.end))]),
                        (m = !1),
                        (g = x.includesTrailingLines),
                        d)
                      ) {
                        for (var A = h - 1, S = u[A]; ' ' === S || '\t' === S; )
                          S = u[--A];
                        '\n' === S && ((c = A + 1), (m = !0));
                      }
                      var w = f(x);
                      w && Array.prototype.push.apply(this.items, w);
                    }
                    return h;
                  },
                },
                {
                  key: 'setOrigRanges',
                  value: function(e, n) {
                    return (
                      (n = g(l(t.prototype), 'setOrigRanges', this).call(
                        this,
                        e,
                        n,
                      )),
                      this.items.forEach(function(t) {
                        n = t.setOrigRanges(e, n);
                      }),
                      n
                    );
                  },
                },
                {
                  key: 'toString',
                  value: function() {
                    var e = this.context.src,
                      t = this.items,
                      n = this.range,
                      r = this.value;
                    if (null != r) return r;
                    for (
                      var i = e.slice(n.start, t[0].range.start) + String(t[0]),
                        o = 1;
                      o < t.length;
                      ++o
                    ) {
                      var s = t[o],
                        u = s.context,
                        c = u.atLineStart,
                        l = u.indent;
                      if (c) for (var p = 0; p < l; ++p) i += ' ';
                      i += String(s);
                    }
                    return a.default.addStringTerminator(e, n.end, i);
                  },
                },
                {
                  key: 'includesTrailingLines',
                  get: function() {
                    return this.items.length > 0;
                  },
                },
              ]),
              t
            );
          })(a.default);
          t.default = h;
        });
        r(M), M.grabCollectionEndComments;
        var L = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = (function(e) {
            function t() {
              var e;
              return (
                o(this, t),
                ((e = m(this, l(t).call(this, k.Type.DIRECTIVE))).name = null),
                e
              );
            }
            return (
              c(t, e),
              u(t, null, [
                {
                  key: 'endOfDirective',
                  value: function(e, t) {
                    for (var n = e[t]; n && '\n' !== n && '#' !== n; )
                      n = e[(t += 1)];
                    for (n = e[t - 1]; ' ' === n || '\t' === n; )
                      n = e[(t -= 1) - 1];
                    return t;
                  },
                },
              ]),
              u(t, [
                {
                  key: 'parseName',
                  value: function(e) {
                    for (
                      var t = this.context.src, n = e, r = t[n];
                      r && '\n' !== r && '\t' !== r && ' ' !== r;

                    )
                      r = t[(n += 1)];
                    return (this.name = t.slice(e, n)), n;
                  },
                },
                {
                  key: 'parseParameters',
                  value: function(e) {
                    for (
                      var t = this.context.src, n = e, i = t[n];
                      i && '\n' !== i && '#' !== i;

                    )
                      i = t[(n += 1)];
                    return (this.valueRange = new r.default(e, n)), n;
                  },
                },
                {
                  key: 'parse',
                  value: function(e, t) {
                    this.context = e;
                    var n = this.parseName(t + 1);
                    return (
                      (n = this.parseParameters(n)),
                      (n = this.parseComment(n)),
                      (this.range = new r.default(t, n)),
                      n
                    );
                  },
                },
                {
                  key: 'parameters',
                  get: function() {
                    var e = this.rawValue;
                    return e ? e.trim().split(/[ \t]+/) : [];
                  },
                },
              ]),
              t
            );
          })(n.default);
          t.default = a;
        });
        r(L);
        var R = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = p(B),
            r = p(P),
            i = p(L),
            a = p(O),
            s = p(_);
          function p(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var f = (function(e) {
            function t() {
              var e;
              return (
                o(this, t),
                ((e = m(
                  this,
                  l(t).call(this, k.Type.DOCUMENT),
                )).directives = null),
                (e.contents = null),
                (e.directivesEndMarker = null),
                (e.documentEndMarker = null),
                e
              );
            }
            return (
              c(t, e),
              u(t, null, [
                {
                  key: 'startCommentOrEndBlankLine',
                  value: function(e, t) {
                    var n = a.default.endOfWhiteSpace(e, t),
                      r = e[n];
                    return '#' === r || '\n' === r ? n : t;
                  },
                },
              ]),
              u(t, [
                {
                  key: 'parseDirectives',
                  value: function(e) {
                    var o = this.context.src;
                    this.directives = [];
                    for (
                      var u = !0, c = !1, l = e;
                      !a.default.atDocumentBoundary(
                        o,
                        l,
                        k.Char.DIRECTIVES_END,
                      );

                    )
                      switch (o[(l = t.startCommentOrEndBlankLine(o, l))]) {
                        case '\n':
                          if (u) {
                            var p = new n.default();
                            (l = p.parse({ src: o }, l)) < o.length &&
                              this.directives.push(p);
                          } else (l += 1), (u = !0);
                          break;
                        case '#':
                          var f = new r.default();
                          (l = f.parse({ src: o }, l)),
                            this.directives.push(f),
                            (u = !1);
                          break;
                        case '%':
                          var h = new i.default();
                          (l = h.parse({ parent: this, src: o }, l)),
                            this.directives.push(h),
                            (c = !0),
                            (u = !1);
                          break;
                        default:
                          return (
                            c
                              ? (this.error = new N.YAMLSemanticError(
                                  this,
                                  'Missing directives-end indicator line',
                                ))
                              : this.directives.length > 0 &&
                                ((this.contents = this.directives),
                                (this.directives = [])),
                            l
                          );
                      }
                    return o[l]
                      ? ((this.directivesEndMarker = new s.default(l, l + 3)),
                        l + 3)
                      : (c
                          ? (this.error = new N.YAMLSemanticError(
                              this,
                              'Missing directives-end indicator line',
                            ))
                          : this.directives.length > 0 &&
                            ((this.contents = this.directives),
                            (this.directives = [])),
                        l);
                  },
                },
                {
                  key: 'parseContents',
                  value: function(e) {
                    var i = this.context,
                      o = i.parseNode,
                      u = i.src;
                    this.contents || (this.contents = []);
                    for (var c = e; '-' === u[c - 1]; ) c -= 1;
                    var l = a.default.endOfWhiteSpace(u, e),
                      p = c === e;
                    for (
                      this.valueRange = new s.default(l);
                      !a.default.atDocumentBoundary(u, l, k.Char.DOCUMENT_END);

                    ) {
                      switch (u[l]) {
                        case '\n':
                          if (p) {
                            var f = new n.default();
                            (l = f.parse({ src: u }, l)) < u.length &&
                              this.contents.push(f);
                          } else (l += 1), (p = !0);
                          c = l;
                          break;
                        case '#':
                          var h = new r.default();
                          (l = h.parse({ src: u }, l)),
                            this.contents.push(h),
                            (p = !1);
                          break;
                        default:
                          var d = a.default.endOfIndent(u, l),
                            m = o(
                              {
                                atLineStart: p,
                                indent: -1,
                                inFlow: !1,
                                inCollection: !1,
                                lineStart: c,
                                parent: this,
                              },
                              d,
                            );
                          if (!m) return (this.valueRange.end = d);
                          this.contents.push(m), (l = m.range.end), (p = !1);
                          var g = (0, M.grabCollectionEndComments)(m);
                          g && Array.prototype.push.apply(this.contents, g);
                      }
                      l = t.startCommentOrEndBlankLine(u, l);
                    }
                    if (
                      ((this.valueRange.end = l),
                      u[l] &&
                        ((this.documentEndMarker = new s.default(l, l + 3)),
                        u[(l += 3)]))
                    ) {
                      if ('#' === u[(l = a.default.endOfWhiteSpace(u, l))]) {
                        var y = new r.default();
                        (l = y.parse({ src: u }, l)), this.contents.push(y);
                      }
                      switch (u[l]) {
                        case '\n':
                          l += 1;
                          break;
                        case void 0:
                          break;
                        default:
                          this.error = new N.YAMLSyntaxError(
                            this,
                            'Document end marker line cannot have a non-comment suffix',
                          );
                      }
                    }
                    return l;
                  },
                },
                {
                  key: 'parse',
                  value: function(e, t) {
                    (e.root = this), (this.context = e);
                    var n = 65279 === e.src.charCodeAt(t) ? t + 1 : t;
                    return (n = this.parseDirectives(n)), this.parseContents(n);
                  },
                },
                {
                  key: 'setOrigRanges',
                  value: function(e, n) {
                    return (
                      (n = g(l(t.prototype), 'setOrigRanges', this).call(
                        this,
                        e,
                        n,
                      )),
                      this.directives.forEach(function(t) {
                        n = t.setOrigRanges(e, n);
                      }),
                      this.directivesEndMarker &&
                        (n = this.directivesEndMarker.setOrigRange(e, n)),
                      this.contents.forEach(function(t) {
                        n = t.setOrigRanges(e, n);
                      }),
                      this.documentEndMarker &&
                        (n = this.documentEndMarker.setOrigRange(e, n)),
                      n
                    );
                  },
                },
                {
                  key: 'toString',
                  value: function() {
                    var e = this.contents,
                      t = this.directives,
                      n = this.value;
                    if (null != n) return n;
                    var r = t.join('');
                    return (
                      e.length > 0 &&
                        ((t.length > 0 || e[0].type === k.Type.COMMENT) &&
                          (r += '---\n'),
                        (r += e.join(''))),
                      '\n' !== r[r.length - 1] && (r += '\n'),
                      r
                    );
                  },
                },
              ]),
              t
            );
          })(a.default);
          t.default = f;
        });
        r(R);
        var j = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = (function(e) {
            function t() {
              return o(this, t), m(this, l(t).apply(this, arguments));
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'parse',
                  value: function(e, t) {
                    this.context = e;
                    var i = e.src,
                      a = n.default.endOfIdentifier(i, t + 1);
                    return (
                      (this.valueRange = new r.default(t + 1, a)),
                      (a = n.default.endOfWhiteSpace(i, a)),
                      this.parseComment(a)
                    );
                  },
                },
              ]),
              t
            );
          })(n.default);
          t.default = a;
        });
        r(j);
        var U = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = t.Chomp = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = { CLIP: 'CLIP', KEEP: 'KEEP', STRIP: 'STRIP' };
          t.Chomp = a;
          var s = (function(e) {
            function t(e, n) {
              var r;
              return (
                o(this, t),
                ((r = m(this, l(t).call(this, e, n))).blockIndent = null),
                (r.chomping = a.CLIP),
                (r.header = null),
                r
              );
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'parseBlockHeader',
                  value: function(e) {
                    for (var t = this.context.src, n = e + 1, i = ''; ; ) {
                      var o = t[n];
                      switch (o) {
                        case '-':
                          this.chomping = a.STRIP;
                          break;
                        case '+':
                          this.chomping = a.KEEP;
                          break;
                        case '0':
                        case '1':
                        case '2':
                        case '3':
                        case '4':
                        case '5':
                        case '6':
                        case '7':
                        case '8':
                        case '9':
                          i += o;
                          break;
                        default:
                          return (
                            (this.blockIndent = Number(i) || null),
                            (this.header = new r.default(e, n)),
                            n
                          );
                      }
                      n += 1;
                    }
                  },
                },
                {
                  key: 'parseBlockValue',
                  value: function(e) {
                    for (
                      var t = this.context,
                        i = t.indent,
                        o = t.src,
                        s = e,
                        u = e,
                        c = this.blockIndent ? i + this.blockIndent - 1 : i,
                        l = 1,
                        p = o[s];
                      '\n' === p &&
                      ((s += 1), !n.default.atDocumentBoundary(o, s));
                      p = o[s]
                    ) {
                      var f = n.default.endOfBlockIndent(o, c, s);
                      if (null === f) break;
                      if (!this.blockIndent) {
                        var h = f - (s + i);
                        if ('\n' !== o[f]) {
                          if (h < l) {
                            s -= 1;
                            break;
                          }
                          (this.blockIndent = h),
                            (c = i + this.blockIndent - 1);
                        } else h > l && (l = h);
                      }
                      s = '\n' === o[f] ? f : (u = n.default.endOfLine(o, f));
                    }
                    return (
                      this.chomping !== a.KEEP && (s = o[u] ? u + 1 : u),
                      (this.valueRange = new r.default(e + 1, s)),
                      s
                    );
                  },
                },
                {
                  key: 'parse',
                  value: function(e, t) {
                    this.context = e;
                    var r = e.src,
                      i = this.parseBlockHeader(t);
                    return (
                      (i = n.default.endOfWhiteSpace(r, i)),
                      (i = this.parseComment(i)),
                      this.parseBlockValue(i)
                    );
                  },
                },
                {
                  key: 'setOrigRanges',
                  value: function(e, n) {
                    return (
                      (n = g(l(t.prototype), 'setOrigRanges', this).call(
                        this,
                        e,
                        n,
                      )),
                      this.header ? this.header.setOrigRange(e, n) : n
                    );
                  },
                },
                {
                  key: 'includesTrailingLines',
                  get: function() {
                    return this.chomping === a.KEEP;
                  },
                },
                {
                  key: 'strValue',
                  get: function() {
                    if (!this.valueRange || !this.context) return null;
                    var e = this.valueRange,
                      t = e.start,
                      r = e.end,
                      i = this.context,
                      o = i.indent,
                      s = i.src;
                    if (this.valueRange.isEmpty()) return '';
                    for (
                      var u = null, c = s[r - 1];
                      '\n' === c || '\t' === c || ' ' === c;

                    ) {
                      if ((r -= 1) <= t) {
                        if (this.chomping === a.KEEP) break;
                        return '';
                      }
                      '\n' === c && (u = r), (c = s[r - 1]);
                    }
                    var l = r + 1;
                    u &&
                      (this.chomping === a.KEEP
                        ? ((l = u), (r = this.valueRange.end))
                        : (r = u));
                    for (
                      var p = o + this.blockIndent,
                        f = this.type === k.Type.BLOCK_FOLDED,
                        h = !0,
                        d = '',
                        m = '',
                        g = !1,
                        y = t;
                      y < r;
                      ++y
                    ) {
                      for (var v = 0; v < p && ' ' === s[y]; ++v) y += 1;
                      var D = s[y];
                      if ('\n' === D) '\n' === m ? (d += '\n') : (m = '\n');
                      else {
                        var E = n.default.endOfLine(s, y),
                          C = s.slice(y, E);
                        (y = E),
                          f && (' ' === D || '\t' === D) && y < l
                            ? (' ' === m
                                ? (m = '\n')
                                : g || h || '\n' !== m || (m = '\n\n'),
                              (d += m + C),
                              (m = (E < r && s[E]) || ''),
                              (g = !0))
                            : ((d += m + C),
                              (m = f && y < l ? ' ' : '\n'),
                              (g = !1)),
                          h && '' !== C && (h = !1);
                      }
                    }
                    return this.chomping === a.STRIP ? d : d + '\n';
                  },
                },
              ]),
              t
            );
          })(n.default);
          t.default = s;
        });
        r(U), U.Chomp;
        var V = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = s(B),
            r = s(P),
            i = s(O),
            a = s(_);
          function s(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var p = (function(e) {
            function t(e, n) {
              var r;
              return (
                o(this, t),
                ((r = m(this, l(t).call(this, e, n))).items = null),
                r
              );
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'prevNodeIsJsonLike',
                  value: function() {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : this.items.length,
                      t = this.items[e - 1];
                    return (
                      !!t &&
                      (t.jsonLike ||
                        (t.type === k.Type.COMMENT &&
                          this.nodeIsJsonLike(e - 1)))
                    );
                  },
                },
                {
                  key: 'parse',
                  value: function(e, t) {
                    this.context = e;
                    var o = e.parseNode,
                      s = e.src,
                      u = e.indent,
                      c = e.lineStart,
                      l = s[t];
                    this.items = [{ char: l, offset: t }];
                    var p = i.default.endOfWhiteSpace(s, t + 1);
                    for (l = s[p]; l && ']' !== l && '}' !== l; ) {
                      switch (l) {
                        case '\n':
                          if (
                            ((c = p + 1),
                            '\n' === s[i.default.endOfWhiteSpace(s, c)])
                          ) {
                            var f = new n.default();
                            (c = f.parse({ src: s }, c)), this.items.push(f);
                          }
                          (p = i.default.endOfIndent(s, c)) <= c + u &&
                            ((l = s[p]),
                            p < c + u || (']' !== l && '}' !== l)) &&
                            (this.error = new N.YAMLSemanticError(
                              this,
                              'Insufficient indentation in flow collection',
                            ));
                          break;
                        case ',':
                          this.items.push({ char: l, offset: p }), (p += 1);
                          break;
                        case '#':
                          var h = new r.default();
                          (p = h.parse({ src: s }, p)), this.items.push(h);
                          break;
                        case '?':
                        case ':':
                          var d = s[p + 1];
                          if (
                            '\n' === d ||
                            '\t' === d ||
                            ' ' === d ||
                            ',' === d ||
                            (':' === l && this.prevNodeIsJsonLike())
                          ) {
                            this.items.push({ char: l, offset: p }), (p += 1);
                            break;
                          }
                        default:
                          var m = o(
                            {
                              atLineStart: !1,
                              inCollection: !1,
                              inFlow: !0,
                              indent: -1,
                              lineStart: c,
                              parent: this,
                            },
                            p,
                          );
                          if (!m)
                            return (this.valueRange = new a.default(t, p)), p;
                          this.items.push(m),
                            (p = i.default.normalizeOffset(s, m.range.end));
                      }
                      l = s[(p = i.default.endOfWhiteSpace(s, p))];
                    }
                    return (
                      (this.valueRange = new a.default(t, p + 1)),
                      l &&
                        (this.items.push({ char: l, offset: p }),
                        (p = i.default.endOfWhiteSpace(s, p + 1)),
                        (p = this.parseComment(p))),
                      p
                    );
                  },
                },
                {
                  key: 'setOrigRanges',
                  value: function(e, n) {
                    return (
                      (n = g(l(t.prototype), 'setOrigRanges', this).call(
                        this,
                        e,
                        n,
                      )),
                      this.items.forEach(function(t) {
                        if (t instanceof i.default) n = t.setOrigRanges(e, n);
                        else if (0 === e.length) t.origOffset = t.offset;
                        else {
                          for (var r = n; r < e.length && !(e[r] > t.offset); )
                            ++r;
                          (t.origOffset = t.offset + r), (n = r);
                        }
                      }),
                      n
                    );
                  },
                },
                {
                  key: 'toString',
                  value: function() {
                    var e = this.context.src,
                      t = this.items,
                      n = this.range,
                      r = this.value;
                    if (null != r) return r;
                    var a = t.filter(function(e) {
                        return e instanceof i.default;
                      }),
                      o = '',
                      s = n.start;
                    return (
                      a.forEach(function(t) {
                        var n = e.slice(s, t.range.start);
                        (s = t.range.end),
                          '\n' === (o += n + String(t))[o.length - 1] &&
                            '\n' !== e[s - 1] &&
                            '\n' === e[s] &&
                            (s += 1);
                      }),
                      (o += e.slice(s, n.end)),
                      i.default.addStringTerminator(e, n.end, o)
                    );
                  },
                },
              ]),
              t
            );
          })(i.default);
          t.default = p;
        });
        r(V);
        var W = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = (function(e) {
            function t() {
              return o(this, t), m(this, l(t).apply(this, arguments));
            }
            return (
              c(t, e),
              u(
                t,
                [
                  {
                    key: 'parseBlockValue',
                    value: function(e) {
                      for (
                        var r = this.context,
                          i = r.indent,
                          a = r.inFlow,
                          o = r.src,
                          s = e,
                          u = e,
                          c = o[s];
                        '\n' === c && !n.default.atDocumentBoundary(o, s + 1);
                        c = o[s]
                      ) {
                        var l = n.default.endOfBlockIndent(o, i, s + 1);
                        if (null === l || '#' === o[l]) break;
                        s = '\n' === o[l] ? l : (u = t.endOfLine(o, l, a));
                      }
                      return (
                        this.valueRange.isEmpty() &&
                          (this.valueRange.start = e),
                        (this.valueRange.end = u),
                        u
                      );
                    },
                  },
                  {
                    key: 'parse',
                    value: function(e, i) {
                      this.context = e;
                      var a = e.inFlow,
                        o = e.src,
                        s = i,
                        u = o[s];
                      return (
                        u &&
                          '#' !== u &&
                          '\n' !== u &&
                          (s = t.endOfLine(o, i, a)),
                        (this.valueRange = new r.default(i, s)),
                        (s = n.default.endOfWhiteSpace(o, s)),
                        (s = this.parseComment(s)),
                        (this.hasComment && !this.valueRange.isEmpty()) ||
                          (s = this.parseBlockValue(s)),
                        s
                      );
                    },
                  },
                  {
                    key: 'strValue',
                    get: function() {
                      if (!this.valueRange || !this.context) return null;
                      for (
                        var e = this.valueRange,
                          t = e.start,
                          r = e.end,
                          i = this.context.src,
                          a = i[r - 1];
                        t < r && ('\n' === a || '\t' === a || ' ' === a);

                      )
                        a = i[--r - 1];
                      for (
                        a = i[t];
                        t < r && ('\n' === a || '\t' === a || ' ' === a);

                      )
                        a = i[++t];
                      for (var o = '', s = t; s < r; ++s) {
                        var u = i[s];
                        if ('\n' === u) {
                          var c = n.default.foldNewline(i, s, -1);
                          (o += c.fold), (s = c.offset);
                        } else if (' ' === u || '\t' === u) {
                          for (
                            var l = s, p = i[s + 1];
                            s < r && (' ' === p || '\t' === p);

                          )
                            p = i[(s += 1) + 1];
                          '\n' !== p && (o += s > l ? i.slice(l, s + 1) : u);
                        } else o += u;
                      }
                      return o;
                    },
                  },
                ],
                [
                  {
                    key: 'endOfLine',
                    value: function(e, t, n) {
                      for (
                        var r = e[t], i = t;
                        r &&
                        '\n' !== r &&
                        (!n ||
                          ('[' !== r &&
                            ']' !== r &&
                            '{' !== r &&
                            '}' !== r &&
                            ',' !== r));

                      ) {
                        var a = e[i + 1];
                        if (
                          ':' === r &&
                          (!a ||
                            '\n' === a ||
                            '\t' === a ||
                            ' ' === a ||
                            (n && ',' === a))
                        )
                          break;
                        if ((' ' === r || '\t' === r) && '#' === a) break;
                        (i += 1), (r = a);
                      }
                      return i;
                    },
                  },
                ],
              ),
              t
            );
          })(n.default);
          t.default = a;
        });
        r(W);
        var $ = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = (function(e) {
            function t() {
              return o(this, t), m(this, l(t).apply(this, arguments));
            }
            return (
              c(t, e),
              u(
                t,
                [
                  {
                    key: 'parseCharCode',
                    value: function(e, t, n) {
                      var r = this.context.src,
                        i = r.substr(e, t),
                        a =
                          i.length === t && /^[0-9a-fA-F]+$/.test(i)
                            ? parseInt(i, 16)
                            : NaN;
                      return isNaN(a)
                        ? (n.push(
                            new N.YAMLSyntaxError(
                              this,
                              'Invalid escape sequence '.concat(
                                r.substr(e - 2, t + 2),
                              ),
                            ),
                          ),
                          r.substr(e - 2, t + 2))
                        : String.fromCodePoint(a);
                    },
                  },
                  {
                    key: 'parse',
                    value: function(e, i) {
                      this.context = e;
                      var a = e.src,
                        o = t.endOfQuote(a, i + 1);
                      return (
                        (this.valueRange = new r.default(i, o)),
                        (o = n.default.endOfWhiteSpace(a, o)),
                        this.parseComment(o)
                      );
                    },
                  },
                  {
                    key: 'strValue',
                    get: function() {
                      if (!this.valueRange || !this.context) return null;
                      var e = [],
                        t = this.valueRange,
                        r = t.start,
                        i = t.end,
                        a = this.context,
                        o = a.indent,
                        s = a.src;
                      '"' !== s[i - 1] &&
                        e.push(
                          new N.YAMLSyntaxError(this, 'Missing closing "quote'),
                        );
                      for (var u = '', c = r + 1; c < i - 1; ++c) {
                        var l = s[c];
                        if ('\n' === l) {
                          n.default.atDocumentBoundary(s, c + 1) &&
                            e.push(
                              new N.YAMLSemanticError(
                                this,
                                'Document boundary indicators are not allowed within string values',
                              ),
                            );
                          var p = n.default.foldNewline(s, c, o);
                          (u += p.fold),
                            (c = p.offset),
                            p.error &&
                              e.push(
                                new N.YAMLSemanticError(
                                  this,
                                  'Multi-line double-quoted string needs to be sufficiently indented',
                                ),
                              );
                        } else if ('\\' === l)
                          switch (s[(c += 1)]) {
                            case '0':
                              u += '\0';
                              break;
                            case 'a':
                              u += '';
                              break;
                            case 'b':
                              u += '\b';
                              break;
                            case 'e':
                              u += '';
                              break;
                            case 'f':
                              u += '\f';
                              break;
                            case 'n':
                              u += '\n';
                              break;
                            case 'r':
                              u += '\r';
                              break;
                            case 't':
                              u += '\t';
                              break;
                            case 'v':
                              u += '\v';
                              break;
                            case 'N':
                              u += '';
                              break;
                            case '_':
                              u += ' ';
                              break;
                            case 'L':
                              u += '\u2028';
                              break;
                            case 'P':
                              u += '\u2029';
                              break;
                            case ' ':
                              u += ' ';
                              break;
                            case '"':
                              u += '"';
                              break;
                            case '/':
                              u += '/';
                              break;
                            case '\\':
                              u += '\\';
                              break;
                            case '\t':
                              u += '\t';
                              break;
                            case 'x':
                              (u += this.parseCharCode(c + 1, 2, e)), (c += 2);
                              break;
                            case 'u':
                              (u += this.parseCharCode(c + 1, 4, e)), (c += 4);
                              break;
                            case 'U':
                              (u += this.parseCharCode(c + 1, 8, e)), (c += 8);
                              break;
                            case '\n':
                              for (; ' ' === s[c + 1] || '\t' === s[c + 1]; )
                                c += 1;
                              break;
                            default:
                              e.push(
                                new N.YAMLSyntaxError(
                                  this,
                                  'Invalid escape sequence '.concat(
                                    s.substr(c - 1, 2),
                                  ),
                                ),
                              ),
                                (u += '\\' + s[c]);
                          }
                        else if (' ' === l || '\t' === l) {
                          for (
                            var f = c, h = s[c + 1];
                            ' ' === h || '\t' === h;

                          )
                            h = s[(c += 1) + 1];
                          '\n' !== h && (u += c > f ? s.slice(f, c + 1) : l);
                        } else u += l;
                      }
                      return e.length > 0 ? { errors: e, str: u } : u;
                    },
                  },
                ],
                [
                  {
                    key: 'endOfQuote',
                    value: function(e, t) {
                      for (var n = e[t]; n && '"' !== n; )
                        n = e[(t += '\\' === n ? 2 : 1)];
                      return t + 1;
                    },
                  },
                ],
              ),
              t
            );
          })(n.default);
          t.default = a;
        });
        r($);
        var q = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(O),
            r = i(_);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = (function(e) {
            function t() {
              return o(this, t), m(this, l(t).apply(this, arguments));
            }
            return (
              c(t, e),
              u(
                t,
                [
                  {
                    key: 'parse',
                    value: function(e, i) {
                      this.context = e;
                      var a = e.src,
                        o = t.endOfQuote(a, i + 1);
                      return (
                        (this.valueRange = new r.default(i, o)),
                        (o = n.default.endOfWhiteSpace(a, o)),
                        this.parseComment(o)
                      );
                    },
                  },
                  {
                    key: 'strValue',
                    get: function() {
                      if (!this.valueRange || !this.context) return null;
                      var e = [],
                        t = this.valueRange,
                        r = t.start,
                        i = t.end,
                        a = this.context,
                        o = a.indent,
                        s = a.src;
                      "'" !== s[i - 1] &&
                        e.push(
                          new N.YAMLSyntaxError(this, "Missing closing 'quote"),
                        );
                      for (var u = '', c = r + 1; c < i - 1; ++c) {
                        var l = s[c];
                        if ('\n' === l) {
                          n.default.atDocumentBoundary(s, c + 1) &&
                            e.push(
                              new N.YAMLSemanticError(
                                this,
                                'Document boundary indicators are not allowed within string values',
                              ),
                            );
                          var p = n.default.foldNewline(s, c, o);
                          (u += p.fold),
                            (c = p.offset),
                            p.error &&
                              e.push(
                                new N.YAMLSemanticError(
                                  this,
                                  'Multi-line single-quoted string needs to be sufficiently indented',
                                ),
                              );
                        } else if ("'" === l)
                          (u += l),
                            "'" !== s[(c += 1)] &&
                              e.push(
                                new N.YAMLSyntaxError(
                                  this,
                                  'Unescaped single quote? This should not happen.',
                                ),
                              );
                        else if (' ' === l || '\t' === l) {
                          for (
                            var f = c, h = s[c + 1];
                            ' ' === h || '\t' === h;

                          )
                            h = s[(c += 1) + 1];
                          '\n' !== h && (u += c > f ? s.slice(f, c + 1) : l);
                        } else u += l;
                      }
                      return e.length > 0 ? { errors: e, str: u } : u;
                    },
                  },
                ],
                [
                  {
                    key: 'endOfQuote',
                    value: function(e, t) {
                      for (var n = e[t]; n; )
                        if ("'" === n) {
                          if ("'" !== e[t + 1]) break;
                          n = e[(t += 2)];
                        } else n = e[(t += 1)];
                      return t + 1;
                    },
                  },
                ],
              ),
              t
            );
          })(n.default);
          t.default = a;
        });
        r(q);
        var Y = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = d(j),
            r = d(U),
            i = d(M),
            a = d(I),
            s = d(V),
            c = d(O),
            l = d(W),
            p = d($),
            f = d(q),
            h = d(_);
          function d(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var m = (function() {
            function e() {
              var t,
                u,
                d,
                m = this,
                g =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                y =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                v = y.atLineStart,
                D = y.inCollection,
                E = y.inFlow,
                C = y.indent,
                b = y.lineStart,
                x = y.parent;
              o(this, e),
                (d = function(t, o) {
                  if (c.default.atDocumentBoundary(m.src, o)) return null;
                  var u,
                    d = new e(m, t),
                    g = d.parseProps(o),
                    y = g.props,
                    v = g.type,
                    D = g.valueStart;
                  switch (v) {
                    case k.Type.ALIAS:
                      u = new n.default(v, y);
                      break;
                    case k.Type.BLOCK_FOLDED:
                    case k.Type.BLOCK_LITERAL:
                      u = new r.default(v, y);
                      break;
                    case k.Type.FLOW_MAP:
                    case k.Type.FLOW_SEQ:
                      u = new s.default(v, y);
                      break;
                    case k.Type.MAP_KEY:
                    case k.Type.MAP_VALUE:
                    case k.Type.SEQ_ITEM:
                      u = new a.default(v, y);
                      break;
                    case k.Type.COMMENT:
                    case k.Type.PLAIN:
                      u = new l.default(v, y);
                      break;
                    case k.Type.QUOTE_DOUBLE:
                      u = new p.default(v, y);
                      break;
                    case k.Type.QUOTE_SINGLE:
                      u = new f.default(v, y);
                      break;
                    default:
                      return (
                        (u.error = new N.YAMLSyntaxError(
                          u,
                          'Unknown node type: '.concat(JSON.stringify(v)),
                        )),
                        (u.range = new h.default(o, o + 1)),
                        u
                      );
                  }
                  var E = u.parse(d, D);
                  if (
                    ((u.range = new h.default(o, E)),
                    E <= o &&
                      ((u.error = new Error(
                        'Node#parse consumed no characters',
                      )),
                      (u.error.parseEnd = E),
                      (u.error.source = u),
                      (u.range.end = o + 1)),
                    d.nodeStartsCollection(u))
                  ) {
                    u.error ||
                      d.atLineStart ||
                      d.parent.type !== k.Type.DOCUMENT ||
                      (u.error = new N.YAMLSyntaxError(
                        u,
                        'Block collection must not have preceding content here (e.g. directives-end indicator)',
                      ));
                    var C = new i.default(u);
                    return (
                      (E = C.parse(new e(d), E)),
                      (C.range = new h.default(o, E)),
                      C
                    );
                  }
                  return u;
                }),
                (u = 'parseNode') in (t = this)
                  ? Object.defineProperty(t, u, {
                      value: d,
                      enumerable: !0,
                      configurable: !0,
                      writable: !0,
                    })
                  : (t[u] = d),
                (this.atLineStart = null != v ? v : g.atLineStart || !1),
                (this.inCollection = null != D ? D : g.inCollection || !1),
                (this.inFlow = null != E ? E : g.inFlow || !1),
                (this.indent = null != C ? C : g.indent),
                (this.lineStart = null != b ? b : g.lineStart),
                (this.parent = null != x ? x : g.parent || {}),
                (this.root = g.root),
                (this.src = g.src);
            }
            return (
              u(e, null, [
                {
                  key: 'parseType',
                  value: function(e, t, n) {
                    switch (e[t]) {
                      case '*':
                        return k.Type.ALIAS;
                      case '>':
                        return k.Type.BLOCK_FOLDED;
                      case '|':
                        return k.Type.BLOCK_LITERAL;
                      case '{':
                        return k.Type.FLOW_MAP;
                      case '[':
                        return k.Type.FLOW_SEQ;
                      case '?':
                        return !n && c.default.atBlank(e, t + 1, !0)
                          ? k.Type.MAP_KEY
                          : k.Type.PLAIN;
                      case ':':
                        return !n && c.default.atBlank(e, t + 1, !0)
                          ? k.Type.MAP_VALUE
                          : k.Type.PLAIN;
                      case '-':
                        return !n && c.default.atBlank(e, t + 1, !0)
                          ? k.Type.SEQ_ITEM
                          : k.Type.PLAIN;
                      case '"':
                        return k.Type.QUOTE_DOUBLE;
                      case "'":
                        return k.Type.QUOTE_SINGLE;
                      default:
                        return k.Type.PLAIN;
                    }
                  },
                },
              ]),
              u(e, [
                {
                  key: 'nodeStartsCollection',
                  value: function(e) {
                    var t = this.inCollection,
                      n = this.inFlow,
                      r = this.src;
                    if (t || n) return !1;
                    if (e instanceof a.default) return !0;
                    var i = e.range.end;
                    return (
                      '\n' !== r[i] &&
                      '\n' !== r[i - 1] &&
                      ':' === r[(i = c.default.endOfWhiteSpace(r, i))]
                    );
                  },
                },
                {
                  key: 'parseProps',
                  value: function(t) {
                    for (
                      var n = this.inFlow,
                        r = this.parent,
                        i = this.src,
                        a = [],
                        o = !1,
                        s = i[(t = c.default.endOfWhiteSpace(i, t))];
                      s === k.Char.ANCHOR ||
                      s === k.Char.COMMENT ||
                      s === k.Char.TAG ||
                      '\n' === s;

                    ) {
                      if ('\n' === s) {
                        var u = t + 1,
                          l = c.default.endOfIndent(i, u),
                          p = l - (u + this.indent),
                          f =
                            r.type === k.Type.SEQ_ITEM && r.context.atLineStart;
                        if (!c.default.nextNodeIsIndented(i[l], p, !f)) break;
                        (this.atLineStart = !0),
                          (this.lineStart = u),
                          (o = !1),
                          (t = l);
                      } else if (s === k.Char.COMMENT) {
                        var d = c.default.endOfLine(i, t + 1);
                        a.push(new h.default(t, d)), (t = d);
                      } else {
                        var m = c.default.endOfIdentifier(i, t + 1);
                        s === k.Char.TAG &&
                          ',' === i[m] &&
                          /^[a-zA-Z0-9-]+\.[a-zA-Z0-9-]+,\d\d\d\d(-\d\d){0,2}\/\S/.test(
                            i.slice(t + 1, m + 13),
                          ) &&
                          (m = c.default.endOfIdentifier(i, m + 5)),
                          a.push(new h.default(t, m)),
                          (o = !0),
                          (t = c.default.endOfWhiteSpace(i, m));
                      }
                      s = i[t];
                    }
                    return (
                      o &&
                        ':' === s &&
                        c.default.atBlank(i, t + 1, !0) &&
                        (t -= 1),
                      { props: a, type: e.parseType(i, t, n), valueStart: t }
                    );
                  },
                },
                {
                  key: 'pretty',
                  get: function() {
                    var e = {
                      start: ''
                        .concat(this.lineStart, ' + ')
                        .concat(this.indent),
                      in: [],
                      parent: this.parent.type,
                    };
                    return (
                      this.atLineStart || (e.start += ' + N'),
                      this.inCollection && e.in.push('collection'),
                      this.inFlow && e.in.push('flow'),
                      e
                    );
                  },
                },
              ]),
              e
            );
          })();
          t.default = m;
        });
        r(Y);
        var J = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = function(e) {
              var t = [];
              -1 !== e.indexOf('\r') &&
                (e = e.replace(/\r\n?/g, function(e, n) {
                  return e.length > 1 && t.push(n), '\n';
                }));
              var i = [],
                a = 0;
              do {
                var o = new n.default(),
                  s = new r.default({ src: e });
                (a = o.parse(s, a)), i.push(o);
              } while (a < e.length);
              return (
                (i.setOrigRanges = function() {
                  if (0 === t.length) return !1;
                  for (var e = 1; e < t.length; ++e) t[e] -= e;
                  for (var n = 0, r = 0; r < i.length; ++r)
                    n = i[r].setOrigRanges(t, n);
                  return t.splice(0, t.length), !0;
                }),
                (i.toString = function() {
                  return i.join('...\n');
                }),
                i
              );
            });
          var n = i(R),
            r = i(Y);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
        });
        r(J);
        var K = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.addCommentBefore = function(e, t, n) {
              if (!n) return e;
              var r = n.replace(/[\s\S]^/gm, '$&'.concat(t, '#'));
              return '#'
                .concat(r, '\n')
                .concat(t)
                .concat(e);
            }),
            (t.default = function(e, t, n) {
              return n
                ? -1 === n.indexOf('\n')
                  ? ''.concat(e, ' #').concat(n)
                  : ''.concat(e, '\n') +
                    n.replace(/^/gm, ''.concat(t || '', '#'))
                : e;
            });
        });
        r(K), K.addCommentBefore;
        var z = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = function e(t, n, r) {
              if (Array.isArray(t))
                return t.map(function(t, n) {
                  return e(t, String(n), r);
                });
              if (t && 'function' == typeof t.toJSON) {
                var i =
                  r &&
                  r.anchors &&
                  r.anchors.find(function(e) {
                    return e.node === t;
                  });
                i &&
                  (r.onCreate = function(e) {
                    (i.res = e), delete r.onCreate;
                  });
                var a = t.toJSON(n, r);
                return i && r.onCreate && r.onCreate(a), a;
              }
              return t;
            });
        });
        r(z);
        var H = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0),
            (t.default = function e() {
              o(this, e);
            });
        });
        r(H);
        var X = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = r(z);
          function r(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var i = (function(e) {
            function t(e) {
              var n;
              return o(this, t), ((n = m(this, l(t).call(this))).value = e), n;
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'toJSON',
                  value: function(e, t) {
                    return t && t.keep
                      ? this.value
                      : (0, n.default)(this.value, e, t);
                  },
                },
                {
                  key: 'toString',
                  value: function() {
                    return String(this.value);
                  },
                },
              ]),
              t
            );
          })(r(H).default);
          t.default = i;
        });
        r(X);
        var G = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = f(K),
            r = f(z),
            i = f(Q),
            s = f(H),
            p = f(X);
          function f(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var h = (function(e) {
            function t(e) {
              var n,
                r =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : null;
              return (
                o(this, t),
                ((n = m(this, l(t).call(this))).key = e),
                (n.value = r),
                (n.type = 'PAIR'),
                n
              );
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'addToJSMap',
                  value: function(e, t) {
                    var n = (0, r.default)(this.key, '', e);
                    if (t instanceof Map) {
                      var i = (0, r.default)(this.value, n, e);
                      t.set(n, i);
                    } else if (t instanceof Set) t.add(n);
                    else {
                      var o = (function(e, t, n) {
                        return null === t
                          ? ''
                          : 'object' !== a(t)
                          ? String(t)
                          : e instanceof s.default && n && n.doc
                          ? e.toString({
                              anchors: {},
                              doc: n.doc,
                              indent: '',
                              inFlow: !0,
                              inStringifyKey: !0,
                            })
                          : JSON.stringify(t);
                      })(this.key, n, e);
                      t[o] = (0, r.default)(this.value, o, e);
                    }
                    return t;
                  },
                },
                {
                  key: 'toJSON',
                  value: function(e, t) {
                    var n = t && t.mapAsMap ? new Map() : {};
                    return this.addToJSMap(t, n);
                  },
                },
                {
                  key: 'toString',
                  value: function(e, t, r) {
                    if (!e || !e.doc) return JSON.stringify(this);
                    var o = e.doc.options.simpleKeys,
                      u = this.key,
                      c = this.value,
                      l = u instanceof s.default && u.comment;
                    if (o) {
                      if (l)
                        throw new Error(
                          'With simple keys, key nodes cannot have comments',
                        );
                      if (u instanceof i.default)
                        throw new Error(
                          'With simple keys, collection cannot be used as a key value',
                        );
                    }
                    var p =
                        !o &&
                        (!u ||
                          l ||
                          u instanceof i.default ||
                          u.type === k.Type.BLOCK_FOLDED ||
                          u.type === k.Type.BLOCK_LITERAL),
                      f = e,
                      h = f.doc,
                      d = f.indent;
                    e = Object.assign({}, e, {
                      implicitKey: !p,
                      indent: d + '  ',
                    });
                    var m = !1,
                      g = h.schema.stringify(
                        u,
                        e,
                        function() {
                          return (l = null);
                        },
                        function() {
                          return (m = !0);
                        },
                      );
                    if (
                      ((g = (0, n.default)(g, e.indent, l)),
                      e.allNullValues && !o)
                    )
                      return (
                        this.comment
                          ? ((g = (0, n.default)(g, e.indent, this.comment)),
                            t && t())
                          : m && !l && r && r(),
                        e.inFlow ? g : '? '.concat(g)
                      );
                    (g = p
                      ? '? '.concat(g, '\n').concat(d, ':')
                      : ''.concat(g, ':')),
                      this.comment &&
                        ((g = (0, n.default)(g, e.indent, this.comment)),
                        t && t());
                    var y = '',
                      v = null;
                    if (c instanceof s.default) {
                      if ((c.spaceBefore && (y = '\n'), c.commentBefore)) {
                        var D = c.commentBefore.replace(
                          /^/gm,
                          ''.concat(e.indent, '#'),
                        );
                        y += '\n'.concat(D);
                      }
                      v = c.comment;
                    } else
                      c &&
                        'object' === a(c) &&
                        (c = h.schema.createNode(c, !0));
                    (e.implicitKey = !1), (m = !1);
                    var E = h.schema.stringify(
                        c,
                        e,
                        function() {
                          return (v = null);
                        },
                        function() {
                          return (m = !0);
                        },
                      ),
                      C = ' ';
                    return (
                      y || this.comment
                        ? (C = ''.concat(y, '\n').concat(e.indent))
                        : !p &&
                          c instanceof i.default &&
                          ((('[' === E[0] || '{' === E[0]) &&
                            !E.includes('\n')) ||
                            (C = '\n'.concat(e.indent))),
                      m && !v && r && r(),
                      (0, n.default)(g + C + E, e.indent, v)
                    );
                  },
                },
                {
                  key: 'commentBefore',
                  get: function() {
                    return this.key && this.key.commentBefore;
                  },
                  set: function(e) {
                    null == this.key && (this.key = new p.default(null)),
                      (this.key.commentBefore = e);
                  },
                },
              ]),
              t
            );
          })(s.default);
          t.default = h;
        });
        r(G);
        var Q = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = t.isEmptyPath = void 0);
          var n = p(K),
            r = p(H),
            i = p(G),
            s = p(X);
          function p(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function f(e, t, n) {
            return (
              t in e
                ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                  })
                : (e[t] = n),
              e
            );
          }
          var h = function(e) {
            return (
              null == e ||
              ('object' === a(e) && e[Symbol.iterator]().next().done)
            );
          };
          t.isEmptyPath = h;
          var g = (function(e) {
            function t() {
              var e, n;
              o(this, t);
              for (
                var r = arguments.length, i = new Array(r), a = 0;
                a < r;
                a++
              )
                i[a] = arguments[a];
              return (
                f(
                  d((n = m(this, (e = l(t)).call.apply(e, [this].concat(i))))),
                  'items',
                  [],
                ),
                n
              );
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'addIn',
                  value: function(e, n) {
                    if (h(e)) this.add(n);
                    else {
                      var r = v(e),
                        i = r[0],
                        a = r.slice(1),
                        o = this.get(i, !0);
                      if (!(o instanceof t))
                        throw new Error(
                          'Expected YAML collection at '
                            .concat(i, '. Remaining path: ')
                            .concat(a),
                        );
                      o.addIn(a, n);
                    }
                  },
                },
                {
                  key: 'deleteIn',
                  value: function(e) {
                    var n = v(e),
                      r = n[0],
                      i = n.slice(1);
                    if (0 === i.length) return this.delete(r);
                    var a = this.get(r, !0);
                    if (a instanceof t) return a.deleteIn(i);
                    throw new Error(
                      'Expected YAML collection at '
                        .concat(r, '. Remaining path: ')
                        .concat(i),
                    );
                  },
                },
                {
                  key: 'getIn',
                  value: function(e, n) {
                    var r = v(e),
                      i = r[0],
                      a = r.slice(1),
                      o = this.get(i, !0);
                    return 0 === a.length
                      ? !n && o instanceof s.default
                        ? o.value
                        : o
                      : o instanceof t
                      ? o.getIn(a, n)
                      : void 0;
                  },
                },
                {
                  key: 'hasAllNullValues',
                  value: function() {
                    return this.items.every(function(e) {
                      if (!(e instanceof i.default)) return !1;
                      var t = e.value;
                      return (
                        null == t ||
                        (t instanceof s.default &&
                          null == t.value &&
                          !t.commentBefore &&
                          !t.comment &&
                          !t.tag)
                      );
                    });
                  },
                },
                {
                  key: 'hasIn',
                  value: function(e) {
                    var n = v(e),
                      r = n[0],
                      i = n.slice(1);
                    if (0 === i.length) return this.has(r);
                    var a = this.get(r, !0);
                    return a instanceof t && a.hasIn(i);
                  },
                },
                {
                  key: 'setIn',
                  value: function(e, n) {
                    var r = v(e),
                      i = r[0],
                      a = r.slice(1);
                    if (0 === a.length) this.set(i, n);
                    else {
                      var o = this.get(i, !0);
                      if (!(o instanceof t))
                        throw new Error(
                          'Expected YAML collection at '
                            .concat(i, '. Remaining path: ')
                            .concat(a),
                        );
                      o.setIn(a, n);
                    }
                  },
                },
                {
                  key: 'toJSON',
                  value: function() {
                    return null;
                  },
                },
                {
                  key: 'toString',
                  value: function(e, r, i, a) {
                    var o = this,
                      s = r.blockItem,
                      u = r.flowChars,
                      c = r.isMap,
                      l = r.itemIndent,
                      p = e,
                      f = p.doc,
                      h = p.indent,
                      d =
                        (this.type && 'FLOW' === this.type.substr(0, 4)) ||
                        e.inFlow;
                    d && (l += '  ');
                    var m = c && this.hasAllNullValues();
                    e = Object.assign({}, e, {
                      allNullValues: m,
                      indent: l,
                      inFlow: d,
                      type: null,
                    });
                    var g,
                      y = !1,
                      v = !1,
                      D = this.items.reduce(function(t, r, i) {
                        var a;
                        r &&
                          (!y &&
                            r.spaceBefore &&
                            t.push({ type: 'comment', str: '' }),
                          r.commentBefore &&
                            r.commentBefore
                              .match(/^.*$/gm)
                              .forEach(function(e) {
                                t.push({ type: 'comment', str: '#'.concat(e) });
                              }),
                          r.comment && (a = r.comment),
                          d &&
                            ((!y && r.spaceBefore) ||
                              r.commentBefore ||
                              r.comment ||
                              (r.key &&
                                (r.key.commentBefore || r.key.comment)) ||
                              (r.value &&
                                (r.value.commentBefore || r.value.comment))) &&
                            (v = !0)),
                          (y = !1);
                        var s = f.schema.stringify(
                          r,
                          e,
                          function() {
                            return (a = null);
                          },
                          function() {
                            return (y = !0);
                          },
                        );
                        return (
                          d && !v && s.includes('\n') && (v = !0),
                          d && i < o.items.length - 1 && (s += ','),
                          (s = (0, n.default)(s, l, a)),
                          y && (a || d) && (y = !1),
                          t.push({ type: 'item', str: s }),
                          t
                        );
                      }, []);
                    if (0 === D.length) g = u.start + u.end;
                    else if (d) {
                      var E = u.start,
                        C = u.end,
                        b = D.map(function(e) {
                          return e.str;
                        });
                      if (
                        v ||
                        b.reduce(function(e, t) {
                          return e + t.length + 2;
                        }, 2) > t.maxFlowStringSingleLineLength
                      ) {
                        g = E;
                        var x = !0,
                          A = !1,
                          S = void 0;
                        try {
                          for (
                            var w, F = b[Symbol.iterator]();
                            !(x = (w = F.next()).done);
                            x = !0
                          ) {
                            var k = w.value;
                            g += k ? '\n  '.concat(h).concat(k) : '\n';
                          }
                        } catch (e) {
                          (A = !0), (S = e);
                        } finally {
                          try {
                            x || null == F.return || F.return();
                          } finally {
                            if (A) throw S;
                          }
                        }
                        g += '\n'.concat(h).concat(C);
                      } else
                        g = ''
                          .concat(E, ' ')
                          .concat(b.join(' '), ' ')
                          .concat(C);
                    } else {
                      var T = D.map(s);
                      g = T.shift();
                      var _ = !0,
                        O = !1,
                        N = void 0;
                      try {
                        for (
                          var B, I = T[Symbol.iterator]();
                          !(_ = (B = I.next()).done);
                          _ = !0
                        ) {
                          var P = B.value;
                          g += P ? '\n'.concat(h).concat(P) : '\n';
                        }
                      } catch (e) {
                        (O = !0), (N = e);
                      } finally {
                        try {
                          _ || null == I.return || I.return();
                        } finally {
                          if (O) throw N;
                        }
                      }
                    }
                    return (
                      this.comment
                        ? ((g +=
                            '\n' +
                            this.comment.replace(/^/gm, ''.concat(h, '#'))),
                          i && i())
                        : y && a && a(),
                      g
                    );
                  },
                },
              ]),
              t
            );
          })(r.default);
          (t.default = g), f(g, 'maxFlowStringSingleLineLength', 60);
        });
        r(Q), Q.isEmptyPath;
        var Z = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = s(z),
            r = s(Q),
            i = s(H),
            a = s(G);
          function s(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var p,
            f,
            h = function e(t, n) {
              if (t instanceof d) {
                var i = n.find(function(e) {
                  return e.node === t.source;
                });
                return i.count * i.aliasCount;
              }
              if (t instanceof r.default) {
                var o = 0,
                  s = !0,
                  u = !1,
                  c = void 0;
                try {
                  for (
                    var l, p = t.items[Symbol.iterator]();
                    !(s = (l = p.next()).done);
                    s = !0
                  ) {
                    var f = e(l.value, n);
                    f > o && (o = f);
                  }
                } catch (e) {
                  (u = !0), (c = e);
                } finally {
                  try {
                    s || null == p.return || p.return();
                  } finally {
                    if (u) throw c;
                  }
                }
                return o;
              }
              if (t instanceof a.default) {
                var h = e(t.key, n),
                  m = e(t.value, n);
                return Math.max(h, m);
              }
              return 1;
            },
            d = (function(e) {
              function t(e) {
                var n;
                return (
                  o(this, t),
                  ((n = m(this, l(t).call(this))).source = e),
                  (n.type = k.Type.ALIAS),
                  n
                );
              }
              return (
                c(t, e),
                u(t, null, [
                  {
                    key: 'stringify',
                    value: function(e, t) {
                      var n = e.range,
                        r = e.source,
                        i = t.anchors,
                        a = t.doc,
                        o = t.implicitKey,
                        s = t.inStringifyKey,
                        u = Object.keys(i).find(function(e) {
                          return i[e] === r;
                        });
                      if (
                        (!u &&
                          s &&
                          (u = a.anchors.getName(r) || a.anchors.newName()),
                        u)
                      )
                        return '*'.concat(u).concat(o ? ' ' : '');
                      var c = a.anchors.getName(r)
                        ? 'Alias node must be after source node'
                        : 'Source node not found for alias node';
                      throw new Error(''.concat(c, ' [').concat(n, ']'));
                    },
                  },
                ]),
                u(t, [
                  {
                    key: 'toJSON',
                    value: function(e, t) {
                      var r = this;
                      if (!t) return (0, n.default)(this.source, e, t);
                      var i = t.anchors,
                        a = t.maxAliasCount,
                        o = i.find(function(e) {
                          return e.node === r.source;
                        });
                      if (!o || void 0 === o.res) {
                        var s =
                          'This should not happen: Alias anchor was not resolved?';
                        throw this.cstNode
                          ? new N.YAMLReferenceError(this.cstNode, s)
                          : new ReferenceError(s);
                      }
                      if (
                        a >= 0 &&
                        ((o.count += 1),
                        0 === o.aliasCount &&
                          (o.aliasCount = h(this.source, i)),
                        o.count * o.aliasCount > a)
                      ) {
                        var u =
                          'Excessive alias count indicates a resource exhaustion attack';
                        throw this.cstNode
                          ? new N.YAMLReferenceError(this.cstNode, u)
                          : new ReferenceError(u);
                      }
                      return o.res;
                    },
                  },
                  {
                    key: 'toString',
                    value: function(e) {
                      return t.stringify(this, e);
                    },
                  },
                  {
                    key: 'tag',
                    set: function(e) {
                      throw new Error('Alias nodes cannot have tags');
                    },
                  },
                ]),
                t
              );
            })(i.default);
          (t.default = d),
            (f = 'default') in (p = d)
              ? Object.defineProperty(p, f, {
                  value: !0,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (p[f] = !0);
        });
        r(Z);
        var ee = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.findPair = s),
            (t.default = void 0);
          var n = a(Q),
            r = a(G),
            i = a(X);
          function a(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function s(e, t) {
            var n = t instanceof i.default ? t.value : t,
              a = !0,
              o = !1,
              s = void 0;
            try {
              for (
                var u, c = e[Symbol.iterator]();
                !(a = (u = c.next()).done);
                a = !0
              ) {
                var l = u.value;
                if (l instanceof r.default) {
                  if (l.key === t || l.key === n) return l;
                  if (l.key && l.key.value === n) return l;
                }
              }
            } catch (e) {
              (o = !0), (s = e);
            } finally {
              try {
                a || null == c.return || c.return();
              } finally {
                if (o) throw s;
              }
            }
          }
          var p = (function(e) {
            function t() {
              return o(this, t), m(this, l(t).apply(this, arguments));
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'add',
                  value: function(e) {
                    if (
                      (e
                        ? e instanceof r.default ||
                          (e = new r.default(e.key || e, e.value))
                        : (e = new r.default(e)),
                      s(this.items, e.key))
                    )
                      throw new Error('Key '.concat(e.key, ' already set'));
                    this.items.push(e);
                  },
                },
                {
                  key: 'delete',
                  value: function(e) {
                    var t = s(this.items, e);
                    return (
                      !!t &&
                      this.items.splice(this.items.indexOf(t), 1).length > 0
                    );
                  },
                },
                {
                  key: 'get',
                  value: function(e, t) {
                    var n = s(this.items, e),
                      r = n && n.value;
                    return !t && r instanceof i.default ? r.value : r;
                  },
                },
                {
                  key: 'has',
                  value: function(e) {
                    return !!s(this.items, e);
                  },
                },
                {
                  key: 'set',
                  value: function(e, t) {
                    var n = s(this.items, e);
                    n ? (n.value = t) : this.items.push(new r.default(e, t));
                  },
                },
                {
                  key: 'toJSON',
                  value: function(e, t, n) {
                    var r = n ? new n() : t && t.mapAsMap ? new Map() : {};
                    t && t.onCreate && t.onCreate(r);
                    var i = !0,
                      a = !1,
                      o = void 0;
                    try {
                      for (
                        var s, u = this.items[Symbol.iterator]();
                        !(i = (s = u.next()).done);
                        i = !0
                      )
                        s.value.addToJSMap(t, r);
                    } catch (e) {
                      (a = !0), (o = e);
                    } finally {
                      try {
                        i || null == u.return || u.return();
                      } finally {
                        if (a) throw o;
                      }
                    }
                    return r;
                  },
                },
                {
                  key: 'toString',
                  value: function(e, n, i) {
                    if (!e) return JSON.stringify(this);
                    var a = !0,
                      o = !1,
                      s = void 0;
                    try {
                      for (
                        var u, c = this.items[Symbol.iterator]();
                        !(a = (u = c.next()).done);
                        a = !0
                      ) {
                        var p = u.value;
                        if (!(p instanceof r.default))
                          throw new Error(
                            'Map items must all be pairs; found '.concat(
                              JSON.stringify(p),
                              ' instead',
                            ),
                          );
                      }
                    } catch (e) {
                      (o = !0), (s = e);
                    } finally {
                      try {
                        a || null == c.return || c.return();
                      } finally {
                        if (o) throw s;
                      }
                    }
                    return g(l(t.prototype), 'toString', this).call(
                      this,
                      e,
                      {
                        blockItem: function(e) {
                          return e.str;
                        },
                        flowChars: { start: '{', end: '}' },
                        isMap: !0,
                        itemIndent: e.indent || '',
                      },
                      n,
                      i,
                    );
                  },
                },
              ]),
              t
            );
          })(n.default);
          t.default = p;
        });
        r(ee), ee.findPair;
        var te = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = a(z),
            r = a(Q),
            i = a(X);
          function a(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function s(e) {
            var t = e instanceof i.default ? e.value : e;
            return (
              t && 'string' == typeof t && (t = Number(t)),
              Number.isInteger(t) && t >= 0 ? t : null
            );
          }
          var p = (function(e) {
            function t() {
              return o(this, t), m(this, l(t).apply(this, arguments));
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'add',
                  value: function(e) {
                    this.items.push(e);
                  },
                },
                {
                  key: 'delete',
                  value: function(e) {
                    var t = s(e);
                    return (
                      'number' == typeof t && this.items.splice(t, 1).length > 0
                    );
                  },
                },
                {
                  key: 'get',
                  value: function(e, t) {
                    var n = s(e);
                    if ('number' == typeof n) {
                      var r = this.items[n];
                      return !t && r instanceof i.default ? r.value : r;
                    }
                  },
                },
                {
                  key: 'has',
                  value: function(e) {
                    var t = s(e);
                    return 'number' == typeof t && t < this.items.length;
                  },
                },
                {
                  key: 'set',
                  value: function(e, t) {
                    var n = s(e);
                    if ('number' != typeof n)
                      throw new Error(
                        'Expected a valid index, not '.concat(e, '.'),
                      );
                    this.items[n] = t;
                  },
                },
                {
                  key: 'toJSON',
                  value: function(e, t) {
                    var r = [];
                    t && t.onCreate && t.onCreate(r);
                    var i = 0,
                      a = !0,
                      o = !1,
                      s = void 0;
                    try {
                      for (
                        var u, c = this.items[Symbol.iterator]();
                        !(a = (u = c.next()).done);
                        a = !0
                      ) {
                        var l = u.value;
                        r.push((0, n.default)(l, String(i++), t));
                      }
                    } catch (e) {
                      (o = !0), (s = e);
                    } finally {
                      try {
                        a || null == c.return || c.return();
                      } finally {
                        if (o) throw s;
                      }
                    }
                    return r;
                  },
                },
                {
                  key: 'toString',
                  value: function(e, n, r) {
                    return e
                      ? g(l(t.prototype), 'toString', this).call(
                          this,
                          e,
                          {
                            blockItem: function(e) {
                              return 'comment' === e.type
                                ? e.str
                                : '- '.concat(e.str);
                            },
                            flowChars: { start: '[', end: ']' },
                            isMap: !1,
                            itemIndent: (e.indent || '') + '  ',
                          },
                          n,
                          r,
                        )
                      : JSON.stringify(this);
                  },
                },
              ]),
              t
            );
          })(r.default);
          t.default = p;
        });
        r(te);
        var ne = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = t.MERGE_KEY = void 0);
          var n = s(ee),
            r = s(G),
            i = s(X),
            a = s(te);
          function s(e) {
            return e && e.__esModule ? e : { default: e };
          }
          t.MERGE_KEY = '<<';
          var p = (function(e) {
            function t(e) {
              var n;
              if ((o(this, t), e instanceof r.default)) {
                var s = e.value;
                s instanceof a.default ||
                  ((s = new a.default()).items.push(e.value),
                  (s.range = e.value.range)),
                  ((n = m(this, l(t).call(this, e.key, s))).range = e.range);
              } else
                n = m(
                  this,
                  l(t).call(this, new i.default('<<'), new a.default()),
                );
              return (n.type = 'MERGE_PAIR'), m(n);
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'addToJSMap',
                  value: function(e, t) {
                    var r = !0,
                      i = !1,
                      a = void 0;
                    try {
                      for (
                        var o, s = this.value.items[Symbol.iterator]();
                        !(r = (o = s.next()).done);
                        r = !0
                      ) {
                        var u = o.value.source;
                        if (!(u instanceof n.default))
                          throw new Error('Merge sources must be maps');
                        var c = u.toJSON(null, e, Map),
                          l = !0,
                          p = !1,
                          f = void 0;
                        try {
                          for (
                            var h, d = c[Symbol.iterator]();
                            !(l = (h = d.next()).done);
                            l = !0
                          ) {
                            var m = y(h.value, 2),
                              g = m[0],
                              v = m[1];
                            t instanceof Map
                              ? t.has(g) || t.set(g, v)
                              : t instanceof Set
                              ? t.add(g)
                              : Object.prototype.hasOwnProperty.call(t, g) ||
                                (t[g] = v);
                          }
                        } catch (e) {
                          (p = !0), (f = e);
                        } finally {
                          try {
                            l || null == d.return || d.return();
                          } finally {
                            if (p) throw f;
                          }
                        }
                      }
                    } catch (e) {
                      (i = !0), (a = e);
                    } finally {
                      try {
                        r || null == s.return || s.return();
                      } finally {
                        if (i) throw a;
                      }
                    }
                    return t;
                  },
                },
                {
                  key: 'toString',
                  value: function(e, n) {
                    var r = this.value;
                    if (r.items.length > 1)
                      return g(l(t.prototype), 'toString', this).call(
                        this,
                        e,
                        n,
                      );
                    this.value = r.items[0];
                    var i = g(l(t.prototype), 'toString', this).call(
                      this,
                      e,
                      n,
                    );
                    return (this.value = r), i;
                  },
                },
              ]),
              t
            );
          })(r.default);
          t.default = p;
        });
        r(ne), ne.MERGE_KEY;
        var re = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = c(Z),
            r = c(ee),
            i = c(ne),
            a = c(X),
            s = c(te);
          function c(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var l = (function() {
            function e(t) {
              var n;
              o(this, e),
                (n = {}),
                'map' in this
                  ? Object.defineProperty(this, 'map', {
                      value: n,
                      enumerable: !0,
                      configurable: !0,
                      writable: !0,
                    })
                  : (this.map = n),
                (this.prefix = t);
            }
            return (
              u(e, null, [
                {
                  key: 'validAnchorNode',
                  value: function(e) {
                    return (
                      e instanceof a.default ||
                      e instanceof s.default ||
                      e instanceof r.default
                    );
                  },
                },
              ]),
              u(e, [
                {
                  key: 'createAlias',
                  value: function(e, t) {
                    return this.setAnchor(e, t), new n.default(e);
                  },
                },
                {
                  key: 'createMergePair',
                  value: function() {
                    for (
                      var e = this,
                        t = new i.default(),
                        a = arguments.length,
                        o = new Array(a),
                        s = 0;
                      s < a;
                      s++
                    )
                      o[s] = arguments[s];
                    return (
                      (t.value.items = o.map(function(t) {
                        if (t instanceof n.default) {
                          if (t.source instanceof r.default) return t;
                        } else if (t instanceof r.default) return e.createAlias(t);
                        throw new Error(
                          'Merge sources must be Map nodes or their Aliases',
                        );
                      })),
                      t
                    );
                  },
                },
                {
                  key: 'getName',
                  value: function(e) {
                    var t = this.map;
                    return Object.keys(t).find(function(n) {
                      return t[n] === e;
                    });
                  },
                },
                {
                  key: 'getNode',
                  value: function(e) {
                    return this.map[e];
                  },
                },
                {
                  key: 'newName',
                  value: function(e) {
                    e || (e = this.prefix);
                    for (var t = Object.keys(this.map), n = 1; ; ++n) {
                      var r = ''.concat(e).concat(n);
                      if (-1 === t.indexOf(r)) return r;
                    }
                  },
                },
                {
                  key: 'resolveNodes',
                  value: function() {
                    var e = this.map,
                      t = this._cstAliases;
                    Object.keys(e).forEach(function(t) {
                      e[t] = e[t].resolved;
                    }),
                      t.forEach(function(e) {
                        e.source = e.source.resolved;
                      }),
                      delete this._cstAliases;
                  },
                },
                {
                  key: 'setAnchor',
                  value: function(t, n) {
                    if (null != t && !e.validAnchorNode(t))
                      throw new Error(
                        'Anchors may only be set for Scalar, Seq and Map nodes',
                      );
                    if (n && /[\x00-\x19\s,[\]{}]/.test(n))
                      throw new Error(
                        'Anchor names must not contain whitespace or control characters',
                      );
                    var r = this.map,
                      i =
                        t &&
                        Object.keys(r).find(function(e) {
                          return r[e] === t;
                        });
                    if (i) {
                      if (!n) return i;
                      i !== n && (delete r[i], (r[n] = t));
                    } else {
                      if (!n) {
                        if (!t) return null;
                        n = this.newName();
                      }
                      r[n] = t;
                    }
                    return n;
                  },
                },
              ]),
              e
            );
          })();
          t.default = l;
        });
        r(re);
        var ie = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = o(Q),
            r = o(G),
            i = o(X);
          function o(e) {
            return e && e.__esModule ? e : { default: e };
          }
          t.default = function(e) {
            return Object.keys(
              (function e(t, o) {
                if (t && 'object' === a(t)) {
                  var s = t.tag;
                  t instanceof n.default
                    ? (s && (o[s] = !0),
                      t.items.forEach(function(t) {
                        return e(t, o);
                      }))
                    : t instanceof r.default
                    ? (e(t.key, o), e(t.value, o))
                    : t instanceof i.default && s && (o[s] = !0);
                }
                return o;
              })(e, {}),
            );
          };
        });
        r(ie);
        var ae = i(function(e, t) {
          function r(e, t) {
            if (!n || !n._YAML_SILENCE_WARNINGS) {
              var r = (n && n.process).emitWarning;
              r ? r(e, t) : console.warn(t ? ''.concat(t, ': ').concat(e) : e);
            }
          }
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.warn = r),
            (t.warnFileDeprecation = function(e) {
              if (!n || !n._YAML_SILENCE_DEPRECATION_WARNINGS) {
                var t = e
                  .replace(/.*yaml[/\\]/i, '')
                  .replace(/\.js$/, '')
                  .replace(/\\/g, '/');
                r(
                  "The endpoint 'yaml/".concat(
                    t,
                    "' will be removed in a future release.",
                  ),
                  'DeprecationWarning',
                );
              }
            }),
            (t.warnOptionDeprecation = function(e, t) {
              if (!((n && n._YAML_SILENCE_DEPRECATION_WARNINGS) || i[e])) {
                i[e] = !0;
                var a = "The option '".concat(
                  e,
                  "' will be removed in a future release",
                );
                r(
                  (a += t ? ", use '".concat(t, "' instead.") : '.'),
                  'DeprecationWarning',
                );
              }
            });
          var i = {};
        });
        r(ae), ae.warn, ae.warnFileDeprecation, ae.warnOptionDeprecation;
        var oe = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = function(e, t, a, o) {
              var s = o.indentAtStart,
                u = o.lineWidth,
                c = void 0 === u ? 80 : u,
                l = o.minContentWidth,
                p = void 0 === l ? 20 : l,
                f = o.onFold,
                h = o.onOverflow;
              if (!c || c < 0) return e;
              var d = Math.max(1 + p, 1 + c - t.length);
              if (e.length <= d) return e;
              var m,
                g = [],
                y = {},
                v = c - ('number' == typeof s ? s : t.length),
                D = void 0,
                E = void 0,
                C = !1,
                b = -1;
              for (
                a === n && -1 !== (b = i(e, b)) && (v = b + d);
                (m = e[(b += 1)]);

              ) {
                if (a === r && '\\' === m)
                  switch (e[b + 1]) {
                    case 'x':
                      b += 3;
                      break;
                    case 'u':
                      b += 5;
                      break;
                    case 'U':
                      b += 9;
                      break;
                    default:
                      b += 1;
                  }
                if ('\n' === m)
                  a === n && (b = i(e, b)), (v = b + d), (D = void 0);
                else {
                  if (' ' === m && E && ' ' !== E && '\n' !== E && '\t' !== E) {
                    var x = e[b + 1];
                    x && ' ' !== x && '\n' !== x && '\t' !== x && (D = b);
                  }
                  if (b >= v)
                    if (D) g.push(D), (v = D + d), (D = void 0);
                    else if (a === r) {
                      for (; ' ' === E || '\t' === E; )
                        (E = m), (m = e[(b += 1)]), (C = !0);
                      g.push(b - 2),
                        (y[b - 2] = !0),
                        (v = b - 2 + d),
                        (D = void 0);
                    } else C = !0;
                }
                E = m;
              }
              if ((C && h && h(), 0 === g.length)) return e;
              f && f();
              for (var A = e.slice(0, g[0]), S = 0; S < g.length; ++S) {
                var w = g[S],
                  F = g[S + 1] || e.length;
                a === r && y[w] && (A += ''.concat(e[w], '\\')),
                  (A += '\n'.concat(t).concat(e.slice(w + 1, F)));
              }
              return A;
            }),
            (t.FOLD_QUOTED = t.FOLD_BLOCK = t.FOLD_FLOW = void 0),
            (t.FOLD_FLOW = 'flow');
          var n = 'block';
          t.FOLD_BLOCK = n;
          var r = 'quoted';
          t.FOLD_QUOTED = r;
          var i = function(e, t) {
            for (var n = e[t + 1]; ' ' === n || '\t' === n; ) {
              do {
                n = e[(t += 1)];
              } while (n && '\n' !== n);
              n = e[t + 1];
            }
            return t;
          };
        });
        r(oe), oe.FOLD_QUOTED, oe.FOLD_BLOCK, oe.FOLD_FLOW;
        var se = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.strOptions = t.nullOptions = t.boolOptions = t.binaryOptions = void 0);
          var n = { defaultType: k.Type.BLOCK_LITERAL, lineWidth: 76 };
          (t.binaryOptions = n),
            (t.boolOptions = { trueStr: 'true', falseStr: 'false' }),
            (t.nullOptions = { nullStr: 'null' });
          var r = {
            defaultType: k.Type.PLAIN,
            doubleQuoted: { jsonEncoding: !1, minMultiLineLength: 40 },
            fold: { lineWidth: 80, minContentWidth: 20 },
          };
          t.strOptions = r;
        });
        r(se), se.strOptions, se.nullOptions, se.boolOptions, se.binaryOptions;
        var ue = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.stringifyNumber = function(e) {
              var t = e.format,
                n = e.minFractionDigits,
                r = e.tag,
                i = e.value;
              if (!isFinite(i))
                return isNaN(i) ? '.nan' : i < 0 ? '-.inf' : '.inf';
              var a = JSON.stringify(i);
              if (
                !t &&
                n &&
                (!r || 'tag:yaml.org,2002:float' === r) &&
                /^\d/.test(a)
              ) {
                var o = a.indexOf('.');
                o < 0 && ((o = a.length), (a += '.'));
                for (var s = n - (a.length - o - 1); s-- > 0; ) a += '0';
              }
              return a;
            }),
            (t.stringifyString = function(e, t, o, s) {
              var u = se.strOptions.defaultType,
                c = t.implicitKey,
                l = t.inFlow,
                p = e,
                f = p.type,
                h = p.value;
              'string' != typeof h &&
                ((h = String(h)), (e = Object.assign({}, e, { value: h })));
              var d = function(u) {
                switch (u) {
                  case k.Type.BLOCK_FOLDED:
                  case k.Type.BLOCK_LITERAL:
                    return a(e, t, o, s);
                  case k.Type.QUOTE_DOUBLE:
                    return r(h, t);
                  case k.Type.QUOTE_SINGLE:
                    return i(h, t);
                  case k.Type.PLAIN:
                    return (function(e, t, o, s) {
                      var u = e.comment,
                        c = e.type,
                        l = e.value,
                        p = t.actualString,
                        f = t.implicitKey,
                        h = t.indent,
                        d = t.inFlow,
                        m = t.tags;
                      if (
                        (f && /[\n[\]{},]/.test(l)) ||
                        (d && /[[\]{},]/.test(l))
                      )
                        return r(l, t);
                      if (
                        !l ||
                        /^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(
                          l,
                        )
                      )
                        return f || d || -1 === l.indexOf('\n')
                          ? -1 !== l.indexOf('"') && -1 === l.indexOf("'")
                            ? i(l, t)
                            : r(l, t)
                          : a(e, t, o, s);
                      if (
                        !f &&
                        !d &&
                        c !== k.Type.PLAIN &&
                        -1 !== l.indexOf('\n')
                      )
                        return a(e, t, o, s);
                      var g = l.replace(/\n+/g, '$&\n'.concat(h));
                      if (p && 'string' != typeof m.resolveScalar(g).value)
                        return r(l, t);
                      var y = f
                        ? g
                        : (0, n.default)(g, h, n.FOLD_FLOW, se.strOptions.fold);
                      return !u ||
                        d ||
                        (-1 === y.indexOf('\n') && -1 === u.indexOf('\n'))
                        ? y
                        : (o && o(), (0, K.addCommentBefore)(y, h, u));
                    })(e, t, o, s);
                  default:
                    return null;
                }
              };
              f !== k.Type.QUOTE_DOUBLE &&
              /[\x00-\x08\x0b-\x1f\x7f-\x9f]/.test(h)
                ? (f = k.Type.QUOTE_DOUBLE)
                : (!c && !l) ||
                  (f !== k.Type.BLOCK_FOLDED && f !== k.Type.BLOCK_LITERAL) ||
                  (f = k.Type.QUOTE_DOUBLE);
              var m = d(f);
              if (null === m && null === (m = d(u)))
                throw new Error('Unsupported default string type '.concat(u));
              return m;
            });
          var n = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var r =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  r.get || r.set
                    ? Object.defineProperty(t, n, r)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(oe);
          function r(e, t) {
            var r = t.implicitKey,
              i = t.indent,
              a = se.strOptions.doubleQuoted,
              o = a.jsonEncoding,
              s = a.minMultiLineLength,
              u = JSON.stringify(e);
            if (o) return u;
            for (var c = '', l = 0, p = 0, f = u[p]; f; f = u[++p])
              if (
                (' ' === f &&
                  '\\' === u[p + 1] &&
                  'n' === u[p + 2] &&
                  ((c += u.slice(l, p) + '\\ '), (l = p += 1), (f = '\\')),
                '\\' === f)
              )
                switch (u[p + 1]) {
                  case 'u':
                    c += u.slice(l, p);
                    var h = u.substr(p + 2, 4);
                    switch (h) {
                      case '0000':
                        c += '\\0';
                        break;
                      case '0007':
                        c += '\\a';
                        break;
                      case '000b':
                        c += '\\v';
                        break;
                      case '001b':
                        c += '\\e';
                        break;
                      case '0085':
                        c += '\\N';
                        break;
                      case '00a0':
                        c += '\\_';
                        break;
                      case '2028':
                        c += '\\L';
                        break;
                      case '2029':
                        c += '\\P';
                        break;
                      default:
                        '00' === h.substr(0, 2)
                          ? (c += '\\x' + h.substr(2))
                          : (c += u.substr(p, 6));
                    }
                    l = (p += 5) + 1;
                    break;
                  case 'n':
                    if (r || '"' === u[p + 2] || u.length < s) p += 1;
                    else {
                      for (
                        c += u.slice(l, p) + '\n\n';
                        '\\' === u[p + 2] &&
                        'n' === u[p + 3] &&
                        '"' !== u[p + 4];

                      )
                        (c += '\n'), (p += 2);
                      (c += i),
                        ' ' === u[p + 2] && (c += '\\'),
                        (l = (p += 1) + 1);
                    }
                    break;
                  default:
                    p += 1;
                }
            return (
              (c = l ? c + u.slice(l) : u),
              r ? c : (0, n.default)(c, i, n.FOLD_QUOTED, se.strOptions.fold)
            );
          }
          function i(e, t) {
            var i = t.indent,
              a = t.implicitKey;
            if (a) {
              if (/\n/.test(e)) return r(e, t);
            } else if (/[ \t]\n|\n[ \t]/.test(e)) return r(e, t);
            var o =
              "'" +
              e.replace(/'/g, "''").replace(/\n+/g, '$&\n'.concat(i)) +
              "'";
            return a
              ? o
              : (0, n.default)(o, i, n.FOLD_FLOW, se.strOptions.fold);
          }
          function a(e, t, i, a) {
            var o = e.comment,
              s = e.type,
              u = e.value;
            if (/\n[\t ]+$/.test(u) || /^\s*$/.test(u)) return r(u, t);
            var c = t.indent || (t.forceBlockIndent ? ' ' : ''),
              l = c ? '2' : '1',
              p =
                s !== k.Type.BLOCK_FOLDED &&
                (s === k.Type.BLOCK_LITERAL ||
                  !(function(e, t) {
                    var n = e.length;
                    if (n <= t) return !1;
                    for (var r = 0, i = 0; r < n; ++r)
                      if ('\n' === e[r]) {
                        if (r - i > t) return !0;
                        if (n - (i = r + 1) <= t) return !1;
                      }
                    return !0;
                  })(u, se.strOptions.fold.lineWidth - c.length)),
              f = p ? '|' : '>';
            if (!u) return f + '\n';
            var h = '',
              d = '';
            if (
              ((u = u
                .replace(/[\n\t ]*$/, function(e) {
                  var t = e.indexOf('\n');
                  return (
                    -1 === t
                      ? (f += '-')
                      : (u !== e && t === e.length - 1) ||
                        ((f += '+'), a && a()),
                    (d = e.replace(/\n$/, '')),
                    ''
                  );
                })
                .replace(/^[\n ]*/, function(e) {
                  -1 !== e.indexOf(' ') && (f += l);
                  var t = e.match(/ +$/);
                  return t
                    ? ((h = e.slice(0, -t[0].length)), t[0])
                    : ((h = e), '');
                })),
              d && (d = d.replace(/\n+(?!\n|$)/g, '$&'.concat(c))),
              h && (h = h.replace(/\n+/g, '$&'.concat(c))),
              o && ((f += ' #' + o.replace(/ ?[\r\n]+/g, ' ')), i && i()),
              !u)
            )
              return ''
                .concat(f)
                .concat(l, '\n')
                .concat(c)
                .concat(d);
            if (p)
              return (
                (u = u.replace(/\n+/g, '$&'.concat(c))),
                ''
                  .concat(f, '\n')
                  .concat(c)
                  .concat(h)
                  .concat(u)
                  .concat(d)
              );
            u = u
              .replace(/\n+/g, '\n$&')
              .replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g, '$1$2')
              .replace(/\n+/g, '$&'.concat(c));
            var m = (0, n.default)(
              ''
                .concat(h)
                .concat(u)
                .concat(d),
              c,
              n.FOLD_BLOCK,
              se.strOptions.fold,
            );
            return ''
              .concat(f, '\n')
              .concat(c)
              .concat(m);
          }
        });
        r(ue), ue.stringifyNumber, ue.stringifyString;
        var ce = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.checkFlowCollectionEnd = function(e, t) {
              var n, r, i;
              switch (t.type) {
                case k.Type.FLOW_MAP:
                  (n = '}'), (r = 'flow map');
                  break;
                case k.Type.FLOW_SEQ:
                  (n = ']'), (r = 'flow sequence');
                  break;
                default:
                  return void e.push(
                    new N.YAMLSemanticError(t, 'Not a flow collection!?'),
                  );
              }
              for (var a = t.items.length - 1; a >= 0; --a) {
                var o = t.items[a];
                if (!o || o.type !== k.Type.COMMENT) {
                  i = o;
                  break;
                }
              }
              if (i && i.char !== n) {
                var s,
                  u = 'Expected '.concat(r, ' to end with ').concat(n);
                'number' == typeof i.offset
                  ? ((s = new N.YAMLSemanticError(t, u)).offset = i.offset + 1)
                  : ((s = new N.YAMLSemanticError(i, u)),
                    i.range &&
                      i.range.end &&
                      (s.offset = i.range.end - i.range.start)),
                  e.push(s);
              }
            }),
            (t.checkKeyLength = function(e, t, n, r, i) {
              if (r && 'number' == typeof i) {
                var a = t.items[n],
                  o = a && a.range && a.range.start;
                if (!o)
                  for (var s = n - 1; s >= 0; --s) {
                    var u = t.items[s];
                    if (u && u.range) {
                      o = u.range.end + 2 * (n - s);
                      break;
                    }
                  }
                if (o > i + 1024) {
                  var c = String(r).substr(0, 8) + '...' + String(r).substr(-8);
                  e.push(
                    new N.YAMLSemanticError(
                      t,
                      'The "'.concat(c, '" key is too long'),
                    ),
                  );
                }
              }
            }),
            (t.resolveComments = function(e, t) {
              var n = !0,
                r = !1,
                i = void 0;
              try {
                for (
                  var a, o = t[Symbol.iterator]();
                  !(n = (a = o.next()).done);
                  n = !0
                ) {
                  var s = a.value,
                    u = s.afterKey,
                    c = s.before,
                    l = s.comment,
                    p = e.items[c];
                  p
                    ? (u && p.value && (p = p.value),
                      void 0 === l
                        ? (!u && p.commentBefore) || (p.spaceBefore = !0)
                        : p.commentBefore
                        ? (p.commentBefore += '\n' + l)
                        : (p.commentBefore = l))
                    : void 0 !== l &&
                      (e.comment ? (e.comment += '\n' + l) : (e.comment = l));
                }
              } catch (e) {
                (r = !0), (i = e);
              } finally {
                try {
                  n || null == o.return || o.return();
                } finally {
                  if (r) throw i;
                }
              }
            });
        });
        r(ce), ce.checkFlowCollectionEnd, ce.checkKeyLength, ce.resolveComments;
        var le = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = function(e, t) {
              if (t.type !== k.Type.MAP && t.type !== k.Type.FLOW_MAP) {
                var u = 'A '.concat(
                  t.type,
                  ' node cannot be resolved as a mapping',
                );
                return e.errors.push(new N.YAMLSyntaxError(t, u)), null;
              }
              var l =
                  t.type === k.Type.FLOW_MAP
                    ? (function(e, t) {
                        for (
                          var n = [],
                            r = [],
                            i = void 0,
                            o = null,
                            s = !1,
                            u = '{',
                            c = 0;
                          c < t.items.length;
                          ++c
                        ) {
                          (0, ce.checkKeyLength)(e.errors, t, c, i, o);
                          var l = t.items[c];
                          if ('string' == typeof l.char) {
                            var p = l.char,
                              f = l.offset;
                            if ('?' === p && void 0 === i && !s) {
                              (s = !0), (u = ':');
                              continue;
                            }
                            if (':' === p) {
                              if ((void 0 === i && (i = null), ':' === u)) {
                                u = ',';
                                continue;
                              }
                            } else if (
                              (s &&
                                (void 0 === i && ',' !== p && (i = null),
                                (s = !1)),
                              void 0 !== i &&
                                (r.push(new a.default(i)),
                                (i = void 0),
                                (o = null),
                                ',' === p))
                            ) {
                              u = ':';
                              continue;
                            }
                            if ('}' === p) {
                              if (c === t.items.length - 1) continue;
                            } else if (p === u) {
                              u = ':';
                              continue;
                            }
                            var h = 'Flow map contains an unexpected '.concat(
                                p,
                              ),
                              d = new N.YAMLSyntaxError(t, h);
                            (d.offset = f), e.errors.push(d);
                          } else
                            l.type === k.Type.BLANK_LINE
                              ? n.push({ afterKey: !!i, before: r.length })
                              : l.type === k.Type.COMMENT
                              ? n.push({
                                  afterKey: !!i,
                                  before: r.length,
                                  comment: l.comment,
                                })
                              : void 0 === i
                              ? (',' === u &&
                                  e.errors.push(
                                    new N.YAMLSemanticError(
                                      l,
                                      'Separator , missing in flow map',
                                    ),
                                  ),
                                (i = e.resolveNode(l)),
                                (o = s ? null : l.range.start))
                              : (',' !== u &&
                                  e.errors.push(
                                    new N.YAMLSemanticError(
                                      l,
                                      'Indicator : missing in flow map entry',
                                    ),
                                  ),
                                r.push(new a.default(i, e.resolveNode(l))),
                                (i = void 0),
                                (s = !1));
                        }
                        return (
                          (0, ce.checkFlowCollectionEnd)(e.errors, t),
                          void 0 !== i && r.push(new a.default(i)),
                          { comments: n, items: r }
                        );
                      })(e, t)
                    : (function(e, t) {
                        for (
                          var r = [], i = [], o = void 0, s = null, u = 0;
                          u < t.items.length;
                          ++u
                        ) {
                          var l = t.items[u];
                          switch (l.type) {
                            case k.Type.BLANK_LINE:
                              r.push({ afterKey: !!o, before: i.length });
                              break;
                            case k.Type.COMMENT:
                              r.push({
                                afterKey: !!o,
                                before: i.length,
                                comment: l.comment,
                              });
                              break;
                            case k.Type.MAP_KEY:
                              void 0 !== o && i.push(new a.default(o)),
                                l.error && e.errors.push(l.error),
                                (o = e.resolveNode(l.node)),
                                (s = null);
                              break;
                            case k.Type.MAP_VALUE:
                              void 0 === o && (o = null),
                                l.error && e.errors.push(l.error),
                                l.context.atLineStart ||
                                  !l.node ||
                                  l.node.type !== k.Type.MAP ||
                                  l.node.context.atLineStart ||
                                  e.errors.push(
                                    new N.YAMLSemanticError(
                                      l.node,
                                      'Nested mappings are not allowed in compact mappings',
                                    ),
                                  );
                              var p = l.node;
                              if (!p && l.props.length > 0) {
                                (p = new n.default(
                                  k.Type.PLAIN,
                                  [],
                                )).context = { parent: l, src: l.context.src };
                                var f = l.range.start + 1;
                                if (
                                  ((p.range = { start: f, end: f }),
                                  (p.valueRange = { start: f, end: f }),
                                  'number' == typeof l.range.origStart)
                                ) {
                                  var h = l.range.origStart + 1;
                                  (p.range.origStart = p.range.origEnd = h),
                                    (p.valueRange.origStart = p.valueRange.origEnd = h);
                                }
                              }
                              var d = new a.default(o, e.resolveNode(p));
                              c(l, d),
                                i.push(d),
                                (0, ce.checkKeyLength)(e.errors, t, u, o, s),
                                (o = void 0),
                                (s = null);
                              break;
                            default:
                              void 0 !== o && i.push(new a.default(o)),
                                (o = e.resolveNode(l)),
                                (s = l.range.start),
                                l.error && e.errors.push(l.error);
                              e: for (var m = u + 1; ; ++m) {
                                var g = t.items[m];
                                switch (g && g.type) {
                                  case k.Type.BLANK_LINE:
                                  case k.Type.COMMENT:
                                    continue e;
                                  case k.Type.MAP_VALUE:
                                    break e;
                                  default:
                                    e.errors.push(
                                      new N.YAMLSemanticError(
                                        l,
                                        'Implicit map keys need to be followed by map values',
                                      ),
                                    );
                                    break e;
                                }
                              }
                              l.valueRangeContainsNewline &&
                                e.errors.push(
                                  new N.YAMLSemanticError(
                                    l,
                                    'Implicit map keys need to be on a single line',
                                  ),
                                );
                          }
                        }
                        return (
                          void 0 !== o && i.push(new a.default(o)),
                          { comments: r, items: i }
                        );
                      })(e, t),
                p = l.comments,
                f = l.items,
                h = new r.default();
              (h.items = f), (0, ce.resolveComments)(h, p);
              for (var d = !1, m = 0; m < f.length; ++m) {
                var g = f[m].key;
                if (
                  (g instanceof s.default && (d = !0),
                  e.schema.merge && g && g.value === i.MERGE_KEY)
                ) {
                  f[m] = new i.default(f[m]);
                  var y = f[m].value.items,
                    v = null;
                  y.some(function(e) {
                    if (e instanceof o.default) {
                      var t = e.source.type;
                      return (
                        t !== k.Type.MAP &&
                        t !== k.Type.FLOW_MAP &&
                        (v = 'Merge nodes aliases can only point to maps')
                      );
                    }
                    return (v =
                      'Merge nodes can only have Alias nodes as values');
                  }),
                    v && e.errors.push(new N.YAMLSemanticError(t, v));
                } else
                  for (var D = m + 1; D < f.length; ++D) {
                    var E = f[D].key;
                    if (
                      g === E ||
                      (g &&
                        E &&
                        Object.prototype.hasOwnProperty.call(g, 'value') &&
                        g.value === E.value)
                    ) {
                      var C = 'Map keys must be unique; "'.concat(
                        g,
                        '" is repeated',
                      );
                      e.errors.push(new N.YAMLSemanticError(t, C));
                      break;
                    }
                  }
              }
              return (
                d &&
                  !e.options.mapAsMap &&
                  e.warnings.push(
                    new N.YAMLWarning(
                      t,
                      'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.',
                    ),
                  ),
                (t.resolved = h),
                h
              );
            });
          var n = u(W),
            r = u(ee),
            i = (function(e) {
              if (e && e.__esModule) return e;
              var t = {};
              if (null != e)
                for (var n in e)
                  if (Object.prototype.hasOwnProperty.call(e, n)) {
                    var r =
                      Object.defineProperty && Object.getOwnPropertyDescriptor
                        ? Object.getOwnPropertyDescriptor(e, n)
                        : {};
                    r.get || r.set
                      ? Object.defineProperty(t, n, r)
                      : (t[n] = e[n]);
                  }
              return (t.default = e), t;
            })(ne),
            a = u(G),
            o = u(Z),
            s = u(Q);
          function u(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function c(e, t) {
            if (
              (function(e) {
                var t = e.context,
                  n = t.lineStart,
                  r = t.node,
                  i = t.src,
                  a = e.props;
                if (0 === a.length) return !1;
                var o = a[0].start;
                if (r && o > r.valueRange.start) return !1;
                if (i[o] !== k.Char.COMMENT) return !1;
                for (var s = n; s < o; ++s) if ('\n' === i[s]) return !1;
                return !0;
              })(e)
            ) {
              var n = e.getPropValue(0, k.Char.COMMENT, !0),
                r = !1,
                i = t.value.commentBefore;
              if (i && i.startsWith(n))
                (t.value.commentBefore = i.substr(n.length + 1)), (r = !0);
              else {
                var a = t.value.comment;
                !e.node &&
                  a &&
                  a.startsWith(n) &&
                  ((t.value.comment = a.substr(n.length + 1)), (r = !0));
              }
              r && (t.comment = n);
            }
          }
        });
        r(le);
        var pe = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(ee),
            r = i(le);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var o = {
            createNode: function(e, t, r) {
              var i = new n.default();
              if (t instanceof Map) {
                var o = !0,
                  s = !1,
                  u = void 0;
                try {
                  for (
                    var c, l = t[Symbol.iterator]();
                    !(o = (c = l.next()).done);
                    o = !0
                  ) {
                    var p = y(c.value, 2),
                      f = p[0],
                      h = p[1];
                    i.items.push(e.createPair(f, h, r));
                  }
                } catch (e) {
                  (s = !0), (u = e);
                } finally {
                  try {
                    o || null == l.return || l.return();
                  } finally {
                    if (s) throw u;
                  }
                }
              } else if (t && 'object' === a(t))
                for (var d = 0, m = Object.keys(t); d < m.length; d++) {
                  var g = m[d];
                  i.items.push(e.createPair(g, t[g], r));
                }
              return i;
            },
            default: !0,
            nodeClass: n.default,
            tag: 'tag:yaml.org,2002:map',
            resolve: r.default,
          };
          t.default = o;
        });
        r(pe);
        var fe = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = function(e, t) {
              if (t.type !== k.Type.SEQ && t.type !== k.Type.FLOW_SEQ) {
                var a = 'A '.concat(
                  t.type,
                  ' node cannot be resolved as a sequence',
                );
                return e.errors.push(new N.YAMLSyntaxError(t, a)), null;
              }
              var o =
                  t.type === k.Type.FLOW_SEQ
                    ? (function(e, t) {
                        for (
                          var r = [],
                            i = [],
                            a = !1,
                            o = void 0,
                            s = null,
                            u = '[',
                            c = 0;
                          c < t.items.length;
                          ++c
                        ) {
                          var l = t.items[c];
                          if ('string' == typeof l.char) {
                            var p = l.char,
                              f = l.offset;
                            if (
                              (':' === p ||
                                (!a && void 0 === o) ||
                                (a && void 0 === o && (o = u ? i.pop() : null),
                                i.push(new n.default(o)),
                                (a = !1),
                                (o = void 0),
                                (s = null)),
                              p === u)
                            )
                              u = null;
                            else if (u || '?' !== p) {
                              if ('[' !== u && ':' === p && void 0 === o) {
                                if (',' === u) {
                                  if ((o = i.pop()) instanceof n.default) {
                                    var h = new N.YAMLSemanticError(
                                      t,
                                      'Chaining flow sequence pairs is invalid',
                                    );
                                    (h.offset = f), e.errors.push(h);
                                  }
                                  a ||
                                    (0, ce.checkKeyLength)(
                                      e.errors,
                                      t,
                                      c,
                                      o,
                                      s,
                                    );
                                } else o = null;
                                (s = null), (a = !1), (u = null);
                              } else if (
                                '[' === u ||
                                ']' !== p ||
                                c < t.items.length - 1
                              ) {
                                var d = 'Flow sequence contains an unexpected '.concat(
                                    p,
                                  ),
                                  m = new N.YAMLSyntaxError(t, d);
                                (m.offset = f), e.errors.push(m);
                              }
                            } else a = !0;
                          } else if (l.type === k.Type.BLANK_LINE)
                            r.push({ before: i.length });
                          else if (l.type === k.Type.COMMENT)
                            r.push({ comment: l.comment, before: i.length });
                          else {
                            if (u) {
                              var g = 'Expected a '.concat(
                                u,
                                ' in flow sequence',
                              );
                              e.errors.push(new N.YAMLSemanticError(l, g));
                            }
                            var y = e.resolveNode(l);
                            void 0 === o
                              ? i.push(y)
                              : (i.push(new n.default(o, y)), (o = void 0)),
                              (s = l.range.start),
                              (u = ',');
                          }
                        }
                        return (
                          (0, ce.checkFlowCollectionEnd)(e.errors, t),
                          void 0 !== o && i.push(new n.default(o)),
                          { comments: r, items: i }
                        );
                      })(e, t)
                    : (function(e, t) {
                        for (
                          var n = [], r = [], i = 0;
                          i < t.items.length;
                          ++i
                        ) {
                          var a = t.items[i];
                          switch (a.type) {
                            case k.Type.BLANK_LINE:
                              n.push({ before: r.length });
                              break;
                            case k.Type.COMMENT:
                              n.push({ comment: a.comment, before: r.length });
                              break;
                            case k.Type.SEQ_ITEM:
                              a.error && e.errors.push(a.error),
                                r.push(e.resolveNode(a.node)),
                                a.hasProps &&
                                  e.errors.push(
                                    new N.YAMLSemanticError(
                                      a,
                                      'Sequence items cannot have tags or anchors before the - indicator',
                                    ),
                                  );
                              break;
                            default:
                              a.error && e.errors.push(a.error),
                                e.errors.push(
                                  new N.YAMLSyntaxError(
                                    a,
                                    'Unexpected '.concat(
                                      a.type,
                                      ' node in sequence',
                                    ),
                                  ),
                                );
                          }
                        }
                        return { comments: n, items: r };
                      })(e, t),
                s = o.comments,
                u = o.items,
                c = new r.default();
              return (
                (c.items = u),
                (0, ce.resolveComments)(c, s),
                !e.options.mapAsMap &&
                  u.some(function(e) {
                    return e instanceof n.default && e.key instanceof i.default;
                  }) &&
                  e.warnings.push(
                    new N.YAMLWarning(
                      t,
                      'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.',
                    ),
                  ),
                (t.resolved = c),
                c
              );
            });
          var n = a(G),
            r = a(te),
            i = a(Q);
          function a(e) {
            return e && e.__esModule ? e : { default: e };
          }
        });
        r(fe);
        var he = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = i(fe),
            r = i(te);
          function i(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var a = {
            createNode: function(e, t, n) {
              var i = new r.default();
              if (t && t[Symbol.iterator]) {
                var a = !0,
                  o = !1,
                  s = void 0;
                try {
                  for (
                    var u, c = t[Symbol.iterator]();
                    !(a = (u = c.next()).done);
                    a = !0
                  ) {
                    var l = u.value,
                      p = e.createNode(l, n.wrapScalars, null, n);
                    i.items.push(p);
                  }
                } catch (e) {
                  (o = !0), (s = e);
                } finally {
                  try {
                    a || null == c.return || c.return();
                  } finally {
                    if (o) throw s;
                  }
                }
              }
              return i;
            },
            default: !0,
            nodeClass: r.default,
            tag: 'tag:yaml.org,2002:seq',
            resolve: n.default,
          };
          t.default = a;
        });
        r(he);
        var de = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = t.resolveString = void 0);
          var n = function(e, t) {
            var n = t.strValue;
            return n
              ? 'string' == typeof n
                ? n
                : (n.errors.forEach(function(n) {
                    n.source || (n.source = t), e.errors.push(n);
                  }),
                  n.str)
              : '';
          };
          t.resolveString = n;
          var r = {
            identify: function(e) {
              return 'string' == typeof e;
            },
            default: !0,
            tag: 'tag:yaml.org,2002:str',
            resolve: n,
            stringify: function(e, t, n, r) {
              return (
                (t = Object.assign({ actualString: !0 }, t)),
                (0, ue.stringifyString)(e, t, n, r)
              );
            },
            options: se.strOptions,
          };
          t.default = r;
        });
        r(de), de.resolveString;
        var me = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = a(pe),
            r = a(he),
            i = a(de);
          function a(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var o = [n.default, r.default, i.default];
          t.default = o;
        });
        r(me);
        var ge = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = r(X);
          function r(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var i = r(me).default.concat([
            {
              identify: function(e) {
                return null == e;
              },
              createNode: function(e, t, r) {
                return r.wrapScalars ? new n.default(null) : null;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:null',
              test: /^(?:~|[Nn]ull|NULL)?$/,
              resolve: function() {
                return null;
              },
              options: se.nullOptions,
              stringify: function() {
                return se.nullOptions.nullStr;
              },
            },
            {
              identify: function(e) {
                return 'boolean' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:bool',
              test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,
              resolve: function(e) {
                return 't' === e[0] || 'T' === e[0];
              },
              options: se.boolOptions,
              stringify: function(e) {
                return e.value
                  ? se.boolOptions.trueStr
                  : se.boolOptions.falseStr;
              },
            },
            {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:int',
              format: 'OCT',
              test: /^0o([0-7]+)$/,
              resolve: function(e, t) {
                return parseInt(t, 8);
              },
              stringify: function(e) {
                return '0o' + e.value.toString(8);
              },
            },
            {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:int',
              test: /^[-+]?[0-9]+$/,
              resolve: function(e) {
                return parseInt(e, 10);
              },
              stringify: ue.stringifyNumber,
            },
            {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:int',
              format: 'HEX',
              test: /^0x([0-9a-fA-F]+)$/,
              resolve: function(e, t) {
                return parseInt(t, 16);
              },
              stringify: function(e) {
                return '0x' + e.value.toString(16);
              },
            },
            {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:float',
              test: /^(?:[-+]?\.inf|(\.nan))$/i,
              resolve: function(e, t) {
                return t
                  ? NaN
                  : '-' === e[0]
                  ? Number.NEGATIVE_INFINITY
                  : Number.POSITIVE_INFINITY;
              },
              stringify: ue.stringifyNumber,
            },
            {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:float',
              format: 'EXP',
              test: /^[-+]?(?:0|[1-9][0-9]*)(\.[0-9]*)?[eE][-+]?[0-9]+$/,
              resolve: function(e) {
                return parseFloat(e);
              },
              stringify: function(e) {
                var t = e.value;
                return Number(t).toExponential();
              },
            },
            {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:float',
              test: /^[-+]?(?:0|[1-9][0-9]*)\.([0-9]*)$/,
              resolve: function(e, t) {
                var r = new n.default(parseFloat(e));
                return (
                  t &&
                    '0' === t[t.length - 1] &&
                    (r.minFractionDigits = t.length),
                  r
                );
              },
              stringify: ue.stringifyNumber,
            },
          ]);
          t.default = i;
        });
        r(ge);
        var ye = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = a(pe),
            r = a(he),
            i = a(X);
          function a(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var o = [
            n.default,
            r.default,
            {
              identify: function(e) {
                return 'string' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:str',
              resolve: de.resolveString,
              stringify: function(e) {
                return JSON.stringify(e);
              },
            },
            {
              identify: function(e) {
                return null == e;
              },
              createNode: function(e, t, n) {
                return n.wrapScalars ? new i.default(null) : null;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:null',
              test: /^null$/,
              resolve: function() {
                return null;
              },
              stringify: function(e) {
                return JSON.stringify(e);
              },
            },
            {
              identify: function(e) {
                return 'boolean' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:bool',
              test: /^true$/,
              resolve: function() {
                return !0;
              },
              stringify: function(e) {
                return JSON.stringify(e);
              },
            },
            {
              identify: function(e) {
                return 'boolean' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:bool',
              test: /^false$/,
              resolve: function() {
                return !1;
              },
              stringify: function(e) {
                return JSON.stringify(e);
              },
            },
            {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:int',
              test: /^-?(?:0|[1-9][0-9]*)$/,
              resolve: function(e) {
                return parseInt(e, 10);
              },
              stringify: function(e) {
                return JSON.stringify(e);
              },
            },
            {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:float',
              test: /^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,
              resolve: function(e) {
                return parseFloat(e);
              },
              stringify: function(e) {
                return JSON.stringify(e);
              },
            },
          ];
          o.scalarFallback = function(e) {
            throw new SyntaxError(
              'Unresolved plain scalar '.concat(JSON.stringify(e)),
            );
          };
          var s = o;
          t.default = s;
        });
        r(ye);
        var ve =
            void 0 !== e
              ? e
              : 'undefined' != typeof self
              ? self
              : 'undefined' != typeof window
              ? window
              : {},
          De = [],
          Ee = [],
          Ce = 'undefined' != typeof Uint8Array ? Uint8Array : Array,
          be = !1;
        function xe() {
          be = !0;
          for (
            var e =
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
              t = 0,
              n = e.length;
            t < n;
            ++t
          )
            (De[t] = e[t]), (Ee[e.charCodeAt(t)] = t);
          (Ee['-'.charCodeAt(0)] = 62), (Ee['_'.charCodeAt(0)] = 63);
        }
        function Ae(e, t, n) {
          for (var r, i, a = [], o = t; o < n; o += 3)
            (r = (e[o] << 16) + (e[o + 1] << 8) + e[o + 2]),
              a.push(
                De[((i = r) >> 18) & 63] +
                  De[(i >> 12) & 63] +
                  De[(i >> 6) & 63] +
                  De[63 & i],
              );
          return a.join('');
        }
        function Se(e) {
          var t;
          be || xe();
          for (
            var n = e.length, r = n % 3, i = '', a = [], o = 0, s = n - r;
            o < s;
            o += 16383
          )
            a.push(Ae(e, o, o + 16383 > s ? s : o + 16383));
          return (
            1 === r
              ? ((t = e[n - 1]),
                (i += De[t >> 2]),
                (i += De[(t << 4) & 63]),
                (i += '=='))
              : 2 === r &&
                ((t = (e[n - 2] << 8) + e[n - 1]),
                (i += De[t >> 10]),
                (i += De[(t >> 4) & 63]),
                (i += De[(t << 2) & 63]),
                (i += '=')),
            a.push(i),
            a.join('')
          );
        }
        function we(e, t, n, r, i) {
          var a,
            o,
            s = 8 * i - r - 1,
            u = (1 << s) - 1,
            c = u >> 1,
            l = -7,
            p = n ? i - 1 : 0,
            f = n ? -1 : 1,
            h = e[t + p];
          for (
            p += f, a = h & ((1 << -l) - 1), h >>= -l, l += s;
            l > 0;
            a = 256 * a + e[t + p], p += f, l -= 8
          );
          for (
            o = a & ((1 << -l) - 1), a >>= -l, l += r;
            l > 0;
            o = 256 * o + e[t + p], p += f, l -= 8
          );
          if (0 === a) a = 1 - c;
          else {
            if (a === u) return o ? NaN : (1 / 0) * (h ? -1 : 1);
            (o += Math.pow(2, r)), (a -= c);
          }
          return (h ? -1 : 1) * o * Math.pow(2, a - r);
        }
        function Fe(e, t, n, r, i, a) {
          var o,
            s,
            u,
            c = 8 * a - i - 1,
            l = (1 << c) - 1,
            p = l >> 1,
            f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
            h = r ? 0 : a - 1,
            d = r ? 1 : -1,
            m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
          for (
            t = Math.abs(t),
              isNaN(t) || t === 1 / 0
                ? ((s = isNaN(t) ? 1 : 0), (o = l))
                : ((o = Math.floor(Math.log(t) / Math.LN2)),
                  t * (u = Math.pow(2, -o)) < 1 && (o--, (u *= 2)),
                  (t += o + p >= 1 ? f / u : f * Math.pow(2, 1 - p)) * u >= 2 &&
                    (o++, (u /= 2)),
                  o + p >= l
                    ? ((s = 0), (o = l))
                    : o + p >= 1
                    ? ((s = (t * u - 1) * Math.pow(2, i)), (o += p))
                    : ((s = t * Math.pow(2, p - 1) * Math.pow(2, i)), (o = 0)));
            i >= 8;
            e[n + h] = 255 & s, h += d, s /= 256, i -= 8
          );
          for (
            o = (o << i) | s, c += i;
            c > 0;
            e[n + h] = 255 & o, h += d, o /= 256, c -= 8
          );
          e[n + h - d] |= 128 * m;
        }
        var ke = {}.toString,
          Te =
            Array.isArray ||
            function(e) {
              return '[object Array]' == ke.call(e);
            };
        function _e() {
          return Ne.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
        }
        function Oe(e, t) {
          if (_e() < t) throw new RangeError('Invalid typed array length');
          return (
            Ne.TYPED_ARRAY_SUPPORT
              ? ((e = new Uint8Array(t)).__proto__ = Ne.prototype)
              : (null === e && (e = new Ne(t)), (e.length = t)),
            e
          );
        }
        function Ne(e, t, n) {
          if (!(Ne.TYPED_ARRAY_SUPPORT || this instanceof Ne))
            return new Ne(e, t, n);
          if ('number' == typeof e) {
            if ('string' == typeof t)
              throw new Error(
                'If encoding is specified then the first argument must be a string',
              );
            return Pe(this, e);
          }
          return Be(this, e, t, n);
        }
        function Be(e, t, n, r) {
          if ('number' == typeof t)
            throw new TypeError('"value" argument must not be a number');
          return 'undefined' != typeof ArrayBuffer && t instanceof ArrayBuffer
            ? (function(e, t, n, r) {
                if ((t.byteLength, n < 0 || t.byteLength < n))
                  throw new RangeError("'offset' is out of bounds");
                if (t.byteLength < n + (r || 0))
                  throw new RangeError("'length' is out of bounds");
                return (
                  (t =
                    void 0 === n && void 0 === r
                      ? new Uint8Array(t)
                      : void 0 === r
                      ? new Uint8Array(t, n)
                      : new Uint8Array(t, n, r)),
                  Ne.TYPED_ARRAY_SUPPORT
                    ? ((e = t).__proto__ = Ne.prototype)
                    : (e = Me(e, t)),
                  e
                );
              })(e, t, n, r)
            : 'string' == typeof t
            ? (function(e, t, n) {
                if (
                  (('string' == typeof n && '' !== n) || (n = 'utf8'),
                  !Ne.isEncoding(n))
                )
                  throw new TypeError(
                    '"encoding" must be a valid string encoding',
                  );
                var r = 0 | je(t, n),
                  i = (e = Oe(e, r)).write(t, n);
                return i !== r && (e = e.slice(0, i)), e;
              })(e, t, n)
            : (function(e, t) {
                if (Re(t)) {
                  var n = 0 | Le(t.length);
                  return 0 === (e = Oe(e, n)).length || t.copy(e, 0, 0, n), e;
                }
                if (t) {
                  if (
                    ('undefined' != typeof ArrayBuffer &&
                      t.buffer instanceof ArrayBuffer) ||
                    'length' in t
                  )
                    return 'number' != typeof t.length || (r = t.length) != r
                      ? Oe(e, 0)
                      : Me(e, t);
                  if ('Buffer' === t.type && Te(t.data)) return Me(e, t.data);
                }
                var r;
                throw new TypeError(
                  'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.',
                );
              })(e, t);
        }
        function Ie(e) {
          if ('number' != typeof e)
            throw new TypeError('"size" argument must be a number');
          if (e < 0)
            throw new RangeError('"size" argument must not be negative');
        }
        function Pe(e, t) {
          if (
            (Ie(t), (e = Oe(e, t < 0 ? 0 : 0 | Le(t))), !Ne.TYPED_ARRAY_SUPPORT)
          )
            for (var n = 0; n < t; ++n) e[n] = 0;
          return e;
        }
        function Me(e, t) {
          var n = t.length < 0 ? 0 : 0 | Le(t.length);
          e = Oe(e, n);
          for (var r = 0; r < n; r += 1) e[r] = 255 & t[r];
          return e;
        }
        function Le(e) {
          if (e >= _e())
            throw new RangeError(
              'Attempt to allocate Buffer larger than maximum size: 0x' +
                _e().toString(16) +
                ' bytes',
            );
          return 0 | e;
        }
        function Re(e) {
          return !(null == e || !e._isBuffer);
        }
        function je(e, t) {
          if (Re(e)) return e.length;
          if (
            'undefined' != typeof ArrayBuffer &&
            'function' == typeof ArrayBuffer.isView &&
            (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
          )
            return e.byteLength;
          'string' != typeof e && (e = '' + e);
          var n = e.length;
          if (0 === n) return 0;
          for (var r = !1; ; )
            switch (t) {
              case 'ascii':
              case 'latin1':
              case 'binary':
                return n;
              case 'utf8':
              case 'utf-8':
              case void 0:
                return ft(e).length;
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return 2 * n;
              case 'hex':
                return n >>> 1;
              case 'base64':
                return ht(e).length;
              default:
                if (r) return ft(e).length;
                (t = ('' + t).toLowerCase()), (r = !0);
            }
        }
        function Ue(e, t, n) {
          var r = !1;
          if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return '';
          if (((void 0 === n || n > this.length) && (n = this.length), n <= 0))
            return '';
          if ((n >>>= 0) <= (t >>>= 0)) return '';
          for (e || (e = 'utf8'); ; )
            switch (e) {
              case 'hex':
                return tt(this, t, n);
              case 'utf8':
              case 'utf-8':
                return Ge(this, t, n);
              case 'ascii':
                return Ze(this, t, n);
              case 'latin1':
              case 'binary':
                return et(this, t, n);
              case 'base64':
                return Xe(this, t, n);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return nt(this, t, n);
              default:
                if (r) throw new TypeError('Unknown encoding: ' + e);
                (e = (e + '').toLowerCase()), (r = !0);
            }
        }
        function Ve(e, t, n) {
          var r = e[t];
          (e[t] = e[n]), (e[n] = r);
        }
        function We(e, t, n, r, i) {
          if (0 === e.length) return -1;
          if (
            ('string' == typeof n
              ? ((r = n), (n = 0))
              : n > 2147483647
              ? (n = 2147483647)
              : n < -2147483648 && (n = -2147483648),
            (n = +n),
            isNaN(n) && (n = i ? 0 : e.length - 1),
            n < 0 && (n = e.length + n),
            n >= e.length)
          ) {
            if (i) return -1;
            n = e.length - 1;
          } else if (n < 0) {
            if (!i) return -1;
            n = 0;
          }
          if (('string' == typeof t && (t = Ne.from(t, r)), Re(t)))
            return 0 === t.length ? -1 : $e(e, t, n, r, i);
          if ('number' == typeof t)
            return (
              (t &= 255),
              Ne.TYPED_ARRAY_SUPPORT &&
              'function' == typeof Uint8Array.prototype.indexOf
                ? i
                  ? Uint8Array.prototype.indexOf.call(e, t, n)
                  : Uint8Array.prototype.lastIndexOf.call(e, t, n)
                : $e(e, [t], n, r, i)
            );
          throw new TypeError('val must be string, number or Buffer');
        }
        function $e(e, t, n, r, i) {
          var a,
            o = 1,
            s = e.length,
            u = t.length;
          if (
            void 0 !== r &&
            ('ucs2' === (r = String(r).toLowerCase()) ||
              'ucs-2' === r ||
              'utf16le' === r ||
              'utf-16le' === r)
          ) {
            if (e.length < 2 || t.length < 2) return -1;
            (o = 2), (s /= 2), (u /= 2), (n /= 2);
          }
          function c(e, t) {
            return 1 === o ? e[t] : e.readUInt16BE(t * o);
          }
          if (i) {
            var l = -1;
            for (a = n; a < s; a++)
              if (c(e, a) === c(t, -1 === l ? 0 : a - l)) {
                if ((-1 === l && (l = a), a - l + 1 === u)) return l * o;
              } else -1 !== l && (a -= a - l), (l = -1);
          } else
            for (n + u > s && (n = s - u), a = n; a >= 0; a--) {
              for (var p = !0, f = 0; f < u; f++)
                if (c(e, a + f) !== c(t, f)) {
                  p = !1;
                  break;
                }
              if (p) return a;
            }
          return -1;
        }
        function qe(e, t, n, r) {
          n = Number(n) || 0;
          var i = e.length - n;
          r ? (r = Number(r)) > i && (r = i) : (r = i);
          var a = t.length;
          if (a % 2 != 0) throw new TypeError('Invalid hex string');
          r > a / 2 && (r = a / 2);
          for (var o = 0; o < r; ++o) {
            var s = parseInt(t.substr(2 * o, 2), 16);
            if (isNaN(s)) return o;
            e[n + o] = s;
          }
          return o;
        }
        function Ye(e, t, n, r) {
          return dt(ft(t, e.length - n), e, n, r);
        }
        function Je(e, t, n, r) {
          return dt(
            (function(e) {
              for (var t = [], n = 0; n < e.length; ++n)
                t.push(255 & e.charCodeAt(n));
              return t;
            })(t),
            e,
            n,
            r,
          );
        }
        function Ke(e, t, n, r) {
          return Je(e, t, n, r);
        }
        function ze(e, t, n, r) {
          return dt(ht(t), e, n, r);
        }
        function He(e, t, n, r) {
          return dt(
            (function(e, t) {
              for (
                var n, r, i, a = [], o = 0;
                o < e.length && !((t -= 2) < 0);
                ++o
              )
                (r = (n = e.charCodeAt(o)) >> 8),
                  (i = n % 256),
                  a.push(i),
                  a.push(r);
              return a;
            })(t, e.length - n),
            e,
            n,
            r,
          );
        }
        function Xe(e, t, n) {
          return 0 === t && n === e.length ? Se(e) : Se(e.slice(t, n));
        }
        function Ge(e, t, n) {
          n = Math.min(e.length, n);
          for (var r = [], i = t; i < n; ) {
            var a,
              o,
              s,
              u,
              c = e[i],
              l = null,
              p = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
            if (i + p <= n)
              switch (p) {
                case 1:
                  c < 128 && (l = c);
                  break;
                case 2:
                  128 == (192 & (a = e[i + 1])) &&
                    (u = ((31 & c) << 6) | (63 & a)) > 127 &&
                    (l = u);
                  break;
                case 3:
                  (a = e[i + 1]),
                    (o = e[i + 2]),
                    128 == (192 & a) &&
                      128 == (192 & o) &&
                      (u = ((15 & c) << 12) | ((63 & a) << 6) | (63 & o)) >
                        2047 &&
                      (u < 55296 || u > 57343) &&
                      (l = u);
                  break;
                case 4:
                  (a = e[i + 1]),
                    (o = e[i + 2]),
                    (s = e[i + 3]),
                    128 == (192 & a) &&
                      128 == (192 & o) &&
                      128 == (192 & s) &&
                      (u =
                        ((15 & c) << 18) |
                        ((63 & a) << 12) |
                        ((63 & o) << 6) |
                        (63 & s)) > 65535 &&
                      u < 1114112 &&
                      (l = u);
              }
            null === l
              ? ((l = 65533), (p = 1))
              : l > 65535 &&
                ((l -= 65536),
                r.push(((l >>> 10) & 1023) | 55296),
                (l = 56320 | (1023 & l))),
              r.push(l),
              (i += p);
          }
          return (function(e) {
            var t = e.length;
            if (t <= Qe) return String.fromCharCode.apply(String, e);
            for (var n = '', r = 0; r < t; )
              n += String.fromCharCode.apply(String, e.slice(r, (r += Qe)));
            return n;
          })(r);
        }
        (Ne.TYPED_ARRAY_SUPPORT =
          void 0 === ve.TYPED_ARRAY_SUPPORT || ve.TYPED_ARRAY_SUPPORT),
          (Ne.poolSize = 8192),
          (Ne._augment = function(e) {
            return (e.__proto__ = Ne.prototype), e;
          }),
          (Ne.from = function(e, t, n) {
            return Be(null, e, t, n);
          }),
          Ne.TYPED_ARRAY_SUPPORT &&
            ((Ne.prototype.__proto__ = Uint8Array.prototype),
            (Ne.__proto__ = Uint8Array)),
          (Ne.alloc = function(e, t, n) {
            return (function(e, t, n, r) {
              return (
                Ie(t),
                t <= 0
                  ? Oe(e, t)
                  : void 0 !== n
                  ? 'string' == typeof r
                    ? Oe(e, t).fill(n, r)
                    : Oe(e, t).fill(n)
                  : Oe(e, t)
              );
            })(null, e, t, n);
          }),
          (Ne.allocUnsafe = function(e) {
            return Pe(null, e);
          }),
          (Ne.allocUnsafeSlow = function(e) {
            return Pe(null, e);
          }),
          (Ne.isBuffer = function(e) {
            return (
              null != e &&
              (!!e._isBuffer ||
                mt(e) ||
                (function(e) {
                  return (
                    'function' == typeof e.readFloatLE &&
                    'function' == typeof e.slice &&
                    mt(e.slice(0, 0))
                  );
                })(e))
            );
          }),
          (Ne.compare = function(e, t) {
            if (!Re(e) || !Re(t))
              throw new TypeError('Arguments must be Buffers');
            if (e === t) return 0;
            for (
              var n = e.length, r = t.length, i = 0, a = Math.min(n, r);
              i < a;
              ++i
            )
              if (e[i] !== t[i]) {
                (n = e[i]), (r = t[i]);
                break;
              }
            return n < r ? -1 : r < n ? 1 : 0;
          }),
          (Ne.isEncoding = function(e) {
            switch (String(e).toLowerCase()) {
              case 'hex':
              case 'utf8':
              case 'utf-8':
              case 'ascii':
              case 'latin1':
              case 'binary':
              case 'base64':
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return !0;
              default:
                return !1;
            }
          }),
          (Ne.concat = function(e, t) {
            if (!Te(e))
              throw new TypeError(
                '"list" argument must be an Array of Buffers',
              );
            if (0 === e.length) return Ne.alloc(0);
            var n;
            if (void 0 === t)
              for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
            var r = Ne.allocUnsafe(t),
              i = 0;
            for (n = 0; n < e.length; ++n) {
              var a = e[n];
              if (!Re(a))
                throw new TypeError(
                  '"list" argument must be an Array of Buffers',
                );
              a.copy(r, i), (i += a.length);
            }
            return r;
          }),
          (Ne.byteLength = je),
          (Ne.prototype._isBuffer = !0),
          (Ne.prototype.swap16 = function() {
            var e = this.length;
            if (e % 2 != 0)
              throw new RangeError('Buffer size must be a multiple of 16-bits');
            for (var t = 0; t < e; t += 2) Ve(this, t, t + 1);
            return this;
          }),
          (Ne.prototype.swap32 = function() {
            var e = this.length;
            if (e % 4 != 0)
              throw new RangeError('Buffer size must be a multiple of 32-bits');
            for (var t = 0; t < e; t += 4)
              Ve(this, t, t + 3), Ve(this, t + 1, t + 2);
            return this;
          }),
          (Ne.prototype.swap64 = function() {
            var e = this.length;
            if (e % 8 != 0)
              throw new RangeError('Buffer size must be a multiple of 64-bits');
            for (var t = 0; t < e; t += 8)
              Ve(this, t, t + 7),
                Ve(this, t + 1, t + 6),
                Ve(this, t + 2, t + 5),
                Ve(this, t + 3, t + 4);
            return this;
          }),
          (Ne.prototype.toString = function() {
            var e = 0 | this.length;
            return 0 === e
              ? ''
              : 0 === arguments.length
              ? Ge(this, 0, e)
              : Ue.apply(this, arguments);
          }),
          (Ne.prototype.equals = function(e) {
            if (!Re(e)) throw new TypeError('Argument must be a Buffer');
            return this === e || 0 === Ne.compare(this, e);
          }),
          (Ne.prototype.inspect = function() {
            var e = '';
            return (
              this.length > 0 &&
                ((e = this.toString('hex', 0, 50)
                  .match(/.{2}/g)
                  .join(' ')),
                this.length > 50 && (e += ' ... ')),
              '<Buffer ' + e + '>'
            );
          }),
          (Ne.prototype.compare = function(e, t, n, r, i) {
            if (!Re(e)) throw new TypeError('Argument must be a Buffer');
            if (
              (void 0 === t && (t = 0),
              void 0 === n && (n = e ? e.length : 0),
              void 0 === r && (r = 0),
              void 0 === i && (i = this.length),
              t < 0 || n > e.length || r < 0 || i > this.length)
            )
              throw new RangeError('out of range index');
            if (r >= i && t >= n) return 0;
            if (r >= i) return -1;
            if (t >= n) return 1;
            if (this === e) return 0;
            for (
              var a = (i >>>= 0) - (r >>>= 0),
                o = (n >>>= 0) - (t >>>= 0),
                s = Math.min(a, o),
                u = this.slice(r, i),
                c = e.slice(t, n),
                l = 0;
              l < s;
              ++l
            )
              if (u[l] !== c[l]) {
                (a = u[l]), (o = c[l]);
                break;
              }
            return a < o ? -1 : o < a ? 1 : 0;
          }),
          (Ne.prototype.includes = function(e, t, n) {
            return -1 !== this.indexOf(e, t, n);
          }),
          (Ne.prototype.indexOf = function(e, t, n) {
            return We(this, e, t, n, !0);
          }),
          (Ne.prototype.lastIndexOf = function(e, t, n) {
            return We(this, e, t, n, !1);
          }),
          (Ne.prototype.write = function(e, t, n, r) {
            if (void 0 === t) (r = 'utf8'), (n = this.length), (t = 0);
            else if (void 0 === n && 'string' == typeof t)
              (r = t), (n = this.length), (t = 0);
            else {
              if (!isFinite(t))
                throw new Error(
                  'Buffer.write(string, encoding, offset[, length]) is no longer supported',
                );
              (t |= 0),
                isFinite(n)
                  ? ((n |= 0), void 0 === r && (r = 'utf8'))
                  : ((r = n), (n = void 0));
            }
            var i = this.length - t;
            if (
              ((void 0 === n || n > i) && (n = i),
              (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
            )
              throw new RangeError('Attempt to write outside buffer bounds');
            r || (r = 'utf8');
            for (var a = !1; ; )
              switch (r) {
                case 'hex':
                  return qe(this, e, t, n);
                case 'utf8':
                case 'utf-8':
                  return Ye(this, e, t, n);
                case 'ascii':
                  return Je(this, e, t, n);
                case 'latin1':
                case 'binary':
                  return Ke(this, e, t, n);
                case 'base64':
                  return ze(this, e, t, n);
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return He(this, e, t, n);
                default:
                  if (a) throw new TypeError('Unknown encoding: ' + r);
                  (r = ('' + r).toLowerCase()), (a = !0);
              }
          }),
          (Ne.prototype.toJSON = function() {
            return {
              type: 'Buffer',
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          });
        var Qe = 4096;
        function Ze(e, t, n) {
          var r = '';
          n = Math.min(e.length, n);
          for (var i = t; i < n; ++i) r += String.fromCharCode(127 & e[i]);
          return r;
        }
        function et(e, t, n) {
          var r = '';
          n = Math.min(e.length, n);
          for (var i = t; i < n; ++i) r += String.fromCharCode(e[i]);
          return r;
        }
        function tt(e, t, n) {
          var r = e.length;
          (!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);
          for (var i = '', a = t; a < n; ++a) i += pt(e[a]);
          return i;
        }
        function nt(e, t, n) {
          for (var r = e.slice(t, n), i = '', a = 0; a < r.length; a += 2)
            i += String.fromCharCode(r[a] + 256 * r[a + 1]);
          return i;
        }
        function rt(e, t, n) {
          if (e % 1 != 0 || e < 0) throw new RangeError('offset is not uint');
          if (e + t > n)
            throw new RangeError('Trying to access beyond buffer length');
        }
        function it(e, t, n, r, i, a) {
          if (!Re(e))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t > i || t < a)
            throw new RangeError('"value" argument is out of bounds');
          if (n + r > e.length) throw new RangeError('Index out of range');
        }
        function at(e, t, n, r) {
          t < 0 && (t = 65535 + t + 1);
          for (var i = 0, a = Math.min(e.length - n, 2); i < a; ++i)
            e[n + i] =
              (t & (255 << (8 * (r ? i : 1 - i)))) >>> (8 * (r ? i : 1 - i));
        }
        function ot(e, t, n, r) {
          t < 0 && (t = 4294967295 + t + 1);
          for (var i = 0, a = Math.min(e.length - n, 4); i < a; ++i)
            e[n + i] = (t >>> (8 * (r ? i : 3 - i))) & 255;
        }
        function st(e, t, n, r, i, a) {
          if (n + r > e.length) throw new RangeError('Index out of range');
          if (n < 0) throw new RangeError('Index out of range');
        }
        function ut(e, t, n, r, i) {
          return i || st(e, 0, n, 4), Fe(e, t, n, r, 23, 4), n + 4;
        }
        function ct(e, t, n, r, i) {
          return i || st(e, 0, n, 8), Fe(e, t, n, r, 52, 8), n + 8;
        }
        (Ne.prototype.slice = function(e, t) {
          var n,
            r = this.length;
          if (
            ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
            (t = void 0 === t ? r : ~~t) < 0
              ? (t += r) < 0 && (t = 0)
              : t > r && (t = r),
            t < e && (t = e),
            Ne.TYPED_ARRAY_SUPPORT)
          )
            (n = this.subarray(e, t)).__proto__ = Ne.prototype;
          else {
            var i = t - e;
            n = new Ne(i, void 0);
            for (var a = 0; a < i; ++a) n[a] = this[a + e];
          }
          return n;
        }),
          (Ne.prototype.readUIntLE = function(e, t, n) {
            (e |= 0), (t |= 0), n || rt(e, t, this.length);
            for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
              r += this[e + a] * i;
            return r;
          }),
          (Ne.prototype.readUIntBE = function(e, t, n) {
            (e |= 0), (t |= 0), n || rt(e, t, this.length);
            for (var r = this[e + --t], i = 1; t > 0 && (i *= 256); )
              r += this[e + --t] * i;
            return r;
          }),
          (Ne.prototype.readUInt8 = function(e, t) {
            return t || rt(e, 1, this.length), this[e];
          }),
          (Ne.prototype.readUInt16LE = function(e, t) {
            return t || rt(e, 2, this.length), this[e] | (this[e + 1] << 8);
          }),
          (Ne.prototype.readUInt16BE = function(e, t) {
            return t || rt(e, 2, this.length), (this[e] << 8) | this[e + 1];
          }),
          (Ne.prototype.readUInt32LE = function(e, t) {
            return (
              t || rt(e, 4, this.length),
              (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                16777216 * this[e + 3]
            );
          }),
          (Ne.prototype.readUInt32BE = function(e, t) {
            return (
              t || rt(e, 4, this.length),
              16777216 * this[e] +
                ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
            );
          }),
          (Ne.prototype.readIntLE = function(e, t, n) {
            (e |= 0), (t |= 0), n || rt(e, t, this.length);
            for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
              r += this[e + a] * i;
            return r >= (i *= 128) && (r -= Math.pow(2, 8 * t)), r;
          }),
          (Ne.prototype.readIntBE = function(e, t, n) {
            (e |= 0), (t |= 0), n || rt(e, t, this.length);
            for (var r = t, i = 1, a = this[e + --r]; r > 0 && (i *= 256); )
              a += this[e + --r] * i;
            return a >= (i *= 128) && (a -= Math.pow(2, 8 * t)), a;
          }),
          (Ne.prototype.readInt8 = function(e, t) {
            return (
              t || rt(e, 1, this.length),
              128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
            );
          }),
          (Ne.prototype.readInt16LE = function(e, t) {
            t || rt(e, 2, this.length);
            var n = this[e] | (this[e + 1] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (Ne.prototype.readInt16BE = function(e, t) {
            t || rt(e, 2, this.length);
            var n = this[e + 1] | (this[e] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (Ne.prototype.readInt32LE = function(e, t) {
            return (
              t || rt(e, 4, this.length),
              this[e] |
                (this[e + 1] << 8) |
                (this[e + 2] << 16) |
                (this[e + 3] << 24)
            );
          }),
          (Ne.prototype.readInt32BE = function(e, t) {
            return (
              t || rt(e, 4, this.length),
              (this[e] << 24) |
                (this[e + 1] << 16) |
                (this[e + 2] << 8) |
                this[e + 3]
            );
          }),
          (Ne.prototype.readFloatLE = function(e, t) {
            return t || rt(e, 4, this.length), we(this, e, !0, 23, 4);
          }),
          (Ne.prototype.readFloatBE = function(e, t) {
            return t || rt(e, 4, this.length), we(this, e, !1, 23, 4);
          }),
          (Ne.prototype.readDoubleLE = function(e, t) {
            return t || rt(e, 8, this.length), we(this, e, !0, 52, 8);
          }),
          (Ne.prototype.readDoubleBE = function(e, t) {
            return t || rt(e, 8, this.length), we(this, e, !1, 52, 8);
          }),
          (Ne.prototype.writeUIntLE = function(e, t, n, r) {
            (e = +e),
              (t |= 0),
              (n |= 0),
              r || it(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
            var i = 1,
              a = 0;
            for (this[t] = 255 & e; ++a < n && (i *= 256); )
              this[t + a] = (e / i) & 255;
            return t + n;
          }),
          (Ne.prototype.writeUIntBE = function(e, t, n, r) {
            (e = +e),
              (t |= 0),
              (n |= 0),
              r || it(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
            var i = n - 1,
              a = 1;
            for (this[t + i] = 255 & e; --i >= 0 && (a *= 256); )
              this[t + i] = (e / a) & 255;
            return t + n;
          }),
          (Ne.prototype.writeUInt8 = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 1, 255, 0),
              Ne.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (Ne.prototype.writeUInt16LE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 2, 65535, 0),
              Ne.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                : at(this, e, t, !0),
              t + 2
            );
          }),
          (Ne.prototype.writeUInt16BE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 2, 65535, 0),
              Ne.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                : at(this, e, t, !1),
              t + 2
            );
          }),
          (Ne.prototype.writeUInt32LE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 4, 4294967295, 0),
              Ne.TYPED_ARRAY_SUPPORT
                ? ((this[t + 3] = e >>> 24),
                  (this[t + 2] = e >>> 16),
                  (this[t + 1] = e >>> 8),
                  (this[t] = 255 & e))
                : ot(this, e, t, !0),
              t + 4
            );
          }),
          (Ne.prototype.writeUInt32BE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 4, 4294967295, 0),
              Ne.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 24),
                  (this[t + 1] = e >>> 16),
                  (this[t + 2] = e >>> 8),
                  (this[t + 3] = 255 & e))
                : ot(this, e, t, !1),
              t + 4
            );
          }),
          (Ne.prototype.writeIntLE = function(e, t, n, r) {
            if (((e = +e), (t |= 0), !r)) {
              var i = Math.pow(2, 8 * n - 1);
              it(this, e, t, n, i - 1, -i);
            }
            var a = 0,
              o = 1,
              s = 0;
            for (this[t] = 255 & e; ++a < n && (o *= 256); )
              e < 0 && 0 === s && 0 !== this[t + a - 1] && (s = 1),
                (this[t + a] = (((e / o) >> 0) - s) & 255);
            return t + n;
          }),
          (Ne.prototype.writeIntBE = function(e, t, n, r) {
            if (((e = +e), (t |= 0), !r)) {
              var i = Math.pow(2, 8 * n - 1);
              it(this, e, t, n, i - 1, -i);
            }
            var a = n - 1,
              o = 1,
              s = 0;
            for (this[t + a] = 255 & e; --a >= 0 && (o *= 256); )
              e < 0 && 0 === s && 0 !== this[t + a + 1] && (s = 1),
                (this[t + a] = (((e / o) >> 0) - s) & 255);
            return t + n;
          }),
          (Ne.prototype.writeInt8 = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 1, 127, -128),
              Ne.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
              e < 0 && (e = 255 + e + 1),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (Ne.prototype.writeInt16LE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 2, 32767, -32768),
              Ne.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                : at(this, e, t, !0),
              t + 2
            );
          }),
          (Ne.prototype.writeInt16BE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 2, 32767, -32768),
              Ne.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                : at(this, e, t, !1),
              t + 2
            );
          }),
          (Ne.prototype.writeInt32LE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 4, 2147483647, -2147483648),
              Ne.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e),
                  (this[t + 1] = e >>> 8),
                  (this[t + 2] = e >>> 16),
                  (this[t + 3] = e >>> 24))
                : ot(this, e, t, !0),
              t + 4
            );
          }),
          (Ne.prototype.writeInt32BE = function(e, t, n) {
            return (
              (e = +e),
              (t |= 0),
              n || it(this, e, t, 4, 2147483647, -2147483648),
              e < 0 && (e = 4294967295 + e + 1),
              Ne.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 24),
                  (this[t + 1] = e >>> 16),
                  (this[t + 2] = e >>> 8),
                  (this[t + 3] = 255 & e))
                : ot(this, e, t, !1),
              t + 4
            );
          }),
          (Ne.prototype.writeFloatLE = function(e, t, n) {
            return ut(this, e, t, !0, n);
          }),
          (Ne.prototype.writeFloatBE = function(e, t, n) {
            return ut(this, e, t, !1, n);
          }),
          (Ne.prototype.writeDoubleLE = function(e, t, n) {
            return ct(this, e, t, !0, n);
          }),
          (Ne.prototype.writeDoubleBE = function(e, t, n) {
            return ct(this, e, t, !1, n);
          }),
          (Ne.prototype.copy = function(e, t, n, r) {
            if (
              (n || (n = 0),
              r || 0 === r || (r = this.length),
              t >= e.length && (t = e.length),
              t || (t = 0),
              r > 0 && r < n && (r = n),
              r === n)
            )
              return 0;
            if (0 === e.length || 0 === this.length) return 0;
            if (t < 0) throw new RangeError('targetStart out of bounds');
            if (n < 0 || n >= this.length)
              throw new RangeError('sourceStart out of bounds');
            if (r < 0) throw new RangeError('sourceEnd out of bounds');
            r > this.length && (r = this.length),
              e.length - t < r - n && (r = e.length - t + n);
            var i,
              a = r - n;
            if (this === e && n < t && t < r)
              for (i = a - 1; i >= 0; --i) e[i + t] = this[i + n];
            else if (a < 1e3 || !Ne.TYPED_ARRAY_SUPPORT)
              for (i = 0; i < a; ++i) e[i + t] = this[i + n];
            else Uint8Array.prototype.set.call(e, this.subarray(n, n + a), t);
            return a;
          }),
          (Ne.prototype.fill = function(e, t, n, r) {
            if ('string' == typeof e) {
              if (
                ('string' == typeof t
                  ? ((r = t), (t = 0), (n = this.length))
                  : 'string' == typeof n && ((r = n), (n = this.length)),
                1 === e.length)
              ) {
                var i = e.charCodeAt(0);
                i < 256 && (e = i);
              }
              if (void 0 !== r && 'string' != typeof r)
                throw new TypeError('encoding must be a string');
              if ('string' == typeof r && !Ne.isEncoding(r))
                throw new TypeError('Unknown encoding: ' + r);
            } else 'number' == typeof e && (e &= 255);
            if (t < 0 || this.length < t || this.length < n)
              throw new RangeError('Out of range index');
            if (n <= t) return this;
            var a;
            if (
              ((t >>>= 0),
              (n = void 0 === n ? this.length : n >>> 0),
              e || (e = 0),
              'number' == typeof e)
            )
              for (a = t; a < n; ++a) this[a] = e;
            else {
              var o = Re(e) ? e : ft(new Ne(e, r).toString()),
                s = o.length;
              for (a = 0; a < n - t; ++a) this[a + t] = o[a % s];
            }
            return this;
          });
        var lt = /[^+\/0-9A-Za-z-_]/g;
        function pt(e) {
          return e < 16 ? '0' + e.toString(16) : e.toString(16);
        }
        function ft(e, t) {
          var n;
          t = t || 1 / 0;
          for (var r = e.length, i = null, a = [], o = 0; o < r; ++o) {
            if ((n = e.charCodeAt(o)) > 55295 && n < 57344) {
              if (!i) {
                if (n > 56319) {
                  (t -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                if (o + 1 === r) {
                  (t -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                i = n;
                continue;
              }
              if (n < 56320) {
                (t -= 3) > -1 && a.push(239, 191, 189), (i = n);
                continue;
              }
              n = 65536 + (((i - 55296) << 10) | (n - 56320));
            } else i && (t -= 3) > -1 && a.push(239, 191, 189);
            if (((i = null), n < 128)) {
              if ((t -= 1) < 0) break;
              a.push(n);
            } else if (n < 2048) {
              if ((t -= 2) < 0) break;
              a.push((n >> 6) | 192, (63 & n) | 128);
            } else if (n < 65536) {
              if ((t -= 3) < 0) break;
              a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
            } else {
              if (!(n < 1114112)) throw new Error('Invalid code point');
              if ((t -= 4) < 0) break;
              a.push(
                (n >> 18) | 240,
                ((n >> 12) & 63) | 128,
                ((n >> 6) & 63) | 128,
                (63 & n) | 128,
              );
            }
          }
          return a;
        }
        function ht(e) {
          return (function(e) {
            var t, n, r, i, a, o;
            be || xe();
            var s = e.length;
            if (s % 4 > 0)
              throw new Error('Invalid string. Length must be a multiple of 4');
            (a = '=' === e[s - 2] ? 2 : '=' === e[s - 1] ? 1 : 0),
              (o = new Ce((3 * s) / 4 - a)),
              (r = a > 0 ? s - 4 : s);
            var u = 0;
            for (t = 0, n = 0; t < r; t += 4, n += 3)
              (i =
                (Ee[e.charCodeAt(t)] << 18) |
                (Ee[e.charCodeAt(t + 1)] << 12) |
                (Ee[e.charCodeAt(t + 2)] << 6) |
                Ee[e.charCodeAt(t + 3)]),
                (o[u++] = (i >> 16) & 255),
                (o[u++] = (i >> 8) & 255),
                (o[u++] = 255 & i);
            return (
              2 === a
                ? ((i =
                    (Ee[e.charCodeAt(t)] << 2) |
                    (Ee[e.charCodeAt(t + 1)] >> 4)),
                  (o[u++] = 255 & i))
                : 1 === a &&
                  ((i =
                    (Ee[e.charCodeAt(t)] << 10) |
                    (Ee[e.charCodeAt(t + 1)] << 4) |
                    (Ee[e.charCodeAt(t + 2)] >> 2)),
                  (o[u++] = (i >> 8) & 255),
                  (o[u++] = 255 & i)),
              o
            );
          })(
            (function(e) {
              if (
                (e = (function(e) {
                  return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, '');
                })(e).replace(lt, '')).length < 2
              )
                return '';
              for (; e.length % 4 != 0; ) e += '=';
              return e;
            })(e),
          );
        }
        function dt(e, t, n, r) {
          for (var i = 0; i < r && !(i + n >= t.length || i >= e.length); ++i)
            t[i + n] = e[i];
          return i;
        }
        function mt(e) {
          return (
            !!e.constructor &&
            'function' == typeof e.constructor.isBuffer &&
            e.constructor.isBuffer(e)
          );
        }
        var gt = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = {
            identify: function(e) {
              return e instanceof Uint8Array;
            },
            default: !1,
            tag: 'tag:yaml.org,2002:binary',
            resolve: function(e, t) {
              var n = (0, de.resolveString)(e, t);
              return Ne.from(n, 'base64');
            },
            options: se.binaryOptions,
            stringify: function(e, t, n, r) {
              var i,
                a = e.comment,
                o = e.type,
                s = e.value;
              if (
                ((i =
                  s instanceof Ne
                    ? s.toString('base64')
                    : Ne.from(s.buffer).toString('base64')),
                o || (o = se.binaryOptions.defaultType),
                o === k.Type.QUOTE_DOUBLE)
              )
                s = i;
              else {
                for (
                  var u = se.binaryOptions.lineWidth,
                    c = Math.ceil(i.length / u),
                    l = new Array(c),
                    p = 0,
                    f = 0;
                  p < c;
                  ++p, f += u
                )
                  l[p] = i.substr(f, u);
                s = l.join(o === k.Type.BLOCK_LITERAL ? '\n' : ' ');
              }
              return (0, ue.stringifyString)(
                { comment: a, type: o, value: s },
                t,
                n,
                r,
              );
            },
          };
          t.default = n;
        });
        r(gt);
        var yt = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.parsePairs = s),
            (t.createPairs = u),
            (t.default = void 0);
          var n = o(ee),
            r = o(G),
            i = o(fe),
            a = o(te);
          function o(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function s(e, t) {
            for (var a = (0, i.default)(e, t), o = 0; o < a.items.length; ++o) {
              var s = a.items[o];
              if (!(s instanceof r.default)) {
                if (s instanceof n.default) {
                  if (s.items.length > 1)
                    throw new N.YAMLSemanticError(
                      t,
                      'Each pair must have its own sequence indicator',
                    );
                  var u = s.items[0] || new r.default();
                  s.commentBefore &&
                    (u.commentBefore = u.commentBefore
                      ? ''.concat(s.commentBefore, '\n').concat(u.commentBefore)
                      : s.commentBefore),
                    s.comment &&
                      (u.comment = u.comment
                        ? ''.concat(s.comment, '\n').concat(u.comment)
                        : s.comment),
                    (s = u);
                }
                a.items[o] = s instanceof r.default ? s : new r.default(s);
              }
            }
            return a;
          }
          function u(e, t, n) {
            var r = new a.default();
            r.tag = 'tag:yaml.org,2002:pairs';
            var i = !0,
              o = !1,
              s = void 0;
            try {
              for (
                var u, c = t[Symbol.iterator]();
                !(i = (u = c.next()).done);
                i = !0
              ) {
                var l = u.value,
                  p = void 0,
                  f = void 0;
                if (Array.isArray(l)) {
                  if (2 !== l.length)
                    throw new TypeError(
                      'Expected [key, value] tuple: '.concat(l),
                    );
                  (p = l[0]), (f = l[1]);
                } else if (l && l instanceof Object) {
                  var h = Object.keys(l);
                  if (1 !== h.length)
                    throw new TypeError(
                      'Expected { key: value } tuple: '.concat(l),
                    );
                  f = l[(p = h[0])];
                } else p = l;
                var d = e.createPair(p, f, n);
                r.items.push(d);
              }
            } catch (e) {
              (o = !0), (s = e);
            } finally {
              try {
                i || null == c.return || c.return();
              } finally {
                if (o) throw s;
              }
            }
            return r;
          }
          var c = {
            default: !1,
            tag: 'tag:yaml.org,2002:pairs',
            resolve: s,
            createNode: u,
          };
          t.default = c;
        });
        r(yt), yt.parsePairs, yt.createPairs;
        var vt = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = t.YAMLOMap = void 0);
          var n = s(z),
            r = s(ee),
            i = s(G),
            a = s(X);
          function s(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function p(e, t, n) {
            return (
              t in e
                ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                  })
                : (e[t] = n),
              e
            );
          }
          var f = (function(e) {
            function t() {
              var e;
              return (
                o(this, t),
                p(
                  d((e = m(this, l(t).call(this)))),
                  'add',
                  r.default.prototype.add.bind(d(e)),
                ),
                p(d(e), 'delete', r.default.prototype.delete.bind(d(e))),
                p(d(e), 'get', r.default.prototype.get.bind(d(e))),
                p(d(e), 'has', r.default.prototype.has.bind(d(e))),
                p(d(e), 'set', r.default.prototype.set.bind(d(e))),
                (e.tag = t.tag),
                e
              );
            }
            return (
              c(t, e),
              u(t, [
                {
                  key: 'toJSON',
                  value: function(e, t) {
                    var r = new Map();
                    t && t.onCreate && t.onCreate(r);
                    var a = !0,
                      o = !1,
                      s = void 0;
                    try {
                      for (
                        var u, c = this.items[Symbol.iterator]();
                        !(a = (u = c.next()).done);
                        a = !0
                      ) {
                        var l = u.value,
                          p = void 0,
                          f = void 0;
                        if (
                          (l instanceof i.default
                            ? ((p = (0, n.default)(l.key, '', t)),
                              (f = (0, n.default)(l.value, p, t)))
                            : (p = (0, n.default)(l, '', t)),
                          r.has(p))
                        )
                          throw new Error(
                            'Ordered maps must not include duplicate keys',
                          );
                        r.set(p, f);
                      }
                    } catch (e) {
                      (o = !0), (s = e);
                    } finally {
                      try {
                        a || null == c.return || c.return();
                      } finally {
                        if (o) throw s;
                      }
                    }
                    return r;
                  },
                },
              ]),
              t
            );
          })(s(te).default);
          (t.YAMLOMap = f), p(f, 'tag', 'tag:yaml.org,2002:omap');
          var h = {
            identify: function(e) {
              return e instanceof Map;
            },
            nodeClass: f,
            default: !1,
            tag: 'tag:yaml.org,2002:omap',
            resolve: function(e, t) {
              var n = (0, yt.parsePairs)(e, t),
                r = [],
                i = !0,
                o = !1,
                s = void 0;
              try {
                for (
                  var u, c = n.items[Symbol.iterator]();
                  !(i = (u = c.next()).done);
                  i = !0
                ) {
                  var l = u.value.key;
                  if (l instanceof a.default) {
                    if (r.includes(l.value))
                      throw new N.YAMLSemanticError(
                        t,
                        'Ordered maps must not include duplicate keys',
                      );
                    r.push(l.value);
                  }
                }
              } catch (e) {
                (o = !0), (s = e);
              } finally {
                try {
                  i || null == c.return || c.return();
                } finally {
                  if (o) throw s;
                }
              }
              return Object.assign(new f(), n);
            },
            createNode: function(e, t, n) {
              var r = (0, yt.createPairs)(e, t, n),
                i = new f();
              return (i.items = r.items), i;
            },
          };
          t.default = h;
        });
        r(vt), vt.YAMLOMap;
        var Dt = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = t.YAMLSet = void 0);
          var n = (function(e) {
              if (e && e.__esModule) return e;
              var t = {};
              if (null != e)
                for (var n in e)
                  if (Object.prototype.hasOwnProperty.call(e, n)) {
                    var r =
                      Object.defineProperty && Object.getOwnPropertyDescriptor
                        ? Object.getOwnPropertyDescriptor(e, n)
                        : {};
                    r.get || r.set
                      ? Object.defineProperty(t, n, r)
                      : (t[n] = e[n]);
                  }
              return (t.default = e), t;
            })(ee),
            r = p(G),
            i = p(le),
            s = p(X);
          function p(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var f,
            h,
            d = (function(e) {
              function t() {
                var e;
                return (
                  o(this, t), ((e = m(this, l(t).call(this))).tag = t.tag), e
                );
              }
              return (
                c(t, e),
                u(t, [
                  {
                    key: 'add',
                    value: function(e) {
                      var t = e instanceof r.default ? e : new r.default(e);
                      (0, n.findPair)(this.items, t.key) || this.items.push(t);
                    },
                  },
                  {
                    key: 'get',
                    value: function(e, t) {
                      var i = (0, n.findPair)(this.items, e);
                      return !t && i instanceof r.default
                        ? i.key instanceof s.default
                          ? i.key.value
                          : i.key
                        : i;
                    },
                  },
                  {
                    key: 'set',
                    value: function(e, t) {
                      if ('boolean' != typeof t)
                        throw new Error(
                          'Expected boolean value for set(key, value) in a YAML set, not '.concat(
                            a(t),
                          ),
                        );
                      var i = (0, n.findPair)(this.items, e);
                      i && !t
                        ? this.items.splice(this.items.indexOf(i), 1)
                        : !i && t && this.items.push(new r.default(e));
                    },
                  },
                  {
                    key: 'toJSON',
                    value: function(e, n) {
                      return g(l(t.prototype), 'toJSON', this).call(
                        this,
                        e,
                        n,
                        Set,
                      );
                    },
                  },
                  {
                    key: 'toString',
                    value: function(e, n, r) {
                      if (!e) return JSON.stringify(this);
                      if (this.hasAllNullValues())
                        return g(l(t.prototype), 'toString', this).call(
                          this,
                          e,
                          n,
                          r,
                        );
                      throw new Error('Set items must all have null values');
                    },
                  },
                ]),
                t
              );
            })(n.default);
          (t.YAMLSet = d),
            (h = 'tag:yaml.org,2002:set'),
            'tag' in (f = d)
              ? Object.defineProperty(f, 'tag', {
                  value: h,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (f.tag = h);
          var y = {
            identify: function(e) {
              return e instanceof Set;
            },
            nodeClass: d,
            default: !1,
            tag: 'tag:yaml.org,2002:set',
            resolve: function(e, t) {
              var n = (0, i.default)(e, t);
              if (!n.hasAllNullValues())
                throw new N.YAMLSemanticError(
                  t,
                  'Set items must all have null values',
                );
              return Object.assign(new d(), n);
            },
            createNode: function(e, t, n) {
              var r = new d(),
                i = !0,
                a = !1,
                o = void 0;
              try {
                for (
                  var s, u = t[Symbol.iterator]();
                  !(i = (s = u.next()).done);
                  i = !0
                ) {
                  var c = s.value;
                  r.items.push(e.createPair(c, null, n));
                }
              } catch (e) {
                (a = !0), (o = e);
              } finally {
                try {
                  i || null == u.return || u.return();
                } finally {
                  if (a) throw o;
                }
              }
              return r;
            },
          };
          t.default = y;
        });
        r(Dt), Dt.YAMLSet;
        var Et = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.timestamp = t.floatTime = t.intTime = void 0);
          var n = function(e, t) {
              var n = t.split(':').reduce(function(e, t) {
                return 60 * e + Number(t);
              }, 0);
              return '-' === e ? -n : n;
            },
            r = function(e) {
              var t = e.value;
              if (isNaN(t) || !isFinite(t)) return (0, ue.stringifyNumber)(t);
              var n = '';
              t < 0 && ((n = '-'), (t = Math.abs(t)));
              var r = [t % 60];
              return (
                t < 60
                  ? r.unshift(0)
                  : ((t = Math.round((t - r[0]) / 60)),
                    r.unshift(t % 60),
                    t >= 60 &&
                      ((t = Math.round((t - r[0]) / 60)), r.unshift(t))),
                n +
                  r
                    .map(function(e) {
                      return e < 10 ? '0' + String(e) : String(e);
                    })
                    .join(':')
                    .replace(/000000\d*$/, '')
              );
            },
            i = {
              identify: function(e) {
                return 'number' == typeof e;
              },
              default: !0,
              tag: 'tag:yaml.org,2002:int',
              format: 'TIME',
              test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,
              resolve: function(e, t, r) {
                return n(t, r.replace(/_/g, ''));
              },
              stringify: r,
            };
          t.intTime = i;
          var a = {
            identify: function(e) {
              return 'number' == typeof e;
            },
            default: !0,
            tag: 'tag:yaml.org,2002:float',
            format: 'TIME',
            test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*)$/,
            resolve: function(e, t, r) {
              return n(t, r.replace(/_/g, ''));
            },
            stringify: r,
          };
          t.floatTime = a;
          var o = {
            identify: function(e) {
              return e instanceof Date;
            },
            default: !0,
            tag: 'tag:yaml.org,2002:timestamp',
            test: RegExp(
              '^(?:([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?)$',
            ),
            resolve: function(e, t, r, i, a, o, s, u, c) {
              u && (u = (u + '00').substr(1, 3));
              var l = Date.UTC(t, r - 1, i, a || 0, o || 0, s || 0, u || 0);
              if (c && 'Z' !== c) {
                var p = n(c[0], c.slice(1));
                Math.abs(p) < 30 && (p *= 60), (l -= 6e4 * p);
              }
              return new Date(l);
            },
            stringify: function(e) {
              return e.value
                .toISOString()
                .replace(/((T00:00)?:00)?\.000Z$/, '');
            },
          };
          t.timestamp = o;
        });
        r(Et), Et.timestamp, Et.floatTime, Et.intTime;
        var Ct = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = u(X),
            r = u(me),
            i = u(gt),
            a = u(vt),
            o = u(yt),
            s = u(Dt);
          function u(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var c = r.default.concat(
            [
              {
                identify: function(e) {
                  return null == e;
                },
                createNode: function(e, t, r) {
                  return r.wrapScalars ? new n.default(null) : null;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:null',
                test: /^(?:~|[Nn]ull|NULL)?$/,
                resolve: function() {
                  return null;
                },
                options: se.nullOptions,
                stringify: function() {
                  return se.nullOptions.nullStr;
                },
              },
              {
                identify: function(e) {
                  return 'boolean' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:bool',
                test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,
                resolve: function() {
                  return !0;
                },
                options: se.boolOptions,
                stringify: function(e) {
                  return e.value
                    ? se.boolOptions.trueStr
                    : se.boolOptions.falseStr;
                },
              },
              {
                identify: function(e) {
                  return 'boolean' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:bool',
                test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,
                resolve: function() {
                  return !1;
                },
                options: se.boolOptions,
                stringify: function(e) {
                  return e.value
                    ? se.boolOptions.trueStr
                    : se.boolOptions.falseStr;
                },
              },
              {
                identify: function(e) {
                  return 'number' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:int',
                format: 'BIN',
                test: /^0b([0-1_]+)$/,
                resolve: function(e, t) {
                  return parseInt(t.replace(/_/g, ''), 2);
                },
                stringify: function(e) {
                  return '0b' + e.value.toString(2);
                },
              },
              {
                identify: function(e) {
                  return 'number' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:int',
                format: 'OCT',
                test: /^[-+]?0([0-7_]+)$/,
                resolve: function(e, t) {
                  return parseInt(t.replace(/_/g, ''), 8);
                },
                stringify: function(e) {
                  var t = e.value;
                  return (t < 0 ? '-0' : '0') + t.toString(8);
                },
              },
              {
                identify: function(e) {
                  return 'number' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:int',
                test: /^[-+]?[0-9][0-9_]*$/,
                resolve: function(e) {
                  return parseInt(e.replace(/_/g, ''), 10);
                },
                stringify: ue.stringifyNumber,
              },
              {
                identify: function(e) {
                  return 'number' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:int',
                format: 'HEX',
                test: /^0x([0-9a-fA-F_]+)$/,
                resolve: function(e, t) {
                  return parseInt(t.replace(/_/g, ''), 16);
                },
                stringify: function(e) {
                  var t = e.value;
                  return (t < 0 ? '-0x' : '0x') + t.toString(16);
                },
              },
              {
                identify: function(e) {
                  return 'number' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:float',
                test: /^(?:[-+]?\.inf|(\.nan))$/i,
                resolve: function(e, t) {
                  return t
                    ? NaN
                    : '-' === e[0]
                    ? Number.NEGATIVE_INFINITY
                    : Number.POSITIVE_INFINITY;
                },
                stringify: ue.stringifyNumber,
              },
              {
                identify: function(e) {
                  return 'number' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:float',
                format: 'EXP',
                test: /^[-+]?([0-9][0-9_]*)?(\.[0-9_]*)?[eE][-+]?[0-9]+$/,
                resolve: function(e) {
                  return parseFloat(e.replace(/_/g, ''));
                },
                stringify: function(e) {
                  var t = e.value;
                  return Number(t).toExponential();
                },
              },
              {
                identify: function(e) {
                  return 'number' == typeof e;
                },
                default: !0,
                tag: 'tag:yaml.org,2002:float',
                test: /^[-+]?(?:[0-9][0-9_]*)?\.([0-9_]*)$/,
                resolve: function(e, t) {
                  var r = new n.default(parseFloat(e.replace(/_/g, '')));
                  if (t) {
                    var i = t.replace(/_/g, '');
                    '0' === i[i.length - 1] && (r.minFractionDigits = i.length);
                  }
                  return r;
                },
                stringify: ue.stringifyNumber,
              },
            ],
            i.default,
            a.default,
            o.default,
            s.default,
            Et.intTime,
            Et.floatTime,
            Et.timestamp,
          );
          t.default = c;
        });
        r(Ct);
        var bt = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.tags = t.schemas = void 0);
          var n = f(ge),
            r = f(me),
            i = f(ye),
            a = f(Ct),
            o = f(pe),
            s = f(he),
            u = f(gt),
            c = f(vt),
            l = f(yt),
            p = f(Dt);
          function f(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var h = {
            core: n.default,
            failsafe: r.default,
            json: i.default,
            yaml11: a.default,
          };
          t.schemas = h;
          var d = {
            binary: u.default,
            floatTime: Et.floatTime,
            intTime: Et.intTime,
            map: o.default,
            omap: c.default,
            pairs: l.default,
            seq: s.default,
            set: p.default,
            timestamp: Et.timestamp,
          };
          t.tags = d;
        });
        r(bt), bt.tags, bt.schemas;
        var xt = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = l(Z),
            r = l(Q),
            i = l(H),
            s = l(G),
            c = l(X);
          function l(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function p(e, t, n) {
            return (
              t in e
                ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                  })
                : (e[t] = n),
              e
            );
          }
          var f = (function() {
            function e(t) {
              var n = t.customTags,
                r = t.merge,
                i = t.schema,
                a = t.tags;
              if (
                (o(this, e),
                (this.merge = !!r),
                (this.name = i),
                (this.tags = bt.schemas[i.replace(/\W/g, '')]),
                !this.tags)
              ) {
                var s = Object.keys(bt.schemas)
                  .map(function(e) {
                    return JSON.stringify(e);
                  })
                  .join(', ');
                throw new Error(
                  'Unknown schema "'.concat(i, '"; use one of ').concat(s),
                );
              }
              if (
                (!n &&
                  a &&
                  ((n = a),
                  (0, ae.warnOptionDeprecation)('tags', 'customTags')),
                Array.isArray(n))
              ) {
                var u = !0,
                  c = !1,
                  l = void 0;
                try {
                  for (
                    var p, f = n[Symbol.iterator]();
                    !(u = (p = f.next()).done);
                    u = !0
                  ) {
                    var h = p.value;
                    this.tags = this.tags.concat(h);
                  }
                } catch (e) {
                  (c = !0), (l = e);
                } finally {
                  try {
                    u || null == f.return || f.return();
                  } finally {
                    if (c) throw l;
                  }
                }
              } else
                'function' == typeof n && (this.tags = n(this.tags.slice()));
              for (var d = 0; d < this.tags.length; ++d) {
                var m = this.tags[d];
                if ('string' == typeof m) {
                  var g = bt.tags[m];
                  if (!g) {
                    var y = Object.keys(bt.tags)
                      .map(function(e) {
                        return JSON.stringify(e);
                      })
                      .join(', ');
                    throw new Error(
                      'Unknown custom tag "'
                        .concat(m, '"; use one of ')
                        .concat(y),
                    );
                  }
                  this.tags[d] = g;
                }
              }
            }
            return (
              u(e, [
                {
                  key: 'createNode',
                  value: function(t, r, i, o) {
                    var s;
                    if (i) {
                      i.startsWith('!!') && (i = e.defaultPrefix + i.slice(2));
                      var u = this.tags.filter(function(e) {
                        return e.tag === i;
                      });
                      if (
                        !(s =
                          u.find(function(e) {
                            return !e.format;
                          }) || u[0])
                      )
                        throw new Error('Tag '.concat(i, ' not found'));
                    } else if (
                      !(s = this.tags.find(function(e) {
                        return (
                          ((e.identify && e.identify(t)) ||
                            (e.class && t instanceof e.class)) &&
                          !e.format
                        );
                      }))
                    ) {
                      if (
                        ('function' == typeof t.toJSON && (t = t.toJSON()),
                        'object' !== a(t))
                      )
                        return r ? new c.default(t) : t;
                      s =
                        t instanceof Map
                          ? bt.tags.map
                          : t[Symbol.iterator]
                          ? bt.tags.seq
                          : bt.tags.map;
                    }
                    o ? (o.wrapScalars = r) : (o = { wrapScalars: r }),
                      o.onTagObj && (o.onTagObj(s), delete o.onTagObj);
                    var l = {};
                    if (t && 'object' === a(t) && o.prevObjects) {
                      var p = o.prevObjects.find(function(e) {
                        return e.value === t;
                      });
                      if (p) {
                        var f = new n.default(p);
                        return o.aliasNodes.push(f), f;
                      }
                      (l.value = t), o.prevObjects.push(l);
                    }
                    return (
                      (l.node = s.createNode
                        ? s.createNode(this, t, o)
                        : r
                        ? new c.default(t)
                        : t),
                      l.node
                    );
                  },
                },
                {
                  key: 'createPair',
                  value: function(e, t, n) {
                    var r = this.createNode(e, n.wrapScalars, null, n),
                      i = this.createNode(t, n.wrapScalars, null, n);
                    return new s.default(r, i);
                  },
                },
                {
                  key: 'resolveScalar',
                  value: function(e, t) {
                    t || (t = this.tags);
                    for (var n = 0; n < t.length; ++n) {
                      var r = t[n],
                        i = r.format,
                        a = r.test,
                        o = r.resolve;
                      if (a) {
                        var s = e.match(a);
                        if (s) {
                          var u = o.apply(null, s);
                          return (
                            u instanceof c.default || (u = new c.default(u)),
                            i && (u.format = i),
                            u
                          );
                        }
                      }
                    }
                    return (
                      this.tags.scalarFallback &&
                        (e = this.tags.scalarFallback(e)),
                      new c.default(e)
                    );
                  },
                },
                {
                  key: 'resolveNode',
                  value: function(e, t, n) {
                    var i = this.tags.filter(function(e) {
                        return e.tag === n;
                      }),
                      a = i.find(function(e) {
                        return !e.test;
                      });
                    t.error && e.errors.push(t.error);
                    try {
                      if (a) {
                        var o = a.resolve(e, t);
                        o instanceof r.default || (o = new c.default(o)),
                          (t.resolved = o);
                      } else {
                        var s = (0, de.resolveString)(e, t);
                        'string' == typeof s &&
                          i.length > 0 &&
                          (t.resolved = this.resolveScalar(s, i));
                      }
                    } catch (n) {
                      n.source || (n.source = t),
                        e.errors.push(n),
                        (t.resolved = null);
                    }
                    return t.resolved
                      ? (n && t.tag && (t.resolved.tag = n), t.resolved)
                      : null;
                  },
                },
                {
                  key: 'resolveNodeWithFallback',
                  value: function(t, n, r) {
                    var i = this.resolveNode(t, n, r);
                    if (Object.prototype.hasOwnProperty.call(n, 'resolved'))
                      return i;
                    var a,
                      o =
                        (a = n.type) === k.Type.FLOW_MAP || a === k.Type.MAP
                          ? e.defaultTags.MAP
                          : (function(e) {
                              var t = e.type;
                              return t === k.Type.FLOW_SEQ || t === k.Type.SEQ;
                            })(n)
                          ? e.defaultTags.SEQ
                          : e.defaultTags.STR;
                    if (o) {
                      t.warnings.push(
                        new N.YAMLWarning(
                          n,
                          'The tag '
                            .concat(r, ' is unavailable, falling back to ')
                            .concat(o),
                        ),
                      );
                      var s = this.resolveNode(t, n, o);
                      return (s.tag = r), s;
                    }
                    return (
                      t.errors.push(
                        new N.YAMLReferenceError(
                          n,
                          'The tag '.concat(r, ' is unavailable'),
                        ),
                      ),
                      null
                    );
                  },
                },
                {
                  key: 'getTagObject',
                  value: function(e) {
                    if (e instanceof n.default) return n.default;
                    if (e.tag) {
                      var t = this.tags.filter(function(t) {
                        return t.tag === e.tag;
                      });
                      if (t.length > 0)
                        return (
                          t.find(function(t) {
                            return t.format === e.format;
                          }) || t[0]
                        );
                    }
                    var r, i;
                    if (e instanceof c.default) {
                      i = e.value;
                      var o = this.tags.filter(function(e) {
                        return (
                          (e.identify && e.identify(i)) ||
                          (e.class && i instanceof e.class)
                        );
                      });
                      r =
                        o.find(function(t) {
                          return t.format === e.format;
                        }) ||
                        o.find(function(e) {
                          return !e.format;
                        });
                    } else
                      (i = e),
                        (r = this.tags.find(function(e) {
                          return e.nodeClass && i instanceof e.nodeClass;
                        }));
                    if (!r) {
                      var s = i && i.constructor ? i.constructor.name : a(i);
                      throw new Error(
                        'Tag not resolved for '.concat(s, ' value'),
                      );
                    }
                    return r;
                  },
                },
                {
                  key: 'stringifyProps',
                  value: function(e, t, n) {
                    var r = n.anchors,
                      i = n.doc,
                      a = [],
                      o = i.anchors.getName(e);
                    return (
                      o && ((r[o] = e), a.push('&'.concat(o))),
                      e.tag
                        ? a.push(i.stringifyTag(e.tag))
                        : t.default || a.push(i.stringifyTag(t.tag)),
                      a.join(' ')
                    );
                  },
                },
                {
                  key: 'stringify',
                  value: function(e, t, n, a) {
                    var o;
                    if (!(e instanceof i.default)) {
                      var u = {
                        aliasNodes: [],
                        onTagObj: function(e) {
                          return (o = e);
                        },
                        prevObjects: [],
                      };
                      e = this.createNode(e, !0, null, u);
                      var c = t.doc.anchors,
                        l = !0,
                        p = !1,
                        f = void 0;
                      try {
                        for (
                          var h, d = u.aliasNodes[Symbol.iterator]();
                          !(l = (h = d.next()).done);
                          l = !0
                        ) {
                          var m = h.value;
                          m.source = m.source.node;
                          var g = c.getName(m.source);
                          g || ((g = c.newName()), (c.map[g] = m.source));
                        }
                      } catch (e) {
                        (p = !0), (f = e);
                      } finally {
                        try {
                          l || null == d.return || d.return();
                        } finally {
                          if (p) throw f;
                        }
                      }
                    }
                    if (((t.tags = this), e instanceof s.default))
                      return e.toString(t, n, a);
                    o || (o = this.getTagObject(e));
                    var y = this.stringifyProps(e, o, t),
                      v =
                        'function' == typeof o.stringify
                          ? o.stringify(e, t, n, a)
                          : e instanceof r.default
                          ? e.toString(t, n, a)
                          : (0, ue.stringifyString)(e, t, n, a);
                    return y
                      ? e instanceof r.default && '{' !== v[0] && '[' !== v[0]
                        ? ''
                            .concat(y, '\n')
                            .concat(t.indent)
                            .concat(v)
                        : ''.concat(y, ' ').concat(v)
                      : v;
                  },
                },
              ]),
              e
            );
          })();
          (t.default = f),
            p(f, 'defaultPrefix', 'tag:yaml.org,2002:'),
            p(f, 'defaultTags', {
              MAP: 'tag:yaml.org,2002:map',
              SEQ: 'tag:yaml.org,2002:seq',
              STR: 'tag:yaml.org,2002:str',
            });
        });
        r(xt);
        var At = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = h(K),
            r = h(re),
            i = h(ie),
            a = h(xt),
            s = h(Z),
            c = (function(e) {
              if (e && e.__esModule) return e;
              var t = {};
              if (null != e)
                for (var n in e)
                  if (Object.prototype.hasOwnProperty.call(e, n)) {
                    var r =
                      Object.defineProperty && Object.getOwnPropertyDescriptor
                        ? Object.getOwnPropertyDescriptor(e, n)
                        : {};
                    r.get || r.set
                      ? Object.defineProperty(t, n, r)
                      : (t[n] = e[n]);
                  }
              return (t.default = e), t;
            })(Q),
            l = h(H),
            p = h(X),
            f = h(z);
          function h(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var d,
            m,
            g,
            v = (function() {
              function e(t) {
                o(this, e),
                  (this.anchors = new r.default(t.anchorPrefix)),
                  (this.commentBefore = null),
                  (this.comment = null),
                  (this.contents = null),
                  (this.directivesEndMarker = null),
                  (this.errors = []),
                  (this.options = t),
                  (this.schema = null),
                  (this.tagPrefixes = []),
                  (this.version = null),
                  (this.warnings = []);
              }
              return (
                u(e, [
                  {
                    key: 'assertCollectionContents',
                    value: function() {
                      if (this.contents instanceof c.default) return !0;
                      throw new Error(
                        'Expected a YAML collection as document contents',
                      );
                    },
                  },
                  {
                    key: 'add',
                    value: function(e) {
                      return (
                        this.assertCollectionContents(), this.contents.add(e)
                      );
                    },
                  },
                  {
                    key: 'addIn',
                    value: function(e, t) {
                      this.assertCollectionContents(),
                        this.contents.addIn(e, t);
                    },
                  },
                  {
                    key: 'delete',
                    value: function(e) {
                      return (
                        this.assertCollectionContents(), this.contents.delete(e)
                      );
                    },
                  },
                  {
                    key: 'deleteIn',
                    value: function(e) {
                      return (0, c.isEmptyPath)(e)
                        ? null != this.contents && ((this.contents = null), !0)
                        : (this.assertCollectionContents(),
                          this.contents.deleteIn(e));
                    },
                  },
                  {
                    key: 'getDefaults',
                    value: function() {
                      return (
                        e.defaults[this.version] ||
                        e.defaults[this.options.version] ||
                        {}
                      );
                    },
                  },
                  {
                    key: 'get',
                    value: function(e, t) {
                      return this.contents instanceof c.default
                        ? this.contents.get(e, t)
                        : void 0;
                    },
                  },
                  {
                    key: 'getIn',
                    value: function(e, t) {
                      return (0, c.isEmptyPath)(e)
                        ? !t && this.contents instanceof p.default
                          ? this.contents.value
                          : this.contents
                        : this.contents instanceof c.default
                        ? this.contents.getIn(e, t)
                        : void 0;
                    },
                  },
                  {
                    key: 'has',
                    value: function(e) {
                      return (
                        this.contents instanceof c.default &&
                        this.contents.has(e)
                      );
                    },
                  },
                  {
                    key: 'hasIn',
                    value: function(e) {
                      return (0, c.isEmptyPath)(e)
                        ? void 0 !== this.contents
                        : this.contents instanceof c.default &&
                            this.contents.hasIn(e);
                    },
                  },
                  {
                    key: 'set',
                    value: function(e, t) {
                      this.assertCollectionContents(), this.contents.set(e, t);
                    },
                  },
                  {
                    key: 'setIn',
                    value: function(e, t) {
                      (0, c.isEmptyPath)(e)
                        ? (this.contents = t)
                        : (this.assertCollectionContents(),
                          this.contents.setIn(e, t));
                    },
                  },
                  {
                    key: 'setSchema',
                    value: function(e, t) {
                      if (e || t || !this.schema) {
                        'number' == typeof e && (e = e.toFixed(1)),
                          '1.0' === e || '1.1' === e || '1.2' === e
                            ? (this.version
                                ? (this.version = e)
                                : (this.options.version = e),
                              delete this.options.schema)
                            : e &&
                              'string' == typeof e &&
                              (this.options.schema = e),
                          Array.isArray(t) && (this.options.customTags = t);
                        var n = Object.assign(
                          {},
                          this.getDefaults(),
                          this.options,
                        );
                        this.schema = new a.default(n);
                      }
                    },
                  },
                  {
                    key: 'parse',
                    value: function(e, t) {
                      this.options.keepCstNodes && (this.cstNode = e),
                        this.options.keepNodeTypes && (this.type = 'DOCUMENT');
                      var n = e.directives,
                        r = void 0 === n ? [] : n,
                        i = e.contents,
                        a = void 0 === i ? [] : i,
                        o = e.directivesEndMarker,
                        s = e.error,
                        u = e.valueRange;
                      if (
                        (s &&
                          (s.source || (s.source = this), this.errors.push(s)),
                        this.parseDirectives(r, t),
                        o && (this.directivesEndMarker = !0),
                        (this.range = u ? [u.start, u.end] : null),
                        this.setSchema(),
                        (this.anchors._cstAliases = []),
                        this.parseContents(a),
                        this.anchors.resolveNodes(),
                        this.options.prettyErrors)
                      ) {
                        var c = !0,
                          l = !1,
                          p = void 0;
                        try {
                          for (
                            var f, h = this.errors[Symbol.iterator]();
                            !(c = (f = h.next()).done);
                            c = !0
                          ) {
                            var d = f.value;
                            d instanceof N.YAMLError && d.makePretty();
                          }
                        } catch (e) {
                          (l = !0), (p = e);
                        } finally {
                          try {
                            c || null == h.return || h.return();
                          } finally {
                            if (l) throw p;
                          }
                        }
                        var m = !0,
                          g = !1,
                          y = void 0;
                        try {
                          for (
                            var v, D = this.warnings[Symbol.iterator]();
                            !(m = (v = D.next()).done);
                            m = !0
                          ) {
                            var E = v.value;
                            E instanceof N.YAMLError && E.makePretty();
                          }
                        } catch (e) {
                          (g = !0), (y = e);
                        } finally {
                          try {
                            m || null == D.return || D.return();
                          } finally {
                            if (g) throw y;
                          }
                        }
                      }
                      return this;
                    },
                  },
                  {
                    key: 'parseDirectives',
                    value: function(e, t) {
                      var n = this,
                        r = [],
                        i = !1;
                      e.forEach(function(e) {
                        var t = e.comment,
                          a = e.name;
                        switch (a) {
                          case 'TAG':
                            n.resolveTagDirective(e), (i = !0);
                            break;
                          case 'YAML':
                          case 'YAML:1.0':
                            n.resolveYamlDirective(e), (i = !0);
                            break;
                          default:
                            if (a) {
                              var o = 'YAML only supports %TAG and %YAML directives, and not %'.concat(
                                a,
                              );
                              n.warnings.push(new N.YAMLWarning(e, o));
                            }
                        }
                        t && r.push(t);
                      }),
                        t &&
                          !i &&
                          '1.1' ===
                            (this.version ||
                              t.version ||
                              this.options.version) &&
                          ((this.tagPrefixes = t.tagPrefixes.map(function(e) {
                            return { handle: e.handle, prefix: e.prefix };
                          })),
                          (this.version = t.version)),
                        (this.commentBefore = r.join('\n') || null);
                    },
                  },
                  {
                    key: 'parseContents',
                    value: function(e) {
                      var t = this,
                        n = { before: [], after: [] },
                        r = [],
                        i = !1;
                      switch (
                        (e.forEach(function(e) {
                          if (e.valueRange) {
                            1 === r.length &&
                              t.errors.push(
                                new N.YAMLSyntaxError(
                                  e,
                                  'Document is not valid YAML (bad indentation?)',
                                ),
                              );
                            var a = t.resolveNode(e);
                            i && ((a.spaceBefore = !0), (i = !1)), r.push(a);
                          } else null !== e.comment ? (0 === r.length ? n.before : n.after).push(e.comment) : e.type === k.Type.BLANK_LINE && ((i = !0), 0 === r.length && n.before.length > 0 && !t.commentBefore && ((t.commentBefore = n.before.join('\n')), (n.before = [])));
                        }),
                        r.length)
                      ) {
                        case 0:
                          (this.contents = null), (n.after = n.before);
                          break;
                        case 1:
                          if (((this.contents = r[0]), this.contents)) {
                            var a = n.before.join('\n') || null;
                            if (a) {
                              var o =
                                this.contents instanceof c.default &&
                                this.contents.items[0]
                                  ? this.contents.items[0]
                                  : this.contents;
                              o.commentBefore = o.commentBefore
                                ? ''.concat(a, '\n').concat(o.commentBefore)
                                : a;
                            }
                          } else n.after = n.before.concat(n.after);
                          break;
                        default:
                          (this.contents = r),
                            this.contents[0]
                              ? (this.contents[0].commentBefore =
                                  n.before.join('\n') || null)
                              : (n.after = n.before.concat(n.after));
                      }
                      this.comment = n.after.join('\n') || null;
                    },
                  },
                  {
                    key: 'resolveTagDirective',
                    value: function(e) {
                      var t = y(e.parameters, 2),
                        n = t[0],
                        r = t[1];
                      n && r
                        ? this.tagPrefixes.every(function(e) {
                            return e.handle !== n;
                          })
                          ? this.tagPrefixes.push({ handle: n, prefix: r })
                          : this.errors.push(
                              new N.YAMLSemanticError(
                                e,
                                'The %TAG directive must only be given at most once per handle in the same document.',
                              ),
                            )
                        : this.errors.push(
                            new N.YAMLSemanticError(
                              e,
                              'Insufficient parameters given for %TAG directive',
                            ),
                          );
                    },
                  },
                  {
                    key: 'resolveYamlDirective',
                    value: function(t) {
                      var n = y(t.parameters, 1)[0];
                      if (
                        ('YAML:1.0' === t.name && (n = '1.0'),
                        this.version &&
                          this.errors.push(
                            new N.YAMLSemanticError(
                              t,
                              'The %YAML directive must only be given at most once per document.',
                            ),
                          ),
                        n)
                      ) {
                        if (!e.defaults[n]) {
                          var r = this.version || this.options.version,
                            i = 'Document will be parsed as YAML '
                              .concat(r, ' rather than YAML ')
                              .concat(n);
                          this.warnings.push(new N.YAMLWarning(t, i));
                        }
                        this.version = n;
                      } else
                        this.errors.push(
                          new N.YAMLSemanticError(
                            t,
                            'Insufficient parameters given for %YAML directive',
                          ),
                        );
                    },
                  },
                  {
                    key: 'resolveTagName',
                    value: function(e) {
                      var t = e.tag,
                        n = e.type,
                        r = !1;
                      if (t) {
                        var i = t.handle,
                          o = t.suffix,
                          s = t.verbatim;
                        if (s) {
                          if ('!' !== s && '!!' !== s) return s;
                          var u = "Verbatim tags aren't resolved, so ".concat(
                            s,
                            ' is invalid.',
                          );
                          this.errors.push(new N.YAMLSemanticError(e, u));
                        } else if ('!' !== i || o) {
                          var c = this.tagPrefixes.find(function(e) {
                            return e.handle === i;
                          });
                          if (!c) {
                            var l = this.getDefaults().tagPrefixes;
                            l &&
                              (c = l.find(function(e) {
                                return e.handle === i;
                              }));
                          }
                          if (c) {
                            if (o) {
                              if (
                                '!' === i &&
                                '1.0' === (this.version || this.options.version)
                              ) {
                                if ('^' === o[0]) return o;
                                if (/[:/]/.test(o)) {
                                  var p = o.match(/^([a-z0-9-]+)\/(.*)/i);
                                  return p
                                    ? 'tag:'
                                        .concat(p[1], '.yaml.org,2002:')
                                        .concat(p[2])
                                    : 'tag:'.concat(o);
                                }
                              }
                              return c.prefix + decodeURIComponent(o);
                            }
                            this.errors.push(
                              new N.YAMLSemanticError(
                                e,
                                'The '.concat(i, ' tag has no suffix.'),
                              ),
                            );
                          } else {
                            var f = 'The '.concat(
                              i,
                              ' tag handle is non-default and was not declared.',
                            );
                            this.errors.push(new N.YAMLSemanticError(e, f));
                          }
                        } else r = !0;
                      }
                      switch (n) {
                        case k.Type.BLOCK_FOLDED:
                        case k.Type.BLOCK_LITERAL:
                        case k.Type.QUOTE_DOUBLE:
                        case k.Type.QUOTE_SINGLE:
                          return a.default.defaultTags.STR;
                        case k.Type.FLOW_MAP:
                        case k.Type.MAP:
                          return a.default.defaultTags.MAP;
                        case k.Type.FLOW_SEQ:
                        case k.Type.SEQ:
                          return a.default.defaultTags.SEQ;
                        case k.Type.PLAIN:
                          return r ? a.default.defaultTags.STR : null;
                        default:
                          return null;
                      }
                    },
                  },
                  {
                    key: 'resolveNode',
                    value: function(e) {
                      if (!e) return null;
                      var t,
                        n = this.anchors,
                        r = this.errors,
                        i = this.schema,
                        a = !1,
                        o = !1,
                        u = { before: [], after: [] },
                        c = (function(e) {
                          return (
                            e &&
                            -1 !==
                              [
                                k.Type.MAP_KEY,
                                k.Type.MAP_VALUE,
                                k.Type.SEQ_ITEM,
                              ].indexOf(e.type)
                          );
                        })(e.context.parent)
                          ? e.context.parent.props.concat(e.props)
                          : e.props,
                        l = !0,
                        p = !1,
                        f = void 0;
                      try {
                        for (
                          var h, d = c[Symbol.iterator]();
                          !(l = (h = d.next()).done);
                          l = !0
                        ) {
                          var m = h.value,
                            g = m.start,
                            y = m.end;
                          switch (e.context.src[g]) {
                            case k.Char.COMMENT:
                              e.commentHasRequiredWhitespace(g) ||
                                r.push(
                                  new N.YAMLSemanticError(
                                    e,
                                    'Comments must be separated from other tokens by white space characters',
                                  ),
                                );
                              var v = e.context.src.slice(g + 1, y),
                                D = e.header,
                                E = e.valueRange;
                              E && (g > E.start || (D && g > D.start))
                                ? u.after.push(v)
                                : u.before.push(v);
                              break;
                            case k.Char.ANCHOR:
                              a &&
                                r.push(
                                  new N.YAMLSemanticError(
                                    e,
                                    'A node can have at most one anchor',
                                  ),
                                ),
                                (a = !0);
                              break;
                            case k.Char.TAG:
                              o &&
                                r.push(
                                  new N.YAMLSemanticError(
                                    e,
                                    'A node can have at most one tag',
                                  ),
                                ),
                                (o = !0);
                          }
                        }
                      } catch (e) {
                        (p = !0), (f = e);
                      } finally {
                        try {
                          l || null == d.return || d.return();
                        } finally {
                          if (p) throw f;
                        }
                      }
                      if (a) {
                        var C = e.anchor,
                          b = n.getNode(C);
                        b && (n.map[n.newName(C)] = b), (n.map[C] = e);
                      }
                      if (e.type === k.Type.ALIAS) {
                        (a || o) &&
                          r.push(
                            new N.YAMLSemanticError(
                              e,
                              'An alias node must not specify any properties',
                            ),
                          );
                        var x = e.rawValue,
                          A = n.getNode(x);
                        if (!A) {
                          var S = 'Aliased anchor not found: '.concat(x);
                          return r.push(new N.YAMLReferenceError(e, S)), null;
                        }
                        (t = new s.default(A)), n._cstAliases.push(t);
                      } else {
                        var w = this.resolveTagName(e);
                        if (w) t = i.resolveNodeWithFallback(this, e, w);
                        else {
                          if (e.type !== k.Type.PLAIN) {
                            var F = 'Failed to resolve '.concat(
                              e.type,
                              ' node here',
                            );
                            return r.push(new N.YAMLSyntaxError(e, F)), null;
                          }
                          try {
                            t = i.resolveScalar(e.strValue || '');
                          } catch (t) {
                            return t.source || (t.source = e), r.push(t), null;
                          }
                        }
                      }
                      if (t) {
                        (t.range = [e.range.start, e.range.end]),
                          this.options.keepCstNodes && (t.cstNode = e),
                          this.options.keepNodeTypes && (t.type = e.type);
                        var T = u.before.join('\n');
                        T &&
                          (t.commentBefore = t.commentBefore
                            ? ''.concat(t.commentBefore, '\n').concat(T)
                            : T);
                        var _ = u.after.join('\n');
                        _ &&
                          (t.comment = t.comment
                            ? ''.concat(t.comment, '\n').concat(_)
                            : _);
                      }
                      return (e.resolved = t);
                    },
                  },
                  {
                    key: 'listNonDefaultTags',
                    value: function() {
                      return (0, i.default)(this.contents).filter(function(e) {
                        return 0 !== e.indexOf(a.default.defaultPrefix);
                      });
                    },
                  },
                  {
                    key: 'setTagPrefix',
                    value: function(e, t) {
                      if ('!' !== e[0] || '!' !== e[e.length - 1])
                        throw new Error('Handle must start and end with !');
                      if (t) {
                        var n = this.tagPrefixes.find(function(t) {
                          return t.handle === e;
                        });
                        n
                          ? (n.prefix = t)
                          : this.tagPrefixes.push({ handle: e, prefix: t });
                      } else
                        this.tagPrefixes = this.tagPrefixes.filter(function(t) {
                          return t.handle !== e;
                        });
                    },
                  },
                  {
                    key: 'stringifyTag',
                    value: function(e) {
                      if ('1.0' === (this.version || this.options.version)) {
                        var t = e.match(
                          /^tag:private\.yaml\.org,2002:([^:/]+)$/,
                        );
                        if (t) return '!' + t[1];
                        var n = e.match(
                          /^tag:([a-zA-Z0-9-]+)\.yaml\.org,2002:(.*)/,
                        );
                        return n
                          ? '!'.concat(n[1], '/').concat(n[2])
                          : '!'.concat(e.replace(/^tag:/, ''));
                      }
                      var r = this.tagPrefixes.find(function(t) {
                        return 0 === e.indexOf(t.prefix);
                      });
                      if (!r) {
                        var i = this.getDefaults().tagPrefixes;
                        r =
                          i &&
                          i.find(function(t) {
                            return 0 === e.indexOf(t.prefix);
                          });
                      }
                      if (!r) return '!' === e[0] ? e : '!<'.concat(e, '>');
                      var a = e
                        .substr(r.prefix.length)
                        .replace(/[!,[\]{}]/g, function(e) {
                          return {
                            '!': '%21',
                            ',': '%2C',
                            '[': '%5B',
                            ']': '%5D',
                            '{': '%7B',
                            '}': '%7D',
                          }[e];
                        });
                      return r.handle + a;
                    },
                  },
                  {
                    key: 'toJSON',
                    value: function(e) {
                      var t = this,
                        n = this.options,
                        r = n.keepBlobsInJSON,
                        i = n.mapAsMap,
                        a = n.maxAliasCount,
                        o =
                          r &&
                          ('string' != typeof e ||
                            !(this.contents instanceof p.default)),
                        s = {
                          doc: this,
                          keep: o,
                          mapAsMap: o && !!i,
                          maxAliasCount: a,
                        },
                        u = Object.keys(this.anchors.map);
                      return (
                        u.length > 0 &&
                          (s.anchors = u.map(function(e) {
                            return {
                              alias: [],
                              aliasCount: 0,
                              count: 1,
                              node: t.anchors.map[e],
                            };
                          })),
                        (0, f.default)(this.contents, e, s)
                      );
                    },
                  },
                  {
                    key: 'toString',
                    value: function() {
                      if (this.errors.length > 0)
                        throw new Error(
                          'Document with errors cannot be stringified',
                        );
                      this.setSchema();
                      var e = [],
                        t = !1;
                      if (this.version) {
                        var r = '%YAML 1.2';
                        'yaml-1.1' === this.schema.name &&
                          ('1.0' === this.version
                            ? (r = '%YAML:1.0')
                            : '1.1' === this.version && (r = '%YAML 1.1')),
                          e.push(r),
                          (t = !0);
                      }
                      var i = this.listNonDefaultTags();
                      this.tagPrefixes.forEach(function(n) {
                        var r = n.handle,
                          a = n.prefix;
                        i.some(function(e) {
                          return 0 === e.indexOf(a);
                        }) &&
                          (e.push('%TAG '.concat(r, ' ').concat(a)), (t = !0));
                      }),
                        (t || this.directivesEndMarker) && e.push('---'),
                        this.commentBefore &&
                          ((!t && this.directivesEndMarker) || e.unshift(''),
                          e.unshift(this.commentBefore.replace(/^/gm, '#')));
                      var a = { anchors: {}, doc: this, indent: '' },
                        o = !1,
                        s = null;
                      if (this.contents) {
                        this.contents instanceof l.default &&
                          (this.contents.spaceBefore &&
                            (t || this.directivesEndMarker) &&
                            e.push(''),
                          this.contents.commentBefore &&
                            e.push(
                              this.contents.commentBefore.replace(/^/gm, '#'),
                            ),
                          (a.forceBlockIndent = !!this.comment),
                          (s = this.contents.comment));
                        var u = s
                            ? null
                            : function() {
                                return (o = !0);
                              },
                          c = this.schema.stringify(
                            this.contents,
                            a,
                            function() {
                              return (s = null);
                            },
                            u,
                          );
                        e.push((0, n.default)(c, '', s));
                      } else
                        void 0 !== this.contents &&
                          e.push(this.schema.stringify(this.contents, a));
                      return (
                        this.comment &&
                          ((o && !s) || '' === e[e.length - 1] || e.push(''),
                          e.push(this.comment.replace(/^/gm, '#'))),
                        e.join('\n') + '\n'
                      );
                    },
                  },
                ]),
                e
              );
            })();
          (t.default = v),
            (d = v),
            (m = 'defaults'),
            (g = {
              '1.0': {
                schema: 'yaml-1.1',
                merge: !0,
                tagPrefixes: [
                  { handle: '!', prefix: a.default.defaultPrefix },
                  { handle: '!!', prefix: 'tag:private.yaml.org,2002:' },
                ],
              },
              1.1: {
                schema: 'yaml-1.1',
                merge: !0,
                tagPrefixes: [
                  { handle: '!', prefix: '!' },
                  { handle: '!!', prefix: a.default.defaultPrefix },
                ],
              },
              1.2: {
                schema: 'core',
                merge: !1,
                tagPrefixes: [
                  { handle: '!', prefix: '!' },
                  { handle: '!!', prefix: a.default.defaultPrefix },
                ],
              },
            }),
            m in d
              ? Object.defineProperty(d, m, {
                  value: g,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (d[m] = g);
        });
        r(At);
        var St = i(function(e, t) {
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.default = void 0);
          var n = a(J),
            r = a(At),
            i = a(xt);
          function a(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var s = {
              anchorPrefix: 'a',
              customTags: null,
              keepCstNodes: !1,
              keepNodeTypes: !0,
              keepBlobsInJSON: !0,
              mapAsMap: !1,
              maxAliasCount: 100,
              prettyErrors: !1,
              simpleKeys: !1,
              version: '1.2',
            },
            u = (function(e) {
              function t(e) {
                return (
                  o(this, t), m(this, l(t).call(this, Object.assign({}, s, e)))
                );
              }
              return c(t, e), t;
            })(r.default);
          function p(e, t) {
            var r = (0, n.default)(e),
              i = new u(t).parse(r[0]);
            return (
              r.length > 1 &&
                i.errors.unshift(
                  new N.YAMLSemanticError(
                    r[1],
                    'Source contains multiple documents; please use YAML.parseAllDocuments()',
                  ),
                ),
              i
            );
          }
          var f = {
            createNode: function(e) {
              var t =
                  !(arguments.length > 1 && void 0 !== arguments[1]) ||
                  arguments[1],
                n = arguments.length > 2 ? arguments[2] : void 0;
              void 0 === n && 'string' == typeof t && ((n = t), (t = !0));
              var a = Object.assign({}, r.default.defaults[s.version], s);
              return new i.default(a).createNode(e, t, n);
            },
            defaultOptions: s,
            Document: u,
            parse: function(e, t) {
              var n = p(e, t);
              if (
                (n.warnings.forEach(function(e) {
                  return (0, ae.warn)(e);
                }),
                n.errors.length > 0)
              )
                throw n.errors[0];
              return n.toJSON();
            },
            parseAllDocuments: function(e, t) {
              var r,
                i = [],
                a = !0,
                o = !1,
                s = void 0;
              try {
                for (
                  var c, l = (0, n.default)(e)[Symbol.iterator]();
                  !(a = (c = l.next()).done);
                  a = !0
                ) {
                  var p = c.value,
                    f = new u(t);
                  f.parse(p, r), i.push(f), (r = f);
                }
              } catch (e) {
                (o = !0), (s = e);
              } finally {
                try {
                  a || null == l.return || l.return();
                } finally {
                  if (o) throw s;
                }
              }
              return i;
            },
            parseCST: n.default,
            parseDocument: p,
            stringify: function(e, t) {
              var n = new u(t);
              return (n.contents = e), String(n);
            },
          };
          t.default = f;
        });
        r(St);
        var wt = St.default,
          Ft = i(function(e, t) {
            (t.__esModule = !0),
              (t.defineParents = function e(t, n) {
                void 0 === n && (n = null),
                  'children' in t &&
                    t.children.forEach(function(n) {
                      return e(n, t);
                    }),
                  'anchor' in t && t.anchor && e(t.anchor, t),
                  'tag' in t && t.tag && e(t.tag, t),
                  'leadingComments' in t &&
                    t.leadingComments.forEach(function(n) {
                      return e(n, t);
                    }),
                  'middleComments' in t &&
                    t.middleComments.forEach(function(n) {
                      return e(n, t);
                    }),
                  'indicatorComment' in t &&
                    t.indicatorComment &&
                    e(t.indicatorComment, t),
                  'trailingComment' in t &&
                    t.trailingComment &&
                    e(t.trailingComment, t),
                  'endComments' in t &&
                    t.endComments.forEach(function(n) {
                      return e(n, t);
                    }),
                  Object.defineProperty(t, '_parent', {
                    value: n,
                    enumerable: !1,
                  });
              });
          });
        r(Ft), Ft.defineParents;
        var kt = i(function(e, t) {
          (t.__esModule = !0),
            (t.getPointText = function(e) {
              return e.line + ':' + e.column;
            });
        });
        r(kt), kt.getPointText;
        var Tt = i(function(e, t) {
          function n(e, t) {
            if (t.position.end.offset < e.position.end.offset) return !1;
            switch (e.type) {
              case 'sequenceItem':
                return t.position.start.column > e.position.start.column;
              case 'mappingKey':
              case 'mappingValue':
                return (
                  t.position.start.column > e._parent.position.start.column &&
                  (0 === e.children.length ||
                    (1 === e.children.length &&
                      'blockFolded' !== e.children[0].type &&
                      'blockLiteral' !== e.children[0].type &&
                      ('mappingValue' === e.type ||
                        e.position.start.offset !==
                          e.children[0].position.start.offset)))
                );
              default:
                return !1;
            }
          }
          (t.__esModule = !0),
            (t.attachComments = function(e) {
              Ft.defineParents(e);
              var t = (function(e) {
                  for (
                    var t = Array.from(
                        new Array(e.position.end.line),
                        function() {
                          return {};
                        },
                      ),
                      n = 0,
                      r = e.comments;
                    n < r.length;
                    n++
                  ) {
                    var i = r[n];
                    t[i.position.start.line - 1].comment = i;
                  }
                  return (
                    (function e(t, n) {
                      if (n.position.start.offset !== n.position.end.offset) {
                        if ('leadingComments' in n) {
                          var r = n.position.start,
                            i = t[r.line - 1].leadingAttachableNode;
                          (!i || r.column < i.position.start.column) &&
                            (t[r.line - 1].leadingAttachableNode = n);
                        }
                        if (
                          'trailingComment' in n &&
                          n.position.end.column > 1 &&
                          'document' !== n.type &&
                          'documentHead' !== n.type
                        ) {
                          var a = n.position.end,
                            o = t[a.line - 1].trailingAttachableNode;
                          (!o || a.column >= o.position.end.column) &&
                            (t[a.line - 1].trailingAttachableNode = n);
                        }
                        if (
                          'root' !== n.type &&
                          'document' !== n.type &&
                          'documentHead' !== n.type &&
                          'documentBody' !== n.type
                        )
                          for (
                            var s = n.position,
                              u = 0,
                              c =
                                ((r = s.start),
                                [(a = s.end).line].concat(
                                  r.line === a.line ? [] : r.line,
                                ));
                            u < c.length;
                            u++
                          ) {
                            var l = c[u],
                              p = t[l - 1].trailingNode;
                            (!p || a.column >= p.position.end.column) &&
                              (t[l - 1].trailingNode = n);
                          }
                        'children' in n &&
                          n.children.forEach(function(n) {
                            e(t, n);
                          });
                      }
                    })(t, e),
                    t
                  );
                })(e),
                r = e.children.slice();
              e.comments
                .sort(function(e, t) {
                  return e.position.start.offset - t.position.end.offset;
                })
                .filter(function(e) {
                  return !e._parent;
                })
                .forEach(function(e) {
                  for (
                    ;
                    r.length > 1 &&
                    e.position.start.line > r[0].position.end.line;

                  )
                    r.shift();
                  !(function(e, t, r) {
                    var i = e.position.start.line,
                      a = t[i - 1].trailingAttachableNode;
                    if (a) {
                      if (a.trailingComment)
                        throw new Error(
                          'Unexpected multiple trailing comment at ' +
                            kt.getPointText(e.position.start),
                        );
                      return (
                        Ft.defineParents(e, a), void (a.trailingComment = e)
                      );
                    }
                    for (var o = i; o >= r.position.start.line; o--) {
                      var s = t[o - 1].trailingNode,
                        u = void 0;
                      if (s) u = s;
                      else {
                        if (o === i || !t[o - 1].comment) continue;
                        u = t[o - 1].comment._parent;
                      }
                      for (;;) {
                        if (n(u, e))
                          return (
                            Ft.defineParents(e, u), void u.endComments.push(e)
                          );
                        if (!u._parent) break;
                        u = u._parent;
                      }
                      break;
                    }
                    for (o = i + 1; o <= r.position.end.line; o++) {
                      var c = t[o - 1].leadingAttachableNode;
                      if (c)
                        return (
                          Ft.defineParents(e, c), void c.leadingComments.push(e)
                        );
                    }
                    var l = r.children[1];
                    Ft.defineParents(e, l), l.endComments.push(e);
                  })(e, t, r[0]);
                });
            });
        });
        r(Tt), Tt.attachComments;
        var _t = i(function(e, t) {
          (t.__esModule = !0),
            (t.createNode = function(e, t) {
              return { type: e, position: t };
            });
        });
        r(_t), _t.createNode;
        var Ot,
          Nt = ((Ot = w) && Ot.default) || Ot,
          Bt = i(function(e, t) {
            (t.__esModule = !0),
              (t.createRoot = function(e, t, n) {
                return Nt.__assign(Nt.__assign({}, _t.createNode('root', e)), {
                  children: t,
                  comments: n,
                });
              });
          });
        r(Bt), Bt.createRoot;
        var It = i(function(e, t) {
          (t.__esModule = !0),
            (t.removeCstBlankLine = function e(t) {
              switch (t.type) {
                case 'DOCUMENT':
                  for (var n = t.contents.length - 1; n >= 0; n--)
                    'BLANK_LINE' === t.contents[n].type
                      ? t.contents.splice(n, 1)
                      : e(t.contents[n]);
                  for (n = t.directives.length - 1; n >= 0; n--)
                    'BLANK_LINE' === t.directives[n].type &&
                      t.directives.splice(n, 1);
                  break;
                case 'FLOW_MAP':
                case 'FLOW_SEQ':
                case 'MAP':
                case 'SEQ':
                  for (n = t.items.length - 1; n >= 0; n--) {
                    var r = t.items[n];
                    'char' in r ||
                      ('BLANK_LINE' === r.type ? t.items.splice(n, 1) : e(r));
                  }
                  break;
                case 'MAP_KEY':
                case 'MAP_VALUE':
                case 'SEQ_ITEM':
                  t.node && e(t.node);
                  break;
                case 'ALIAS':
                case 'BLANK_LINE':
                case 'BLOCK_FOLDED':
                case 'BLOCK_LITERAL':
                case 'COMMENT':
                case 'DIRECTIVE':
                case 'PLAIN':
                case 'QUOTE_DOUBLE':
                case 'QUOTE_SINGLE':
                  break;
                default:
                  throw new Error(
                    'Unexpected node type ' + JSON.stringify(t.type),
                  );
              }
            });
        });
        r(It), It.removeCstBlankLine;
        var Pt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createLeadingCommentAttachable = function() {
              return { leadingComments: [] };
            });
        });
        r(Pt), Pt.createLeadingCommentAttachable;
        var Mt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createTrailingCommentAttachable = function(e) {
              return void 0 === e && (e = null), { trailingComment: e };
            });
        });
        r(Mt), Mt.createTrailingCommentAttachable;
        var Lt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createCommentAttachable = function() {
              return Nt.__assign(
                Nt.__assign({}, Pt.createLeadingCommentAttachable()),
                Mt.createTrailingCommentAttachable(),
              );
            });
        });
        r(Lt), Lt.createCommentAttachable;
        var Rt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createAlias = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('alias', e)),
                    Lt.createCommentAttachable(),
                  ),
                  t,
                ),
                { value: n },
              );
            });
        });
        r(Rt), Rt.createAlias;
        var jt = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformAlias = function(e, t) {
              var n = e.cstNode;
              return Rt.createAlias(
                t.transformRange({
                  origStart: n.valueRange.origStart - 1,
                  origEnd: n.valueRange.origEnd,
                }),
                t.transformContent(e),
                n.rawValue,
              );
            });
        });
        r(jt), jt.transformAlias;
        var Ut = i(function(e, t) {
          (t.__esModule = !0),
            (t.createBlockFolded = function(e) {
              return Nt.__assign(Nt.__assign({}, e), { type: 'blockFolded' });
            });
        });
        r(Ut), Ut.createBlockFolded;
        var Vt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createBlockValue = function(e, t, n, r, i, a) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('blockValue', e)),
                    Pt.createLeadingCommentAttachable(),
                  ),
                  t,
                ),
                { chomping: n, indent: r, value: i, indicatorComment: a },
              );
            });
        });
        r(Vt), Vt.createBlockValue;
        var Wt = i(function(e, t) {
          (t.__esModule = !0),
            (function(e) {
              (e.Tag = '!'), (e.Anchor = '&'), (e.Comment = '#');
            })(t.PropLeadingCharacter || (t.PropLeadingCharacter = {}));
        });
        r(Wt), Wt.PropLeadingCharacter;
        var $t = i(function(e, t) {
          (t.__esModule = !0),
            (t.createAnchor = function(e, t) {
              return Nt.__assign(Nt.__assign({}, _t.createNode('anchor', e)), {
                value: t,
              });
            });
        });
        r($t), $t.createAnchor;
        var qt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createComment = function(e, t) {
              return Nt.__assign(Nt.__assign({}, _t.createNode('comment', e)), {
                value: t,
              });
            });
        });
        r(qt), qt.createComment;
        var Yt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createContent = function(e, t, n) {
              return { anchor: t, tag: e, middleComments: n };
            });
        });
        r(Yt), Yt.createContent;
        var Jt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createTag = function(e, t) {
              return Nt.__assign(Nt.__assign({}, _t.createNode('tag', e)), {
                value: t,
              });
            });
        });
        r(Jt), Jt.createTag;
        var Kt = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformContent = function(e, t, n) {
              void 0 === n &&
                (n = function() {
                  return !1;
                });
              for (
                var r = e.cstNode,
                  i = [],
                  a = null,
                  o = null,
                  s = null,
                  u = 0,
                  c = r.props;
                u < c.length;
                u++
              ) {
                var l = c[u],
                  p = t.text[l.origStart];
                switch (p) {
                  case Wt.PropLeadingCharacter.Tag:
                    (a = a || l),
                      (o = Jt.createTag(t.transformRange(l), e.tag));
                    break;
                  case Wt.PropLeadingCharacter.Anchor:
                    (a = a || l),
                      (s = $t.createAnchor(t.transformRange(l), r.anchor));
                    break;
                  case Wt.PropLeadingCharacter.Comment:
                    var f = qt.createComment(
                      t.transformRange(l),
                      t.text.slice(l.origStart + 1, l.origEnd),
                    );
                    t.comments.push(f),
                      !n(f) &&
                        a &&
                        a.origEnd <= l.origStart &&
                        l.origEnd <= r.valueRange.origStart &&
                        i.push(f);
                    break;
                  default:
                    throw new Error(
                      'Unexpected leading character ' + JSON.stringify(p),
                    );
                }
              }
              return Yt.createContent(o, s, i);
            });
        });
        r(Kt), Kt.transformContent;
        var zt = i(function(e, t) {
          var n;
          (t.__esModule = !0),
            (function(e) {
              (e.CLIP = 'clip'), (e.STRIP = 'strip'), (e.KEEP = 'keep');
            })(n || (n = {})),
            (t.transformAstBlockValue = function(e, t) {
              var r = e.cstNode,
                i = 'CLIP' === r.chomping ? 0 : 1,
                a = r.header.origEnd - r.header.origStart - 1 - i != 0,
                o = t.transformRange({
                  origStart: r.header.origStart,
                  origEnd: r.valueRange.origEnd,
                }),
                s = null,
                u = Kt.transformContent(e, t, function(e) {
                  if (
                    !(
                      o.start.offset < e.position.start.offset &&
                      e.position.end.offset < o.end.offset
                    )
                  )
                    return !1;
                  if (s)
                    throw new Error(
                      'Unexpected multiple indicator comments at ' +
                        kt.getPointText(e.position.start),
                    );
                  return (s = e), !0;
                });
              return Vt.createBlockValue(
                o,
                u,
                n[r.chomping],
                a ? r.blockIndent : null,
                r.strValue,
                s,
              );
            });
        });
        r(zt), zt.transformAstBlockValue;
        var Ht = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformBlockFolded = function(e, t) {
              return Ut.createBlockFolded(zt.transformAstBlockValue(e, t));
            });
        });
        r(Ht), Ht.transformBlockFolded;
        var Xt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createBlockLiteral = function(e) {
              return Nt.__assign(Nt.__assign({}, e), { type: 'blockLiteral' });
            });
        });
        r(Xt), Xt.createBlockLiteral;
        var Gt = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformBlockLiteral = function(e, t) {
              return Xt.createBlockLiteral(zt.transformAstBlockValue(e, t));
            });
        });
        r(Gt), Gt.transformBlockLiteral;
        var Qt = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformComment = function(e, t) {
              return qt.createComment(t.transformRange(e.range), e.comment);
            });
        });
        r(Qt), Qt.transformComment;
        var Zt = i(function(e, t) {
          (t.__esModule = !0),
            (t.createDirective = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign({}, _t.createNode('directive', e)),
                  Lt.createCommentAttachable(),
                ),
                { name: t, parameters: n },
              );
            });
        });
        r(Zt), Zt.createDirective;
        var en = i(function(e, t) {
          (t.__esModule = !0),
            (t.extractPropComments = function(e, t) {
              for (var n = 0, r = e.props; n < r.length; n++) {
                var i = r[n],
                  a = t.text[i.origStart];
                switch (a) {
                  case Wt.PropLeadingCharacter.Comment:
                    t.comments.push(
                      qt.createComment(
                        t.transformRange(i),
                        t.text.slice(i.origStart + 1, i.origEnd),
                      ),
                    );
                    break;
                  default:
                    throw new Error(
                      'Unexpected leading character ' + JSON.stringify(a),
                    );
                }
              }
            });
        });
        r(en), en.extractPropComments;
        var tn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformDirective = function(e, t) {
              return (
                en.extractPropComments(e, t),
                Zt.createDirective(
                  t.transformRange(e.range),
                  e.name,
                  e.parameters,
                )
              );
            });
        });
        r(tn), tn.transformDirective;
        var nn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createDocument = function(e, t, n, r) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign({}, _t.createNode('document', e)),
                  Mt.createTrailingCommentAttachable(r),
                ),
                { children: [t, n] },
              );
            });
        });
        r(nn), nn.createDocument;
        var rn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createPosition = function(e, t) {
              return { start: e, end: t };
            }),
            (t.createEmptyPosition = function(e) {
              return { start: e, end: e };
            });
        });
        r(rn), rn.createPosition, rn.createEmptyPosition;
        var an = i(function(e, t) {
          (t.__esModule = !0),
            (t.createEndCommentAttachable = function(e) {
              return void 0 === e && (e = []), { endComments: e };
            });
        });
        r(an), an.createEndCommentAttachable;
        var on = i(function(e, t) {
          (t.__esModule = !0),
            (t.createDocumentBody = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign({}, _t.createNode('documentBody', e)),
                  an.createEndCommentAttachable(n),
                ),
                { children: t ? [t] : [] },
              );
            });
        });
        r(on), on.createDocumentBody;
        var sn = i(function(e, t) {
          (t.__esModule = !0),
            (t.getLast = function(e) {
              return e[e.length - 1];
            });
        });
        r(sn), sn.getLast;
        var un = i(function(e, t) {
          (t.__esModule = !0),
            (t.getMatchIndex = function(e, t) {
              var n = e.match(t);
              return n ? n.index : -1;
            });
        });
        r(un), un.getMatchIndex;
        var cn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformDocumentBody = function(e, t, n) {
              var r,
                i = e.cstNode,
                a = (function(e, t, n) {
                  for (
                    var r = [],
                      i = [],
                      a = [],
                      o = !1,
                      s = e.contents.length - 1;
                    s >= 0;
                    s--
                  ) {
                    var u = e.contents[s];
                    if ('COMMENT' === u.type) {
                      var c = t.transformNode(u);
                      n && n.line === c.position.start.line
                        ? a.unshift(c)
                        : o
                        ? r.unshift(c)
                        : c.position.start.offset >= e.valueRange.origEnd
                        ? i.unshift(c)
                        : r.unshift(c);
                    } else o = !0;
                  }
                  if (i.length > 1)
                    throw new Error(
                      'Unexpected multiple document trailing comments at ' +
                        kt.getPointText(i[1].position.start),
                    );
                  if (a.length > 1)
                    throw new Error(
                      'Unexpected multiple documentHead trailing comments at ' +
                        kt.getPointText(a[1].position.start),
                    );
                  return {
                    comments: r,
                    endComments: [],
                    documentTrailingComment: sn.getLast(i) || null,
                    documentHeadTrailingComment: sn.getLast(a) || null,
                  };
                })(i, t, n),
                o = a.comments,
                s = a.endComments,
                u = a.documentTrailingComment,
                c = a.documentHeadTrailingComment,
                l = t.transformNode(e.contents),
                p = (function(e, t, n) {
                  var r = un.getMatchIndex(
                      n.text.slice(e.valueRange.origEnd),
                      /^\.\.\./,
                    ),
                    i =
                      -1 === r
                        ? e.valueRange.origEnd
                        : Math.max(0, e.valueRange.origEnd - 1);
                  '\r' === n.text[i - 1] && i--;
                  var a = n.transformRange({
                    origStart: null !== t ? t.position.start.offset : i,
                    origEnd: i,
                  });
                  return {
                    position: a,
                    documentEndPoint:
                      -1 === r
                        ? a.end
                        : n.transformOffset(e.valueRange.origEnd + 3),
                  };
                })(i, l, t),
                f = p.position,
                h = p.documentEndPoint;
              return (
                (r = t.comments).push.apply(r, Nt.__spreadArrays(o, s)),
                {
                  documentBody: on.createDocumentBody(f, l, s),
                  documentEndPoint: h,
                  documentTrailingComment: u,
                  documentHeadTrailingComment: c,
                }
              );
            });
        });
        r(cn), cn.transformDocumentBody;
        var ln = i(function(e, t) {
          (t.__esModule = !0),
            (t.createDocumentHead = function(e, t, n, r) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('documentHead', e)),
                    an.createEndCommentAttachable(n),
                  ),
                  Mt.createTrailingCommentAttachable(r),
                ),
                { children: t },
              );
            });
        });
        r(ln), ln.createDocumentHead;
        var pn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformDocumentHead = function(e, t) {
              var n,
                r = e.cstNode,
                i = (function(e, t) {
                  for (
                    var n = [],
                      r = [],
                      i = [],
                      a = !1,
                      o = e.directives.length - 1;
                    o >= 0;
                    o--
                  ) {
                    var s = t.transformNode(e.directives[o]);
                    'comment' === s.type
                      ? a
                        ? r.unshift(s)
                        : i.unshift(s)
                      : ((a = !0), n.unshift(s));
                  }
                  return { directives: n, comments: r, endComments: i };
                })(r, t),
                a = i.directives,
                o = i.comments,
                s = i.endComments,
                u = (function(e, t, n) {
                  var r = un.getMatchIndex(
                      n.text.slice(0, e.valueRange.origStart),
                      /---\s*$/,
                    ),
                    i =
                      -1 === r
                        ? {
                            origStart: e.valueRange.origStart,
                            origEnd: e.valueRange.origStart,
                          }
                        : { origStart: r, origEnd: r + 3 };
                  return (
                    0 !== t.length &&
                      (i.origStart = t[0].position.start.offset),
                    {
                      position: n.transformRange(i),
                      endMarkerPoint: -1 === r ? null : n.transformOffset(r),
                    }
                  );
                })(r, a, t),
                c = u.position,
                l = u.endMarkerPoint;
              return (
                (n = t.comments).push.apply(n, Nt.__spreadArrays(o, s)),
                {
                  createDocumentHeadWithTrailingComment: function(e) {
                    return (
                      e && t.comments.push(e), ln.createDocumentHead(c, a, s, e)
                    );
                  },
                  documentHeadEndMarkerPoint: l,
                }
              );
            });
        });
        r(pn), pn.transformDocumentHead;
        var fn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformDocument = function(e, t) {
              var n = pn.transformDocumentHead(e, t),
                r = n.createDocumentHeadWithTrailingComment,
                i = n.documentHeadEndMarkerPoint,
                a = cn.transformDocumentBody(e, t, i),
                o = a.documentBody,
                s = a.documentEndPoint,
                u = a.documentTrailingComment,
                c = r(a.documentHeadTrailingComment);
              return (
                u && t.comments.push(u),
                nn.createDocument(
                  rn.createPosition(c.position.start, s),
                  c,
                  o,
                  u,
                )
              );
            });
        });
        r(fn), fn.transformDocument;
        var hn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createFlowCollection = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('flowCollection', e)),
                    Lt.createCommentAttachable(),
                  ),
                  t,
                ),
                { children: n },
              );
            });
        });
        r(hn), hn.createFlowCollection;
        var dn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createFlowMapping = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign({}, hn.createFlowCollection(e, t, n)),
                { type: 'flowMapping' },
              );
            });
        });
        r(dn), dn.createFlowMapping;
        var mn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createFlowMappingItem = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign({}, _t.createNode('flowMappingItem', e)),
                  Pt.createLeadingCommentAttachable(),
                ),
                { children: [t, n] },
              );
            });
        });
        r(mn), mn.createFlowMappingItem;
        var gn = i(function(e, t) {
          (t.__esModule = !0),
            (t.extractComments = function(e, t) {
              for (var n = [], r = 0, i = e; r < i.length; r++) {
                var a = i[r];
                a && 'type' in a && 'COMMENT' === a.type
                  ? t.comments.push(t.transformNode(a))
                  : n.push(a);
              }
              return n;
            });
        });
        r(gn), gn.extractComments;
        var yn = i(function(e, t) {
          (t.__esModule = !0),
            (t.getFlowMapItemAdditionalRanges = function(e) {
              var t = ['?', ':'].map(function(t) {
                var n = e.find(function(e) {
                  return 'char' in e && e.char === t;
                });
                return n
                  ? { origStart: n.origOffset, origEnd: n.origOffset + 1 }
                  : null;
              });
              return { additionalKeyRange: t[0], additionalValueRange: t[1] };
            });
        });
        r(yn), yn.getFlowMapItemAdditionalRanges;
        var vn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createSlicer = function(e, t) {
              var n = t;
              return function(t) {
                return e.slice(n, (n = t));
              };
            });
        });
        r(vn), vn.createSlicer;
        var Dn = i(function(e, t) {
          (t.__esModule = !0),
            (t.groupCstFlowCollectionItems = function(e) {
              for (
                var t = [], n = vn.createSlicer(e, 1), r = !1, i = 1;
                i < e.length - 1;
                i++
              ) {
                var a = e[i];
                'char' in a && ',' === a.char
                  ? (t.push(n(i)), n(i + 1), (r = !1))
                  : (r = !0);
              }
              return r && t.push(n(e.length - 1)), t;
            });
        });
        r(Dn), Dn.groupCstFlowCollectionItems;
        var En = i(function(e, t) {
          (t.__esModule = !0),
            (t.createMappingKey = function(e, t) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('mappingKey', e)),
                    Mt.createTrailingCommentAttachable(),
                  ),
                  an.createEndCommentAttachable(),
                ),
                { children: t ? [t] : [] },
              );
            });
        });
        r(En), En.createMappingKey;
        var Cn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createMappingValue = function(e, t) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('mappingValue', e)),
                    Lt.createCommentAttachable(),
                  ),
                  an.createEndCommentAttachable(),
                ),
                { children: t ? [t] : [] },
              );
            });
        });
        r(Cn), Cn.createMappingValue;
        var bn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformAstPair = function(e, t, n, r, i) {
              var a = t.transformNode(e.key),
                o = t.transformNode(
                  'MERGE_PAIR' === e.type
                    ? e.value.type
                      ? e.value
                      : e.value.items[0]
                    : e.value,
                ),
                s =
                  a || r
                    ? En.createMappingKey(
                        t.transformRange({
                          origStart: r ? r.origStart : a.position.start.offset,
                          origEnd: a ? a.position.end.offset : r.origStart + 1,
                        }),
                        a,
                      )
                    : null,
                u =
                  o || i
                    ? Cn.createMappingValue(
                        t.transformRange({
                          origStart: i ? i.origStart : o.position.start.offset,
                          origEnd: o ? o.position.end.offset : i.origStart + 1,
                        }),
                        o,
                      )
                    : null;
              return n(
                rn.createPosition(
                  s ? s.position.start : u.position.start,
                  u ? u.position.end : s.position.end,
                ),
                s ||
                  En.createMappingKey(
                    rn.createEmptyPosition(u.position.start),
                    null,
                  ),
                u ||
                  Cn.createMappingValue(
                    rn.createEmptyPosition(s.position.end),
                    null,
                  ),
              );
            });
        });
        r(bn), bn.transformAstPair;
        var xn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformFlowMap = function(e, t) {
              var n = gn.extractComments(e.cstNode.items, t),
                r = Dn.groupCstFlowCollectionItems(n),
                i = e.items.map(function(e, n) {
                  var i = r[n],
                    a = yn.getFlowMapItemAdditionalRanges(i),
                    o = a.additionalKeyRange,
                    s = a.additionalValueRange;
                  return bn.transformAstPair(
                    e,
                    t,
                    mn.createFlowMappingItem,
                    o,
                    s,
                  );
                }),
                a = n[0],
                o = sn.getLast(n);
              return dn.createFlowMapping(
                t.transformRange({
                  origStart: a.origOffset,
                  origEnd: o.origOffset + 1,
                }),
                t.transformContent(e),
                i,
              );
            });
        });
        r(xn), xn.transformFlowMap;
        var An = i(function(e, t) {
          (t.__esModule = !0),
            (t.createFlowSequence = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign({}, hn.createFlowCollection(e, t, n)),
                { type: 'flowSequence' },
              );
            });
        });
        r(An), An.createFlowSequence;
        var Sn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createFlowSequenceItem = function(e, t) {
              return Nt.__assign(
                Nt.__assign({}, _t.createNode('flowSequenceItem', e)),
                { children: [t] },
              );
            });
        });
        r(Sn), Sn.createFlowSequenceItem;
        var wn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformFlowSeq = function(e, t) {
              var n = gn.extractComments(e.cstNode.items, t),
                r = Dn.groupCstFlowCollectionItems(n),
                i = e.items.map(function(e, n) {
                  if ('PAIR' !== e.type) {
                    var i = t.transformNode(e);
                    return Sn.createFlowSequenceItem(
                      rn.createPosition(i.position.start, i.position.end),
                      i,
                    );
                  }
                  var a = r[n],
                    o = yn.getFlowMapItemAdditionalRanges(a),
                    s = o.additionalKeyRange,
                    u = o.additionalValueRange;
                  return bn.transformAstPair(
                    e,
                    t,
                    mn.createFlowMappingItem,
                    s,
                    u,
                  );
                }),
                a = n[0],
                o = sn.getLast(n);
              return An.createFlowSequence(
                t.transformRange({
                  origStart: a.origOffset,
                  origEnd: o.origOffset + 1,
                }),
                t.transformContent(e),
                i,
              );
            });
        });
        r(wn), wn.transformFlowSeq;
        var Fn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createMapping = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('mapping', e)),
                    Pt.createLeadingCommentAttachable(),
                  ),
                  t,
                ),
                { children: n },
              );
            });
        });
        r(Fn), Fn.createMapping;
        var kn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createMappingItem = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign({}, _t.createNode('mappingItem', e)),
                  Pt.createLeadingCommentAttachable(),
                ),
                { children: [t, n] },
              );
            });
        });
        r(kn), kn.createMappingItem;
        var Tn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformMap = function(e, t) {
              var n = e.cstNode;
              n.items
                .filter(function(e) {
                  return 'MAP_KEY' === e.type || 'MAP_VALUE' === e.type;
                })
                .forEach(function(e) {
                  return en.extractPropComments(e, t);
                });
              var r = (function(e) {
                  for (
                    var t = [], n = vn.createSlicer(e, 0), r = !1, i = 0;
                    i < e.length;
                    i++
                  )
                    'MAP_VALUE' !== e[i].type
                      ? (r && t.push(n(i)), (r = !0))
                      : (t.push(n(i + 1)), (r = !1));
                  return r && t.push(n(1 / 0)), t;
                })(gn.extractComments(n.items, t)),
                i = e.items.map(function(e, n) {
                  var i = r[n],
                    a =
                      'MAP_VALUE' === i[0].type
                        ? [null, i[0].range]
                        : [i[0].range, 1 === i.length ? null : i[1].range],
                    o = a[0],
                    s = a[1];
                  return bn.transformAstPair(e, t, kn.createMappingItem, o, s);
                });
              return Fn.createMapping(
                rn.createPosition(
                  i[0].position.start,
                  sn.getLast(i).position.end,
                ),
                t.transformContent(e),
                i,
              );
            });
        });
        r(Tn), Tn.transformMap;
        var _n = i(function(e, t) {
          (t.__esModule = !0),
            (t.createPlain = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('plain', e)),
                    Lt.createCommentAttachable(),
                  ),
                  t,
                ),
                { value: n },
              );
            });
        });
        r(_n), _n.createPlain;
        var On = i(function(e, t) {
          (t.__esModule = !0),
            (t.findLastCharIndex = function(e, t, n) {
              for (var r = t; r >= 0; r--) if (n.test(e[r])) return r;
              return -1;
            });
        });
        r(On), On.findLastCharIndex;
        var Nn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformPlain = function(e, t) {
              var n = e.cstNode;
              return _n.createPlain(
                t.transformRange({
                  origStart: n.valueRange.origStart,
                  origEnd:
                    On.findLastCharIndex(
                      t.text,
                      n.valueRange.origEnd - 1,
                      /\S/,
                    ) + 1,
                }),
                t.transformContent(e),
                n.strValue,
              );
            });
        });
        r(Nn), Nn.transformPlain;
        var Bn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createQuoteDouble = function(e) {
              return Nt.__assign(Nt.__assign({}, e), { type: 'quoteDouble' });
            });
        });
        r(Bn), Bn.createQuoteDouble;
        var In = i(function(e, t) {
          (t.__esModule = !0),
            (t.createQuoteValue = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('quoteValue', e)),
                    t,
                  ),
                  Lt.createCommentAttachable(),
                ),
                { value: n },
              );
            });
        });
        r(In), In.createQuoteValue;
        var Pn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformAstQuoteValue = function(e, t) {
              var n = e.cstNode;
              return In.createQuoteValue(
                t.transformRange(n.valueRange),
                t.transformContent(e),
                n.strValue,
              );
            });
        });
        r(Pn), Pn.transformAstQuoteValue;
        var Mn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformQuoteDouble = function(e, t) {
              return Bn.createQuoteDouble(Pn.transformAstQuoteValue(e, t));
            });
        });
        r(Mn), Mn.transformQuoteDouble;
        var Ln = i(function(e, t) {
          (t.__esModule = !0),
            (t.createQuoteSingle = function(e) {
              return Nt.__assign(Nt.__assign({}, e), { type: 'quoteSingle' });
            });
        });
        r(Ln), Ln.createQuoteSingle;
        var Rn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformQuoteSingle = function(e, t) {
              return Ln.createQuoteSingle(Pn.transformAstQuoteValue(e, t));
            });
        });
        r(Rn), Rn.transformQuoteSingle;
        var jn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createSequence = function(e, t, n) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign(
                      Nt.__assign({}, _t.createNode('sequence', e)),
                      Pt.createLeadingCommentAttachable(),
                    ),
                    an.createEndCommentAttachable(),
                  ),
                  t,
                ),
                { children: n },
              );
            });
        });
        r(jn), jn.createSequence;
        var Un = i(function(e, t) {
          (t.__esModule = !0),
            (t.createSequenceItem = function(e, t) {
              return Nt.__assign(
                Nt.__assign(
                  Nt.__assign(
                    Nt.__assign({}, _t.createNode('sequenceItem', e)),
                    Lt.createCommentAttachable(),
                  ),
                  an.createEndCommentAttachable(),
                ),
                { children: t ? [t] : [] },
              );
            });
        });
        r(Un), Un.createSequenceItem;
        var Vn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformSeq = function(e, t) {
              var n = gn
                .extractComments(e.cstNode.items, t)
                .map(function(n, r) {
                  en.extractPropComments(n, t);
                  var i = t.transformNode(e.items[r]);
                  return Un.createSequenceItem(
                    rn.createPosition(
                      t.transformOffset(n.valueRange.origStart),
                      null === i
                        ? t.transformOffset(n.valueRange.origStart + 1)
                        : i.position.end,
                    ),
                    i,
                  );
                });
              return jn.createSequence(
                rn.createPosition(
                  n[0].position.start,
                  sn.getLast(n).position.end,
                ),
                t.transformContent(e),
                n,
              );
            });
        });
        r(Vn), Vn.transformSeq;
        var Wn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformNode = function(e, t) {
              if (null === e) return null;
              switch (e.type) {
                case 'ALIAS':
                  return jt.transformAlias(e, t);
                case 'BLOCK_FOLDED':
                  return Ht.transformBlockFolded(e, t);
                case 'BLOCK_LITERAL':
                  return Gt.transformBlockLiteral(e, t);
                case 'COMMENT':
                  return Qt.transformComment(e, t);
                case 'DIRECTIVE':
                  return tn.transformDirective(e, t);
                case 'DOCUMENT':
                  return fn.transformDocument(e, t);
                case 'FLOW_MAP':
                  return xn.transformFlowMap(e, t);
                case 'FLOW_SEQ':
                  return wn.transformFlowSeq(e, t);
                case 'MAP':
                  return Tn.transformMap(e, t);
                case 'PLAIN':
                  return Nn.transformPlain(e, t);
                case 'QUOTE_DOUBLE':
                  return Mn.transformQuoteDouble(e, t);
                case 'QUOTE_SINGLE':
                  return Rn.transformQuoteSingle(e, t);
                case 'SEQ':
                  return Vn.transformSeq(e, t);
                default:
                  throw new Error('Unexpected node type ' + e.type);
              }
            });
        });
        r(Wn), Wn.transformNode;
        var $n = i(function(e, t) {
          (t.__esModule = !0),
            (t.createError = function(e, t, n) {
              var r = new SyntaxError(e);
              return (
                (r.name = 'YAMLSyntaxError'),
                (r.source = t),
                (r.position = n),
                r
              );
            });
        });
        r($n), $n.createError;
        var qn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformError = function(e, t) {
              var n = e.source.range || e.source.valueRange;
              return $n.createError(e.message, t.text, t.transformRange(n));
            });
        });
        r(qn), qn.transformError;
        var Yn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createPoint = function(e, t, n) {
              return { offset: e, line: t, column: n };
            });
        });
        r(Yn), Yn.createPoint;
        var Jn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformOffset = function(e, t) {
              e < 0 ? (e = 0) : e > t.text.length && (e = t.text.length);
              var n = t.locator.locationForIndex(e);
              return Yn.createPoint(e, n.line + 1, n.column + 1);
            });
        });
        r(Jn), Jn.transformOffset;
        var Kn = i(function(e, t) {
          (t.__esModule = !0),
            (t.transformRange = function(e, t) {
              return rn.createPosition(
                t.transformOffset(e.origStart),
                t.transformOffset(e.origEnd),
              );
            });
        });
        r(Kn), Kn.transformRange;
        var zn = i(function(e, t) {
          (t.__esModule = !0),
            (t.addOrigRange = function(e) {
              if (!e.setOrigRanges()) {
                var t = function(e) {
                  return (function(e) {
                    return 'number' == typeof e.start;
                  })(e)
                    ? ((e.origStart = e.start), (e.origEnd = e.end), !0)
                    : (function(e) {
                        return 'number' == typeof e.offset;
                      })(e)
                    ? ((e.origOffset = e.offset), !0)
                    : void 0;
                };
                e.forEach(function(e) {
                  return (function e(t, n) {
                    if (t && 'object' === a(t) && !0 !== n(t))
                      for (var r = 0, i = Object.keys(t); r < i.length; r++) {
                        var o = i[r];
                        if ('context' !== o && 'error' !== o) {
                          var s = t[o];
                          Array.isArray(s)
                            ? s.forEach(function(t) {
                                return e(t, n);
                              })
                            : e(s, n);
                        }
                      }
                  })(e, t);
                });
              }
            });
        });
        r(zn), zn.addOrigRange;
        var Hn = i(function(e, t) {
          (t.__esModule = !0),
            (t.removeFakeNodes = function e(t) {
              if ('children' in t) {
                if (1 === t.children.length) {
                  var n = t.children[0];
                  if (
                    'plain' === n.type &&
                    null === n.tag &&
                    null === n.anchor &&
                    '' === n.value
                  )
                    return t.children.splice(0, 1), t;
                }
                t.children.forEach(e);
              }
              return t;
            });
        });
        r(Hn), Hn.removeFakeNodes;
        var Xn = i(function(e, t) {
          (t.__esModule = !0),
            (t.createUpdater = function(e, t, n, r) {
              var i = t(e);
              return function(t) {
                r(i, t) && n(e, (i = t));
              };
            });
        });
        r(Xn), Xn.createUpdater;
        var Gn = i(function(e, t) {
          function n(e) {
            return e.start;
          }
          function r(e, t) {
            e.start = t;
          }
          function i(e) {
            return e.end;
          }
          function a(e, t) {
            e.end = t;
          }
          function o(e, t) {
            return t.offset < e.offset;
          }
          function s(e, t) {
            return t.offset > e.offset;
          }
          (t.__esModule = !0),
            (t.updatePositions = function e(t) {
              if (null !== t && 'children' in t) {
                var u = t.children;
                if ((u.forEach(e), 'document' === t.type)) {
                  var c = t.children,
                    l = c[0],
                    p = c[1];
                  l.position.start.offset === l.position.end.offset
                    ? (l.position.start = l.position.end = p.position.start)
                    : p.position.start.offset === p.position.end.offset &&
                      (p.position.start = p.position.end = l.position.end);
                }
                var f = Xn.createUpdater(t.position, n, r, o),
                  h = Xn.createUpdater(t.position, i, a, s);
                'endComments' in t &&
                  0 !== t.endComments.length &&
                  (f(t.endComments[0].position.start),
                  h(sn.getLast(t.endComments).position.end));
                var d = u.filter(function(e) {
                  return null !== e;
                });
                if (0 !== d.length) {
                  var m = d[0],
                    g = sn.getLast(d);
                  f(m.position.start),
                    h(g.position.end),
                    'leadingComments' in m &&
                      0 !== m.leadingComments.length &&
                      f(m.leadingComments[0].position.start),
                    'tag' in m && m.tag && f(m.tag.position.start),
                    'anchor' in m && m.anchor && f(m.anchor.position.start),
                    'trailingComment' in g &&
                      g.trailingComment &&
                      h(g.trailingComment.position.end);
                }
              }
            });
        });
        r(Gn), Gn.updatePositions;
        var Qn = i(function(e, t) {
          (t.__esModule = !0),
            (t.parse = function(e) {
              var t = wt.parseCST(e);
              zn.addOrigRange(t);
              var n = t.map(function(e) {
                  return new wt.Document({ merge: !0, keepCstNodes: !0 }).parse(
                    e,
                  );
                }),
                r = [],
                i = {
                  text: e,
                  locator: new F.default(e),
                  comments: r,
                  transformOffset: function(e) {
                    return Jn.transformOffset(e, i);
                  },
                  transformRange: function(e) {
                    return Kn.transformRange(e, i);
                  },
                  transformNode: function(e) {
                    return Wn.transformNode(e, i);
                  },
                  transformContent: function(e) {
                    return Kt.transformContent(e, i);
                  },
                },
                a = n.find(function(e) {
                  return 0 !== e.errors.length;
                });
              if (a) throw qn.transformError(a.errors[0], i);
              n.forEach(function(e) {
                return It.removeCstBlankLine(e.cstNode);
              });
              var o = Bt.createRoot(
                i.transformRange({ origStart: 0, origEnd: i.text.length }),
                n.map(i.transformNode),
                r,
              );
              return (
                Tt.attachComments(o),
                Gn.updatePositions(o),
                Hn.removeFakeNodes(o),
                o
              );
            });
        });
        r(Qn), Qn.parse;
        var Zn = i(function(e, t) {
          (t.__esModule = !0), Nt.__exportStar(Qn, t);
        });
        r(Zn);
        var er = {
            parsers: {
              yaml: {
                astFormat: 'yaml',
                parse: function(e) {
                  try {
                    var t = Zn.parse(e);
                    return delete t.comments, t;
                  } catch (e) {
                    throw e && e.position
                      ? (function(e, t) {
                          var n = new SyntaxError(
                            e +
                              ' (' +
                              t.start.line +
                              ':' +
                              t.start.column +
                              ')',
                          );
                          return (n.loc = t), n;
                        })(e.message, e.position)
                      : e;
                  }
                },
                hasPragma: function(e) {
                  return /^\s*#[^\n\S]*@(prettier|format)\s*?(\n|$)/.test(e);
                },
                locStart: function(e) {
                  return e.position.start.offset;
                },
                locEnd: function(e) {
                  return e.position.end.offset;
                },
              },
            },
          },
          tr = er.parsers;
        (t.default = er),
          (t.parsers = tr),
          Object.defineProperty(t, '__esModule', { value: !0 });
      })(t);
    }.call(this, n(7)));
  },
  ,
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(20),
      i = n(12),
      a = n(16),
      o = n(33),
      s = n(22),
      u = n(25);
    var c = Object.prototype.hasOwnProperty,
      l = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,
      p = /[\x85\u2028\u2029]/,
      f = /[,\[\]\{\}]/,
      h = /^(?:!|!!|![a-z\-]+!)$/i,
      d = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
    function m(e) {
      return 10 === e || 13 === e;
    }
    function g(e) {
      return 9 === e || 32 === e;
    }
    function y(e) {
      return 9 === e || 32 === e || 10 === e || 13 === e;
    }
    function v(e) {
      return 44 === e || 91 === e || 93 === e || 123 === e || 125 === e;
    }
    function D(e) {
      var t;
      return 48 <= e && e <= 57
        ? e - 48
        : 97 <= (t = 32 | e) && t <= 102
        ? t - 97 + 10
        : -1;
    }
    function E(e) {
      return 120 === e ? 2 : 117 === e ? 4 : 85 === e ? 8 : 0;
    }
    function C(e) {
      return 48 <= e && e <= 57 ? e - 48 : -1;
    }
    function b(e) {
      return e <= 65535
        ? String.fromCharCode(e)
        : String.fromCharCode(
            55296 + ((e - 65536) >> 10),
            56320 + ((e - 65536) & 1023),
          );
    }
    for (
      var x,
        A = new Array(256),
        S = new Array(256),
        w = new Array(256),
        F = new Array(256),
        k = 0;
      k < 256;
      k++
    )
      (F[k] = S[k] =
        48 === (x = k)
          ? '\0'
          : 97 === x
          ? ''
          : 98 === x
          ? '\b'
          : 116 === x || 9 === x
          ? '\t'
          : 110 === x
          ? '\n'
          : 118 === x
          ? '\v'
          : 102 === x
          ? '\f'
          : 114 === x
          ? '\r'
          : 101 === x
          ? ''
          : 32 === x
          ? ' '
          : 34 === x
          ? '"'
          : 47 === x
          ? '/'
          : 92 === x
          ? '\\'
          : 78 === x
          ? ''
          : 95 === x
          ? ' '
          : 76 === x
          ? '\u2028'
          : 80 === x
          ? '\u2029'
          : ''),
        (A[k] = S[k] ? 1 : 0),
        (w[k] = 1),
        A[k] || (F[k] = '\\' + String.fromCharCode(k));
    class T {
      constructor(e, t) {
        (this.errorMap = {}),
          (this.errors = []),
          (this.lines = []),
          (this.input = e),
          (this.filename = t.filename || null),
          (this.schema = t.schema || u),
          (this.onWarning = t.onWarning || null),
          (this.legacy = t.legacy || !1),
          (this.allowAnyEscape = t.allowAnyEscape || !1),
          (this.ignoreDuplicateKeys = t.ignoreDuplicateKeys || !1),
          (this.implicitTypes = this.schema.compiledImplicit),
          (this.typeMap = this.schema.compiledTypeMap),
          (this.length = e.length),
          (this.position = 0),
          (this.line = 0),
          (this.lineStart = 0),
          (this.lineIndent = 0),
          (this.documents = []);
      }
    }
    function _(e, t, n = !1) {
      return new a(
        t,
        new o(
          e.filename,
          e.input,
          e.position,
          e.line,
          e.position - e.lineStart,
        ),
        n,
      );
    }
    function O(e, t, n, r = !1, i = !1) {
      var s = (function(e, t) {
        for (var n, r = 0; r < e.lines.length && !(e.lines[r].start > t); r++)
          n = e.lines[r];
        if (!n) return { start: 0, line: 0 };
        return n;
      })(e, t);
      if (s) {
        var u = n + t;
        if (!e.errorMap[u]) {
          var c = new o(e.filename, e.input, t, s.line, t - s.start);
          i && (c.toLineEnd = !0);
          var l = new a(n, c, r);
          e.errors.push(l);
        }
      }
    }
    function N(e, t) {
      var n = _(e, t),
        r = n.message + n.mark.position;
      if (!e.errorMap[r]) {
        e.errors.push(n), (e.errorMap[r] = 1);
        for (var i = e.position; ; ) {
          if (e.position >= e.input.length - 1) return;
          var a = e.input.charAt(e.position);
          if ('\n' == a)
            return e.position--, void (e.position == i && (e.position += 1));
          if ('\r' == a)
            return e.position--, void (e.position == i && (e.position += 1));
          e.position++;
        }
      }
    }
    function B(e, t) {
      var n = _(e, t);
      e.onWarning && e.onWarning.call(null, n);
    }
    var I = {
      YAML: function(e, t, n) {
        var r, i, a;
        null !== e.version && N(e, 'duplication of %YAML directive'),
          1 !== n.length && N(e, 'YAML directive accepts exactly one argument'),
          null === (r = /^([0-9]+)\.([0-9]+)$/.exec(n[0])) &&
            N(e, 'ill-formed argument of the YAML directive'),
          (i = parseInt(r[1], 10)),
          (a = parseInt(r[2], 10)),
          1 !== i &&
            N(e, 'found incompatible YAML document (version 1.2 is required)'),
          (e.version = n[0]),
          (e.checkLineBreaks = a < 2),
          2 !== a &&
            N(e, 'found incompatible YAML document (version 1.2 is required)');
      },
      TAG: function(e, t, n) {
        var r, i;
        2 !== n.length && N(e, 'TAG directive accepts exactly two arguments'),
          (r = n[0]),
          (i = n[1]),
          h.test(r) ||
            N(e, 'ill-formed tag handle (first argument) of the TAG directive'),
          c.call(e.tagMap, r) &&
            N(
              e,
              'there is a previously declared suffix for "' +
                r +
                '" tag handle',
            ),
          d.test(i) ||
            N(
              e,
              'ill-formed tag prefix (second argument) of the TAG directive',
            ),
          (e.tagMap[r] = i);
      },
    };
    function P(e, t, n, r) {
      var i,
        a,
        o,
        s,
        u = e.result;
      if ((-1 == u.startPosition && (u.startPosition = t), t <= n)) {
        if (((s = e.input.slice(t, n)), r))
          for (i = 0, a = s.length; i < a; i += 1)
            9 === (o = s.charCodeAt(i)) ||
              (32 <= o && o <= 1114111) ||
              N(e, 'expected valid JSON character');
        else l.test(s) && N(e, 'the stream contains non-printable characters');
        (u.value += s), (u.endPosition = n);
      }
    }
    function M(e, t, n, i, a) {
      if (null != i) {
        null === t &&
          (t = {
            startPosition: i.startPosition,
            endPosition: a.endPosition,
            parent: null,
            errors: [],
            mappings: [],
            kind: r.Kind.MAP,
          });
        var o = r.newMapping(i, a);
        return (
          (o.parent = t),
          (i.parent = o),
          null != a && (a.parent = o),
          !e.ignoreDuplicateKeys &&
            t.mappings.forEach(t => {
              t.key &&
                t.key.value === (o.key && o.key.value) &&
                (O(e, o.key.startPosition, 'duplicate key'),
                O(e, t.key.startPosition, 'duplicate key'));
            }),
          t.mappings.push(o),
          (t.endPosition = a ? a.endPosition : i.endPosition + 1),
          t
        );
      }
    }
    function L(e) {
      var t;
      10 === (t = e.input.charCodeAt(e.position))
        ? e.position++
        : 13 === t
        ? (e.position++, 10 === e.input.charCodeAt(e.position) && e.position++)
        : N(e, 'a line break is expected'),
        (e.line += 1),
        (e.lineStart = e.position),
        e.lines.push({ start: e.lineStart, line: e.line });
    }
    function R(e, t, n) {
      for (var r = 0, i = e.input.charCodeAt(e.position); 0 !== i; ) {
        for (; g(i); )
          9 === i &&
            e.errors.push(
              _(e, 'Using tabs can lead to unpredictable results', !0),
            ),
            (i = e.input.charCodeAt(++e.position));
        if (t && 35 === i)
          do {
            i = e.input.charCodeAt(++e.position);
          } while (10 !== i && 13 !== i && 0 !== i);
        if (!m(i)) break;
        for (
          L(e), i = e.input.charCodeAt(e.position), r++, e.lineIndent = 0;
          32 === i;

        )
          e.lineIndent++, (i = e.input.charCodeAt(++e.position));
      }
      return (
        -1 !== n &&
          0 !== r &&
          e.lineIndent < n &&
          B(e, 'deficient indentation'),
        r
      );
    }
    function j(e) {
      var t,
        n = e.position;
      return !(
        (45 !== (t = e.input.charCodeAt(n)) && 46 !== t) ||
        e.input.charCodeAt(n + 1) !== t ||
        e.input.charCodeAt(n + 2) !== t ||
        ((n += 3), 0 !== (t = e.input.charCodeAt(n)) && !y(t))
      );
    }
    function U(e, t, n) {
      1 === n ? (t.value += ' ') : n > 1 && (t.value += i.repeat('\n', n - 1));
    }
    function V(e, t) {
      var n,
        i,
        a = e.tag,
        o = e.anchor,
        s = r.newItems(),
        u = !1;
      for (
        null !== e.anchor &&
          ((s.anchorId = e.anchor), (e.anchorMap[e.anchor] = s)),
          s.startPosition = e.position,
          i = e.input.charCodeAt(e.position);
        0 !== i && 45 === i && y(e.input.charCodeAt(e.position + 1));

      )
        if (((u = !0), e.position++, R(e, !0, -1) && e.lineIndent <= t))
          s.items.push(null), (i = e.input.charCodeAt(e.position));
        else if (
          ((n = e.line),
          q(e, t, 3, !1, !0),
          e.result && ((e.result.parent = s), s.items.push(e.result)),
          R(e, !0, -1),
          (i = e.input.charCodeAt(e.position)),
          (e.line === n || e.lineIndent > t) && 0 !== i)
        )
          N(e, 'bad indentation of a sequence entry');
        else if (e.lineIndent < t) break;
      return (
        (s.endPosition = e.position),
        !!u &&
          ((e.tag = a),
          (e.anchor = o),
          (e.kind = 'sequence'),
          (e.result = s),
          (s.endPosition = e.position),
          !0)
      );
    }
    function W(e) {
      var t,
        n,
        r,
        i,
        a = !1,
        o = !1;
      if (33 !== (i = e.input.charCodeAt(e.position))) return !1;
      if (
        (null !== e.tag && N(e, 'duplication of a tag property'),
        60 === (i = e.input.charCodeAt(++e.position))
          ? ((a = !0), (i = e.input.charCodeAt(++e.position)))
          : 33 === i
          ? ((o = !0), (n = '!!'), (i = e.input.charCodeAt(++e.position)))
          : (n = '!'),
        (t = e.position),
        a)
      ) {
        do {
          i = e.input.charCodeAt(++e.position);
        } while (0 !== i && 62 !== i);
        e.position < e.length
          ? ((r = e.input.slice(t, e.position)),
            (i = e.input.charCodeAt(++e.position)))
          : N(e, 'unexpected end of the stream within a verbatim tag');
      } else {
        for (; 0 !== i && !y(i); )
          33 === i &&
            (o
              ? N(e, 'tag suffix cannot contain exclamation marks')
              : ((n = e.input.slice(t - 1, e.position + 1)),
                h.test(n) ||
                  N(e, 'named tag handle cannot contain such characters'),
                (o = !0),
                (t = e.position + 1))),
            (i = e.input.charCodeAt(++e.position));
        (r = e.input.slice(t, e.position)),
          f.test(r) &&
            N(e, 'tag suffix cannot contain flow indicator characters');
      }
      return (
        r &&
          !d.test(r) &&
          N(e, 'tag name cannot contain such characters: ' + r),
        a
          ? (e.tag = r)
          : c.call(e.tagMap, n)
          ? (e.tag = e.tagMap[n] + r)
          : '!' === n
          ? (e.tag = '!' + r)
          : '!!' === n
          ? (e.tag = 'tag:yaml.org,2002:' + r)
          : N(e, 'undeclared tag handle "' + n + '"'),
        !0
      );
    }
    function $(e) {
      var t, n;
      if (38 !== (n = e.input.charCodeAt(e.position))) return !1;
      for (
        null !== e.anchor && N(e, 'duplication of an anchor property'),
          n = e.input.charCodeAt(++e.position),
          t = e.position;
        0 !== n && !y(n) && !v(n);

      )
        n = e.input.charCodeAt(++e.position);
      return (
        e.position === t &&
          N(e, 'name of an anchor node must contain at least one character'),
        (e.anchor = e.input.slice(t, e.position)),
        !0
      );
    }
    function q(e, t, n, a, o) {
      var s,
        u,
        l,
        p,
        f,
        h,
        d,
        x,
        k = 1,
        T = !1,
        _ = !1;
      (e.tag = null),
        (e.anchor = null),
        (e.kind = null),
        (e.result = null),
        (s = u = l = 4 === n || 3 === n),
        a &&
          R(e, !0, -1) &&
          ((T = !0),
          e.lineIndent > t
            ? (k = 1)
            : e.lineIndent === t
            ? (k = 0)
            : e.lineIndent < t && (k = -1));
      let B = e.position;
      e.position, e.lineStart;
      if (1 === k)
        for (; W(e) || $(e); )
          R(e, !0, -1)
            ? ((T = !0),
              (l = s),
              e.lineIndent > t
                ? (k = 1)
                : e.lineIndent === t
                ? (k = 0)
                : e.lineIndent < t && (k = -1))
            : (l = !1);
      if (
        (l && (l = T || o),
        (1 !== k && 4 !== n) ||
          ((d = 1 === n || 2 === n ? t : t + 1),
          (x = e.position - e.lineStart),
          1 === k
            ? (l &&
                (V(e, x) ||
                  (function(e, t, n) {
                    var i,
                      a,
                      o,
                      s,
                      u = e.tag,
                      c = e.anchor,
                      l = r.newMap(),
                      p = null,
                      f = null,
                      h = !1,
                      d = !1;
                    for (
                      l.startPosition = e.position,
                        null !== e.anchor &&
                          ((l.anchorId = e.anchor),
                          (e.anchorMap[e.anchor] = l)),
                        s = e.input.charCodeAt(e.position);
                      0 !== s;

                    ) {
                      if (
                        ((i = e.input.charCodeAt(e.position + 1)),
                        (o = e.line),
                        (63 !== s && 58 !== s) || !y(i))
                      ) {
                        if (!q(e, n, 2, !1, !0)) break;
                        if (e.line === o) {
                          for (s = e.input.charCodeAt(e.position); g(s); )
                            s = e.input.charCodeAt(++e.position);
                          if (58 === s)
                            y((s = e.input.charCodeAt(++e.position))) ||
                              N(
                                e,
                                'a whitespace character is expected after the key-value separator within a block mapping',
                              ),
                              h && (M(e, l, 0, p, null), (p = f = null)),
                              (d = !0),
                              (h = !1),
                              (a = !1),
                              e.tag,
                              (p = e.result);
                          else {
                            if (e.position == e.lineStart && j(e)) break;
                            if (!d) return (e.tag = u), (e.anchor = c), !0;
                            N(
                              e,
                              'can not read an implicit mapping pair; a colon is missed',
                            );
                          }
                        } else {
                          if (!d) return (e.tag = u), (e.anchor = c), !0;
                          for (
                            N(
                              e,
                              'can not read a block mapping entry; a multiline key may not be an implicit key',
                            );
                            e.position > 0;

                          )
                            if (m((s = e.input.charCodeAt(--e.position)))) {
                              e.position++;
                              break;
                            }
                        }
                      } else
                        63 === s
                          ? (h && (M(e, l, 0, p, null), (p = f = null)),
                            (d = !0),
                            (h = !0),
                            (a = !0))
                          : h
                          ? ((h = !1), (a = !0))
                          : N(
                              e,
                              'incomplete explicit mapping pair; a key node is missed',
                            ),
                          (e.position += 1),
                          (s = i);
                      if (
                        ((e.line === o || e.lineIndent > t) &&
                          (q(e, t, 4, !0, a) &&
                            (h ? (p = e.result) : (f = e.result)),
                          h || (M(e, l, 0, p, f), (p = f = null)),
                          R(e, !0, -1),
                          (s = e.input.charCodeAt(e.position))),
                        e.lineIndent > t && 0 !== s)
                      )
                        N(e, 'bad indentation of a mapping entry');
                      else if (e.lineIndent < t) break;
                    }
                    return (
                      h && M(e, l, 0, p, null),
                      d &&
                        ((e.tag = u),
                        (e.anchor = c),
                        (e.kind = 'mapping'),
                        (e.result = l)),
                      d
                    );
                  })(e, x, d))) ||
              (function(e, t) {
                var n,
                  i,
                  a,
                  o,
                  s,
                  u,
                  c,
                  l,
                  p,
                  f = !0,
                  h = e.tag,
                  d = e.anchor;
                if (91 === (p = e.input.charCodeAt(e.position)))
                  (a = 93),
                    (u = !1),
                    ((i = r.newItems()).startPosition = e.position);
                else {
                  if (123 !== p) return !1;
                  (a = 125),
                    (u = !0),
                    ((i = r.newMap()).startPosition = e.position);
                }
                for (
                  null !== e.anchor &&
                    ((i.anchorId = e.anchor), (e.anchorMap[e.anchor] = i)),
                    p = e.input.charCodeAt(++e.position);
                  0 !== p;

                ) {
                  if ((R(e, !0, t), (p = e.input.charCodeAt(e.position)) === a))
                    return (
                      e.position++,
                      (e.tag = h),
                      (e.anchor = d),
                      (e.kind = u ? 'mapping' : 'sequence'),
                      (e.result = i),
                      (i.endPosition = e.position),
                      !0
                    );
                  if (!f) {
                    var m = e.position;
                    N(e, 'missed comma between flow collection entries'),
                      (e.position = m + 1);
                  }
                  if (
                    ((c = l = null),
                    (o = s = !1),
                    63 === p &&
                      y(e.input.charCodeAt(e.position + 1)) &&
                      ((o = s = !0), e.position++, R(e, !0, t)),
                    (n = e.line),
                    q(e, t, 1, !1, !0),
                    e.tag,
                    (c = e.result),
                    R(e, !0, t),
                    (p = e.input.charCodeAt(e.position)),
                    (!s && e.line !== n) ||
                      58 !== p ||
                      ((o = !0),
                      (p = e.input.charCodeAt(++e.position)),
                      R(e, !0, t),
                      q(e, t, 1, !1, !0),
                      (l = e.result)),
                    u)
                  )
                    M(e, i, 0, c, l);
                  else if (o) {
                    var g = M(e, null, 0, c, l);
                    (g.parent = i), i.items.push(g);
                  } else c && (c.parent = i), i.items.push(c);
                  (i.endPosition = e.position + 1),
                    R(e, !0, t),
                    44 === (p = e.input.charCodeAt(e.position))
                      ? ((f = !0), (p = e.input.charCodeAt(++e.position)))
                      : (f = !1);
                }
                N(e, 'unexpected end of the stream within a flow collection');
              })(e, d)
              ? (_ = !0)
              : ((u &&
                  (function(e, t) {
                    var n,
                      a,
                      o,
                      s,
                      u = 1,
                      c = !1,
                      l = t,
                      p = 0,
                      f = !1;
                    if (124 === (s = e.input.charCodeAt(e.position))) a = !1;
                    else {
                      if (62 !== s) return !1;
                      a = !0;
                    }
                    var h = r.newScalar();
                    for (
                      e.kind = 'scalar',
                        e.result = h,
                        h.startPosition = e.position;
                      0 !== s;

                    )
                      if (
                        43 === (s = e.input.charCodeAt(++e.position)) ||
                        45 === s
                      )
                        1 === u
                          ? (u = 43 === s ? 3 : 2)
                          : N(e, 'repeat of a chomping mode identifier');
                      else {
                        if (!((o = C(s)) >= 0)) break;
                        0 === o
                          ? N(
                              e,
                              'bad explicit indentation width of a block scalar; it cannot be less than one',
                            )
                          : c
                          ? N(e, 'repeat of an indentation width identifier')
                          : ((l = t + o - 1), (c = !0));
                      }
                    if (g(s)) {
                      do {
                        s = e.input.charCodeAt(++e.position);
                      } while (g(s));
                      if (35 === s)
                        do {
                          s = e.input.charCodeAt(++e.position);
                        } while (!m(s) && 0 !== s);
                    }
                    for (; 0 !== s; ) {
                      for (
                        L(e),
                          e.lineIndent = 0,
                          s = e.input.charCodeAt(e.position);
                        (!c || e.lineIndent < l) && 32 === s;

                      )
                        e.lineIndent++, (s = e.input.charCodeAt(++e.position));
                      if ((!c && e.lineIndent > l && (l = e.lineIndent), m(s)))
                        p++;
                      else {
                        if (e.lineIndent < l) {
                          3 === u
                            ? (h.value += i.repeat('\n', p))
                            : 1 === u && c && (h.value += '\n');
                          break;
                        }
                        for (
                          a
                            ? g(s)
                              ? ((f = !0), (h.value += i.repeat('\n', p + 1)))
                              : f
                              ? ((f = !1), (h.value += i.repeat('\n', p + 1)))
                              : 0 === p
                              ? c && (h.value += ' ')
                              : (h.value += i.repeat('\n', p))
                            : c && (h.value += i.repeat('\n', p + 1)),
                            c = !0,
                            p = 0,
                            n = e.position;
                          !m(s) && 0 !== s;

                        )
                          s = e.input.charCodeAt(++e.position);
                        P(e, n, e.position, !1);
                      }
                    }
                    h.endPosition = e.position;
                    for (var d = e.position - 1; ; ) {
                      var y = e.input[d];
                      if ('\r' == y || '\n' == y) {
                        0;
                        break;
                      }
                      if (' ' != y && '\t' != y) break;
                      d--;
                    }
                    return (
                      (h.endPosition = d),
                      (h.rawValue = e.input.substring(
                        h.startPosition,
                        h.endPosition,
                      )),
                      !0
                    );
                  })(e, d)) ||
                (function(e, t) {
                  var n, i, a;
                  if (39 !== (n = e.input.charCodeAt(e.position))) return !1;
                  var o = r.newScalar();
                  for (
                    o.singleQuoted = !0,
                      e.kind = 'scalar',
                      e.result = o,
                      o.startPosition = e.position,
                      e.position++,
                      i = a = e.position;
                    0 !== (n = e.input.charCodeAt(e.position));

                  )
                    if (39 === n) {
                      if (
                        (P(e, i, e.position, !0),
                        (n = e.input.charCodeAt(++e.position)),
                        (o.endPosition = e.position),
                        39 !== n)
                      )
                        return !0;
                      (i = a = e.position), e.position++;
                    } else
                      m(n)
                        ? (P(e, i, a, !0),
                          U(0, o, R(e, !1, t)),
                          (i = a = e.position))
                        : e.position === e.lineStart && j(e)
                        ? N(
                            e,
                            'unexpected end of the document within a single quoted scalar',
                          )
                        : (e.position++,
                          (a = e.position),
                          (o.endPosition = e.position));
                  N(
                    e,
                    'unexpected end of the stream within a single quoted scalar',
                  );
                })(e, d) ||
                (function(e, t) {
                  var n, i, a, o, s, u;
                  if (34 !== (u = e.input.charCodeAt(e.position))) return !1;
                  e.kind = 'scalar';
                  var c = r.newScalar();
                  for (
                    c.doubleQuoted = !0,
                      e.result = c,
                      c.startPosition = e.position,
                      e.position++,
                      n = i = e.position;
                    0 !== (u = e.input.charCodeAt(e.position));

                  ) {
                    if (34 === u)
                      return (
                        P(e, n, e.position, !0),
                        e.position++,
                        (c.endPosition = e.position),
                        (c.rawValue = e.input.substring(
                          c.startPosition,
                          c.endPosition,
                        )),
                        !0
                      );
                    if (92 === u) {
                      if (
                        (P(e, n, e.position, !0),
                        m((u = e.input.charCodeAt(++e.position))))
                      )
                        R(e, !1, t);
                      else if (u < 256 && (e.allowAnyEscape ? w[u] : A[u]))
                        (c.value += e.allowAnyEscape ? F[u] : S[u]),
                          e.position++;
                      else if ((s = E(u)) > 0) {
                        for (a = s, o = 0; a > 0; a--)
                          (s = D((u = e.input.charCodeAt(++e.position)))) >= 0
                            ? (o = (o << 4) + s)
                            : N(e, 'expected hexadecimal character');
                        (c.value += b(o)), e.position++;
                      } else N(e, 'unknown escape sequence');
                      n = i = e.position;
                    } else
                      m(u)
                        ? (P(e, n, i, !0),
                          U(0, c, R(e, !1, t)),
                          (n = i = e.position))
                        : e.position === e.lineStart && j(e)
                        ? N(
                            e,
                            'unexpected end of the document within a double quoted scalar',
                          )
                        : (e.position++, (i = e.position));
                  }
                  N(
                    e,
                    'unexpected end of the stream within a double quoted scalar',
                  );
                })(e, d)
                  ? (_ = !0)
                  : !(function(e) {
                      var t, n, i;
                      if (
                        (e.length,
                        e.input,
                        42 !== (i = e.input.charCodeAt(e.position)))
                      )
                        return !1;
                      for (
                        i = e.input.charCodeAt(++e.position), t = e.position;
                        0 !== i && !y(i) && !v(i);

                      )
                        i = e.input.charCodeAt(++e.position);
                      return (
                        e.position <= t &&
                          (N(
                            e,
                            'name of an alias node must contain at least one character',
                          ),
                          (e.position = t + 1)),
                        (n = e.input.slice(t, e.position)),
                        e.anchorMap.hasOwnProperty(n) ||
                          (N(e, 'unidentified alias "' + n + '"'),
                          e.position <= t && (e.position = t + 1)),
                        (e.result = r.newAnchorRef(
                          n,
                          t,
                          e.position,
                          e.anchorMap[n],
                        )),
                        R(e, !0, -1),
                        !0
                      );
                    })(e)
                  ? (function(e, t, n) {
                      var i,
                        a,
                        o,
                        s,
                        u,
                        c,
                        l,
                        p,
                        f = e.kind,
                        h = e.result,
                        d = r.newScalar();
                      if (
                        ((d.plainScalar = !0),
                        (e.result = d),
                        y((p = e.input.charCodeAt(e.position))) ||
                          v(p) ||
                          35 === p ||
                          38 === p ||
                          42 === p ||
                          33 === p ||
                          124 === p ||
                          62 === p ||
                          39 === p ||
                          34 === p ||
                          37 === p ||
                          64 === p ||
                          96 === p)
                      )
                        return !1;
                      if (
                        (63 === p || 45 === p) &&
                        (y((i = e.input.charCodeAt(e.position + 1))) ||
                          (n && v(i)))
                      )
                        return !1;
                      for (
                        e.kind = 'scalar', a = o = e.position, s = !1;
                        0 !== p;

                      ) {
                        if (58 === p) {
                          if (
                            y((i = e.input.charCodeAt(e.position + 1))) ||
                            (n && v(i))
                          )
                            break;
                        } else if (35 === p) {
                          if (y(e.input.charCodeAt(e.position - 1))) break;
                        } else {
                          if (
                            (e.position === e.lineStart && j(e)) ||
                            (n && v(p))
                          )
                            break;
                          if (m(p)) {
                            if (
                              ((u = e.line),
                              (c = e.lineStart),
                              (l = e.lineIndent),
                              R(e, !1, -1),
                              e.lineIndent >= t)
                            ) {
                              (s = !0), (p = e.input.charCodeAt(e.position));
                              continue;
                            }
                            (e.position = o),
                              (e.line = u),
                              (e.lineStart = c),
                              (e.lineIndent = l);
                            break;
                          }
                        }
                        if (
                          (s &&
                            (P(e, a, o, !1),
                            U(0, d, e.line - u),
                            (a = o = e.position),
                            (s = !1)),
                          g(p) || (o = e.position + 1),
                          (p = e.input.charCodeAt(++e.position)),
                          e.position >= e.input.length)
                        )
                          return !1;
                      }
                      return (
                        P(e, a, o, !1),
                        -1 != e.result.startPosition
                          ? ((d.rawValue = e.input.substring(
                              d.startPosition,
                              d.endPosition,
                            )),
                            !0)
                          : ((e.kind = f), (e.result = h), !1)
                      );
                    })(e, d, 1 === n) &&
                    ((_ = !0), null === e.tag && (e.tag = '?'))
                  : ((_ = !0),
                    (null === e.tag && null === e.anchor) ||
                      N(e, 'alias node should not have any properties')),
                null !== e.anchor &&
                  ((e.anchorMap[e.anchor] = e.result),
                  (e.result.anchorId = e.anchor)))
            : 0 === k && (_ = l && V(e, x))),
        null !== e.tag && '!' !== e.tag)
      )
        if ('!include' == e.tag)
          e.result ||
            ((e.result = r.newScalar()),
            (e.result.startPosition = e.position),
            (e.result.endPosition = e.position),
            N(e, '!include without value')),
            (e.result.kind = r.Kind.INCLUDE_REF);
        else if ('?' === e.tag)
          for (p = 0, f = e.implicitTypes.length; p < f; p += 1) {
            h = e.implicitTypes[p];
            var I = e.result.value;
            if (h.resolve(I)) {
              (e.result.valueObject = h.construct(e.result.value)),
                (e.tag = h.tag),
                null !== e.anchor &&
                  ((e.result.anchorId = e.anchor),
                  (e.anchorMap[e.anchor] = e.result));
              break;
            }
          }
        else
          c.call(e.typeMap, e.tag)
            ? ((h = e.typeMap[e.tag]),
              null !== e.result &&
                h.kind !== e.kind &&
                (!h.additionalKinds ||
                  (h.additionalKinds &&
                    -1 === h.additionalKinds.indexOf(e.kind))) &&
                N(
                  e,
                  'unacceptable node kind for !<' +
                    e.tag +
                    '> tag; it should be "' +
                    h.kind +
                    '", not "' +
                    e.kind +
                    '"',
                ),
              h.resolve(e.result)
                ? ((e.result = h.construct(e.result)),
                  null !== e.anchor &&
                    ((e.result.anchorId = e.anchor),
                    (e.anchorMap[e.anchor] = e.result)))
                : N(
                    e,
                    'cannot resolve a node with !<' + e.tag + '> explicit tag',
                  ))
            : O(e, B, 'unknown tag <' + e.tag + '>', !1, !0);
      return null !== e.tag || null !== e.anchor || _;
    }
    function Y(e) {
      var t,
        n,
        r,
        i,
        a = e.position,
        o = !1;
      for (
        e.version = null,
          e.checkLineBreaks = e.legacy,
          e.tagMap = {},
          e.anchorMap = {};
        0 !== (i = e.input.charCodeAt(e.position)) &&
        (R(e, !0, -1),
        (i = e.input.charCodeAt(e.position)),
        !(e.lineIndent > 0 || 37 !== i));

      ) {
        for (
          o = !0, i = e.input.charCodeAt(++e.position), t = e.position;
          0 !== i && !y(i);

        )
          i = e.input.charCodeAt(++e.position);
        for (
          r = [],
            (n = e.input.slice(t, e.position)).length < 1 &&
              N(
                e,
                'directive name must not be less than one character in length',
              );
          0 !== i;

        ) {
          for (; g(i); ) i = e.input.charCodeAt(++e.position);
          if (35 === i) {
            do {
              i = e.input.charCodeAt(++e.position);
            } while (0 !== i && !m(i));
            break;
          }
          if (m(i)) break;
          for (t = e.position; 0 !== i && !y(i); )
            i = e.input.charCodeAt(++e.position);
          r.push(e.input.slice(t, e.position));
        }
        0 !== i && L(e),
          c.call(I, n)
            ? I[n](e, n, r)
            : (B(e, 'unknown document directive "' + n + '"'), e.position++);
      }
      R(e, !0, -1),
        0 === e.lineIndent &&
        45 === e.input.charCodeAt(e.position) &&
        45 === e.input.charCodeAt(e.position + 1) &&
        45 === e.input.charCodeAt(e.position + 2)
          ? ((e.position += 3), R(e, !0, -1))
          : o && N(e, 'directives end mark is expected'),
        q(e, e.lineIndent - 1, 4, !1, !0),
        R(e, !0, -1),
        e.checkLineBreaks &&
          p.test(e.input.slice(a, e.position)) &&
          B(e, 'non-ASCII line breaks are interpreted as content'),
        e.documents.push(e.result),
        e.position === e.lineStart && j(e)
          ? 46 === e.input.charCodeAt(e.position) &&
            ((e.position += 3), R(e, !0, -1))
          : e.position < e.length - 1 &&
            N(e, 'end of the stream or a document separator is expected');
    }
    function J(e, t) {
      t = t || {};
      let n = (e = String(e)).length;
      0 !== n &&
        (10 !== e.charCodeAt(n - 1) &&
          13 !== e.charCodeAt(n - 1) &&
          (e += '\n'),
        65279 === e.charCodeAt(0) && (e = e.slice(1)));
      var r = new T(e, t);
      for (r.input += '\0'; 32 === r.input.charCodeAt(r.position); )
        (r.lineIndent += 1), (r.position += 1);
      for (; r.position < r.length - 1; ) {
        var i = r.position;
        if ((Y(r), r.position <= i))
          for (; r.position < r.length - 1; r.position++) {
            if ('\n' == r.input.charAt(r.position)) break;
          }
      }
      let a = r.documents,
        o = a.length;
      o > 0 && (a[o - 1].endPosition = n);
      for (let e of a)
        (e.errors = r.errors),
          e.startPosition > e.endPosition && (e.startPosition = e.endPosition);
      return a;
    }
    function K(e, t, n = {}) {
      var r,
        i,
        a = J(e, n);
      for (r = 0, i = a.length; r < i; r += 1) t(a[r]);
    }
    function z(e, t = {}) {
      var n = J(e, t);
      if (0 !== n.length) {
        if (1 === n.length) return n[0];
        var r = new a(
          'expected a single document in the stream, but found more',
        );
        return (
          (r.mark = new o('', '', 0, 0, 0)),
          (r.mark.position = n[0].endPosition),
          n[0].errors.push(r),
          n[0]
        );
      }
    }
    function H(e, t, n = {}) {
      K(e, t, i.extend({ schema: s }, n));
    }
    function X(e, t = {}) {
      return z(e, i.extend({ schema: s }, t));
    }
    (t.loadAll = K),
      (t.load = z),
      (t.safeLoadAll = H),
      (t.safeLoad = X),
      (e.exports.loadAll = K),
      (e.exports.load = z),
      (e.exports.safeLoadAll = H),
      (e.exports.safeLoad = X);
  },
  function(e, t, n) {
    'use strict';
    const r = n(12);
    e.exports = class {
      constructor(e, t, n, r, i) {
        (this.name = e),
          (this.buffer = t),
          (this.position = n),
          (this.line = r),
          (this.column = i);
      }
      getSnippet(e = 0, t = 75) {
        var n, i, a, o, s;
        if (!this.buffer) return null;
        for (
          e = e || 4, t = t || 75, n = '', i = this.position;
          i > 0 &&
          -1 === '\0\r\n\u2028\u2029'.indexOf(this.buffer.charAt(i - 1));

        )
          if (((i -= 1), this.position - i > t / 2 - 1)) {
            (n = ' ... '), (i += 5);
            break;
          }
        for (
          a = '', o = this.position;
          o < this.buffer.length &&
          -1 === '\0\r\n\u2028\u2029'.indexOf(this.buffer.charAt(o));

        )
          if ((o += 1) - this.position > t / 2 - 1) {
            (a = ' ... '), (o -= 5);
            break;
          }
        return (
          (s = this.buffer.slice(i, o)),
          r.repeat(' ', e) +
            n +
            s +
            a +
            '\n' +
            r.repeat(' ', e + this.position - i + n.length) +
            '^'
        );
      }
      toString(e = !0) {
        var t,
          n = '';
        return (
          this.name && (n += 'in "' + this.name + '" '),
          (n += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1)),
          e || ((t = this.getSnippet()) && (n += ':\n' + t)),
          n
        );
      }
    };
  },
  function(e, t, n) {
    'use strict';
    const r = n(17);
    e.exports = new r.Schema({ include: [n(35)] });
  },
  function(e, t, n) {
    'use strict';
    const r = n(17);
    e.exports = new r.Schema({
      include: [n(36)],
      implicit: [n(40), n(41), n(42), n(43)],
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(17);
    e.exports = new r.Schema({ explicit: [n(37), n(38), n(39)] });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    e.exports = new r.Type('tag:yaml.org,2002:str', {
      kind: 'scalar',
      construct: function(e) {
        return null !== e ? e : '';
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    e.exports = new r.Type('tag:yaml.org,2002:seq', {
      kind: 'sequence',
      construct: function(e) {
        return null !== e ? e : [];
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    e.exports = new r.Type('tag:yaml.org,2002:map', {
      kind: 'mapping',
      construct: function(e) {
        return null !== e ? e : {};
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    e.exports = new r.Type('tag:yaml.org,2002:null', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !0;
        var t = e.length;
        return (
          (1 === t && '~' === e) ||
          (4 === t && ('null' === e || 'Null' === e || 'NULL' === e))
        );
      },
      construct: function() {
        return null;
      },
      predicate: function(e) {
        return null === e;
      },
      represent: {
        canonical: function() {
          return '~';
        },
        lowercase: function() {
          return 'null';
        },
        uppercase: function() {
          return 'NULL';
        },
        camelcase: function() {
          return 'Null';
        },
      },
      defaultStyle: 'lowercase',
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    e.exports = new r.Type('tag:yaml.org,2002:bool', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        var t = e.length;
        return (
          (4 === t && ('true' === e || 'True' === e || 'TRUE' === e)) ||
          (5 === t && ('false' === e || 'False' === e || 'FALSE' === e))
        );
      },
      construct: function(e) {
        return 'true' === e || 'True' === e || 'TRUE' === e;
      },
      predicate: function(e) {
        return '[object Boolean]' === Object.prototype.toString.call(e);
      },
      represent: {
        lowercase: function(e) {
          return e ? 'true' : 'false';
        },
        uppercase: function(e) {
          return e ? 'TRUE' : 'FALSE';
        },
        camelcase: function(e) {
          return e ? 'True' : 'False';
        },
      },
      defaultStyle: 'lowercase',
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(12),
      i = n(5);
    function a(e) {
      return 48 <= e && e <= 55;
    }
    function o(e) {
      return 48 <= e && e <= 57;
    }
    e.exports = new i.Type('tag:yaml.org,2002:int', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        var t,
          n,
          r = e.length,
          i = 0,
          s = !1;
        if (!r) return !1;
        if ((('-' !== (t = e[i]) && '+' !== t) || (t = e[++i]), '0' === t)) {
          if (i + 1 === r) return !0;
          if ('b' === (t = e[++i])) {
            for (i++; i < r; i++)
              if ('_' !== (t = e[i])) {
                if ('0' !== t && '1' !== t) return !1;
                s = !0;
              }
            return s;
          }
          if ('x' === t) {
            for (i++; i < r; i++)
              if ('_' !== (t = e[i])) {
                if (
                  !(
                    (48 <= (n = e.charCodeAt(i)) && n <= 57) ||
                    (65 <= n && n <= 70) ||
                    (97 <= n && n <= 102)
                  )
                )
                  return !1;
                s = !0;
              }
            return s;
          }
          for (; i < r; i++)
            if ('_' !== (t = e[i])) {
              if (!a(e.charCodeAt(i))) return !1;
              s = !0;
            }
          return s;
        }
        for (; i < r; i++)
          if ('_' !== (t = e[i])) {
            if (':' === t) break;
            if (!o(e.charCodeAt(i))) return !1;
            s = !0;
          }
        return !!s && (':' !== t || /^(:[0-5]?[0-9])+$/.test(e.slice(i)));
      },
      construct: function(e) {
        var t,
          n,
          r = e,
          i = 1,
          a = [];
        return (
          -1 !== r.indexOf('_') && (r = r.replace(/_/g, '')),
          ('-' !== (t = r[0]) && '+' !== t) ||
            ('-' === t && (i = -1), (t = (r = r.slice(1))[0])),
          '0' === r
            ? 0
            : '0' === t
            ? 'b' === r[1]
              ? i * parseInt(r.slice(2), 2)
              : 'x' === r[1]
              ? i * parseInt(r, 16)
              : i * parseInt(r, 8)
            : -1 !== r.indexOf(':')
            ? (r.split(':').forEach(function(e) {
                a.unshift(parseInt(e, 10));
              }),
              (r = 0),
              (n = 1),
              a.forEach(function(e) {
                (r += e * n), (n *= 60);
              }),
              i * r)
            : i * parseInt(r, 10)
        );
      },
      predicate: function(e) {
        return (
          '[object Number]' === Object.prototype.toString.call(e) &&
          0 == e % 1 &&
          !r.isNegativeZero(e)
        );
      },
      represent: {
        binary: function(e) {
          return '0b' + e.toString(2);
        },
        octal: function(e) {
          return '0' + e.toString(8);
        },
        decimal: function(e) {
          return e.toString(10);
        },
        hexadecimal: function(e) {
          return '0x' + e.toString(16).toUpperCase();
        },
      },
      defaultStyle: 'decimal',
      styleAliases: {
        binary: [2, 'bin'],
        octal: [8, 'oct'],
        decimal: [10, 'dec'],
        hexadecimal: [16, 'hex'],
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(12),
      i = n(5);
    var a = new RegExp(
      '^(?:[-+]?(?:[0-9][0-9_]*)\\.[0-9_]*(?:[eE][-+][0-9]+)?|\\.[0-9_]+(?:[eE][-+][0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$',
    );
    e.exports = new i.Type('tag:yaml.org,2002:float', {
      kind: 'scalar',
      resolve: function(e) {
        return null !== e && !!a.test(e);
      },
      construct: function(e) {
        var t, n, r, i;
        return (
          (n = '-' === (t = e.replace(/_/g, '').toLowerCase())[0] ? -1 : 1),
          (i = []),
          0 <= '+-'.indexOf(t[0]) && (t = t.slice(1)),
          '.inf' === t
            ? 1 === n
              ? Number.POSITIVE_INFINITY
              : Number.NEGATIVE_INFINITY
            : '.nan' === t
            ? NaN
            : 0 <= t.indexOf(':')
            ? (t.split(':').forEach(function(e) {
                i.unshift(parseFloat(e, 10));
              }),
              (t = 0),
              (r = 1),
              i.forEach(function(e) {
                (t += e * r), (r *= 60);
              }),
              n * t)
            : n * parseFloat(t, 10)
        );
      },
      predicate: function(e) {
        return (
          '[object Number]' === Object.prototype.toString.call(e) &&
          (0 != e % 1 || r.isNegativeZero(e))
        );
      },
      represent: function(e, t) {
        if (isNaN(e))
          switch (t) {
            case 'lowercase':
              return '.nan';
            case 'uppercase':
              return '.NAN';
            case 'camelcase':
              return '.NaN';
          }
        else if (Number.POSITIVE_INFINITY === e)
          switch (t) {
            case 'lowercase':
              return '.inf';
            case 'uppercase':
              return '.INF';
            case 'camelcase':
              return '.Inf';
          }
        else if (Number.NEGATIVE_INFINITY === e)
          switch (t) {
            case 'lowercase':
              return '-.inf';
            case 'uppercase':
              return '-.INF';
            case 'camelcase':
              return '-.Inf';
          }
        else if (r.isNegativeZero(e)) return '-0.0';
        return e.toString(10);
      },
      defaultStyle: 'lowercase',
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    var i = new RegExp(
      '^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?)?$',
    );
    e.exports = new r.Type('tag:yaml.org,2002:timestamp', {
      kind: 'scalar',
      resolve: function(e) {
        return null !== e && null !== i.exec(e);
      },
      construct: function(e) {
        var t,
          n,
          r,
          a,
          o,
          s,
          u,
          c,
          l = 0,
          p = null;
        if (null === (t = i.exec(e))) throw new Error('Date resolve error');
        if (((n = +t[1]), (r = +t[2] - 1), (a = +t[3]), !t[4]))
          return new Date(Date.UTC(n, r, a));
        if (((o = +t[4]), (s = +t[5]), (u = +t[6]), t[7])) {
          for (l = t[7].slice(0, 3); l.length < 3; ) l += '0';
          l = +l;
        }
        return (
          t[9] &&
            ((p = 6e4 * (60 * +t[10] + +(t[11] || 0))),
            '-' === t[9] && (p = -p)),
          (c = new Date(Date.UTC(n, r, a, o, s, u, l))),
          p && c.setTime(c.getTime() - p),
          c
        );
      },
      instanceOf: Date,
      represent: function(e) {
        return e.toISOString();
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    e.exports = new r.Type('tag:yaml.org,2002:merge', {
      kind: 'scalar',
      resolve: function(e) {
        return '<<' === e || null === e;
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(24).Buffer;
    const i = n(5);
    var a =
      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';
    e.exports = new i.Type('tag:yaml.org,2002:binary', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        var t,
          n,
          r = 0,
          i = e.length,
          o = a;
        for (n = 0; n < i; n++)
          if (!((t = o.indexOf(e.charAt(n))) > 64)) {
            if (t < 0) return !1;
            r += 6;
          }
        return r % 8 == 0;
      },
      construct: function(e) {
        var t,
          n,
          i = e.replace(/[\r\n=]/g, ''),
          o = i.length,
          s = a,
          u = 0,
          c = [];
        for (t = 0; t < o; t++)
          t % 4 == 0 &&
            t &&
            (c.push((u >> 16) & 255), c.push((u >> 8) & 255), c.push(255 & u)),
            (u = (u << 6) | s.indexOf(i.charAt(t)));
        return (
          0 === (n = (o % 4) * 6)
            ? (c.push((u >> 16) & 255), c.push((u >> 8) & 255), c.push(255 & u))
            : 18 === n
            ? (c.push((u >> 10) & 255), c.push((u >> 2) & 255))
            : 12 === n && c.push((u >> 4) & 255),
          r ? new r(c) : c
        );
      },
      predicate: function(e) {
        return r && r.isBuffer(e);
      },
      represent: function(e) {
        var t,
          n,
          r = '',
          i = 0,
          o = e.length,
          s = a;
        for (t = 0; t < o; t++)
          t % 3 == 0 &&
            t &&
            ((r += s[(i >> 18) & 63]),
            (r += s[(i >> 12) & 63]),
            (r += s[(i >> 6) & 63]),
            (r += s[63 & i])),
            (i = (i << 8) + e[t]);
        return (
          0 === (n = o % 3)
            ? ((r += s[(i >> 18) & 63]),
              (r += s[(i >> 12) & 63]),
              (r += s[(i >> 6) & 63]),
              (r += s[63 & i]))
            : 2 === n
            ? ((r += s[(i >> 10) & 63]),
              (r += s[(i >> 4) & 63]),
              (r += s[(i << 2) & 63]),
              (r += s[64]))
            : 1 === n &&
              ((r += s[(i >> 2) & 63]),
              (r += s[(i << 4) & 63]),
              (r += s[64]),
              (r += s[64])),
          r
        );
      },
    });
  },
  function(e, t, n) {
    'use strict';
    (t.byteLength = function(e) {
      var t = c(e),
        n = t[0],
        r = t[1];
      return (3 * (n + r)) / 4 - r;
    }),
      (t.toByteArray = function(e) {
        var t,
          n,
          r = c(e),
          o = r[0],
          s = r[1],
          u = new a(
            (function(e, t, n) {
              return (3 * (t + n)) / 4 - n;
            })(0, o, s),
          ),
          l = 0,
          p = s > 0 ? o - 4 : o;
        for (n = 0; n < p; n += 4)
          (t =
            (i[e.charCodeAt(n)] << 18) |
            (i[e.charCodeAt(n + 1)] << 12) |
            (i[e.charCodeAt(n + 2)] << 6) |
            i[e.charCodeAt(n + 3)]),
            (u[l++] = (t >> 16) & 255),
            (u[l++] = (t >> 8) & 255),
            (u[l++] = 255 & t);
        2 === s &&
          ((t = (i[e.charCodeAt(n)] << 2) | (i[e.charCodeAt(n + 1)] >> 4)),
          (u[l++] = 255 & t));
        1 === s &&
          ((t =
            (i[e.charCodeAt(n)] << 10) |
            (i[e.charCodeAt(n + 1)] << 4) |
            (i[e.charCodeAt(n + 2)] >> 2)),
          (u[l++] = (t >> 8) & 255),
          (u[l++] = 255 & t));
        return u;
      }),
      (t.fromByteArray = function(e) {
        for (
          var t, n = e.length, i = n % 3, a = [], o = 0, s = n - i;
          o < s;
          o += 16383
        )
          a.push(l(e, o, o + 16383 > s ? s : o + 16383));
        1 === i
          ? ((t = e[n - 1]), a.push(r[t >> 2] + r[(t << 4) & 63] + '=='))
          : 2 === i &&
            ((t = (e[n - 2] << 8) + e[n - 1]),
            a.push(r[t >> 10] + r[(t >> 4) & 63] + r[(t << 2) & 63] + '='));
        return a.join('');
      });
    for (
      var r = [],
        i = [],
        a = 'undefined' != typeof Uint8Array ? Uint8Array : Array,
        o = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
        s = 0,
        u = o.length;
      s < u;
      ++s
    )
      (r[s] = o[s]), (i[o.charCodeAt(s)] = s);
    function c(e) {
      var t = e.length;
      if (t % 4 > 0)
        throw new Error('Invalid string. Length must be a multiple of 4');
      var n = e.indexOf('=');
      return -1 === n && (n = t), [n, n === t ? 0 : 4 - (n % 4)];
    }
    function l(e, t, n) {
      for (var i, a, o = [], s = t; s < n; s += 3)
        (i =
          ((e[s] << 16) & 16711680) +
          ((e[s + 1] << 8) & 65280) +
          (255 & e[s + 2])),
          o.push(
            r[((a = i) >> 18) & 63] +
              r[(a >> 12) & 63] +
              r[(a >> 6) & 63] +
              r[63 & a],
          );
      return o.join('');
    }
    (i['-'.charCodeAt(0)] = 62), (i['_'.charCodeAt(0)] = 63);
  },
  function(e, t) {
    /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
    (t.read = function(e, t, n, r, i) {
      var a,
        o,
        s = 8 * i - r - 1,
        u = (1 << s) - 1,
        c = u >> 1,
        l = -7,
        p = n ? i - 1 : 0,
        f = n ? -1 : 1,
        h = e[t + p];
      for (
        p += f, a = h & ((1 << -l) - 1), h >>= -l, l += s;
        l > 0;
        a = 256 * a + e[t + p], p += f, l -= 8
      );
      for (
        o = a & ((1 << -l) - 1), a >>= -l, l += r;
        l > 0;
        o = 256 * o + e[t + p], p += f, l -= 8
      );
      if (0 === a) a = 1 - c;
      else {
        if (a === u) return o ? NaN : (1 / 0) * (h ? -1 : 1);
        (o += Math.pow(2, r)), (a -= c);
      }
      return (h ? -1 : 1) * o * Math.pow(2, a - r);
    }),
      (t.write = function(e, t, n, r, i, a) {
        var o,
          s,
          u,
          c = 8 * a - i - 1,
          l = (1 << c) - 1,
          p = l >> 1,
          f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          h = r ? 0 : a - 1,
          d = r ? 1 : -1,
          m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
        for (
          t = Math.abs(t),
            isNaN(t) || t === 1 / 0
              ? ((s = isNaN(t) ? 1 : 0), (o = l))
              : ((o = Math.floor(Math.log(t) / Math.LN2)),
                t * (u = Math.pow(2, -o)) < 1 && (o--, (u *= 2)),
                (t += o + p >= 1 ? f / u : f * Math.pow(2, 1 - p)) * u >= 2 &&
                  (o++, (u /= 2)),
                o + p >= l
                  ? ((s = 0), (o = l))
                  : o + p >= 1
                  ? ((s = (t * u - 1) * Math.pow(2, i)), (o += p))
                  : ((s = t * Math.pow(2, p - 1) * Math.pow(2, i)), (o = 0)));
          i >= 8;
          e[n + h] = 255 & s, h += d, s /= 256, i -= 8
        );
        for (
          o = (o << i) | s, c += i;
          c > 0;
          e[n + h] = 255 & o, h += d, o /= 256, c -= 8
        );
        e[n + h - d] |= 128 * m;
      });
  },
  function(e, t) {
    var n = {}.toString;
    e.exports =
      Array.isArray ||
      function(e) {
        return '[object Array]' == n.call(e);
      };
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    var i = Object.prototype.hasOwnProperty,
      a = Object.prototype.toString;
    e.exports = new r.Type('tag:yaml.org,2002:omap', {
      kind: 'sequence',
      resolve: function(e) {
        if (null === e) return !0;
        var t,
          n,
          r,
          o,
          s,
          u = [],
          c = e;
        for (t = 0, n = c.length; t < n; t += 1) {
          if (((r = c[t]), (s = !1), '[object Object]' !== a.call(r)))
            return !1;
          for (o in r)
            if (i.call(r, o)) {
              if (s) return !1;
              s = !0;
            }
          if (!s) return !1;
          if (-1 !== u.indexOf(o)) return !1;
          u.push(o);
        }
        return !0;
      },
      construct: function(e) {
        return null !== e ? e : [];
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5),
      i = n(20);
    var a = Object.prototype.toString;
    e.exports = new r.Type('tag:yaml.org,2002:pairs', {
      kind: 'sequence',
      resolve: function(e) {
        if (null === e) return !0;
        if (e.kind != i.Kind.SEQ) return !1;
        var t,
          n,
          r,
          o = e.items;
        for (t = 0, n = o.length; t < n; t += 1) {
          if (((r = o[t]), '[object Object]' !== a.call(r))) return !1;
          if (!Array.isArray(r.mappings)) return !1;
          if (1 !== r.mappings.length) return !1;
        }
        return !0;
      },
      construct: function(e) {
        if (null === e || !Array.isArray(e.items)) return [];
        let t,
          n,
          r,
          a = e.items;
        for (
          r = i.newItems(),
            r.parent = e.parent,
            r.startPosition = e.startPosition,
            r.endPosition = e.endPosition,
            t = 0,
            n = a.length;
          t < n;
          t += 1
        ) {
          let e = a[t].mappings[0],
            n = i.newItems();
          (n.parent = r),
            (n.startPosition = e.key.startPosition),
            (n.endPosition = e.value.startPosition),
            (e.key.parent = n),
            (e.value.parent = n),
            (n.items = [e.key, e.value]),
            r.items.push(n);
        }
        return r;
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5),
      i = n(20);
    Object.prototype.hasOwnProperty;
    e.exports = new r.Type('tag:yaml.org,2002:set', {
      kind: 'mapping',
      resolve: function(e) {
        return null === e || e.kind == i.Kind.MAP;
      },
      construct: function(e) {
        return null !== e ? e : {};
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    e.exports = new r.Type('tag:yaml.org,2002:js/undefined', {
      kind: 'scalar',
      resolve: function() {
        return !0;
      },
      construct: function() {},
      predicate: function(e) {
        return void 0 === e;
      },
      represent: function() {
        return '';
      },
    });
  },
  function(e, t, n) {
    'use strict';
    const r = n(5);
    e.exports = new r.Type('tag:yaml.org,2002:js/regexp', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        if (0 === e.length) return !1;
        var t = e,
          n = /\/([gim]*)$/.exec(e),
          r = '';
        if ('/' === t[0]) {
          if ((n && (r = n[1]), r.length > 3)) return !1;
          if ('/' !== t[t.length - r.length - 1]) return !1;
          t = t.slice(1, t.length - r.length - 1);
        }
        try {
          new RegExp(t, r);
          return !0;
        } catch (e) {
          return !1;
        }
      },
      construct: function(e) {
        var t = e,
          n = /\/([gim]*)$/.exec(e),
          r = '';
        return (
          '/' === t[0] &&
            (n && (r = n[1]), (t = t.slice(1, t.length - r.length - 1))),
          new RegExp(t, r)
        );
      },
      predicate: function(e) {
        return '[object RegExp]' === Object.prototype.toString.call(e);
      },
      represent: function(e) {
        var t = '/' + e.source + '/';
        return (
          e.global && (t += 'g'),
          e.multiline && (t += 'm'),
          e.ignoreCase && (t += 'i'),
          t
        );
      },
    });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    var r = n(12),
      i = n(16),
      a = n(25),
      o = n(22),
      s = Object.prototype.toString,
      u = Object.prototype.hasOwnProperty,
      c = {
        0: '\\0',
        7: '\\a',
        8: '\\b',
        9: '\\t',
        10: '\\n',
        11: '\\v',
        12: '\\f',
        13: '\\r',
        27: '\\e',
        34: '\\"',
        92: '\\\\',
        133: '\\N',
        160: '\\_',
        8232: '\\L',
        8233: '\\P',
      },
      l = [
        'y',
        'Y',
        'yes',
        'Yes',
        'YES',
        'on',
        'On',
        'ON',
        'n',
        'N',
        'no',
        'No',
        'NO',
        'off',
        'Off',
        'OFF',
      ];
    function p(e) {
      (this.schema = e.schema || a),
        (this.indent = Math.max(1, e.indent || 2)),
        (this.skipInvalid = e.skipInvalid || !1),
        (this.flowLevel = r.isNothing(e.flowLevel) ? -1 : e.flowLevel),
        (this.styleMap = (function(e, t) {
          var n, r, i, a, o, s, c;
          if (null === t) return {};
          for (n = {}, i = 0, a = (r = Object.keys(t)).length; i < a; i += 1)
            (o = r[i]),
              (s = String(t[o])),
              '!!' === o.slice(0, 2) && (o = 'tag:yaml.org,2002:' + o.slice(2)),
              (c = e.compiledTypeMap[o]) &&
                u.call(c.styleAliases, s) &&
                (s = c.styleAliases[s]),
              (n[o] = s);
          return n;
        })(this.schema, e.styles || null)),
        (this.implicitTypes = this.schema.compiledImplicit),
        (this.explicitTypes = this.schema.compiledExplicit),
        (this.tag = null),
        (this.result = ''),
        (this.duplicates = []),
        (this.usedDuplicates = null);
    }
    function f(e, t) {
      for (
        var n, i = r.repeat(' ', t), a = 0, o = -1, s = '', u = e.length;
        a < u;

      )
        -1 === (o = e.indexOf('\n', a))
          ? ((n = e.slice(a)), (a = u))
          : ((n = e.slice(a, o + 1)), (a = o + 1)),
          n.length && '\n' !== n && (s += i),
          (s += n);
      return s;
    }
    function h(e, t) {
      return '\n' + r.repeat(' ', e.indent * t);
    }
    function d(e) {
      (this.source = e), (this.result = ''), (this.checkpoint = 0);
    }
    function m(e, t, n) {
      var r, i, a, o, s, u, p, h, m, D, E, C, b, x, A, S, w, F, k;
      if (0 !== t.length)
        if (0 != t.indexOf('!include'))
          if (0 != t.indexOf('!$$$novalue'))
            if (-1 === l.indexOf(t)) {
              for (
                r = !0,
                  (45 !== (i = t.length ? t.charCodeAt(0) : 0) &&
                    63 !== i &&
                    64 !== i &&
                    96 !== i) ||
                    (r = !1),
                  32 === i || 32 === t.charCodeAt(t.length - 1)
                    ? ((r = !1), (a = !1), (o = !1))
                    : ((a = !0), (o = !0)),
                  s = !0,
                  u = new d(t),
                  p = !1,
                  h = 0,
                  m = 0,
                  E = 80,
                  (D = e.indent * n) < 40 ? (E -= D) : (E = 40),
                  b = 0;
                b < t.length;
                b++
              ) {
                if (((C = t.charCodeAt(b)), r)) {
                  if (y(C)) continue;
                  r = !1;
                }
                s && 39 === C && (s = !1),
                  (x = c[C]),
                  (A = v(C)),
                  (x || A) &&
                    (10 !== C && 34 !== C && 39 !== C
                      ? ((a = !1), (o = !1))
                      : 10 === C &&
                        ((p = !0),
                        (s = !1),
                        b > 0 &&
                          32 === t.charCodeAt(b - 1) &&
                          ((o = !1), (a = !1)),
                        a && ((S = b - h), (h = b), S > m && (m = S))),
                    34 !== C && (s = !1),
                    u.takeUpTo(b),
                    u.escapeChar());
              }
              if (
                (r &&
                  (function(e, t) {
                    var n, r;
                    for (n = 0, r = e.implicitTypes.length; n < r; n += 1)
                      if (e.implicitTypes[n].resolve(t)) return !0;
                    return !1;
                  })(e, t) &&
                  (r = !1),
                (w = ''),
                (a || o) &&
                  ((F = 0),
                  10 === t.charCodeAt(t.length - 1) &&
                    ((F += 1), 10 === t.charCodeAt(t.length - 2) && (F += 1)),
                  0 === F ? (w = '-') : 2 === F && (w = '+')),
                o && m < E && (a = !1),
                p || (o = !1),
                r)
              )
                e.dump = t;
              else if (s) e.dump = "'" + t + "'";
              else if (a)
                (k = (function(e, t) {
                  var n,
                    r = '',
                    i = 0,
                    a = e.length,
                    o = /\n+$/.exec(e);
                  o && (a = o.index + 1);
                  for (; i < a; )
                    (n = e.indexOf('\n', i)) > a || -1 === n
                      ? (r && (r += '\n\n'),
                        (r += g(e.slice(i, a), t)),
                        (i = a))
                      : (r && (r += '\n\n'),
                        (r += g(e.slice(i, n), t)),
                        (i = n + 1));
                  o && '\n' !== o[0] && (r += o[0]);
                  return r;
                })(t, E)),
                  (e.dump = '>' + w + '\n' + f(k, D));
              else if (o)
                w || (t = t.replace(/\n$/, '')),
                  (e.dump = '|' + w + '\n' + f(t, D));
              else {
                if (!u) throw new Error('Failed to dump scalar value');
                u.finish(), (e.dump = '"' + u.result + '"');
              }
            } else e.dump = "'" + t + "'";
          else e.dump = '';
        else e.dump = '' + t;
      else e.dump = "''";
    }
    function g(e, t) {
      if ('' === e) return e;
      for (
        var n, r, i = /[^\s] [^\s]/g, a = '', o = 0, s = 0, u = i.exec(e);
        u;

      )
        (n = u.index) - s > t &&
          ((r = o !== s ? o : n),
          a && (a += '\n'),
          (a += e.slice(s, r)),
          (s = r + 1)),
          (o = n + 1),
          (u = i.exec(e));
      return (
        a && (a += '\n'),
        s !== o && e.length - s > t
          ? (a += e.slice(s, o) + '\n' + e.slice(o + 1))
          : (a += e.slice(s)),
        a
      );
    }
    function y(e) {
      return (
        9 !== e &&
        10 !== e &&
        13 !== e &&
        44 !== e &&
        91 !== e &&
        93 !== e &&
        123 !== e &&
        125 !== e &&
        35 !== e &&
        38 !== e &&
        42 !== e &&
        33 !== e &&
        124 !== e &&
        62 !== e &&
        39 !== e &&
        34 !== e &&
        37 !== e &&
        58 !== e &&
        !c[e] &&
        !v(e)
      );
    }
    function v(e) {
      return !(
        (32 <= e && e <= 126) ||
        133 === e ||
        (160 <= e && e <= 55295) ||
        (57344 <= e && e <= 65533) ||
        (65536 <= e && e <= 1114111)
      );
    }
    function D(e, t, n) {
      var r, a, o, c, l, p;
      for (
        o = 0, c = (a = n ? e.explicitTypes : e.implicitTypes).length;
        o < c;
        o += 1
      )
        if (
          ((l = a[o]).instanceOf || l.predicate) &&
          (!l.instanceOf ||
            ('object' == typeof t && t instanceof l.instanceOf)) &&
          (!l.predicate || l.predicate(t))
        ) {
          if (((e.tag = n ? l.tag : '?'), l.represent)) {
            if (
              ((p = e.styleMap[l.tag] || l.defaultStyle),
              '[object Function]' === s.call(l.represent))
            )
              r = l.represent(t, p);
            else {
              if (!u.call(l.represent, p))
                throw new i(
                  '!<' + l.tag + '> tag resolver accepts not "' + p + '" style',
                );
              r = l.represent[p](t, p);
            }
            e.dump = r;
          }
          return !0;
        }
      return !1;
    }
    function E(e, t, n, r, a) {
      (e.tag = null), (e.dump = n), D(e, n, !1) || D(e, n, !0);
      var o = s.call(e.dump);
      r && (r = 0 > e.flowLevel || e.flowLevel > t),
        ((null !== e.tag && '?' !== e.tag) || (2 !== e.indent && t > 0)) &&
          (a = !1);
      var u,
        c,
        l = '[object Object]' === o || '[object Array]' === o;
      if (
        (l && (c = -1 !== (u = e.duplicates.indexOf(n))),
        c && e.usedDuplicates[u])
      )
        e.dump = '*ref_' + u;
      else {
        if (
          (l && c && !e.usedDuplicates[u] && (e.usedDuplicates[u] = !0),
          '[object Object]' === o)
        )
          r && 0 !== Object.keys(e.dump).length
            ? (!(function(e, t, n, r) {
                var i,
                  a,
                  o,
                  s,
                  u,
                  c,
                  l = '',
                  p = e.tag,
                  f = Object.keys(n);
                for (i = 0, a = f.length; i < a; i += 1)
                  (c = ''),
                    (r && 0 === i) || (c += h(e, t)),
                    (s = n[(o = f[i])]),
                    E(e, t + 1, o, !0, !0) &&
                      ((u =
                        (null !== e.tag && '?' !== e.tag) ||
                        (e.dump && e.dump.length > 1024)) &&
                        (e.dump && 10 === e.dump.charCodeAt(0)
                          ? (c += '?')
                          : (c += '? ')),
                      (c += e.dump),
                      u && (c += h(e, t)),
                      E(e, t + 1, s, !0, u) &&
                        (e.dump && 10 === e.dump.charCodeAt(0)
                          ? (c += ':')
                          : (c += ': '),
                        (l += c += e.dump)));
                (e.tag = p), (e.dump = l || '{}');
              })(e, t, e.dump, a),
              c && (e.dump = '&ref_' + u + (0 === t ? '\n' : '') + e.dump))
            : (!(function(e, t, n) {
                var r,
                  i,
                  a,
                  o,
                  s,
                  u = '',
                  c = e.tag,
                  l = Object.keys(n);
                for (r = 0, i = l.length; r < i; r += 1)
                  (s = ''),
                    0 !== r && (s += ', '),
                    (o = n[(a = l[r])]),
                    E(e, t, a, !1, !1) &&
                      (e.dump.length > 1024 && (s += '? '),
                      (s += e.dump + ': '),
                      E(e, t, o, !1, !1) && (u += s += e.dump));
                (e.tag = c), (e.dump = '{' + u + '}');
              })(e, t, e.dump),
              c && (e.dump = '&ref_' + u + ' ' + e.dump));
        else if ('[object Array]' === o)
          r && 0 !== e.dump.length
            ? (!(function(e, t, n, r) {
                var i,
                  a,
                  o = '',
                  s = e.tag;
                for (i = 0, a = n.length; i < a; i += 1)
                  E(e, t + 1, n[i], !0, !0) &&
                    ((r && 0 === i) || (o += h(e, t)), (o += '- ' + e.dump));
                (e.tag = s), (e.dump = o || '[]');
              })(e, t, e.dump, a),
              c && (e.dump = '&ref_' + u + (0 === t ? '\n' : '') + e.dump))
            : (!(function(e, t, n) {
                var r,
                  i,
                  a = '',
                  o = e.tag;
                for (r = 0, i = n.length; r < i; r += 1)
                  E(e, t, n[r], !1, !1) &&
                    (0 !== r && (a += ', '), (a += e.dump));
                (e.tag = o), (e.dump = '[' + a + ']');
              })(e, t, e.dump),
              c && (e.dump = '&ref_' + u + ' ' + e.dump));
        else {
          if ('[object String]' !== o) {
            if (e.skipInvalid) return !1;
            throw new i('unacceptable kind of an object to dump ' + o);
          }
          '?' !== e.tag && m(e, e.dump, t);
        }
        null !== e.tag &&
          '?' !== e.tag &&
          (e.dump = '!<' + e.tag + '> ' + e.dump);
      }
      return !0;
    }
    function C(e, t) {
      var n,
        r,
        i = [],
        a = [];
      for (
        (function e(t, n, r) {
          var i, a, o;
          s.call(t);
          if (null !== t && 'object' == typeof t)
            if (-1 !== (a = n.indexOf(t))) -1 === r.indexOf(a) && r.push(a);
            else if ((n.push(t), Array.isArray(t)))
              for (a = 0, o = t.length; a < o; a += 1) e(t[a], n, r);
            else
              for (i = Object.keys(t), a = 0, o = i.length; a < o; a += 1)
                e(t[i[a]], n, r);
        })(e, i, a),
          n = 0,
          r = a.length;
        n < r;
        n += 1
      )
        t.duplicates.push(i[a[n]]);
      t.usedDuplicates = new Array(r);
    }
    function b(e, t) {
      var n = new p((t = t || {}));
      return C(e, n), E(n, 0, e, !0, !0) ? n.dump + '\n' : '';
    }
    (d.prototype.takeUpTo = function(e) {
      var t;
      if (e < this.checkpoint)
        throw (((t = new Error(
          'position should be > checkpoint',
        )).position = e),
        (t.checkpoint = this.checkpoint),
        t);
      return (
        (this.result += this.source.slice(this.checkpoint, e)),
        (this.checkpoint = e),
        this
      );
    }),
      (d.prototype.escapeChar = function() {
        var e, t;
        return (
          (e = this.source.charCodeAt(this.checkpoint)),
          (t =
            c[e] ||
            (function(e) {
              var t, n, a;
              if (((t = e.toString(16).toUpperCase()), e <= 255))
                (n = 'x'), (a = 2);
              else if (e <= 65535) (n = 'u'), (a = 4);
              else {
                if (!(e <= 4294967295))
                  throw new i(
                    'code point within a string may not be greater than 0xFFFFFFFF',
                  );
                (n = 'U'), (a = 8);
              }
              return '\\' + n + r.repeat('0', a - t.length) + t;
            })(e)),
          (this.result += t),
          (this.checkpoint += 1),
          this
        );
      }),
      (d.prototype.finish = function() {
        this.source.length > this.checkpoint &&
          this.takeUpTo(this.source.length);
      }),
      (t.dump = b),
      (t.safeDump = function(e, t) {
        return b(e, r.extend({ schema: o }, t));
      });
  },
  function(e, t, n) {
    'use strict';
    var r;
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.parseYamlBoolean = function(e) {
        if (['true', 'True', 'TRUE'].lastIndexOf(e) >= 0) return !0;
        if (['false', 'False', 'FALSE'].lastIndexOf(e) >= 0) return !1;
        throw `Invalid boolean "${e}"`;
      }),
      (t.parseYamlInteger = function(e) {
        const t = (function(e) {
          return 0 === e.lastIndexOf('0o', 0)
            ? parseInt(e.substring(2), 8)
            : parseInt(e);
        })(e);
        if (isNaN(t)) throw `Invalid integer "${e}"`;
        return t;
      }),
      (t.parseYamlFloat = function(e) {
        if (['.nan', '.NaN', '.NAN'].lastIndexOf(e) >= 0) return NaN;
        const t = /^([-+])?(?:\.inf|\.Inf|\.INF)$/.exec(e);
        if (t) return '-' === t[1] ? -1 / 0 : 1 / 0;
        const n = parseFloat(e);
        if (!isNaN(n)) return n;
        throw `Invalid float "${e}"`;
      }),
      (function(e) {
        (e[(e.null = 0)] = 'null'),
          (e[(e.bool = 1)] = 'bool'),
          (e[(e.int = 2)] = 'int'),
          (e[(e.float = 3)] = 'float'),
          (e[(e.string = 4)] = 'string');
      })((r = t.ScalarType || (t.ScalarType = {}))),
      (t.determineScalarType = function(e) {
        if (void 0 === e) return r.null;
        if (e.doubleQuoted || !e.plainScalar || e.singleQuoted) return r.string;
        const t = e.value;
        return ['null', 'Null', 'NULL', '~', ''].indexOf(t) >= 0 || null == t
          ? r.null
          : ['true', 'True', 'TRUE', 'false', 'False', 'FALSE'].indexOf(t) >= 0
          ? r.bool
          : /^[-+]?[0-9]+$/.test(t) ||
            /^0o[0-7]+$/.test(t) ||
            /^0x[0-9a-fA-F]+$/.test(t)
          ? r.int
          : /^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$/.test(t) ||
            /^[-+]?(\.inf|\.Inf|\.INF)$/.test(t) ||
            ['.nan', '.NaN', '.NAN'].indexOf(t) >= 0
          ? r.float
          : r.string;
      });
  },
  function(e, t, n) {
    'use strict';
    var r = n(58),
      i = n(77);
    function a(e) {
      return function() {
        throw new Error('Function ' + e + ' is deprecated and cannot be used.');
      };
    }
    (e.exports.Type = n(3)),
      (e.exports.Schema = n(14)),
      (e.exports.FAILSAFE_SCHEMA = n(23)),
      (e.exports.JSON_SCHEMA = n(27)),
      (e.exports.CORE_SCHEMA = n(26)),
      (e.exports.DEFAULT_SAFE_SCHEMA = n(19)),
      (e.exports.DEFAULT_FULL_SCHEMA = n(21)),
      (e.exports.load = r.load),
      (e.exports.loadAll = r.loadAll),
      (e.exports.safeLoad = r.safeLoad),
      (e.exports.safeLoadAll = r.safeLoadAll),
      (e.exports.dump = i.dump),
      (e.exports.safeDump = i.safeDump),
      (e.exports.YAMLException = n(18)),
      (e.exports.MINIMAL_SCHEMA = n(23)),
      (e.exports.SAFE_SCHEMA = n(19)),
      (e.exports.DEFAULT_SCHEMA = n(21)),
      (e.exports.scan = a('scan')),
      (e.exports.parse = a('parse')),
      (e.exports.compose = a('compose')),
      (e.exports.addConstructor = a('addConstructor'));
  },
  function(e, t, n) {
    'use strict';
    var r = n(13),
      i = n(18),
      a = n(59),
      o = n(19),
      s = n(21),
      u = Object.prototype.hasOwnProperty,
      c = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,
      l = /[\x85\u2028\u2029]/,
      p = /[,\[\]\{\}]/,
      f = /^(?:!|!!|![a-z\-]+!)$/i,
      h = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
    function d(e) {
      return Object.prototype.toString.call(e);
    }
    function m(e) {
      return 10 === e || 13 === e;
    }
    function g(e) {
      return 9 === e || 32 === e;
    }
    function y(e) {
      return 9 === e || 32 === e || 10 === e || 13 === e;
    }
    function v(e) {
      return 44 === e || 91 === e || 93 === e || 123 === e || 125 === e;
    }
    function D(e) {
      var t;
      return 48 <= e && e <= 57
        ? e - 48
        : 97 <= (t = 32 | e) && t <= 102
        ? t - 97 + 10
        : -1;
    }
    function E(e) {
      return 48 === e
        ? '\0'
        : 97 === e
        ? ''
        : 98 === e
        ? '\b'
        : 116 === e || 9 === e
        ? '\t'
        : 110 === e
        ? '\n'
        : 118 === e
        ? '\v'
        : 102 === e
        ? '\f'
        : 114 === e
        ? '\r'
        : 101 === e
        ? ''
        : 32 === e
        ? ' '
        : 34 === e
        ? '"'
        : 47 === e
        ? '/'
        : 92 === e
        ? '\\'
        : 78 === e
        ? ''
        : 95 === e
        ? ' '
        : 76 === e
        ? '\u2028'
        : 80 === e
        ? '\u2029'
        : '';
    }
    function C(e) {
      return e <= 65535
        ? String.fromCharCode(e)
        : String.fromCharCode(
            55296 + ((e - 65536) >> 10),
            56320 + ((e - 65536) & 1023),
          );
    }
    for (var b = new Array(256), x = new Array(256), A = 0; A < 256; A++)
      (b[A] = E(A) ? 1 : 0), (x[A] = E(A));
    function S(e, t) {
      (this.input = e),
        (this.filename = t.filename || null),
        (this.schema = t.schema || s),
        (this.onWarning = t.onWarning || null),
        (this.legacy = t.legacy || !1),
        (this.json = t.json || !1),
        (this.listener = t.listener || null),
        (this.implicitTypes = this.schema.compiledImplicit),
        (this.typeMap = this.schema.compiledTypeMap),
        (this.length = e.length),
        (this.position = 0),
        (this.line = 0),
        (this.lineStart = 0),
        (this.lineIndent = 0),
        (this.documents = []);
    }
    function w(e, t) {
      return new i(
        t,
        new a(
          e.filename,
          e.input,
          e.position,
          e.line,
          e.position - e.lineStart,
        ),
      );
    }
    function F(e, t) {
      throw w(e, t);
    }
    function k(e, t) {
      e.onWarning && e.onWarning.call(null, w(e, t));
    }
    var T = {
      YAML: function(e, t, n) {
        var r, i, a;
        null !== e.version && F(e, 'duplication of %YAML directive'),
          1 !== n.length && F(e, 'YAML directive accepts exactly one argument'),
          null === (r = /^([0-9]+)\.([0-9]+)$/.exec(n[0])) &&
            F(e, 'ill-formed argument of the YAML directive'),
          (i = parseInt(r[1], 10)),
          (a = parseInt(r[2], 10)),
          1 !== i && F(e, 'unacceptable YAML version of the document'),
          (e.version = n[0]),
          (e.checkLineBreaks = a < 2),
          1 !== a &&
            2 !== a &&
            k(e, 'unsupported YAML version of the document');
      },
      TAG: function(e, t, n) {
        var r, i;
        2 !== n.length && F(e, 'TAG directive accepts exactly two arguments'),
          (r = n[0]),
          (i = n[1]),
          f.test(r) ||
            F(e, 'ill-formed tag handle (first argument) of the TAG directive'),
          u.call(e.tagMap, r) &&
            F(
              e,
              'there is a previously declared suffix for "' +
                r +
                '" tag handle',
            ),
          h.test(i) ||
            F(
              e,
              'ill-formed tag prefix (second argument) of the TAG directive',
            ),
          (e.tagMap[r] = i);
      },
    };
    function _(e, t, n, r) {
      var i, a, o, s;
      if (t < n) {
        if (((s = e.input.slice(t, n)), r))
          for (i = 0, a = s.length; i < a; i += 1)
            9 === (o = s.charCodeAt(i)) ||
              (32 <= o && o <= 1114111) ||
              F(e, 'expected valid JSON character');
        else c.test(s) && F(e, 'the stream contains non-printable characters');
        e.result += s;
      }
    }
    function O(e, t, n, i) {
      var a, o, s, c;
      for (
        r.isObject(n) ||
          F(
            e,
            'cannot merge mappings; the provided source object is unacceptable',
          ),
          s = 0,
          c = (a = Object.keys(n)).length;
        s < c;
        s += 1
      )
        (o = a[s]), u.call(t, o) || ((t[o] = n[o]), (i[o] = !0));
    }
    function N(e, t, n, r, i, a, o, s) {
      var c, l;
      if (Array.isArray(i))
        for (
          c = 0, l = (i = Array.prototype.slice.call(i)).length;
          c < l;
          c += 1
        )
          Array.isArray(i[c]) &&
            F(e, 'nested arrays are not supported inside keys'),
            'object' == typeof i &&
              '[object Object]' === d(i[c]) &&
              (i[c] = '[object Object]');
      if (
        ('object' == typeof i &&
          '[object Object]' === d(i) &&
          (i = '[object Object]'),
        (i = String(i)),
        null === t && (t = {}),
        'tag:yaml.org,2002:merge' === r)
      )
        if (Array.isArray(a))
          for (c = 0, l = a.length; c < l; c += 1) O(e, t, a[c], n);
        else O(e, t, a, n);
      else
        e.json ||
          u.call(n, i) ||
          !u.call(t, i) ||
          ((e.line = o || e.line),
          (e.position = s || e.position),
          F(e, 'duplicated mapping key')),
          (t[i] = a),
          delete n[i];
      return t;
    }
    function B(e) {
      var t;
      10 === (t = e.input.charCodeAt(e.position))
        ? e.position++
        : 13 === t
        ? (e.position++, 10 === e.input.charCodeAt(e.position) && e.position++)
        : F(e, 'a line break is expected'),
        (e.line += 1),
        (e.lineStart = e.position);
    }
    function I(e, t, n) {
      for (var r = 0, i = e.input.charCodeAt(e.position); 0 !== i; ) {
        for (; g(i); ) i = e.input.charCodeAt(++e.position);
        if (t && 35 === i)
          do {
            i = e.input.charCodeAt(++e.position);
          } while (10 !== i && 13 !== i && 0 !== i);
        if (!m(i)) break;
        for (
          B(e), i = e.input.charCodeAt(e.position), r++, e.lineIndent = 0;
          32 === i;

        )
          e.lineIndent++, (i = e.input.charCodeAt(++e.position));
      }
      return (
        -1 !== n &&
          0 !== r &&
          e.lineIndent < n &&
          k(e, 'deficient indentation'),
        r
      );
    }
    function P(e) {
      var t,
        n = e.position;
      return !(
        (45 !== (t = e.input.charCodeAt(n)) && 46 !== t) ||
        t !== e.input.charCodeAt(n + 1) ||
        t !== e.input.charCodeAt(n + 2) ||
        ((n += 3), 0 !== (t = e.input.charCodeAt(n)) && !y(t))
      );
    }
    function M(e, t) {
      1 === t
        ? (e.result += ' ')
        : t > 1 && (e.result += r.repeat('\n', t - 1));
    }
    function L(e, t) {
      var n,
        r,
        i = e.tag,
        a = e.anchor,
        o = [],
        s = !1;
      for (
        null !== e.anchor && (e.anchorMap[e.anchor] = o),
          r = e.input.charCodeAt(e.position);
        0 !== r && 45 === r && y(e.input.charCodeAt(e.position + 1));

      )
        if (((s = !0), e.position++, I(e, !0, -1) && e.lineIndent <= t))
          o.push(null), (r = e.input.charCodeAt(e.position));
        else if (
          ((n = e.line),
          U(e, t, 3, !1, !0),
          o.push(e.result),
          I(e, !0, -1),
          (r = e.input.charCodeAt(e.position)),
          (e.line === n || e.lineIndent > t) && 0 !== r)
        )
          F(e, 'bad indentation of a sequence entry');
        else if (e.lineIndent < t) break;
      return (
        !!s &&
        ((e.tag = i), (e.anchor = a), (e.kind = 'sequence'), (e.result = o), !0)
      );
    }
    function R(e) {
      var t,
        n,
        r,
        i,
        a = !1,
        o = !1;
      if (33 !== (i = e.input.charCodeAt(e.position))) return !1;
      if (
        (null !== e.tag && F(e, 'duplication of a tag property'),
        60 === (i = e.input.charCodeAt(++e.position))
          ? ((a = !0), (i = e.input.charCodeAt(++e.position)))
          : 33 === i
          ? ((o = !0), (n = '!!'), (i = e.input.charCodeAt(++e.position)))
          : (n = '!'),
        (t = e.position),
        a)
      ) {
        do {
          i = e.input.charCodeAt(++e.position);
        } while (0 !== i && 62 !== i);
        e.position < e.length
          ? ((r = e.input.slice(t, e.position)),
            (i = e.input.charCodeAt(++e.position)))
          : F(e, 'unexpected end of the stream within a verbatim tag');
      } else {
        for (; 0 !== i && !y(i); )
          33 === i &&
            (o
              ? F(e, 'tag suffix cannot contain exclamation marks')
              : ((n = e.input.slice(t - 1, e.position + 1)),
                f.test(n) ||
                  F(e, 'named tag handle cannot contain such characters'),
                (o = !0),
                (t = e.position + 1))),
            (i = e.input.charCodeAt(++e.position));
        (r = e.input.slice(t, e.position)),
          p.test(r) &&
            F(e, 'tag suffix cannot contain flow indicator characters');
      }
      return (
        r &&
          !h.test(r) &&
          F(e, 'tag name cannot contain such characters: ' + r),
        a
          ? (e.tag = r)
          : u.call(e.tagMap, n)
          ? (e.tag = e.tagMap[n] + r)
          : '!' === n
          ? (e.tag = '!' + r)
          : '!!' === n
          ? (e.tag = 'tag:yaml.org,2002:' + r)
          : F(e, 'undeclared tag handle "' + n + '"'),
        !0
      );
    }
    function j(e) {
      var t, n;
      if (38 !== (n = e.input.charCodeAt(e.position))) return !1;
      for (
        null !== e.anchor && F(e, 'duplication of an anchor property'),
          n = e.input.charCodeAt(++e.position),
          t = e.position;
        0 !== n && !y(n) && !v(n);

      )
        n = e.input.charCodeAt(++e.position);
      return (
        e.position === t &&
          F(e, 'name of an anchor node must contain at least one character'),
        (e.anchor = e.input.slice(t, e.position)),
        !0
      );
    }
    function U(e, t, n, i, a) {
      var o,
        s,
        c,
        l,
        p,
        f,
        h,
        d,
        E = 1,
        A = !1,
        S = !1;
      if (
        (null !== e.listener && e.listener('open', e),
        (e.tag = null),
        (e.anchor = null),
        (e.kind = null),
        (e.result = null),
        (o = s = c = 4 === n || 3 === n),
        i &&
          I(e, !0, -1) &&
          ((A = !0),
          e.lineIndent > t
            ? (E = 1)
            : e.lineIndent === t
            ? (E = 0)
            : e.lineIndent < t && (E = -1)),
        1 === E)
      )
        for (; R(e) || j(e); )
          I(e, !0, -1)
            ? ((A = !0),
              (c = o),
              e.lineIndent > t
                ? (E = 1)
                : e.lineIndent === t
                ? (E = 0)
                : e.lineIndent < t && (E = -1))
            : (c = !1);
      if (
        (c && (c = A || a),
        (1 !== E && 4 !== n) ||
          ((h = 1 === n || 2 === n ? t : t + 1),
          (d = e.position - e.lineStart),
          1 === E
            ? (c &&
                (L(e, d) ||
                  (function(e, t, n) {
                    var r,
                      i,
                      a,
                      o,
                      s,
                      u = e.tag,
                      c = e.anchor,
                      l = {},
                      p = {},
                      f = null,
                      h = null,
                      d = null,
                      m = !1,
                      v = !1;
                    for (
                      null !== e.anchor && (e.anchorMap[e.anchor] = l),
                        s = e.input.charCodeAt(e.position);
                      0 !== s;

                    ) {
                      if (
                        ((r = e.input.charCodeAt(e.position + 1)),
                        (a = e.line),
                        (o = e.position),
                        (63 !== s && 58 !== s) || !y(r))
                      ) {
                        if (!U(e, n, 2, !1, !0)) break;
                        if (e.line === a) {
                          for (s = e.input.charCodeAt(e.position); g(s); )
                            s = e.input.charCodeAt(++e.position);
                          if (58 === s)
                            y((s = e.input.charCodeAt(++e.position))) ||
                              F(
                                e,
                                'a whitespace character is expected after the key-value separator within a block mapping',
                              ),
                              m && (N(e, l, p, f, h, null), (f = h = d = null)),
                              (v = !0),
                              (m = !1),
                              (i = !1),
                              (f = e.tag),
                              (h = e.result);
                          else {
                            if (!v) return (e.tag = u), (e.anchor = c), !0;
                            F(
                              e,
                              'can not read an implicit mapping pair; a colon is missed',
                            );
                          }
                        } else {
                          if (!v) return (e.tag = u), (e.anchor = c), !0;
                          F(
                            e,
                            'can not read a block mapping entry; a multiline key may not be an implicit key',
                          );
                        }
                      } else
                        63 === s
                          ? (m && (N(e, l, p, f, h, null), (f = h = d = null)),
                            (v = !0),
                            (m = !0),
                            (i = !0))
                          : m
                          ? ((m = !1), (i = !0))
                          : F(
                              e,
                              'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line',
                            ),
                          (e.position += 1),
                          (s = r);
                      if (
                        ((e.line === a || e.lineIndent > t) &&
                          (U(e, t, 4, !0, i) &&
                            (m ? (h = e.result) : (d = e.result)),
                          m || (N(e, l, p, f, h, d, a, o), (f = h = d = null)),
                          I(e, !0, -1),
                          (s = e.input.charCodeAt(e.position))),
                        e.lineIndent > t && 0 !== s)
                      )
                        F(e, 'bad indentation of a mapping entry');
                      else if (e.lineIndent < t) break;
                    }
                    return (
                      m && N(e, l, p, f, h, null),
                      v &&
                        ((e.tag = u),
                        (e.anchor = c),
                        (e.kind = 'mapping'),
                        (e.result = l)),
                      v
                    );
                  })(e, d, h))) ||
              (function(e, t) {
                var n,
                  r,
                  i,
                  a,
                  o,
                  s,
                  u,
                  c,
                  l,
                  p,
                  f = !0,
                  h = e.tag,
                  d = e.anchor,
                  m = {};
                if (91 === (p = e.input.charCodeAt(e.position)))
                  (i = 93), (s = !1), (r = []);
                else {
                  if (123 !== p) return !1;
                  (i = 125), (s = !0), (r = {});
                }
                for (
                  null !== e.anchor && (e.anchorMap[e.anchor] = r),
                    p = e.input.charCodeAt(++e.position);
                  0 !== p;

                ) {
                  if ((I(e, !0, t), (p = e.input.charCodeAt(e.position)) === i))
                    return (
                      e.position++,
                      (e.tag = h),
                      (e.anchor = d),
                      (e.kind = s ? 'mapping' : 'sequence'),
                      (e.result = r),
                      !0
                    );
                  f || F(e, 'missed comma between flow collection entries'),
                    (l = null),
                    (a = o = !1),
                    63 === p &&
                      y(e.input.charCodeAt(e.position + 1)) &&
                      ((a = o = !0), e.position++, I(e, !0, t)),
                    (n = e.line),
                    U(e, t, 1, !1, !0),
                    (c = e.tag),
                    (u = e.result),
                    I(e, !0, t),
                    (p = e.input.charCodeAt(e.position)),
                    (!o && e.line !== n) ||
                      58 !== p ||
                      ((a = !0),
                      (p = e.input.charCodeAt(++e.position)),
                      I(e, !0, t),
                      U(e, t, 1, !1, !0),
                      (l = e.result)),
                    s
                      ? N(e, r, m, c, u, l)
                      : a
                      ? r.push(N(e, null, m, c, u, l))
                      : r.push(u),
                    I(e, !0, t),
                    44 === (p = e.input.charCodeAt(e.position))
                      ? ((f = !0), (p = e.input.charCodeAt(++e.position)))
                      : (f = !1);
                }
                F(e, 'unexpected end of the stream within a flow collection');
              })(e, h)
              ? (S = !0)
              : ((s &&
                  (function(e, t) {
                    var n,
                      i,
                      a,
                      o,
                      s,
                      u = 1,
                      c = !1,
                      l = !1,
                      p = t,
                      f = 0,
                      h = !1;
                    if (124 === (o = e.input.charCodeAt(e.position))) i = !1;
                    else {
                      if (62 !== o) return !1;
                      i = !0;
                    }
                    for (e.kind = 'scalar', e.result = ''; 0 !== o; )
                      if (
                        43 === (o = e.input.charCodeAt(++e.position)) ||
                        45 === o
                      )
                        1 === u
                          ? (u = 43 === o ? 3 : 2)
                          : F(e, 'repeat of a chomping mode identifier');
                      else {
                        if (
                          !((a = 48 <= (s = o) && s <= 57 ? s - 48 : -1) >= 0)
                        )
                          break;
                        0 === a
                          ? F(
                              e,
                              'bad explicit indentation width of a block scalar; it cannot be less than one',
                            )
                          : l
                          ? F(e, 'repeat of an indentation width identifier')
                          : ((p = t + a - 1), (l = !0));
                      }
                    if (g(o)) {
                      do {
                        o = e.input.charCodeAt(++e.position);
                      } while (g(o));
                      if (35 === o)
                        do {
                          o = e.input.charCodeAt(++e.position);
                        } while (!m(o) && 0 !== o);
                    }
                    for (; 0 !== o; ) {
                      for (
                        B(e),
                          e.lineIndent = 0,
                          o = e.input.charCodeAt(e.position);
                        (!l || e.lineIndent < p) && 32 === o;

                      )
                        e.lineIndent++, (o = e.input.charCodeAt(++e.position));
                      if ((!l && e.lineIndent > p && (p = e.lineIndent), m(o)))
                        f++;
                      else {
                        if (e.lineIndent < p) {
                          3 === u
                            ? (e.result += r.repeat('\n', c ? 1 + f : f))
                            : 1 === u && c && (e.result += '\n');
                          break;
                        }
                        for (
                          i
                            ? g(o)
                              ? ((h = !0),
                                (e.result += r.repeat('\n', c ? 1 + f : f)))
                              : h
                              ? ((h = !1), (e.result += r.repeat('\n', f + 1)))
                              : 0 === f
                              ? c && (e.result += ' ')
                              : (e.result += r.repeat('\n', f))
                            : (e.result += r.repeat('\n', c ? 1 + f : f)),
                            c = !0,
                            l = !0,
                            f = 0,
                            n = e.position;
                          !m(o) && 0 !== o;

                        )
                          o = e.input.charCodeAt(++e.position);
                        _(e, n, e.position, !1);
                      }
                    }
                    return !0;
                  })(e, h)) ||
                (function(e, t) {
                  var n, r, i;
                  if (39 !== (n = e.input.charCodeAt(e.position))) return !1;
                  for (
                    e.kind = 'scalar',
                      e.result = '',
                      e.position++,
                      r = i = e.position;
                    0 !== (n = e.input.charCodeAt(e.position));

                  )
                    if (39 === n) {
                      if (
                        (_(e, r, e.position, !0),
                        39 !== (n = e.input.charCodeAt(++e.position)))
                      )
                        return !0;
                      (r = e.position), e.position++, (i = e.position);
                    } else
                      m(n)
                        ? (_(e, r, i, !0),
                          M(e, I(e, !1, t)),
                          (r = i = e.position))
                        : e.position === e.lineStart && P(e)
                        ? F(
                            e,
                            'unexpected end of the document within a single quoted scalar',
                          )
                        : (e.position++, (i = e.position));
                  F(
                    e,
                    'unexpected end of the stream within a single quoted scalar',
                  );
                })(e, h) ||
                (function(e, t) {
                  var n, r, i, a, o, s, u;
                  if (34 !== (s = e.input.charCodeAt(e.position))) return !1;
                  for (
                    e.kind = 'scalar',
                      e.result = '',
                      e.position++,
                      n = r = e.position;
                    0 !== (s = e.input.charCodeAt(e.position));

                  ) {
                    if (34 === s)
                      return _(e, n, e.position, !0), e.position++, !0;
                    if (92 === s) {
                      if (
                        (_(e, n, e.position, !0),
                        m((s = e.input.charCodeAt(++e.position))))
                      )
                        I(e, !1, t);
                      else if (s < 256 && b[s])
                        (e.result += x[s]), e.position++;
                      else if (
                        (o =
                          120 === (u = s)
                            ? 2
                            : 117 === u
                            ? 4
                            : 85 === u
                            ? 8
                            : 0) > 0
                      ) {
                        for (i = o, a = 0; i > 0; i--)
                          (o = D((s = e.input.charCodeAt(++e.position)))) >= 0
                            ? (a = (a << 4) + o)
                            : F(e, 'expected hexadecimal character');
                        (e.result += C(a)), e.position++;
                      } else F(e, 'unknown escape sequence');
                      n = r = e.position;
                    } else
                      m(s)
                        ? (_(e, n, r, !0),
                          M(e, I(e, !1, t)),
                          (n = r = e.position))
                        : e.position === e.lineStart && P(e)
                        ? F(
                            e,
                            'unexpected end of the document within a double quoted scalar',
                          )
                        : (e.position++, (r = e.position));
                  }
                  F(
                    e,
                    'unexpected end of the stream within a double quoted scalar',
                  );
                })(e, h)
                  ? (S = !0)
                  : !(function(e) {
                      var t, n, r;
                      if (42 !== (r = e.input.charCodeAt(e.position)))
                        return !1;
                      for (
                        r = e.input.charCodeAt(++e.position), t = e.position;
                        0 !== r && !y(r) && !v(r);

                      )
                        r = e.input.charCodeAt(++e.position);
                      return (
                        e.position === t &&
                          F(
                            e,
                            'name of an alias node must contain at least one character',
                          ),
                        (n = e.input.slice(t, e.position)),
                        u.call(e.anchorMap, n) ||
                          F(e, 'unidentified alias "' + n + '"'),
                        (e.result = e.anchorMap[n]),
                        I(e, !0, -1),
                        !0
                      );
                    })(e)
                  ? (function(e, t, n) {
                      var r,
                        i,
                        a,
                        o,
                        s,
                        u,
                        c,
                        l,
                        p = e.kind,
                        f = e.result;
                      if (
                        y((l = e.input.charCodeAt(e.position))) ||
                        v(l) ||
                        35 === l ||
                        38 === l ||
                        42 === l ||
                        33 === l ||
                        124 === l ||
                        62 === l ||
                        39 === l ||
                        34 === l ||
                        37 === l ||
                        64 === l ||
                        96 === l
                      )
                        return !1;
                      if (
                        (63 === l || 45 === l) &&
                        (y((r = e.input.charCodeAt(e.position + 1))) ||
                          (n && v(r)))
                      )
                        return !1;
                      for (
                        e.kind = 'scalar',
                          e.result = '',
                          i = a = e.position,
                          o = !1;
                        0 !== l;

                      ) {
                        if (58 === l) {
                          if (
                            y((r = e.input.charCodeAt(e.position + 1))) ||
                            (n && v(r))
                          )
                            break;
                        } else if (35 === l) {
                          if (y(e.input.charCodeAt(e.position - 1))) break;
                        } else {
                          if (
                            (e.position === e.lineStart && P(e)) ||
                            (n && v(l))
                          )
                            break;
                          if (m(l)) {
                            if (
                              ((s = e.line),
                              (u = e.lineStart),
                              (c = e.lineIndent),
                              I(e, !1, -1),
                              e.lineIndent >= t)
                            ) {
                              (o = !0), (l = e.input.charCodeAt(e.position));
                              continue;
                            }
                            (e.position = a),
                              (e.line = s),
                              (e.lineStart = u),
                              (e.lineIndent = c);
                            break;
                          }
                        }
                        o &&
                          (_(e, i, a, !1),
                          M(e, e.line - s),
                          (i = a = e.position),
                          (o = !1)),
                          g(l) || (a = e.position + 1),
                          (l = e.input.charCodeAt(++e.position));
                      }
                      return (
                        _(e, i, a, !1),
                        !!e.result || ((e.kind = p), (e.result = f), !1)
                      );
                    })(e, h, 1 === n) &&
                    ((S = !0), null === e.tag && (e.tag = '?'))
                  : ((S = !0),
                    (null === e.tag && null === e.anchor) ||
                      F(e, 'alias node should not have any properties')),
                null !== e.anchor && (e.anchorMap[e.anchor] = e.result))
            : 0 === E && (S = c && L(e, d))),
        null !== e.tag && '!' !== e.tag)
      )
        if ('?' === e.tag) {
          for (
            null !== e.result &&
              'scalar' !== e.kind &&
              F(
                e,
                'unacceptable node kind for !<?> tag; it should be "scalar", not "' +
                  e.kind +
                  '"',
              ),
              l = 0,
              p = e.implicitTypes.length;
            l < p;
            l += 1
          )
            if ((f = e.implicitTypes[l]).resolve(e.result)) {
              (e.result = f.construct(e.result)),
                (e.tag = f.tag),
                null !== e.anchor && (e.anchorMap[e.anchor] = e.result);
              break;
            }
        } else
          u.call(e.typeMap[e.kind || 'fallback'], e.tag)
            ? ((f = e.typeMap[e.kind || 'fallback'][e.tag]),
              null !== e.result &&
                f.kind !== e.kind &&
                F(
                  e,
                  'unacceptable node kind for !<' +
                    e.tag +
                    '> tag; it should be "' +
                    f.kind +
                    '", not "' +
                    e.kind +
                    '"',
                ),
              f.resolve(e.result)
                ? ((e.result = f.construct(e.result)),
                  null !== e.anchor && (e.anchorMap[e.anchor] = e.result))
                : F(
                    e,
                    'cannot resolve a node with !<' + e.tag + '> explicit tag',
                  ))
            : F(e, 'unknown tag !<' + e.tag + '>');
      return (
        null !== e.listener && e.listener('close', e),
        null !== e.tag || null !== e.anchor || S
      );
    }
    function V(e) {
      var t,
        n,
        r,
        i,
        a = e.position,
        o = !1;
      for (
        e.version = null,
          e.checkLineBreaks = e.legacy,
          e.tagMap = {},
          e.anchorMap = {};
        0 !== (i = e.input.charCodeAt(e.position)) &&
        (I(e, !0, -1),
        (i = e.input.charCodeAt(e.position)),
        !(e.lineIndent > 0 || 37 !== i));

      ) {
        for (
          o = !0, i = e.input.charCodeAt(++e.position), t = e.position;
          0 !== i && !y(i);

        )
          i = e.input.charCodeAt(++e.position);
        for (
          r = [],
            (n = e.input.slice(t, e.position)).length < 1 &&
              F(
                e,
                'directive name must not be less than one character in length',
              );
          0 !== i;

        ) {
          for (; g(i); ) i = e.input.charCodeAt(++e.position);
          if (35 === i) {
            do {
              i = e.input.charCodeAt(++e.position);
            } while (0 !== i && !m(i));
            break;
          }
          if (m(i)) break;
          for (t = e.position; 0 !== i && !y(i); )
            i = e.input.charCodeAt(++e.position);
          r.push(e.input.slice(t, e.position));
        }
        0 !== i && B(e),
          u.call(T, n)
            ? T[n](e, n, r)
            : k(e, 'unknown document directive "' + n + '"');
      }
      I(e, !0, -1),
        0 === e.lineIndent &&
        45 === e.input.charCodeAt(e.position) &&
        45 === e.input.charCodeAt(e.position + 1) &&
        45 === e.input.charCodeAt(e.position + 2)
          ? ((e.position += 3), I(e, !0, -1))
          : o && F(e, 'directives end mark is expected'),
        U(e, e.lineIndent - 1, 4, !1, !0),
        I(e, !0, -1),
        e.checkLineBreaks &&
          l.test(e.input.slice(a, e.position)) &&
          k(e, 'non-ASCII line breaks are interpreted as content'),
        e.documents.push(e.result),
        e.position === e.lineStart && P(e)
          ? 46 === e.input.charCodeAt(e.position) &&
            ((e.position += 3), I(e, !0, -1))
          : e.position < e.length - 1 &&
            F(e, 'end of the stream or a document separator is expected');
    }
    function W(e, t) {
      (t = t || {}),
        0 !== (e = String(e)).length &&
          (10 !== e.charCodeAt(e.length - 1) &&
            13 !== e.charCodeAt(e.length - 1) &&
            (e += '\n'),
          65279 === e.charCodeAt(0) && (e = e.slice(1)));
      var n = new S(e, t),
        r = e.indexOf('\0');
      for (
        -1 !== r &&
          ((n.position = r), F(n, 'null byte is not allowed in input')),
          n.input += '\0';
        32 === n.input.charCodeAt(n.position);

      )
        (n.lineIndent += 1), (n.position += 1);
      for (; n.position < n.length - 1; ) V(n);
      return n.documents;
    }
    function $(e, t, n) {
      null !== t &&
        'object' == typeof t &&
        void 0 === n &&
        ((n = t), (t = null));
      var r = W(e, n);
      if ('function' != typeof t) return r;
      for (var i = 0, a = r.length; i < a; i += 1) t(r[i]);
    }
    function q(e, t) {
      var n = W(e, t);
      if (0 !== n.length) {
        if (1 === n.length) return n[0];
        throw new i('expected a single document in the stream, but found more');
      }
    }
    (e.exports.loadAll = $),
      (e.exports.load = q),
      (e.exports.safeLoadAll = function(e, t, n) {
        return (
          'object' == typeof t &&
            null !== t &&
            void 0 === n &&
            ((n = t), (t = null)),
          $(e, t, r.extend({ schema: o }, n))
        );
      }),
      (e.exports.safeLoad = function(e, t) {
        return q(e, r.extend({ schema: o }, t));
      });
  },
  function(e, t, n) {
    'use strict';
    var r = n(13);
    function i(e, t, n, r, i) {
      (this.name = e),
        (this.buffer = t),
        (this.position = n),
        (this.line = r),
        (this.column = i);
    }
    (i.prototype.getSnippet = function(e, t) {
      var n, i, a, o, s;
      if (!this.buffer) return null;
      for (
        e = e || 4, t = t || 75, n = '', i = this.position;
        i > 0 && -1 === '\0\r\n\u2028\u2029'.indexOf(this.buffer.charAt(i - 1));

      )
        if (((i -= 1), this.position - i > t / 2 - 1)) {
          (n = ' ... '), (i += 5);
          break;
        }
      for (
        a = '', o = this.position;
        o < this.buffer.length &&
        -1 === '\0\r\n\u2028\u2029'.indexOf(this.buffer.charAt(o));

      )
        if ((o += 1) - this.position > t / 2 - 1) {
          (a = ' ... '), (o -= 5);
          break;
        }
      return (
        (s = this.buffer.slice(i, o)),
        r.repeat(' ', e) +
          n +
          s +
          a +
          '\n' +
          r.repeat(' ', e + this.position - i + n.length) +
          '^'
      );
    }),
      (i.prototype.toString = function(e) {
        var t,
          n = '';
        return (
          this.name && (n += 'in "' + this.name + '" '),
          (n += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1)),
          e || ((t = this.getSnippet()) && (n += ':\n' + t)),
          n
        );
      }),
      (e.exports = i);
  },
  function(e, t, n) {
    'use strict';
    var r = n(3);
    e.exports = new r('tag:yaml.org,2002:str', {
      kind: 'scalar',
      construct: function(e) {
        return null !== e ? e : '';
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3);
    e.exports = new r('tag:yaml.org,2002:seq', {
      kind: 'sequence',
      construct: function(e) {
        return null !== e ? e : [];
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3);
    e.exports = new r('tag:yaml.org,2002:map', {
      kind: 'mapping',
      construct: function(e) {
        return null !== e ? e : {};
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3);
    e.exports = new r('tag:yaml.org,2002:null', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !0;
        var t = e.length;
        return (
          (1 === t && '~' === e) ||
          (4 === t && ('null' === e || 'Null' === e || 'NULL' === e))
        );
      },
      construct: function() {
        return null;
      },
      predicate: function(e) {
        return null === e;
      },
      represent: {
        canonical: function() {
          return '~';
        },
        lowercase: function() {
          return 'null';
        },
        uppercase: function() {
          return 'NULL';
        },
        camelcase: function() {
          return 'Null';
        },
      },
      defaultStyle: 'lowercase',
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3);
    e.exports = new r('tag:yaml.org,2002:bool', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        var t = e.length;
        return (
          (4 === t && ('true' === e || 'True' === e || 'TRUE' === e)) ||
          (5 === t && ('false' === e || 'False' === e || 'FALSE' === e))
        );
      },
      construct: function(e) {
        return 'true' === e || 'True' === e || 'TRUE' === e;
      },
      predicate: function(e) {
        return '[object Boolean]' === Object.prototype.toString.call(e);
      },
      represent: {
        lowercase: function(e) {
          return e ? 'true' : 'false';
        },
        uppercase: function(e) {
          return e ? 'TRUE' : 'FALSE';
        },
        camelcase: function(e) {
          return e ? 'True' : 'False';
        },
      },
      defaultStyle: 'lowercase',
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(13),
      i = n(3);
    function a(e) {
      return 48 <= e && e <= 55;
    }
    function o(e) {
      return 48 <= e && e <= 57;
    }
    e.exports = new i('tag:yaml.org,2002:int', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        var t,
          n,
          r = e.length,
          i = 0,
          s = !1;
        if (!r) return !1;
        if ((('-' !== (t = e[i]) && '+' !== t) || (t = e[++i]), '0' === t)) {
          if (i + 1 === r) return !0;
          if ('b' === (t = e[++i])) {
            for (i++; i < r; i++)
              if ('_' !== (t = e[i])) {
                if ('0' !== t && '1' !== t) return !1;
                s = !0;
              }
            return s && '_' !== t;
          }
          if ('x' === t) {
            for (i++; i < r; i++)
              if ('_' !== (t = e[i])) {
                if (
                  !(
                    (48 <= (n = e.charCodeAt(i)) && n <= 57) ||
                    (65 <= n && n <= 70) ||
                    (97 <= n && n <= 102)
                  )
                )
                  return !1;
                s = !0;
              }
            return s && '_' !== t;
          }
          for (; i < r; i++)
            if ('_' !== (t = e[i])) {
              if (!a(e.charCodeAt(i))) return !1;
              s = !0;
            }
          return s && '_' !== t;
        }
        if ('_' === t) return !1;
        for (; i < r; i++)
          if ('_' !== (t = e[i])) {
            if (':' === t) break;
            if (!o(e.charCodeAt(i))) return !1;
            s = !0;
          }
        return (
          !(!s || '_' === t) &&
          (':' !== t || /^(:[0-5]?[0-9])+$/.test(e.slice(i)))
        );
      },
      construct: function(e) {
        var t,
          n,
          r = e,
          i = 1,
          a = [];
        return (
          -1 !== r.indexOf('_') && (r = r.replace(/_/g, '')),
          ('-' !== (t = r[0]) && '+' !== t) ||
            ('-' === t && (i = -1), (t = (r = r.slice(1))[0])),
          '0' === r
            ? 0
            : '0' === t
            ? 'b' === r[1]
              ? i * parseInt(r.slice(2), 2)
              : 'x' === r[1]
              ? i * parseInt(r, 16)
              : i * parseInt(r, 8)
            : -1 !== r.indexOf(':')
            ? (r.split(':').forEach(function(e) {
                a.unshift(parseInt(e, 10));
              }),
              (r = 0),
              (n = 1),
              a.forEach(function(e) {
                (r += e * n), (n *= 60);
              }),
              i * r)
            : i * parseInt(r, 10)
        );
      },
      predicate: function(e) {
        return (
          '[object Number]' === Object.prototype.toString.call(e) &&
          e % 1 == 0 &&
          !r.isNegativeZero(e)
        );
      },
      represent: {
        binary: function(e) {
          return e >= 0 ? '0b' + e.toString(2) : '-0b' + e.toString(2).slice(1);
        },
        octal: function(e) {
          return e >= 0 ? '0' + e.toString(8) : '-0' + e.toString(8).slice(1);
        },
        decimal: function(e) {
          return e.toString(10);
        },
        hexadecimal: function(e) {
          return e >= 0
            ? '0x' + e.toString(16).toUpperCase()
            : '-0x' +
                e
                  .toString(16)
                  .toUpperCase()
                  .slice(1);
        },
      },
      defaultStyle: 'decimal',
      styleAliases: {
        binary: [2, 'bin'],
        octal: [8, 'oct'],
        decimal: [10, 'dec'],
        hexadecimal: [16, 'hex'],
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(13),
      i = n(3),
      a = new RegExp(
        '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$',
      );
    var o = /^[-+]?[0-9]+e/;
    e.exports = new i('tag:yaml.org,2002:float', {
      kind: 'scalar',
      resolve: function(e) {
        return null !== e && !(!a.test(e) || '_' === e[e.length - 1]);
      },
      construct: function(e) {
        var t, n, r, i;
        return (
          (n = '-' === (t = e.replace(/_/g, '').toLowerCase())[0] ? -1 : 1),
          (i = []),
          '+-'.indexOf(t[0]) >= 0 && (t = t.slice(1)),
          '.inf' === t
            ? 1 === n
              ? Number.POSITIVE_INFINITY
              : Number.NEGATIVE_INFINITY
            : '.nan' === t
            ? NaN
            : t.indexOf(':') >= 0
            ? (t.split(':').forEach(function(e) {
                i.unshift(parseFloat(e, 10));
              }),
              (t = 0),
              (r = 1),
              i.forEach(function(e) {
                (t += e * r), (r *= 60);
              }),
              n * t)
            : n * parseFloat(t, 10)
        );
      },
      predicate: function(e) {
        return (
          '[object Number]' === Object.prototype.toString.call(e) &&
          (e % 1 != 0 || r.isNegativeZero(e))
        );
      },
      represent: function(e, t) {
        var n;
        if (isNaN(e))
          switch (t) {
            case 'lowercase':
              return '.nan';
            case 'uppercase':
              return '.NAN';
            case 'camelcase':
              return '.NaN';
          }
        else if (Number.POSITIVE_INFINITY === e)
          switch (t) {
            case 'lowercase':
              return '.inf';
            case 'uppercase':
              return '.INF';
            case 'camelcase':
              return '.Inf';
          }
        else if (Number.NEGATIVE_INFINITY === e)
          switch (t) {
            case 'lowercase':
              return '-.inf';
            case 'uppercase':
              return '-.INF';
            case 'camelcase':
              return '-.Inf';
          }
        else if (r.isNegativeZero(e)) return '-0.0';
        return (n = e.toString(10)), o.test(n) ? n.replace('e', '.e') : n;
      },
      defaultStyle: 'lowercase',
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3),
      i = new RegExp('^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$'),
      a = new RegExp(
        '^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$',
      );
    e.exports = new r('tag:yaml.org,2002:timestamp', {
      kind: 'scalar',
      resolve: function(e) {
        return null !== e && (null !== i.exec(e) || null !== a.exec(e));
      },
      construct: function(e) {
        var t,
          n,
          r,
          o,
          s,
          u,
          c,
          l,
          p = 0,
          f = null;
        if ((null === (t = i.exec(e)) && (t = a.exec(e)), null === t))
          throw new Error('Date resolve error');
        if (((n = +t[1]), (r = +t[2] - 1), (o = +t[3]), !t[4]))
          return new Date(Date.UTC(n, r, o));
        if (((s = +t[4]), (u = +t[5]), (c = +t[6]), t[7])) {
          for (p = t[7].slice(0, 3); p.length < 3; ) p += '0';
          p = +p;
        }
        return (
          t[9] &&
            ((f = 6e4 * (60 * +t[10] + +(t[11] || 0))),
            '-' === t[9] && (f = -f)),
          (l = new Date(Date.UTC(n, r, o, s, u, c, p))),
          f && l.setTime(l.getTime() - f),
          l
        );
      },
      instanceOf: Date,
      represent: function(e) {
        return e.toISOString();
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3);
    e.exports = new r('tag:yaml.org,2002:merge', {
      kind: 'scalar',
      resolve: function(e) {
        return '<<' === e || null === e;
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r;
    try {
      r = n(24).Buffer;
    } catch (e) {}
    var i = n(3),
      a =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';
    e.exports = new i('tag:yaml.org,2002:binary', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        var t,
          n,
          r = 0,
          i = e.length,
          o = a;
        for (n = 0; n < i; n++)
          if (!((t = o.indexOf(e.charAt(n))) > 64)) {
            if (t < 0) return !1;
            r += 6;
          }
        return r % 8 == 0;
      },
      construct: function(e) {
        var t,
          n,
          i = e.replace(/[\r\n=]/g, ''),
          o = i.length,
          s = a,
          u = 0,
          c = [];
        for (t = 0; t < o; t++)
          t % 4 == 0 &&
            t &&
            (c.push((u >> 16) & 255), c.push((u >> 8) & 255), c.push(255 & u)),
            (u = (u << 6) | s.indexOf(i.charAt(t)));
        return (
          0 === (n = (o % 4) * 6)
            ? (c.push((u >> 16) & 255), c.push((u >> 8) & 255), c.push(255 & u))
            : 18 === n
            ? (c.push((u >> 10) & 255), c.push((u >> 2) & 255))
            : 12 === n && c.push((u >> 4) & 255),
          r ? (r.from ? r.from(c) : new r(c)) : c
        );
      },
      predicate: function(e) {
        return r && r.isBuffer(e);
      },
      represent: function(e) {
        var t,
          n,
          r = '',
          i = 0,
          o = e.length,
          s = a;
        for (t = 0; t < o; t++)
          t % 3 == 0 &&
            t &&
            ((r += s[(i >> 18) & 63]),
            (r += s[(i >> 12) & 63]),
            (r += s[(i >> 6) & 63]),
            (r += s[63 & i])),
            (i = (i << 8) + e[t]);
        return (
          0 === (n = o % 3)
            ? ((r += s[(i >> 18) & 63]),
              (r += s[(i >> 12) & 63]),
              (r += s[(i >> 6) & 63]),
              (r += s[63 & i]))
            : 2 === n
            ? ((r += s[(i >> 10) & 63]),
              (r += s[(i >> 4) & 63]),
              (r += s[(i << 2) & 63]),
              (r += s[64]))
            : 1 === n &&
              ((r += s[(i >> 2) & 63]),
              (r += s[(i << 4) & 63]),
              (r += s[64]),
              (r += s[64])),
          r
        );
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3),
      i = Object.prototype.hasOwnProperty,
      a = Object.prototype.toString;
    e.exports = new r('tag:yaml.org,2002:omap', {
      kind: 'sequence',
      resolve: function(e) {
        if (null === e) return !0;
        var t,
          n,
          r,
          o,
          s,
          u = [],
          c = e;
        for (t = 0, n = c.length; t < n; t += 1) {
          if (((r = c[t]), (s = !1), '[object Object]' !== a.call(r)))
            return !1;
          for (o in r)
            if (i.call(r, o)) {
              if (s) return !1;
              s = !0;
            }
          if (!s) return !1;
          if (-1 !== u.indexOf(o)) return !1;
          u.push(o);
        }
        return !0;
      },
      construct: function(e) {
        return null !== e ? e : [];
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3),
      i = Object.prototype.toString;
    e.exports = new r('tag:yaml.org,2002:pairs', {
      kind: 'sequence',
      resolve: function(e) {
        if (null === e) return !0;
        var t,
          n,
          r,
          a,
          o,
          s = e;
        for (o = new Array(s.length), t = 0, n = s.length; t < n; t += 1) {
          if (((r = s[t]), '[object Object]' !== i.call(r))) return !1;
          if (1 !== (a = Object.keys(r)).length) return !1;
          o[t] = [a[0], r[a[0]]];
        }
        return !0;
      },
      construct: function(e) {
        if (null === e) return [];
        var t,
          n,
          r,
          i,
          a,
          o = e;
        for (a = new Array(o.length), t = 0, n = o.length; t < n; t += 1)
          (r = o[t]), (i = Object.keys(r)), (a[t] = [i[0], r[i[0]]]);
        return a;
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3),
      i = Object.prototype.hasOwnProperty;
    e.exports = new r('tag:yaml.org,2002:set', {
      kind: 'mapping',
      resolve: function(e) {
        if (null === e) return !0;
        var t,
          n = e;
        for (t in n) if (i.call(n, t) && null !== n[t]) return !1;
        return !0;
      },
      construct: function(e) {
        return null !== e ? e : {};
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3);
    e.exports = new r('tag:yaml.org,2002:js/undefined', {
      kind: 'scalar',
      resolve: function() {
        return !0;
      },
      construct: function() {},
      predicate: function(e) {
        return void 0 === e;
      },
      represent: function() {
        return '';
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r = n(3);
    e.exports = new r('tag:yaml.org,2002:js/regexp', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        if (0 === e.length) return !1;
        var t = e,
          n = /\/([gim]*)$/.exec(e),
          r = '';
        if ('/' === t[0]) {
          if ((n && (r = n[1]), r.length > 3)) return !1;
          if ('/' !== t[t.length - r.length - 1]) return !1;
        }
        return !0;
      },
      construct: function(e) {
        var t = e,
          n = /\/([gim]*)$/.exec(e),
          r = '';
        return (
          '/' === t[0] &&
            (n && (r = n[1]), (t = t.slice(1, t.length - r.length - 1))),
          new RegExp(t, r)
        );
      },
      predicate: function(e) {
        return '[object RegExp]' === Object.prototype.toString.call(e);
      },
      represent: function(e) {
        var t = '/' + e.source + '/';
        return (
          e.global && (t += 'g'),
          e.multiline && (t += 'm'),
          e.ignoreCase && (t += 'i'),
          t
        );
      },
    });
  },
  function(e, t, n) {
    'use strict';
    var r;
    try {
      r = n(76);
    } catch (e) {
      'undefined' != typeof window && (r = window.esprima);
    }
    var i = n(3);
    e.exports = new i('tag:yaml.org,2002:js/function', {
      kind: 'scalar',
      resolve: function(e) {
        if (null === e) return !1;
        try {
          var t = '(' + e + ')',
            n = r.parse(t, { range: !0 });
          return (
            'Program' === n.type &&
            1 === n.body.length &&
            'ExpressionStatement' === n.body[0].type &&
            ('ArrowFunctionExpression' === n.body[0].expression.type ||
              'FunctionExpression' === n.body[0].expression.type)
          );
        } catch (e) {
          return !1;
        }
      },
      construct: function(e) {
        var t,
          n = '(' + e + ')',
          i = r.parse(n, { range: !0 }),
          a = [];
        if (
          'Program' !== i.type ||
          1 !== i.body.length ||
          'ExpressionStatement' !== i.body[0].type ||
          ('ArrowFunctionExpression' !== i.body[0].expression.type &&
            'FunctionExpression' !== i.body[0].expression.type)
        )
          throw new Error('Failed to resolve function');
        return (
          i.body[0].expression.params.forEach(function(e) {
            a.push(e.name);
          }),
          (t = i.body[0].expression.body.range),
          'BlockStatement' === i.body[0].expression.body.type
            ? new Function(a, n.slice(t[0] + 1, t[1] - 1))
            : new Function(a, 'return ' + n.slice(t[0], t[1]))
        );
      },
      predicate: function(e) {
        return '[object Function]' === Object.prototype.toString.call(e);
      },
      represent: function(e) {
        return e.toString();
      },
    });
  },
  function(e, t, n) {
    var r;
    (r = function() {
      return (function(e) {
        var t = {};
        function n(r) {
          if (t[r]) return t[r].exports;
          var i = (t[r] = { exports: {}, id: r, loaded: !1 });
          return (
            e[r].call(i.exports, i, i.exports, n), (i.loaded = !0), i.exports
          );
        }
        return (n.m = e), (n.c = t), (n.p = ''), n(0);
      })([
        function(e, t, n) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var r = n(1),
            i = n(3),
            a = n(8),
            o = n(15);
          function s(e, t, n) {
            var o = null,
              s = function(e, t) {
                n && n(e, t), o && o.visit(e, t);
              },
              u = 'function' == typeof n ? s : null,
              c = !1;
            if (t) {
              c = 'boolean' == typeof t.comment && t.comment;
              var l = 'boolean' == typeof t.attachComment && t.attachComment;
              (c || l) &&
                (((o = new r.CommentHandler()).attach = l),
                (t.comment = !0),
                (u = s));
            }
            var p,
              f = !1;
            t &&
              'string' == typeof t.sourceType &&
              (f = 'module' === t.sourceType),
              (p =
                t && 'boolean' == typeof t.jsx && t.jsx
                  ? new i.JSXParser(e, t, u)
                  : new a.Parser(e, t, u));
            var h = f ? p.parseModule() : p.parseScript();
            return (
              c && o && (h.comments = o.comments),
              p.config.tokens && (h.tokens = p.tokens),
              p.config.tolerant && (h.errors = p.errorHandler.errors),
              h
            );
          }
          (t.parse = s),
            (t.parseModule = function(e, t, n) {
              var r = t || {};
              return (r.sourceType = 'module'), s(e, r, n);
            }),
            (t.parseScript = function(e, t, n) {
              var r = t || {};
              return (r.sourceType = 'script'), s(e, r, n);
            }),
            (t.tokenize = function(e, t, n) {
              var r,
                i = new o.Tokenizer(e, t);
              r = [];
              try {
                for (;;) {
                  var a = i.getNextToken();
                  if (!a) break;
                  n && (a = n(a)), r.push(a);
                }
              } catch (e) {
                i.errorHandler.tolerate(e);
              }
              return i.errorHandler.tolerant && (r.errors = i.errors()), r;
            });
          var u = n(2);
          (t.Syntax = u.Syntax), (t.version = '4.0.1');
        },
        function(e, t, n) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var r = n(2),
            i = (function() {
              function e() {
                (this.attach = !1),
                  (this.comments = []),
                  (this.stack = []),
                  (this.leading = []),
                  (this.trailing = []);
              }
              return (
                (e.prototype.insertInnerComments = function(e, t) {
                  if (
                    e.type === r.Syntax.BlockStatement &&
                    0 === e.body.length
                  ) {
                    for (var n = [], i = this.leading.length - 1; i >= 0; --i) {
                      var a = this.leading[i];
                      t.end.offset >= a.start &&
                        (n.unshift(a.comment),
                        this.leading.splice(i, 1),
                        this.trailing.splice(i, 1));
                    }
                    n.length && (e.innerComments = n);
                  }
                }),
                (e.prototype.findTrailingComments = function(e) {
                  var t = [];
                  if (this.trailing.length > 0) {
                    for (var n = this.trailing.length - 1; n >= 0; --n) {
                      var r = this.trailing[n];
                      r.start >= e.end.offset && t.unshift(r.comment);
                    }
                    return (this.trailing.length = 0), t;
                  }
                  var i = this.stack[this.stack.length - 1];
                  if (i && i.node.trailingComments) {
                    var a = i.node.trailingComments[0];
                    a &&
                      a.range[0] >= e.end.offset &&
                      ((t = i.node.trailingComments),
                      delete i.node.trailingComments);
                  }
                  return t;
                }),
                (e.prototype.findLeadingComments = function(e) {
                  for (
                    var t, n = [];
                    this.stack.length > 0 &&
                    (a = this.stack[this.stack.length - 1]) &&
                      a.start >= e.start.offset;

                  )
                    (t = a.node), this.stack.pop();
                  if (t) {
                    for (
                      var r =
                        (t.leadingComments ? t.leadingComments.length : 0) - 1;
                      r >= 0;
                      --r
                    ) {
                      var i = t.leadingComments[r];
                      i.range[1] <= e.start.offset &&
                        (n.unshift(i), t.leadingComments.splice(r, 1));
                    }
                    return (
                      t.leadingComments &&
                        0 === t.leadingComments.length &&
                        delete t.leadingComments,
                      n
                    );
                  }
                  for (r = this.leading.length - 1; r >= 0; --r) {
                    var a;
                    (a = this.leading[r]).start <= e.start.offset &&
                      (n.unshift(a.comment), this.leading.splice(r, 1));
                  }
                  return n;
                }),
                (e.prototype.visitNode = function(e, t) {
                  if (!(e.type === r.Syntax.Program && e.body.length > 0)) {
                    this.insertInnerComments(e, t);
                    var n = this.findTrailingComments(t),
                      i = this.findLeadingComments(t);
                    i.length > 0 && (e.leadingComments = i),
                      n.length > 0 && (e.trailingComments = n),
                      this.stack.push({ node: e, start: t.start.offset });
                  }
                }),
                (e.prototype.visitComment = function(e, t) {
                  var n = 'L' === e.type[0] ? 'Line' : 'Block',
                    r = { type: n, value: e.value };
                  if (
                    (e.range && (r.range = e.range),
                    e.loc && (r.loc = e.loc),
                    this.comments.push(r),
                    this.attach)
                  ) {
                    var i = {
                      comment: {
                        type: n,
                        value: e.value,
                        range: [t.start.offset, t.end.offset],
                      },
                      start: t.start.offset,
                    };
                    e.loc && (i.comment.loc = e.loc),
                      (e.type = n),
                      this.leading.push(i),
                      this.trailing.push(i);
                  }
                }),
                (e.prototype.visit = function(e, t) {
                  'LineComment' === e.type || 'BlockComment' === e.type
                    ? this.visitComment(e, t)
                    : this.attach && this.visitNode(e, t);
                }),
                e
              );
            })();
          t.CommentHandler = i;
        },
        function(e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.Syntax = {
              AssignmentExpression: 'AssignmentExpression',
              AssignmentPattern: 'AssignmentPattern',
              ArrayExpression: 'ArrayExpression',
              ArrayPattern: 'ArrayPattern',
              ArrowFunctionExpression: 'ArrowFunctionExpression',
              AwaitExpression: 'AwaitExpression',
              BlockStatement: 'BlockStatement',
              BinaryExpression: 'BinaryExpression',
              BreakStatement: 'BreakStatement',
              CallExpression: 'CallExpression',
              CatchClause: 'CatchClause',
              ClassBody: 'ClassBody',
              ClassDeclaration: 'ClassDeclaration',
              ClassExpression: 'ClassExpression',
              ConditionalExpression: 'ConditionalExpression',
              ContinueStatement: 'ContinueStatement',
              DoWhileStatement: 'DoWhileStatement',
              DebuggerStatement: 'DebuggerStatement',
              EmptyStatement: 'EmptyStatement',
              ExportAllDeclaration: 'ExportAllDeclaration',
              ExportDefaultDeclaration: 'ExportDefaultDeclaration',
              ExportNamedDeclaration: 'ExportNamedDeclaration',
              ExportSpecifier: 'ExportSpecifier',
              ExpressionStatement: 'ExpressionStatement',
              ForStatement: 'ForStatement',
              ForOfStatement: 'ForOfStatement',
              ForInStatement: 'ForInStatement',
              FunctionDeclaration: 'FunctionDeclaration',
              FunctionExpression: 'FunctionExpression',
              Identifier: 'Identifier',
              IfStatement: 'IfStatement',
              ImportDeclaration: 'ImportDeclaration',
              ImportDefaultSpecifier: 'ImportDefaultSpecifier',
              ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
              ImportSpecifier: 'ImportSpecifier',
              Literal: 'Literal',
              LabeledStatement: 'LabeledStatement',
              LogicalExpression: 'LogicalExpression',
              MemberExpression: 'MemberExpression',
              MetaProperty: 'MetaProperty',
              MethodDefinition: 'MethodDefinition',
              NewExpression: 'NewExpression',
              ObjectExpression: 'ObjectExpression',
              ObjectPattern: 'ObjectPattern',
              Program: 'Program',
              Property: 'Property',
              RestElement: 'RestElement',
              ReturnStatement: 'ReturnStatement',
              SequenceExpression: 'SequenceExpression',
              SpreadElement: 'SpreadElement',
              Super: 'Super',
              SwitchCase: 'SwitchCase',
              SwitchStatement: 'SwitchStatement',
              TaggedTemplateExpression: 'TaggedTemplateExpression',
              TemplateElement: 'TemplateElement',
              TemplateLiteral: 'TemplateLiteral',
              ThisExpression: 'ThisExpression',
              ThrowStatement: 'ThrowStatement',
              TryStatement: 'TryStatement',
              UnaryExpression: 'UnaryExpression',
              UpdateExpression: 'UpdateExpression',
              VariableDeclaration: 'VariableDeclaration',
              VariableDeclarator: 'VariableDeclarator',
              WhileStatement: 'WhileStatement',
              WithStatement: 'WithStatement',
              YieldExpression: 'YieldExpression',
            });
        },
        function(e, t, n) {
          'use strict';
          var r,
            i =
              (this && this.__extends) ||
              ((r =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(e, t) {
                    e.__proto__ = t;
                  }) ||
                function(e, t) {
                  for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                }),
              function(e, t) {
                function n() {
                  this.constructor = e;
                }
                r(e, t),
                  (e.prototype =
                    null === t
                      ? Object.create(t)
                      : ((n.prototype = t.prototype), new n()));
              });
          Object.defineProperty(t, '__esModule', { value: !0 });
          var a = n(4),
            o = n(5),
            s = n(6),
            u = n(7),
            c = n(8),
            l = n(13),
            p = n(14);
          function f(e) {
            var t;
            switch (e.type) {
              case s.JSXSyntax.JSXIdentifier:
                t = e.name;
                break;
              case s.JSXSyntax.JSXNamespacedName:
                var n = e;
                t = f(n.namespace) + ':' + f(n.name);
                break;
              case s.JSXSyntax.JSXMemberExpression:
                var r = e;
                t = f(r.object) + '.' + f(r.property);
            }
            return t;
          }
          (l.TokenName[100] = 'JSXIdentifier'), (l.TokenName[101] = 'JSXText');
          var h = (function(e) {
            function t(t, n, r) {
              return e.call(this, t, n, r) || this;
            }
            return (
              i(t, e),
              (t.prototype.parsePrimaryExpression = function() {
                return this.match('<')
                  ? this.parseJSXRoot()
                  : e.prototype.parsePrimaryExpression.call(this);
              }),
              (t.prototype.startJSX = function() {
                (this.scanner.index = this.startMarker.index),
                  (this.scanner.lineNumber = this.startMarker.line),
                  (this.scanner.lineStart =
                    this.startMarker.index - this.startMarker.column);
              }),
              (t.prototype.finishJSX = function() {
                this.nextToken();
              }),
              (t.prototype.reenterJSX = function() {
                this.startJSX(),
                  this.expectJSX('}'),
                  this.config.tokens && this.tokens.pop();
              }),
              (t.prototype.createJSXNode = function() {
                return (
                  this.collectComments(),
                  {
                    index: this.scanner.index,
                    line: this.scanner.lineNumber,
                    column: this.scanner.index - this.scanner.lineStart,
                  }
                );
              }),
              (t.prototype.createJSXChildNode = function() {
                return {
                  index: this.scanner.index,
                  line: this.scanner.lineNumber,
                  column: this.scanner.index - this.scanner.lineStart,
                };
              }),
              (t.prototype.scanXHTMLEntity = function(e) {
                for (
                  var t = '&', n = !0, r = !1, i = !1, o = !1;
                  !this.scanner.eof() && n && !r;

                ) {
                  var s = this.scanner.source[this.scanner.index];
                  if (s === e) break;
                  if (((r = ';' === s), (t += s), ++this.scanner.index, !r))
                    switch (t.length) {
                      case 2:
                        i = '#' === s;
                        break;
                      case 3:
                        i &&
                          ((n =
                            (o = 'x' === s) ||
                            a.Character.isDecimalDigit(s.charCodeAt(0))),
                          (i = i && !o));
                        break;
                      default:
                        n =
                          (n =
                            n &&
                            !(
                              i && !a.Character.isDecimalDigit(s.charCodeAt(0))
                            )) &&
                          !(o && !a.Character.isHexDigit(s.charCodeAt(0)));
                    }
                }
                if (n && r && t.length > 2) {
                  var u = t.substr(1, t.length - 2);
                  i && u.length > 1
                    ? (t = String.fromCharCode(parseInt(u.substr(1), 10)))
                    : o && u.length > 2
                    ? (t = String.fromCharCode(parseInt('0' + u.substr(1), 16)))
                    : i || o || !p.XHTMLEntities[u] || (t = p.XHTMLEntities[u]);
                }
                return t;
              }),
              (t.prototype.lexJSX = function() {
                var e = this.scanner.source.charCodeAt(this.scanner.index);
                if (
                  60 === e ||
                  62 === e ||
                  47 === e ||
                  58 === e ||
                  61 === e ||
                  123 === e ||
                  125 === e
                )
                  return {
                    type: 7,
                    value: (s = this.scanner.source[this.scanner.index++]),
                    lineNumber: this.scanner.lineNumber,
                    lineStart: this.scanner.lineStart,
                    start: this.scanner.index - 1,
                    end: this.scanner.index,
                  };
                if (34 === e || 39 === e) {
                  for (
                    var t = this.scanner.index,
                      n = this.scanner.source[this.scanner.index++],
                      r = '';
                    !this.scanner.eof() &&
                    (u = this.scanner.source[this.scanner.index++]) !== n;

                  )
                    r += '&' === u ? this.scanXHTMLEntity(n) : u;
                  return {
                    type: 8,
                    value: r,
                    lineNumber: this.scanner.lineNumber,
                    lineStart: this.scanner.lineStart,
                    start: t,
                    end: this.scanner.index,
                  };
                }
                if (46 === e) {
                  var i = this.scanner.source.charCodeAt(
                      this.scanner.index + 1,
                    ),
                    o = this.scanner.source.charCodeAt(this.scanner.index + 2),
                    s = 46 === i && 46 === o ? '...' : '.';
                  return (
                    (t = this.scanner.index),
                    (this.scanner.index += s.length),
                    {
                      type: 7,
                      value: s,
                      lineNumber: this.scanner.lineNumber,
                      lineStart: this.scanner.lineStart,
                      start: t,
                      end: this.scanner.index,
                    }
                  );
                }
                if (96 === e)
                  return {
                    type: 10,
                    value: '',
                    lineNumber: this.scanner.lineNumber,
                    lineStart: this.scanner.lineStart,
                    start: this.scanner.index,
                    end: this.scanner.index,
                  };
                if (a.Character.isIdentifierStart(e) && 92 !== e) {
                  for (
                    t = this.scanner.index, ++this.scanner.index;
                    !this.scanner.eof();

                  ) {
                    var u = this.scanner.source.charCodeAt(this.scanner.index);
                    if (a.Character.isIdentifierPart(u) && 92 !== u)
                      ++this.scanner.index;
                    else {
                      if (45 !== u) break;
                      ++this.scanner.index;
                    }
                  }
                  return {
                    type: 100,
                    value: this.scanner.source.slice(t, this.scanner.index),
                    lineNumber: this.scanner.lineNumber,
                    lineStart: this.scanner.lineStart,
                    start: t,
                    end: this.scanner.index,
                  };
                }
                return this.scanner.lex();
              }),
              (t.prototype.nextJSXToken = function() {
                this.collectComments(),
                  (this.startMarker.index = this.scanner.index),
                  (this.startMarker.line = this.scanner.lineNumber),
                  (this.startMarker.column =
                    this.scanner.index - this.scanner.lineStart);
                var e = this.lexJSX();
                return (
                  (this.lastMarker.index = this.scanner.index),
                  (this.lastMarker.line = this.scanner.lineNumber),
                  (this.lastMarker.column =
                    this.scanner.index - this.scanner.lineStart),
                  this.config.tokens && this.tokens.push(this.convertToken(e)),
                  e
                );
              }),
              (t.prototype.nextJSXText = function() {
                (this.startMarker.index = this.scanner.index),
                  (this.startMarker.line = this.scanner.lineNumber),
                  (this.startMarker.column =
                    this.scanner.index - this.scanner.lineStart);
                for (
                  var e = this.scanner.index, t = '';
                  !this.scanner.eof();

                ) {
                  var n = this.scanner.source[this.scanner.index];
                  if ('{' === n || '<' === n) break;
                  ++this.scanner.index,
                    (t += n),
                    a.Character.isLineTerminator(n.charCodeAt(0)) &&
                      (++this.scanner.lineNumber,
                      '\r' === n &&
                        '\n' === this.scanner.source[this.scanner.index] &&
                        ++this.scanner.index,
                      (this.scanner.lineStart = this.scanner.index));
                }
                (this.lastMarker.index = this.scanner.index),
                  (this.lastMarker.line = this.scanner.lineNumber),
                  (this.lastMarker.column =
                    this.scanner.index - this.scanner.lineStart);
                var r = {
                  type: 101,
                  value: t,
                  lineNumber: this.scanner.lineNumber,
                  lineStart: this.scanner.lineStart,
                  start: e,
                  end: this.scanner.index,
                };
                return (
                  t.length > 0 &&
                    this.config.tokens &&
                    this.tokens.push(this.convertToken(r)),
                  r
                );
              }),
              (t.prototype.peekJSXToken = function() {
                var e = this.scanner.saveState();
                this.scanner.scanComments();
                var t = this.lexJSX();
                return this.scanner.restoreState(e), t;
              }),
              (t.prototype.expectJSX = function(e) {
                var t = this.nextJSXToken();
                (7 === t.type && t.value === e) || this.throwUnexpectedToken(t);
              }),
              (t.prototype.matchJSX = function(e) {
                var t = this.peekJSXToken();
                return 7 === t.type && t.value === e;
              }),
              (t.prototype.parseJSXIdentifier = function() {
                var e = this.createJSXNode(),
                  t = this.nextJSXToken();
                return (
                  100 !== t.type && this.throwUnexpectedToken(t),
                  this.finalize(e, new o.JSXIdentifier(t.value))
                );
              }),
              (t.prototype.parseJSXElementName = function() {
                var e = this.createJSXNode(),
                  t = this.parseJSXIdentifier();
                if (this.matchJSX(':')) {
                  var n = t;
                  this.expectJSX(':');
                  var r = this.parseJSXIdentifier();
                  t = this.finalize(e, new o.JSXNamespacedName(n, r));
                } else if (this.matchJSX('.'))
                  for (; this.matchJSX('.'); ) {
                    var i = t;
                    this.expectJSX('.');
                    var a = this.parseJSXIdentifier();
                    t = this.finalize(e, new o.JSXMemberExpression(i, a));
                  }
                return t;
              }),
              (t.prototype.parseJSXAttributeName = function() {
                var e,
                  t = this.createJSXNode(),
                  n = this.parseJSXIdentifier();
                if (this.matchJSX(':')) {
                  var r = n;
                  this.expectJSX(':');
                  var i = this.parseJSXIdentifier();
                  e = this.finalize(t, new o.JSXNamespacedName(r, i));
                } else e = n;
                return e;
              }),
              (t.prototype.parseJSXStringLiteralAttribute = function() {
                var e = this.createJSXNode(),
                  t = this.nextJSXToken();
                8 !== t.type && this.throwUnexpectedToken(t);
                var n = this.getTokenRaw(t);
                return this.finalize(e, new u.Literal(t.value, n));
              }),
              (t.prototype.parseJSXExpressionAttribute = function() {
                var e = this.createJSXNode();
                this.expectJSX('{'),
                  this.finishJSX(),
                  this.match('}') &&
                    this.tolerateError(
                      'JSX attributes must only be assigned a non-empty expression',
                    );
                var t = this.parseAssignmentExpression();
                return (
                  this.reenterJSX(),
                  this.finalize(e, new o.JSXExpressionContainer(t))
                );
              }),
              (t.prototype.parseJSXAttributeValue = function() {
                return this.matchJSX('{')
                  ? this.parseJSXExpressionAttribute()
                  : this.matchJSX('<')
                  ? this.parseJSXElement()
                  : this.parseJSXStringLiteralAttribute();
              }),
              (t.prototype.parseJSXNameValueAttribute = function() {
                var e = this.createJSXNode(),
                  t = this.parseJSXAttributeName(),
                  n = null;
                return (
                  this.matchJSX('=') &&
                    (this.expectJSX('='), (n = this.parseJSXAttributeValue())),
                  this.finalize(e, new o.JSXAttribute(t, n))
                );
              }),
              (t.prototype.parseJSXSpreadAttribute = function() {
                var e = this.createJSXNode();
                this.expectJSX('{'), this.expectJSX('...'), this.finishJSX();
                var t = this.parseAssignmentExpression();
                return (
                  this.reenterJSX(),
                  this.finalize(e, new o.JSXSpreadAttribute(t))
                );
              }),
              (t.prototype.parseJSXAttributes = function() {
                for (var e = []; !this.matchJSX('/') && !this.matchJSX('>'); ) {
                  var t = this.matchJSX('{')
                    ? this.parseJSXSpreadAttribute()
                    : this.parseJSXNameValueAttribute();
                  e.push(t);
                }
                return e;
              }),
              (t.prototype.parseJSXOpeningElement = function() {
                var e = this.createJSXNode();
                this.expectJSX('<');
                var t = this.parseJSXElementName(),
                  n = this.parseJSXAttributes(),
                  r = this.matchJSX('/');
                return (
                  r && this.expectJSX('/'),
                  this.expectJSX('>'),
                  this.finalize(e, new o.JSXOpeningElement(t, r, n))
                );
              }),
              (t.prototype.parseJSXBoundaryElement = function() {
                var e = this.createJSXNode();
                if ((this.expectJSX('<'), this.matchJSX('/'))) {
                  this.expectJSX('/');
                  var t = this.parseJSXElementName();
                  return (
                    this.expectJSX('>'),
                    this.finalize(e, new o.JSXClosingElement(t))
                  );
                }
                var n = this.parseJSXElementName(),
                  r = this.parseJSXAttributes(),
                  i = this.matchJSX('/');
                return (
                  i && this.expectJSX('/'),
                  this.expectJSX('>'),
                  this.finalize(e, new o.JSXOpeningElement(n, i, r))
                );
              }),
              (t.prototype.parseJSXEmptyExpression = function() {
                var e = this.createJSXChildNode();
                return (
                  this.collectComments(),
                  (this.lastMarker.index = this.scanner.index),
                  (this.lastMarker.line = this.scanner.lineNumber),
                  (this.lastMarker.column =
                    this.scanner.index - this.scanner.lineStart),
                  this.finalize(e, new o.JSXEmptyExpression())
                );
              }),
              (t.prototype.parseJSXExpressionContainer = function() {
                var e,
                  t = this.createJSXNode();
                return (
                  this.expectJSX('{'),
                  this.matchJSX('}')
                    ? ((e = this.parseJSXEmptyExpression()),
                      this.expectJSX('}'))
                    : (this.finishJSX(),
                      (e = this.parseAssignmentExpression()),
                      this.reenterJSX()),
                  this.finalize(t, new o.JSXExpressionContainer(e))
                );
              }),
              (t.prototype.parseJSXChildren = function() {
                for (var e = []; !this.scanner.eof(); ) {
                  var t = this.createJSXChildNode(),
                    n = this.nextJSXText();
                  if (n.start < n.end) {
                    var r = this.getTokenRaw(n),
                      i = this.finalize(t, new o.JSXText(n.value, r));
                    e.push(i);
                  }
                  if ('{' !== this.scanner.source[this.scanner.index]) break;
                  var a = this.parseJSXExpressionContainer();
                  e.push(a);
                }
                return e;
              }),
              (t.prototype.parseComplexJSXElement = function(e) {
                for (var t = []; !this.scanner.eof(); ) {
                  e.children = e.children.concat(this.parseJSXChildren());
                  var n = this.createJSXChildNode(),
                    r = this.parseJSXBoundaryElement();
                  if (r.type === s.JSXSyntax.JSXOpeningElement) {
                    var i = r;
                    if (i.selfClosing) {
                      var a = this.finalize(n, new o.JSXElement(i, [], null));
                      e.children.push(a);
                    } else
                      t.push(e),
                        (e = {
                          node: n,
                          opening: i,
                          closing: null,
                          children: [],
                        });
                  }
                  if (r.type === s.JSXSyntax.JSXClosingElement) {
                    e.closing = r;
                    var u = f(e.opening.name);
                    if (
                      (u !== f(e.closing.name) &&
                        this.tolerateError(
                          'Expected corresponding JSX closing tag for %0',
                          u,
                        ),
                      !(t.length > 0))
                    )
                      break;
                    (a = this.finalize(
                      e.node,
                      new o.JSXElement(e.opening, e.children, e.closing),
                    )),
                      (e = t[t.length - 1]).children.push(a),
                      t.pop();
                  }
                }
                return e;
              }),
              (t.prototype.parseJSXElement = function() {
                var e = this.createJSXNode(),
                  t = this.parseJSXOpeningElement(),
                  n = [],
                  r = null;
                if (!t.selfClosing) {
                  var i = this.parseComplexJSXElement({
                    node: e,
                    opening: t,
                    closing: r,
                    children: n,
                  });
                  (n = i.children), (r = i.closing);
                }
                return this.finalize(e, new o.JSXElement(t, n, r));
              }),
              (t.prototype.parseJSXRoot = function() {
                this.config.tokens && this.tokens.pop(), this.startJSX();
                var e = this.parseJSXElement();
                return this.finishJSX(), e;
              }),
              (t.prototype.isStartOfExpression = function() {
                return (
                  e.prototype.isStartOfExpression.call(this) || this.match('<')
                );
              }),
              t
            );
          })(c.Parser);
          t.JSXParser = h;
        },
        function(e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = {
            NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
            NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,
          };
          t.Character = {
            fromCodePoint: function(e) {
              return e < 65536
                ? String.fromCharCode(e)
                : String.fromCharCode(55296 + ((e - 65536) >> 10)) +
                    String.fromCharCode(56320 + ((e - 65536) & 1023));
            },
            isWhiteSpace: function(e) {
              return (
                32 === e ||
                9 === e ||
                11 === e ||
                12 === e ||
                160 === e ||
                (e >= 5760 &&
                  [
                    5760,
                    8192,
                    8193,
                    8194,
                    8195,
                    8196,
                    8197,
                    8198,
                    8199,
                    8200,
                    8201,
                    8202,
                    8239,
                    8287,
                    12288,
                    65279,
                  ].indexOf(e) >= 0)
              );
            },
            isLineTerminator: function(e) {
              return 10 === e || 13 === e || 8232 === e || 8233 === e;
            },
            isIdentifierStart: function(e) {
              return (
                36 === e ||
                95 === e ||
                (e >= 65 && e <= 90) ||
                (e >= 97 && e <= 122) ||
                92 === e ||
                (e >= 128 &&
                  n.NonAsciiIdentifierStart.test(t.Character.fromCodePoint(e)))
              );
            },
            isIdentifierPart: function(e) {
              return (
                36 === e ||
                95 === e ||
                (e >= 65 && e <= 90) ||
                (e >= 97 && e <= 122) ||
                (e >= 48 && e <= 57) ||
                92 === e ||
                (e >= 128 &&
                  n.NonAsciiIdentifierPart.test(t.Character.fromCodePoint(e)))
              );
            },
            isDecimalDigit: function(e) {
              return e >= 48 && e <= 57;
            },
            isHexDigit: function(e) {
              return (
                (e >= 48 && e <= 57) ||
                (e >= 65 && e <= 70) ||
                (e >= 97 && e <= 102)
              );
            },
            isOctalDigit: function(e) {
              return e >= 48 && e <= 55;
            },
          };
        },
        function(e, t, n) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var r = n(6),
            i = function(e) {
              (this.type = r.JSXSyntax.JSXClosingElement), (this.name = e);
            };
          t.JSXClosingElement = i;
          var a = function(e, t, n) {
            (this.type = r.JSXSyntax.JSXElement),
              (this.openingElement = e),
              (this.children = t),
              (this.closingElement = n);
          };
          t.JSXElement = a;
          var o = function() {
            this.type = r.JSXSyntax.JSXEmptyExpression;
          };
          t.JSXEmptyExpression = o;
          var s = function(e) {
            (this.type = r.JSXSyntax.JSXExpressionContainer),
              (this.expression = e);
          };
          t.JSXExpressionContainer = s;
          var u = function(e) {
            (this.type = r.JSXSyntax.JSXIdentifier), (this.name = e);
          };
          t.JSXIdentifier = u;
          var c = function(e, t) {
            (this.type = r.JSXSyntax.JSXMemberExpression),
              (this.object = e),
              (this.property = t);
          };
          t.JSXMemberExpression = c;
          var l = function(e, t) {
            (this.type = r.JSXSyntax.JSXAttribute),
              (this.name = e),
              (this.value = t);
          };
          t.JSXAttribute = l;
          var p = function(e, t) {
            (this.type = r.JSXSyntax.JSXNamespacedName),
              (this.namespace = e),
              (this.name = t);
          };
          t.JSXNamespacedName = p;
          var f = function(e, t, n) {
            (this.type = r.JSXSyntax.JSXOpeningElement),
              (this.name = e),
              (this.selfClosing = t),
              (this.attributes = n);
          };
          t.JSXOpeningElement = f;
          var h = function(e) {
            (this.type = r.JSXSyntax.JSXSpreadAttribute), (this.argument = e);
          };
          t.JSXSpreadAttribute = h;
          var d = function(e, t) {
            (this.type = r.JSXSyntax.JSXText), (this.value = e), (this.raw = t);
          };
          t.JSXText = d;
        },
        function(e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.JSXSyntax = {
              JSXAttribute: 'JSXAttribute',
              JSXClosingElement: 'JSXClosingElement',
              JSXElement: 'JSXElement',
              JSXEmptyExpression: 'JSXEmptyExpression',
              JSXExpressionContainer: 'JSXExpressionContainer',
              JSXIdentifier: 'JSXIdentifier',
              JSXMemberExpression: 'JSXMemberExpression',
              JSXNamespacedName: 'JSXNamespacedName',
              JSXOpeningElement: 'JSXOpeningElement',
              JSXSpreadAttribute: 'JSXSpreadAttribute',
              JSXText: 'JSXText',
            });
        },
        function(e, t, n) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var r = n(2),
            i = function(e) {
              (this.type = r.Syntax.ArrayExpression), (this.elements = e);
            };
          t.ArrayExpression = i;
          var a = function(e) {
            (this.type = r.Syntax.ArrayPattern), (this.elements = e);
          };
          t.ArrayPattern = a;
          var o = function(e, t, n) {
            (this.type = r.Syntax.ArrowFunctionExpression),
              (this.id = null),
              (this.params = e),
              (this.body = t),
              (this.generator = !1),
              (this.expression = n),
              (this.async = !1);
          };
          t.ArrowFunctionExpression = o;
          var s = function(e, t, n) {
            (this.type = r.Syntax.AssignmentExpression),
              (this.operator = e),
              (this.left = t),
              (this.right = n);
          };
          t.AssignmentExpression = s;
          var u = function(e, t) {
            (this.type = r.Syntax.AssignmentPattern),
              (this.left = e),
              (this.right = t);
          };
          t.AssignmentPattern = u;
          var c = function(e, t, n) {
            (this.type = r.Syntax.ArrowFunctionExpression),
              (this.id = null),
              (this.params = e),
              (this.body = t),
              (this.generator = !1),
              (this.expression = n),
              (this.async = !0);
          };
          t.AsyncArrowFunctionExpression = c;
          var l = function(e, t, n) {
            (this.type = r.Syntax.FunctionDeclaration),
              (this.id = e),
              (this.params = t),
              (this.body = n),
              (this.generator = !1),
              (this.expression = !1),
              (this.async = !0);
          };
          t.AsyncFunctionDeclaration = l;
          var p = function(e, t, n) {
            (this.type = r.Syntax.FunctionExpression),
              (this.id = e),
              (this.params = t),
              (this.body = n),
              (this.generator = !1),
              (this.expression = !1),
              (this.async = !0);
          };
          t.AsyncFunctionExpression = p;
          var f = function(e) {
            (this.type = r.Syntax.AwaitExpression), (this.argument = e);
          };
          t.AwaitExpression = f;
          var h = function(e, t, n) {
            var i = '||' === e || '&&' === e;
            (this.type = i
              ? r.Syntax.LogicalExpression
              : r.Syntax.BinaryExpression),
              (this.operator = e),
              (this.left = t),
              (this.right = n);
          };
          t.BinaryExpression = h;
          var d = function(e) {
            (this.type = r.Syntax.BlockStatement), (this.body = e);
          };
          t.BlockStatement = d;
          var m = function(e) {
            (this.type = r.Syntax.BreakStatement), (this.label = e);
          };
          t.BreakStatement = m;
          var g = function(e, t) {
            (this.type = r.Syntax.CallExpression),
              (this.callee = e),
              (this.arguments = t);
          };
          t.CallExpression = g;
          var y = function(e, t) {
            (this.type = r.Syntax.CatchClause),
              (this.param = e),
              (this.body = t);
          };
          t.CatchClause = y;
          var v = function(e) {
            (this.type = r.Syntax.ClassBody), (this.body = e);
          };
          t.ClassBody = v;
          var D = function(e, t, n) {
            (this.type = r.Syntax.ClassDeclaration),
              (this.id = e),
              (this.superClass = t),
              (this.body = n);
          };
          t.ClassDeclaration = D;
          var E = function(e, t, n) {
            (this.type = r.Syntax.ClassExpression),
              (this.id = e),
              (this.superClass = t),
              (this.body = n);
          };
          t.ClassExpression = E;
          var C = function(e, t) {
            (this.type = r.Syntax.MemberExpression),
              (this.computed = !0),
              (this.object = e),
              (this.property = t);
          };
          t.ComputedMemberExpression = C;
          var b = function(e, t, n) {
            (this.type = r.Syntax.ConditionalExpression),
              (this.test = e),
              (this.consequent = t),
              (this.alternate = n);
          };
          t.ConditionalExpression = b;
          var x = function(e) {
            (this.type = r.Syntax.ContinueStatement), (this.label = e);
          };
          t.ContinueStatement = x;
          var A = function() {
            this.type = r.Syntax.DebuggerStatement;
          };
          t.DebuggerStatement = A;
          var S = function(e, t) {
            (this.type = r.Syntax.ExpressionStatement),
              (this.expression = e),
              (this.directive = t);
          };
          t.Directive = S;
          var w = function(e, t) {
            (this.type = r.Syntax.DoWhileStatement),
              (this.body = e),
              (this.test = t);
          };
          t.DoWhileStatement = w;
          var F = function() {
            this.type = r.Syntax.EmptyStatement;
          };
          t.EmptyStatement = F;
          var k = function(e) {
            (this.type = r.Syntax.ExportAllDeclaration), (this.source = e);
          };
          t.ExportAllDeclaration = k;
          var T = function(e) {
            (this.type = r.Syntax.ExportDefaultDeclaration),
              (this.declaration = e);
          };
          t.ExportDefaultDeclaration = T;
          var _ = function(e, t, n) {
            (this.type = r.Syntax.ExportNamedDeclaration),
              (this.declaration = e),
              (this.specifiers = t),
              (this.source = n);
          };
          t.ExportNamedDeclaration = _;
          var O = function(e, t) {
            (this.type = r.Syntax.ExportSpecifier),
              (this.exported = t),
              (this.local = e);
          };
          t.ExportSpecifier = O;
          var N = function(e) {
            (this.type = r.Syntax.ExpressionStatement), (this.expression = e);
          };
          t.ExpressionStatement = N;
          var B = function(e, t, n) {
            (this.type = r.Syntax.ForInStatement),
              (this.left = e),
              (this.right = t),
              (this.body = n),
              (this.each = !1);
          };
          t.ForInStatement = B;
          var I = function(e, t, n) {
            (this.type = r.Syntax.ForOfStatement),
              (this.left = e),
              (this.right = t),
              (this.body = n);
          };
          t.ForOfStatement = I;
          var P = function(e, t, n, i) {
            (this.type = r.Syntax.ForStatement),
              (this.init = e),
              (this.test = t),
              (this.update = n),
              (this.body = i);
          };
          t.ForStatement = P;
          var M = function(e, t, n, i) {
            (this.type = r.Syntax.FunctionDeclaration),
              (this.id = e),
              (this.params = t),
              (this.body = n),
              (this.generator = i),
              (this.expression = !1),
              (this.async = !1);
          };
          t.FunctionDeclaration = M;
          var L = function(e, t, n, i) {
            (this.type = r.Syntax.FunctionExpression),
              (this.id = e),
              (this.params = t),
              (this.body = n),
              (this.generator = i),
              (this.expression = !1),
              (this.async = !1);
          };
          t.FunctionExpression = L;
          var R = function(e) {
            (this.type = r.Syntax.Identifier), (this.name = e);
          };
          t.Identifier = R;
          var j = function(e, t, n) {
            (this.type = r.Syntax.IfStatement),
              (this.test = e),
              (this.consequent = t),
              (this.alternate = n);
          };
          t.IfStatement = j;
          var U = function(e, t) {
            (this.type = r.Syntax.ImportDeclaration),
              (this.specifiers = e),
              (this.source = t);
          };
          t.ImportDeclaration = U;
          var V = function(e) {
            (this.type = r.Syntax.ImportDefaultSpecifier), (this.local = e);
          };
          t.ImportDefaultSpecifier = V;
          var W = function(e) {
            (this.type = r.Syntax.ImportNamespaceSpecifier), (this.local = e);
          };
          t.ImportNamespaceSpecifier = W;
          var $ = function(e, t) {
            (this.type = r.Syntax.ImportSpecifier),
              (this.local = e),
              (this.imported = t);
          };
          t.ImportSpecifier = $;
          var q = function(e, t) {
            (this.type = r.Syntax.LabeledStatement),
              (this.label = e),
              (this.body = t);
          };
          t.LabeledStatement = q;
          var Y = function(e, t) {
            (this.type = r.Syntax.Literal), (this.value = e), (this.raw = t);
          };
          t.Literal = Y;
          var J = function(e, t) {
            (this.type = r.Syntax.MetaProperty),
              (this.meta = e),
              (this.property = t);
          };
          t.MetaProperty = J;
          var K = function(e, t, n, i, a) {
            (this.type = r.Syntax.MethodDefinition),
              (this.key = e),
              (this.computed = t),
              (this.value = n),
              (this.kind = i),
              (this.static = a);
          };
          t.MethodDefinition = K;
          var z = function(e) {
            (this.type = r.Syntax.Program),
              (this.body = e),
              (this.sourceType = 'module');
          };
          t.Module = z;
          var H = function(e, t) {
            (this.type = r.Syntax.NewExpression),
              (this.callee = e),
              (this.arguments = t);
          };
          t.NewExpression = H;
          var X = function(e) {
            (this.type = r.Syntax.ObjectExpression), (this.properties = e);
          };
          t.ObjectExpression = X;
          var G = function(e) {
            (this.type = r.Syntax.ObjectPattern), (this.properties = e);
          };
          t.ObjectPattern = G;
          var Q = function(e, t, n, i, a, o) {
            (this.type = r.Syntax.Property),
              (this.key = t),
              (this.computed = n),
              (this.value = i),
              (this.kind = e),
              (this.method = a),
              (this.shorthand = o);
          };
          t.Property = Q;
          var Z = function(e, t, n, i) {
            (this.type = r.Syntax.Literal),
              (this.value = e),
              (this.raw = t),
              (this.regex = { pattern: n, flags: i });
          };
          t.RegexLiteral = Z;
          var ee = function(e) {
            (this.type = r.Syntax.RestElement), (this.argument = e);
          };
          t.RestElement = ee;
          var te = function(e) {
            (this.type = r.Syntax.ReturnStatement), (this.argument = e);
          };
          t.ReturnStatement = te;
          var ne = function(e) {
            (this.type = r.Syntax.Program),
              (this.body = e),
              (this.sourceType = 'script');
          };
          t.Script = ne;
          var re = function(e) {
            (this.type = r.Syntax.SequenceExpression), (this.expressions = e);
          };
          t.SequenceExpression = re;
          var ie = function(e) {
            (this.type = r.Syntax.SpreadElement), (this.argument = e);
          };
          t.SpreadElement = ie;
          var ae = function(e, t) {
            (this.type = r.Syntax.MemberExpression),
              (this.computed = !1),
              (this.object = e),
              (this.property = t);
          };
          t.StaticMemberExpression = ae;
          var oe = function() {
            this.type = r.Syntax.Super;
          };
          t.Super = oe;
          var se = function(e, t) {
            (this.type = r.Syntax.SwitchCase),
              (this.test = e),
              (this.consequent = t);
          };
          t.SwitchCase = se;
          var ue = function(e, t) {
            (this.type = r.Syntax.SwitchStatement),
              (this.discriminant = e),
              (this.cases = t);
          };
          t.SwitchStatement = ue;
          var ce = function(e, t) {
            (this.type = r.Syntax.TaggedTemplateExpression),
              (this.tag = e),
              (this.quasi = t);
          };
          t.TaggedTemplateExpression = ce;
          var le = function(e, t) {
            (this.type = r.Syntax.TemplateElement),
              (this.value = e),
              (this.tail = t);
          };
          t.TemplateElement = le;
          var pe = function(e, t) {
            (this.type = r.Syntax.TemplateLiteral),
              (this.quasis = e),
              (this.expressions = t);
          };
          t.TemplateLiteral = pe;
          var fe = function() {
            this.type = r.Syntax.ThisExpression;
          };
          t.ThisExpression = fe;
          var he = function(e) {
            (this.type = r.Syntax.ThrowStatement), (this.argument = e);
          };
          t.ThrowStatement = he;
          var de = function(e, t, n) {
            (this.type = r.Syntax.TryStatement),
              (this.block = e),
              (this.handler = t),
              (this.finalizer = n);
          };
          t.TryStatement = de;
          var me = function(e, t) {
            (this.type = r.Syntax.UnaryExpression),
              (this.operator = e),
              (this.argument = t),
              (this.prefix = !0);
          };
          t.UnaryExpression = me;
          var ge = function(e, t, n) {
            (this.type = r.Syntax.UpdateExpression),
              (this.operator = e),
              (this.argument = t),
              (this.prefix = n);
          };
          t.UpdateExpression = ge;
          var ye = function(e, t) {
            (this.type = r.Syntax.VariableDeclaration),
              (this.declarations = e),
              (this.kind = t);
          };
          t.VariableDeclaration = ye;
          var ve = function(e, t) {
            (this.type = r.Syntax.VariableDeclarator),
              (this.id = e),
              (this.init = t);
          };
          t.VariableDeclarator = ve;
          var De = function(e, t) {
            (this.type = r.Syntax.WhileStatement),
              (this.test = e),
              (this.body = t);
          };
          t.WhileStatement = De;
          var Ee = function(e, t) {
            (this.type = r.Syntax.WithStatement),
              (this.object = e),
              (this.body = t);
          };
          t.WithStatement = Ee;
          var Ce = function(e, t) {
            (this.type = r.Syntax.YieldExpression),
              (this.argument = e),
              (this.delegate = t);
          };
          t.YieldExpression = Ce;
        },
        function(e, t, n) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var r = n(9),
            i = n(10),
            a = n(11),
            o = n(7),
            s = n(12),
            u = n(2),
            c = n(13),
            l = (function() {
              function e(e, t, n) {
                void 0 === t && (t = {}),
                  (this.config = {
                    range: 'boolean' == typeof t.range && t.range,
                    loc: 'boolean' == typeof t.loc && t.loc,
                    source: null,
                    tokens: 'boolean' == typeof t.tokens && t.tokens,
                    comment: 'boolean' == typeof t.comment && t.comment,
                    tolerant: 'boolean' == typeof t.tolerant && t.tolerant,
                  }),
                  this.config.loc &&
                    t.source &&
                    null !== t.source &&
                    (this.config.source = String(t.source)),
                  (this.delegate = n),
                  (this.errorHandler = new i.ErrorHandler()),
                  (this.errorHandler.tolerant = this.config.tolerant),
                  (this.scanner = new s.Scanner(e, this.errorHandler)),
                  (this.scanner.trackComment = this.config.comment),
                  (this.operatorPrecedence = {
                    ')': 0,
                    ';': 0,
                    ',': 0,
                    '=': 0,
                    ']': 0,
                    '||': 1,
                    '&&': 2,
                    '|': 3,
                    '^': 4,
                    '&': 5,
                    '==': 6,
                    '!=': 6,
                    '===': 6,
                    '!==': 6,
                    '<': 7,
                    '>': 7,
                    '<=': 7,
                    '>=': 7,
                    '<<': 8,
                    '>>': 8,
                    '>>>': 8,
                    '+': 9,
                    '-': 9,
                    '*': 11,
                    '/': 11,
                    '%': 11,
                  }),
                  (this.lookahead = {
                    type: 2,
                    value: '',
                    lineNumber: this.scanner.lineNumber,
                    lineStart: 0,
                    start: 0,
                    end: 0,
                  }),
                  (this.hasLineTerminator = !1),
                  (this.context = {
                    isModule: !1,
                    await: !1,
                    allowIn: !0,
                    allowStrictDirective: !0,
                    allowYield: !0,
                    firstCoverInitializedNameError: null,
                    isAssignmentTarget: !1,
                    isBindingElement: !1,
                    inFunctionBody: !1,
                    inIteration: !1,
                    inSwitch: !1,
                    labelSet: {},
                    strict: !1,
                  }),
                  (this.tokens = []),
                  (this.startMarker = {
                    index: 0,
                    line: this.scanner.lineNumber,
                    column: 0,
                  }),
                  (this.lastMarker = {
                    index: 0,
                    line: this.scanner.lineNumber,
                    column: 0,
                  }),
                  this.nextToken(),
                  (this.lastMarker = {
                    index: this.scanner.index,
                    line: this.scanner.lineNumber,
                    column: this.scanner.index - this.scanner.lineStart,
                  });
              }
              return (
                (e.prototype.throwError = function(e) {
                  for (var t = [], n = 1; n < arguments.length; n++)
                    t[n - 1] = arguments[n];
                  var i = Array.prototype.slice.call(arguments, 1),
                    a = e.replace(/%(\d)/g, function(e, t) {
                      return (
                        r.assert(
                          t < i.length,
                          'Message reference must be in range',
                        ),
                        i[t]
                      );
                    }),
                    o = this.lastMarker.index,
                    s = this.lastMarker.line,
                    u = this.lastMarker.column + 1;
                  throw this.errorHandler.createError(o, s, u, a);
                }),
                (e.prototype.tolerateError = function(e) {
                  for (var t = [], n = 1; n < arguments.length; n++)
                    t[n - 1] = arguments[n];
                  var i = Array.prototype.slice.call(arguments, 1),
                    a = e.replace(/%(\d)/g, function(e, t) {
                      return (
                        r.assert(
                          t < i.length,
                          'Message reference must be in range',
                        ),
                        i[t]
                      );
                    }),
                    o = this.lastMarker.index,
                    s = this.scanner.lineNumber,
                    u = this.lastMarker.column + 1;
                  this.errorHandler.tolerateError(o, s, u, a);
                }),
                (e.prototype.unexpectedTokenError = function(e, t) {
                  var n,
                    r = t || a.Messages.UnexpectedToken;
                  if (
                    (e
                      ? (t ||
                          ((r =
                            2 === e.type
                              ? a.Messages.UnexpectedEOS
                              : 3 === e.type
                              ? a.Messages.UnexpectedIdentifier
                              : 6 === e.type
                              ? a.Messages.UnexpectedNumber
                              : 8 === e.type
                              ? a.Messages.UnexpectedString
                              : 10 === e.type
                              ? a.Messages.UnexpectedTemplate
                              : a.Messages.UnexpectedToken),
                          4 === e.type &&
                            (this.scanner.isFutureReservedWord(e.value)
                              ? (r = a.Messages.UnexpectedReserved)
                              : this.context.strict &&
                                this.scanner.isStrictModeReservedWord(
                                  e.value,
                                ) &&
                                (r = a.Messages.StrictReservedWord))),
                        (n = e.value))
                      : (n = 'ILLEGAL'),
                    (r = r.replace('%0', n)),
                    e && 'number' == typeof e.lineNumber)
                  ) {
                    var i = e.start,
                      o = e.lineNumber,
                      s = this.lastMarker.index - this.lastMarker.column,
                      u = e.start - s + 1;
                    return this.errorHandler.createError(i, o, u, r);
                  }
                  return (
                    (i = this.lastMarker.index),
                    (o = this.lastMarker.line),
                    (u = this.lastMarker.column + 1),
                    this.errorHandler.createError(i, o, u, r)
                  );
                }),
                (e.prototype.throwUnexpectedToken = function(e, t) {
                  throw this.unexpectedTokenError(e, t);
                }),
                (e.prototype.tolerateUnexpectedToken = function(e, t) {
                  this.errorHandler.tolerate(this.unexpectedTokenError(e, t));
                }),
                (e.prototype.collectComments = function() {
                  if (this.config.comment) {
                    var e = this.scanner.scanComments();
                    if (e.length > 0 && this.delegate)
                      for (var t = 0; t < e.length; ++t) {
                        var n = e[t],
                          r = void 0;
                        (r = {
                          type: n.multiLine ? 'BlockComment' : 'LineComment',
                          value: this.scanner.source.slice(
                            n.slice[0],
                            n.slice[1],
                          ),
                        }),
                          this.config.range && (r.range = n.range),
                          this.config.loc && (r.loc = n.loc);
                        var i = {
                          start: {
                            line: n.loc.start.line,
                            column: n.loc.start.column,
                            offset: n.range[0],
                          },
                          end: {
                            line: n.loc.end.line,
                            column: n.loc.end.column,
                            offset: n.range[1],
                          },
                        };
                        this.delegate(r, i);
                      }
                  } else this.scanner.scanComments();
                }),
                (e.prototype.getTokenRaw = function(e) {
                  return this.scanner.source.slice(e.start, e.end);
                }),
                (e.prototype.convertToken = function(e) {
                  var t = {
                    type: c.TokenName[e.type],
                    value: this.getTokenRaw(e),
                  };
                  if (
                    (this.config.range && (t.range = [e.start, e.end]),
                    this.config.loc &&
                      (t.loc = {
                        start: {
                          line: this.startMarker.line,
                          column: this.startMarker.column,
                        },
                        end: {
                          line: this.scanner.lineNumber,
                          column: this.scanner.index - this.scanner.lineStart,
                        },
                      }),
                    9 === e.type)
                  ) {
                    var n = e.pattern,
                      r = e.flags;
                    t.regex = { pattern: n, flags: r };
                  }
                  return t;
                }),
                (e.prototype.nextToken = function() {
                  var e = this.lookahead;
                  (this.lastMarker.index = this.scanner.index),
                    (this.lastMarker.line = this.scanner.lineNumber),
                    (this.lastMarker.column =
                      this.scanner.index - this.scanner.lineStart),
                    this.collectComments(),
                    this.scanner.index !== this.startMarker.index &&
                      ((this.startMarker.index = this.scanner.index),
                      (this.startMarker.line = this.scanner.lineNumber),
                      (this.startMarker.column =
                        this.scanner.index - this.scanner.lineStart));
                  var t = this.scanner.lex();
                  return (
                    (this.hasLineTerminator = e.lineNumber !== t.lineNumber),
                    t &&
                      this.context.strict &&
                      3 === t.type &&
                      this.scanner.isStrictModeReservedWord(t.value) &&
                      (t.type = 4),
                    (this.lookahead = t),
                    this.config.tokens &&
                      2 !== t.type &&
                      this.tokens.push(this.convertToken(t)),
                    e
                  );
                }),
                (e.prototype.nextRegexToken = function() {
                  this.collectComments();
                  var e = this.scanner.scanRegExp();
                  return (
                    this.config.tokens &&
                      (this.tokens.pop(),
                      this.tokens.push(this.convertToken(e))),
                    (this.lookahead = e),
                    this.nextToken(),
                    e
                  );
                }),
                (e.prototype.createNode = function() {
                  return {
                    index: this.startMarker.index,
                    line: this.startMarker.line,
                    column: this.startMarker.column,
                  };
                }),
                (e.prototype.startNode = function(e, t) {
                  void 0 === t && (t = 0);
                  var n = e.start - e.lineStart,
                    r = e.lineNumber;
                  return (
                    n < 0 && ((n += t), r--),
                    { index: e.start, line: r, column: n }
                  );
                }),
                (e.prototype.finalize = function(e, t) {
                  if (
                    (this.config.range &&
                      (t.range = [e.index, this.lastMarker.index]),
                    this.config.loc &&
                      ((t.loc = {
                        start: { line: e.line, column: e.column },
                        end: {
                          line: this.lastMarker.line,
                          column: this.lastMarker.column,
                        },
                      }),
                      this.config.source &&
                        (t.loc.source = this.config.source)),
                    this.delegate)
                  ) {
                    var n = {
                      start: {
                        line: e.line,
                        column: e.column,
                        offset: e.index,
                      },
                      end: {
                        line: this.lastMarker.line,
                        column: this.lastMarker.column,
                        offset: this.lastMarker.index,
                      },
                    };
                    this.delegate(t, n);
                  }
                  return t;
                }),
                (e.prototype.expect = function(e) {
                  var t = this.nextToken();
                  (7 === t.type && t.value === e) ||
                    this.throwUnexpectedToken(t);
                }),
                (e.prototype.expectCommaSeparator = function() {
                  if (this.config.tolerant) {
                    var e = this.lookahead;
                    7 === e.type && ',' === e.value
                      ? this.nextToken()
                      : 7 === e.type && ';' === e.value
                      ? (this.nextToken(), this.tolerateUnexpectedToken(e))
                      : this.tolerateUnexpectedToken(
                          e,
                          a.Messages.UnexpectedToken,
                        );
                  } else this.expect(',');
                }),
                (e.prototype.expectKeyword = function(e) {
                  var t = this.nextToken();
                  (4 === t.type && t.value === e) ||
                    this.throwUnexpectedToken(t);
                }),
                (e.prototype.match = function(e) {
                  return (
                    7 === this.lookahead.type && this.lookahead.value === e
                  );
                }),
                (e.prototype.matchKeyword = function(e) {
                  return (
                    4 === this.lookahead.type && this.lookahead.value === e
                  );
                }),
                (e.prototype.matchContextualKeyword = function(e) {
                  return (
                    3 === this.lookahead.type && this.lookahead.value === e
                  );
                }),
                (e.prototype.matchAssign = function() {
                  if (7 !== this.lookahead.type) return !1;
                  var e = this.lookahead.value;
                  return (
                    '=' === e ||
                    '*=' === e ||
                    '**=' === e ||
                    '/=' === e ||
                    '%=' === e ||
                    '+=' === e ||
                    '-=' === e ||
                    '<<=' === e ||
                    '>>=' === e ||
                    '>>>=' === e ||
                    '&=' === e ||
                    '^=' === e ||
                    '|=' === e
                  );
                }),
                (e.prototype.isolateCoverGrammar = function(e) {
                  var t = this.context.isBindingElement,
                    n = this.context.isAssignmentTarget,
                    r = this.context.firstCoverInitializedNameError;
                  (this.context.isBindingElement = !0),
                    (this.context.isAssignmentTarget = !0),
                    (this.context.firstCoverInitializedNameError = null);
                  var i = e.call(this);
                  return (
                    null !== this.context.firstCoverInitializedNameError &&
                      this.throwUnexpectedToken(
                        this.context.firstCoverInitializedNameError,
                      ),
                    (this.context.isBindingElement = t),
                    (this.context.isAssignmentTarget = n),
                    (this.context.firstCoverInitializedNameError = r),
                    i
                  );
                }),
                (e.prototype.inheritCoverGrammar = function(e) {
                  var t = this.context.isBindingElement,
                    n = this.context.isAssignmentTarget,
                    r = this.context.firstCoverInitializedNameError;
                  (this.context.isBindingElement = !0),
                    (this.context.isAssignmentTarget = !0),
                    (this.context.firstCoverInitializedNameError = null);
                  var i = e.call(this);
                  return (
                    (this.context.isBindingElement =
                      this.context.isBindingElement && t),
                    (this.context.isAssignmentTarget =
                      this.context.isAssignmentTarget && n),
                    (this.context.firstCoverInitializedNameError =
                      r || this.context.firstCoverInitializedNameError),
                    i
                  );
                }),
                (e.prototype.consumeSemicolon = function() {
                  this.match(';')
                    ? this.nextToken()
                    : this.hasLineTerminator ||
                      (2 === this.lookahead.type ||
                        this.match('}') ||
                        this.throwUnexpectedToken(this.lookahead),
                      (this.lastMarker.index = this.startMarker.index),
                      (this.lastMarker.line = this.startMarker.line),
                      (this.lastMarker.column = this.startMarker.column));
                }),
                (e.prototype.parsePrimaryExpression = function() {
                  var e,
                    t,
                    n,
                    r = this.createNode();
                  switch (this.lookahead.type) {
                    case 3:
                      (this.context.isModule || this.context.await) &&
                        'await' === this.lookahead.value &&
                        this.tolerateUnexpectedToken(this.lookahead),
                        (e = this.matchAsyncFunction()
                          ? this.parseFunctionExpression()
                          : this.finalize(
                              r,
                              new o.Identifier(this.nextToken().value),
                            ));
                      break;
                    case 6:
                    case 8:
                      this.context.strict &&
                        this.lookahead.octal &&
                        this.tolerateUnexpectedToken(
                          this.lookahead,
                          a.Messages.StrictOctalLiteral,
                        ),
                        (this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1),
                        (t = this.nextToken()),
                        (n = this.getTokenRaw(t)),
                        (e = this.finalize(r, new o.Literal(t.value, n)));
                      break;
                    case 1:
                      (this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1),
                        (t = this.nextToken()),
                        (n = this.getTokenRaw(t)),
                        (e = this.finalize(
                          r,
                          new o.Literal('true' === t.value, n),
                        ));
                      break;
                    case 5:
                      (this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1),
                        (t = this.nextToken()),
                        (n = this.getTokenRaw(t)),
                        (e = this.finalize(r, new o.Literal(null, n)));
                      break;
                    case 10:
                      e = this.parseTemplateLiteral();
                      break;
                    case 7:
                      switch (this.lookahead.value) {
                        case '(':
                          (this.context.isBindingElement = !1),
                            (e = this.inheritCoverGrammar(
                              this.parseGroupExpression,
                            ));
                          break;
                        case '[':
                          e = this.inheritCoverGrammar(
                            this.parseArrayInitializer,
                          );
                          break;
                        case '{':
                          e = this.inheritCoverGrammar(
                            this.parseObjectInitializer,
                          );
                          break;
                        case '/':
                        case '/=':
                          (this.context.isAssignmentTarget = !1),
                            (this.context.isBindingElement = !1),
                            (this.scanner.index = this.startMarker.index),
                            (t = this.nextRegexToken()),
                            (n = this.getTokenRaw(t)),
                            (e = this.finalize(
                              r,
                              new o.RegexLiteral(
                                t.regex,
                                n,
                                t.pattern,
                                t.flags,
                              ),
                            ));
                          break;
                        default:
                          e = this.throwUnexpectedToken(this.nextToken());
                      }
                      break;
                    case 4:
                      !this.context.strict &&
                      this.context.allowYield &&
                      this.matchKeyword('yield')
                        ? (e = this.parseIdentifierName())
                        : !this.context.strict && this.matchKeyword('let')
                        ? (e = this.finalize(
                            r,
                            new o.Identifier(this.nextToken().value),
                          ))
                        : ((this.context.isAssignmentTarget = !1),
                          (this.context.isBindingElement = !1),
                          this.matchKeyword('function')
                            ? (e = this.parseFunctionExpression())
                            : this.matchKeyword('this')
                            ? (this.nextToken(),
                              (e = this.finalize(r, new o.ThisExpression())))
                            : (e = this.matchKeyword('class')
                                ? this.parseClassExpression()
                                : this.throwUnexpectedToken(this.nextToken())));
                      break;
                    default:
                      e = this.throwUnexpectedToken(this.nextToken());
                  }
                  return e;
                }),
                (e.prototype.parseSpreadElement = function() {
                  var e = this.createNode();
                  this.expect('...');
                  var t = this.inheritCoverGrammar(
                    this.parseAssignmentExpression,
                  );
                  return this.finalize(e, new o.SpreadElement(t));
                }),
                (e.prototype.parseArrayInitializer = function() {
                  var e = this.createNode(),
                    t = [];
                  for (this.expect('['); !this.match(']'); )
                    if (this.match(',')) this.nextToken(), t.push(null);
                    else if (this.match('...')) {
                      var n = this.parseSpreadElement();
                      this.match(']') ||
                        ((this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1),
                        this.expect(',')),
                        t.push(n);
                    } else
                      t.push(
                        this.inheritCoverGrammar(
                          this.parseAssignmentExpression,
                        ),
                      ),
                        this.match(']') || this.expect(',');
                  return (
                    this.expect(']'), this.finalize(e, new o.ArrayExpression(t))
                  );
                }),
                (e.prototype.parsePropertyMethod = function(e) {
                  (this.context.isAssignmentTarget = !1),
                    (this.context.isBindingElement = !1);
                  var t = this.context.strict,
                    n = this.context.allowStrictDirective;
                  this.context.allowStrictDirective = e.simple;
                  var r = this.isolateCoverGrammar(
                    this.parseFunctionSourceElements,
                  );
                  return (
                    this.context.strict &&
                      e.firstRestricted &&
                      this.tolerateUnexpectedToken(
                        e.firstRestricted,
                        e.message,
                      ),
                    this.context.strict &&
                      e.stricted &&
                      this.tolerateUnexpectedToken(e.stricted, e.message),
                    (this.context.strict = t),
                    (this.context.allowStrictDirective = n),
                    r
                  );
                }),
                (e.prototype.parsePropertyMethodFunction = function() {
                  var e = this.createNode(),
                    t = this.context.allowYield;
                  this.context.allowYield = !0;
                  var n = this.parseFormalParameters(),
                    r = this.parsePropertyMethod(n);
                  return (
                    (this.context.allowYield = t),
                    this.finalize(
                      e,
                      new o.FunctionExpression(null, n.params, r, !1),
                    )
                  );
                }),
                (e.prototype.parsePropertyMethodAsyncFunction = function() {
                  var e = this.createNode(),
                    t = this.context.allowYield,
                    n = this.context.await;
                  (this.context.allowYield = !1), (this.context.await = !0);
                  var r = this.parseFormalParameters(),
                    i = this.parsePropertyMethod(r);
                  return (
                    (this.context.allowYield = t),
                    (this.context.await = n),
                    this.finalize(
                      e,
                      new o.AsyncFunctionExpression(null, r.params, i),
                    )
                  );
                }),
                (e.prototype.parseObjectPropertyKey = function() {
                  var e,
                    t = this.createNode(),
                    n = this.nextToken();
                  switch (n.type) {
                    case 8:
                    case 6:
                      this.context.strict &&
                        n.octal &&
                        this.tolerateUnexpectedToken(
                          n,
                          a.Messages.StrictOctalLiteral,
                        );
                      var r = this.getTokenRaw(n);
                      e = this.finalize(t, new o.Literal(n.value, r));
                      break;
                    case 3:
                    case 1:
                    case 5:
                    case 4:
                      e = this.finalize(t, new o.Identifier(n.value));
                      break;
                    case 7:
                      '[' === n.value
                        ? ((e = this.isolateCoverGrammar(
                            this.parseAssignmentExpression,
                          )),
                          this.expect(']'))
                        : (e = this.throwUnexpectedToken(n));
                      break;
                    default:
                      e = this.throwUnexpectedToken(n);
                  }
                  return e;
                }),
                (e.prototype.isPropertyKey = function(e, t) {
                  return (
                    (e.type === u.Syntax.Identifier && e.name === t) ||
                    (e.type === u.Syntax.Literal && e.value === t)
                  );
                }),
                (e.prototype.parseObjectProperty = function(e) {
                  var t,
                    n = this.createNode(),
                    r = this.lookahead,
                    i = null,
                    s = null,
                    u = !1,
                    c = !1,
                    l = !1,
                    p = !1;
                  if (3 === r.type) {
                    var f = r.value;
                    this.nextToken(),
                      (u = this.match('[')),
                      (i = (p = !(
                        this.hasLineTerminator ||
                        'async' !== f ||
                        this.match(':') ||
                        this.match('(') ||
                        this.match('*') ||
                        this.match(',')
                      ))
                        ? this.parseObjectPropertyKey()
                        : this.finalize(n, new o.Identifier(f)));
                  } else
                    this.match('*')
                      ? this.nextToken()
                      : ((u = this.match('[')),
                        (i = this.parseObjectPropertyKey()));
                  var h = this.qualifiedPropertyName(this.lookahead);
                  if (3 === r.type && !p && 'get' === r.value && h)
                    (t = 'get'),
                      (u = this.match('[')),
                      (i = this.parseObjectPropertyKey()),
                      (this.context.allowYield = !1),
                      (s = this.parseGetterMethod());
                  else if (3 === r.type && !p && 'set' === r.value && h)
                    (t = 'set'),
                      (u = this.match('[')),
                      (i = this.parseObjectPropertyKey()),
                      (s = this.parseSetterMethod());
                  else if (7 === r.type && '*' === r.value && h)
                    (t = 'init'),
                      (u = this.match('[')),
                      (i = this.parseObjectPropertyKey()),
                      (s = this.parseGeneratorMethod()),
                      (c = !0);
                  else if (
                    (i || this.throwUnexpectedToken(this.lookahead),
                    (t = 'init'),
                    this.match(':') && !p)
                  )
                    !u &&
                      this.isPropertyKey(i, '__proto__') &&
                      (e.value &&
                        this.tolerateError(a.Messages.DuplicateProtoProperty),
                      (e.value = !0)),
                      this.nextToken(),
                      (s = this.inheritCoverGrammar(
                        this.parseAssignmentExpression,
                      ));
                  else if (this.match('('))
                    (s = p
                      ? this.parsePropertyMethodAsyncFunction()
                      : this.parsePropertyMethodFunction()),
                      (c = !0);
                  else if (3 === r.type)
                    if (
                      ((f = this.finalize(n, new o.Identifier(r.value))),
                      this.match('='))
                    ) {
                      (this.context.firstCoverInitializedNameError = this.lookahead),
                        this.nextToken(),
                        (l = !0);
                      var d = this.isolateCoverGrammar(
                        this.parseAssignmentExpression,
                      );
                      s = this.finalize(n, new o.AssignmentPattern(f, d));
                    } else (l = !0), (s = f);
                  else this.throwUnexpectedToken(this.nextToken());
                  return this.finalize(n, new o.Property(t, i, u, s, c, l));
                }),
                (e.prototype.parseObjectInitializer = function() {
                  var e = this.createNode();
                  this.expect('{');
                  for (var t = [], n = { value: !1 }; !this.match('}'); )
                    t.push(this.parseObjectProperty(n)),
                      this.match('}') || this.expectCommaSeparator();
                  return (
                    this.expect('}'),
                    this.finalize(e, new o.ObjectExpression(t))
                  );
                }),
                (e.prototype.parseTemplateHead = function() {
                  r.assert(
                    this.lookahead.head,
                    'Template literal must start with a template head',
                  );
                  var e = this.createNode(),
                    t = this.nextToken(),
                    n = t.value,
                    i = t.cooked;
                  return this.finalize(
                    e,
                    new o.TemplateElement({ raw: n, cooked: i }, t.tail),
                  );
                }),
                (e.prototype.parseTemplateElement = function() {
                  10 !== this.lookahead.type && this.throwUnexpectedToken();
                  var e = this.createNode(),
                    t = this.nextToken(),
                    n = t.value,
                    r = t.cooked;
                  return this.finalize(
                    e,
                    new o.TemplateElement({ raw: n, cooked: r }, t.tail),
                  );
                }),
                (e.prototype.parseTemplateLiteral = function() {
                  var e = this.createNode(),
                    t = [],
                    n = [],
                    r = this.parseTemplateHead();
                  for (n.push(r); !r.tail; )
                    t.push(this.parseExpression()),
                      (r = this.parseTemplateElement()),
                      n.push(r);
                  return this.finalize(e, new o.TemplateLiteral(n, t));
                }),
                (e.prototype.reinterpretExpressionAsPattern = function(e) {
                  switch (e.type) {
                    case u.Syntax.Identifier:
                    case u.Syntax.MemberExpression:
                    case u.Syntax.RestElement:
                    case u.Syntax.AssignmentPattern:
                      break;
                    case u.Syntax.SpreadElement:
                      (e.type = u.Syntax.RestElement),
                        this.reinterpretExpressionAsPattern(e.argument);
                      break;
                    case u.Syntax.ArrayExpression:
                      e.type = u.Syntax.ArrayPattern;
                      for (var t = 0; t < e.elements.length; t++)
                        null !== e.elements[t] &&
                          this.reinterpretExpressionAsPattern(e.elements[t]);
                      break;
                    case u.Syntax.ObjectExpression:
                      for (
                        e.type = u.Syntax.ObjectPattern, t = 0;
                        t < e.properties.length;
                        t++
                      )
                        this.reinterpretExpressionAsPattern(
                          e.properties[t].value,
                        );
                      break;
                    case u.Syntax.AssignmentExpression:
                      (e.type = u.Syntax.AssignmentPattern),
                        delete e.operator,
                        this.reinterpretExpressionAsPattern(e.left);
                  }
                }),
                (e.prototype.parseGroupExpression = function() {
                  var e;
                  if ((this.expect('('), this.match(')')))
                    this.nextToken(),
                      this.match('=>') || this.expect('=>'),
                      (e = {
                        type: 'ArrowParameterPlaceHolder',
                        params: [],
                        async: !1,
                      });
                  else {
                    var t = this.lookahead,
                      n = [];
                    if (this.match('...'))
                      (e = this.parseRestElement(n)),
                        this.expect(')'),
                        this.match('=>') || this.expect('=>'),
                        (e = {
                          type: 'ArrowParameterPlaceHolder',
                          params: [e],
                          async: !1,
                        });
                    else {
                      var r = !1;
                      if (
                        ((this.context.isBindingElement = !0),
                        (e = this.inheritCoverGrammar(
                          this.parseAssignmentExpression,
                        )),
                        this.match(','))
                      ) {
                        var i = [];
                        for (
                          this.context.isAssignmentTarget = !1, i.push(e);
                          2 !== this.lookahead.type && this.match(',');

                        ) {
                          if ((this.nextToken(), this.match(')'))) {
                            this.nextToken();
                            for (var a = 0; a < i.length; a++)
                              this.reinterpretExpressionAsPattern(i[a]);
                            (r = !0),
                              (e = {
                                type: 'ArrowParameterPlaceHolder',
                                params: i,
                                async: !1,
                              });
                          } else if (this.match('...')) {
                            for (
                              this.context.isBindingElement ||
                                this.throwUnexpectedToken(this.lookahead),
                                i.push(this.parseRestElement(n)),
                                this.expect(')'),
                                this.match('=>') || this.expect('=>'),
                                this.context.isBindingElement = !1,
                                a = 0;
                              a < i.length;
                              a++
                            )
                              this.reinterpretExpressionAsPattern(i[a]);
                            (r = !0),
                              (e = {
                                type: 'ArrowParameterPlaceHolder',
                                params: i,
                                async: !1,
                              });
                          } else
                            i.push(
                              this.inheritCoverGrammar(
                                this.parseAssignmentExpression,
                              ),
                            );
                          if (r) break;
                        }
                        r ||
                          (e = this.finalize(
                            this.startNode(t),
                            new o.SequenceExpression(i),
                          ));
                      }
                      if (!r) {
                        if (
                          (this.expect(')'),
                          this.match('=>') &&
                            (e.type === u.Syntax.Identifier &&
                              'yield' === e.name &&
                              ((r = !0),
                              (e = {
                                type: 'ArrowParameterPlaceHolder',
                                params: [e],
                                async: !1,
                              })),
                            !r))
                        ) {
                          if (
                            (this.context.isBindingElement ||
                              this.throwUnexpectedToken(this.lookahead),
                            e.type === u.Syntax.SequenceExpression)
                          )
                            for (a = 0; a < e.expressions.length; a++)
                              this.reinterpretExpressionAsPattern(
                                e.expressions[a],
                              );
                          else this.reinterpretExpressionAsPattern(e);
                          e = {
                            type: 'ArrowParameterPlaceHolder',
                            params:
                              e.type === u.Syntax.SequenceExpression
                                ? e.expressions
                                : [e],
                            async: !1,
                          };
                        }
                        this.context.isBindingElement = !1;
                      }
                    }
                  }
                  return e;
                }),
                (e.prototype.parseArguments = function() {
                  this.expect('(');
                  var e = [];
                  if (!this.match(')'))
                    for (;;) {
                      var t = this.match('...')
                        ? this.parseSpreadElement()
                        : this.isolateCoverGrammar(
                            this.parseAssignmentExpression,
                          );
                      if ((e.push(t), this.match(')'))) break;
                      if ((this.expectCommaSeparator(), this.match(')'))) break;
                    }
                  return this.expect(')'), e;
                }),
                (e.prototype.isIdentifierName = function(e) {
                  return (
                    3 === e.type || 4 === e.type || 1 === e.type || 5 === e.type
                  );
                }),
                (e.prototype.parseIdentifierName = function() {
                  var e = this.createNode(),
                    t = this.nextToken();
                  return (
                    this.isIdentifierName(t) || this.throwUnexpectedToken(t),
                    this.finalize(e, new o.Identifier(t.value))
                  );
                }),
                (e.prototype.parseNewExpression = function() {
                  var e,
                    t = this.createNode(),
                    n = this.parseIdentifierName();
                  if (
                    (r.assert(
                      'new' === n.name,
                      'New expression must start with `new`',
                    ),
                    this.match('.'))
                  )
                    if (
                      (this.nextToken(),
                      3 === this.lookahead.type &&
                        this.context.inFunctionBody &&
                        'target' === this.lookahead.value)
                    ) {
                      var i = this.parseIdentifierName();
                      e = new o.MetaProperty(n, i);
                    } else this.throwUnexpectedToken(this.lookahead);
                  else {
                    var a = this.isolateCoverGrammar(
                        this.parseLeftHandSideExpression,
                      ),
                      s = this.match('(') ? this.parseArguments() : [];
                    (e = new o.NewExpression(a, s)),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                  }
                  return this.finalize(t, e);
                }),
                (e.prototype.parseAsyncArgument = function() {
                  var e = this.parseAssignmentExpression();
                  return (
                    (this.context.firstCoverInitializedNameError = null), e
                  );
                }),
                (e.prototype.parseAsyncArguments = function() {
                  this.expect('(');
                  var e = [];
                  if (!this.match(')'))
                    for (;;) {
                      var t = this.match('...')
                        ? this.parseSpreadElement()
                        : this.isolateCoverGrammar(this.parseAsyncArgument);
                      if ((e.push(t), this.match(')'))) break;
                      if ((this.expectCommaSeparator(), this.match(')'))) break;
                    }
                  return this.expect(')'), e;
                }),
                (e.prototype.parseLeftHandSideExpressionAllowCall = function() {
                  var e,
                    t = this.lookahead,
                    n = this.matchContextualKeyword('async'),
                    r = this.context.allowIn;
                  for (
                    this.context.allowIn = !0,
                      this.matchKeyword('super') && this.context.inFunctionBody
                        ? ((e = this.createNode()),
                          this.nextToken(),
                          (e = this.finalize(e, new o.Super())),
                          this.match('(') ||
                            this.match('.') ||
                            this.match('[') ||
                            this.throwUnexpectedToken(this.lookahead))
                        : (e = this.inheritCoverGrammar(
                            this.matchKeyword('new')
                              ? this.parseNewExpression
                              : this.parsePrimaryExpression,
                          ));
                    ;

                  )
                    if (this.match('.')) {
                      (this.context.isBindingElement = !1),
                        (this.context.isAssignmentTarget = !0),
                        this.expect('.');
                      var i = this.parseIdentifierName();
                      e = this.finalize(
                        this.startNode(t),
                        new o.StaticMemberExpression(e, i),
                      );
                    } else if (this.match('(')) {
                      var a = n && t.lineNumber === this.lookahead.lineNumber;
                      (this.context.isBindingElement = !1),
                        (this.context.isAssignmentTarget = !1);
                      var s = a
                        ? this.parseAsyncArguments()
                        : this.parseArguments();
                      if (
                        ((e = this.finalize(
                          this.startNode(t),
                          new o.CallExpression(e, s),
                        )),
                        a && this.match('=>'))
                      ) {
                        for (var u = 0; u < s.length; ++u)
                          this.reinterpretExpressionAsPattern(s[u]);
                        e = {
                          type: 'ArrowParameterPlaceHolder',
                          params: s,
                          async: !0,
                        };
                      }
                    } else if (this.match('['))
                      (this.context.isBindingElement = !1),
                        (this.context.isAssignmentTarget = !0),
                        this.expect('['),
                        (i = this.isolateCoverGrammar(this.parseExpression)),
                        this.expect(']'),
                        (e = this.finalize(
                          this.startNode(t),
                          new o.ComputedMemberExpression(e, i),
                        ));
                    else {
                      if (10 !== this.lookahead.type || !this.lookahead.head)
                        break;
                      var c = this.parseTemplateLiteral();
                      e = this.finalize(
                        this.startNode(t),
                        new o.TaggedTemplateExpression(e, c),
                      );
                    }
                  return (this.context.allowIn = r), e;
                }),
                (e.prototype.parseSuper = function() {
                  var e = this.createNode();
                  return (
                    this.expectKeyword('super'),
                    this.match('[') ||
                      this.match('.') ||
                      this.throwUnexpectedToken(this.lookahead),
                    this.finalize(e, new o.Super())
                  );
                }),
                (e.prototype.parseLeftHandSideExpression = function() {
                  r.assert(
                    this.context.allowIn,
                    'callee of new expression always allow in keyword.',
                  );
                  for (
                    var e = this.startNode(this.lookahead),
                      t =
                        this.matchKeyword('super') &&
                        this.context.inFunctionBody
                          ? this.parseSuper()
                          : this.inheritCoverGrammar(
                              this.matchKeyword('new')
                                ? this.parseNewExpression
                                : this.parsePrimaryExpression,
                            );
                    ;

                  )
                    if (this.match('[')) {
                      (this.context.isBindingElement = !1),
                        (this.context.isAssignmentTarget = !0),
                        this.expect('[');
                      var n = this.isolateCoverGrammar(this.parseExpression);
                      this.expect(']'),
                        (t = this.finalize(
                          e,
                          new o.ComputedMemberExpression(t, n),
                        ));
                    } else if (this.match('.'))
                      (this.context.isBindingElement = !1),
                        (this.context.isAssignmentTarget = !0),
                        this.expect('.'),
                        (n = this.parseIdentifierName()),
                        (t = this.finalize(
                          e,
                          new o.StaticMemberExpression(t, n),
                        ));
                    else {
                      if (10 !== this.lookahead.type || !this.lookahead.head)
                        break;
                      var i = this.parseTemplateLiteral();
                      t = this.finalize(
                        e,
                        new o.TaggedTemplateExpression(t, i),
                      );
                    }
                  return t;
                }),
                (e.prototype.parseUpdateExpression = function() {
                  var e,
                    t = this.lookahead;
                  if (this.match('++') || this.match('--')) {
                    var n = this.startNode(t),
                      r = this.nextToken();
                    (e = this.inheritCoverGrammar(this.parseUnaryExpression)),
                      this.context.strict &&
                        e.type === u.Syntax.Identifier &&
                        this.scanner.isRestrictedWord(e.name) &&
                        this.tolerateError(a.Messages.StrictLHSPrefix),
                      this.context.isAssignmentTarget ||
                        this.tolerateError(a.Messages.InvalidLHSInAssignment);
                    var i = !0;
                    (e = this.finalize(
                      n,
                      new o.UpdateExpression(r.value, e, i),
                    )),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                  } else if (
                    ((e = this.inheritCoverGrammar(
                      this.parseLeftHandSideExpressionAllowCall,
                    )),
                    !this.hasLineTerminator &&
                      7 === this.lookahead.type &&
                      (this.match('++') || this.match('--')))
                  ) {
                    this.context.strict &&
                      e.type === u.Syntax.Identifier &&
                      this.scanner.isRestrictedWord(e.name) &&
                      this.tolerateError(a.Messages.StrictLHSPostfix),
                      this.context.isAssignmentTarget ||
                        this.tolerateError(a.Messages.InvalidLHSInAssignment),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                    var s = this.nextToken().value;
                    (i = !1),
                      (e = this.finalize(
                        this.startNode(t),
                        new o.UpdateExpression(s, e, i),
                      ));
                  }
                  return e;
                }),
                (e.prototype.parseAwaitExpression = function() {
                  var e = this.createNode();
                  this.nextToken();
                  var t = this.parseUnaryExpression();
                  return this.finalize(e, new o.AwaitExpression(t));
                }),
                (e.prototype.parseUnaryExpression = function() {
                  var e;
                  if (
                    this.match('+') ||
                    this.match('-') ||
                    this.match('~') ||
                    this.match('!') ||
                    this.matchKeyword('delete') ||
                    this.matchKeyword('void') ||
                    this.matchKeyword('typeof')
                  ) {
                    var t = this.startNode(this.lookahead),
                      n = this.nextToken();
                    (e = this.inheritCoverGrammar(this.parseUnaryExpression)),
                      (e = this.finalize(t, new o.UnaryExpression(n.value, e))),
                      this.context.strict &&
                        'delete' === e.operator &&
                        e.argument.type === u.Syntax.Identifier &&
                        this.tolerateError(a.Messages.StrictDelete),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                  } else
                    e =
                      this.context.await && this.matchContextualKeyword('await')
                        ? this.parseAwaitExpression()
                        : this.parseUpdateExpression();
                  return e;
                }),
                (e.prototype.parseExponentiationExpression = function() {
                  var e = this.lookahead,
                    t = this.inheritCoverGrammar(this.parseUnaryExpression);
                  if (t.type !== u.Syntax.UnaryExpression && this.match('**')) {
                    this.nextToken(),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                    var n = t,
                      r = this.isolateCoverGrammar(
                        this.parseExponentiationExpression,
                      );
                    t = this.finalize(
                      this.startNode(e),
                      new o.BinaryExpression('**', n, r),
                    );
                  }
                  return t;
                }),
                (e.prototype.binaryPrecedence = function(e) {
                  var t = e.value;
                  return 7 === e.type
                    ? this.operatorPrecedence[t] || 0
                    : 4 === e.type &&
                      ('instanceof' === t ||
                        (this.context.allowIn && 'in' === t))
                    ? 7
                    : 0;
                }),
                (e.prototype.parseBinaryExpression = function() {
                  var e = this.lookahead,
                    t = this.inheritCoverGrammar(
                      this.parseExponentiationExpression,
                    ),
                    n = this.lookahead,
                    r = this.binaryPrecedence(n);
                  if (r > 0) {
                    this.nextToken(),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                    for (
                      var i = [e, this.lookahead],
                        a = t,
                        s = this.isolateCoverGrammar(
                          this.parseExponentiationExpression,
                        ),
                        u = [a, n.value, s],
                        c = [r];
                      !((r = this.binaryPrecedence(this.lookahead)) <= 0);

                    ) {
                      for (; u.length > 2 && r <= c[c.length - 1]; ) {
                        s = u.pop();
                        var l = u.pop();
                        c.pop(), (a = u.pop()), i.pop();
                        var p = this.startNode(i[i.length - 1]);
                        u.push(
                          this.finalize(p, new o.BinaryExpression(l, a, s)),
                        );
                      }
                      u.push(this.nextToken().value),
                        c.push(r),
                        i.push(this.lookahead),
                        u.push(
                          this.isolateCoverGrammar(
                            this.parseExponentiationExpression,
                          ),
                        );
                    }
                    var f = u.length - 1;
                    t = u[f];
                    for (var h = i.pop(); f > 1; ) {
                      var d = i.pop(),
                        m = h && h.lineStart;
                      (p = this.startNode(d, m)),
                        (l = u[f - 1]),
                        (t = this.finalize(
                          p,
                          new o.BinaryExpression(l, u[f - 2], t),
                        )),
                        (f -= 2),
                        (h = d);
                    }
                  }
                  return t;
                }),
                (e.prototype.parseConditionalExpression = function() {
                  var e = this.lookahead,
                    t = this.inheritCoverGrammar(this.parseBinaryExpression);
                  if (this.match('?')) {
                    this.nextToken();
                    var n = this.context.allowIn;
                    this.context.allowIn = !0;
                    var r = this.isolateCoverGrammar(
                      this.parseAssignmentExpression,
                    );
                    (this.context.allowIn = n), this.expect(':');
                    var i = this.isolateCoverGrammar(
                      this.parseAssignmentExpression,
                    );
                    (t = this.finalize(
                      this.startNode(e),
                      new o.ConditionalExpression(t, r, i),
                    )),
                      (this.context.isAssignmentTarget = !1),
                      (this.context.isBindingElement = !1);
                  }
                  return t;
                }),
                (e.prototype.checkPatternParam = function(e, t) {
                  switch (t.type) {
                    case u.Syntax.Identifier:
                      this.validateParam(e, t, t.name);
                      break;
                    case u.Syntax.RestElement:
                      this.checkPatternParam(e, t.argument);
                      break;
                    case u.Syntax.AssignmentPattern:
                      this.checkPatternParam(e, t.left);
                      break;
                    case u.Syntax.ArrayPattern:
                      for (var n = 0; n < t.elements.length; n++)
                        null !== t.elements[n] &&
                          this.checkPatternParam(e, t.elements[n]);
                      break;
                    case u.Syntax.ObjectPattern:
                      for (n = 0; n < t.properties.length; n++)
                        this.checkPatternParam(e, t.properties[n].value);
                  }
                  e.simple = e.simple && t instanceof o.Identifier;
                }),
                (e.prototype.reinterpretAsCoverFormalsList = function(e) {
                  var t,
                    n = [e],
                    r = !1;
                  switch (e.type) {
                    case u.Syntax.Identifier:
                      break;
                    case 'ArrowParameterPlaceHolder':
                      (n = e.params), (r = e.async);
                      break;
                    default:
                      return null;
                  }
                  t = { simple: !0, paramSet: {} };
                  for (var i = 0; i < n.length; ++i)
                    (o = n[i]).type === u.Syntax.AssignmentPattern
                      ? o.right.type === u.Syntax.YieldExpression &&
                        (o.right.argument &&
                          this.throwUnexpectedToken(this.lookahead),
                        (o.right.type = u.Syntax.Identifier),
                        (o.right.name = 'yield'),
                        delete o.right.argument,
                        delete o.right.delegate)
                      : r &&
                        o.type === u.Syntax.Identifier &&
                        'await' === o.name &&
                        this.throwUnexpectedToken(this.lookahead),
                      this.checkPatternParam(t, o),
                      (n[i] = o);
                  if (this.context.strict || !this.context.allowYield)
                    for (i = 0; i < n.length; ++i) {
                      var o;
                      (o = n[i]).type === u.Syntax.YieldExpression &&
                        this.throwUnexpectedToken(this.lookahead);
                    }
                  if (t.message === a.Messages.StrictParamDupe) {
                    var s = this.context.strict
                      ? t.stricted
                      : t.firstRestricted;
                    this.throwUnexpectedToken(s, t.message);
                  }
                  return {
                    simple: t.simple,
                    params: n,
                    stricted: t.stricted,
                    firstRestricted: t.firstRestricted,
                    message: t.message,
                  };
                }),
                (e.prototype.parseAssignmentExpression = function() {
                  var e;
                  if (!this.context.allowYield && this.matchKeyword('yield'))
                    e = this.parseYieldExpression();
                  else {
                    var t = this.lookahead,
                      n = t;
                    if (
                      ((e = this.parseConditionalExpression()),
                      3 === n.type &&
                        n.lineNumber === this.lookahead.lineNumber &&
                        'async' === n.value &&
                        (3 === this.lookahead.type ||
                          this.matchKeyword('yield')))
                    ) {
                      var r = this.parsePrimaryExpression();
                      this.reinterpretExpressionAsPattern(r),
                        (e = {
                          type: 'ArrowParameterPlaceHolder',
                          params: [r],
                          async: !0,
                        });
                    }
                    if (
                      'ArrowParameterPlaceHolder' === e.type ||
                      this.match('=>')
                    ) {
                      (this.context.isAssignmentTarget = !1),
                        (this.context.isBindingElement = !1);
                      var i = e.async,
                        s = this.reinterpretAsCoverFormalsList(e);
                      if (s) {
                        this.hasLineTerminator &&
                          this.tolerateUnexpectedToken(this.lookahead),
                          (this.context.firstCoverInitializedNameError = null);
                        var c = this.context.strict,
                          l = this.context.allowStrictDirective;
                        this.context.allowStrictDirective = s.simple;
                        var p = this.context.allowYield,
                          f = this.context.await;
                        (this.context.allowYield = !0),
                          (this.context.await = i);
                        var h = this.startNode(t);
                        this.expect('=>');
                        var d = void 0;
                        if (this.match('{')) {
                          var m = this.context.allowIn;
                          (this.context.allowIn = !0),
                            (d = this.parseFunctionSourceElements()),
                            (this.context.allowIn = m);
                        } else
                          d = this.isolateCoverGrammar(
                            this.parseAssignmentExpression,
                          );
                        var g = d.type !== u.Syntax.BlockStatement;
                        this.context.strict &&
                          s.firstRestricted &&
                          this.throwUnexpectedToken(
                            s.firstRestricted,
                            s.message,
                          ),
                          this.context.strict &&
                            s.stricted &&
                            this.tolerateUnexpectedToken(s.stricted, s.message),
                          (e = i
                            ? this.finalize(
                                h,
                                new o.AsyncArrowFunctionExpression(
                                  s.params,
                                  d,
                                  g,
                                ),
                              )
                            : this.finalize(
                                h,
                                new o.ArrowFunctionExpression(s.params, d, g),
                              )),
                          (this.context.strict = c),
                          (this.context.allowStrictDirective = l),
                          (this.context.allowYield = p),
                          (this.context.await = f);
                      }
                    } else if (this.matchAssign()) {
                      if (
                        (this.context.isAssignmentTarget ||
                          this.tolerateError(a.Messages.InvalidLHSInAssignment),
                        this.context.strict && e.type === u.Syntax.Identifier)
                      ) {
                        var y = e;
                        this.scanner.isRestrictedWord(y.name) &&
                          this.tolerateUnexpectedToken(
                            n,
                            a.Messages.StrictLHSAssignment,
                          ),
                          this.scanner.isStrictModeReservedWord(y.name) &&
                            this.tolerateUnexpectedToken(
                              n,
                              a.Messages.StrictReservedWord,
                            );
                      }
                      this.match('=')
                        ? this.reinterpretExpressionAsPattern(e)
                        : ((this.context.isAssignmentTarget = !1),
                          (this.context.isBindingElement = !1));
                      var v = (n = this.nextToken()).value,
                        D = this.isolateCoverGrammar(
                          this.parseAssignmentExpression,
                        );
                      (e = this.finalize(
                        this.startNode(t),
                        new o.AssignmentExpression(v, e, D),
                      )),
                        (this.context.firstCoverInitializedNameError = null);
                    }
                  }
                  return e;
                }),
                (e.prototype.parseExpression = function() {
                  var e = this.lookahead,
                    t = this.isolateCoverGrammar(
                      this.parseAssignmentExpression,
                    );
                  if (this.match(',')) {
                    var n = [];
                    for (
                      n.push(t);
                      2 !== this.lookahead.type && this.match(',');

                    )
                      this.nextToken(),
                        n.push(
                          this.isolateCoverGrammar(
                            this.parseAssignmentExpression,
                          ),
                        );
                    t = this.finalize(
                      this.startNode(e),
                      new o.SequenceExpression(n),
                    );
                  }
                  return t;
                }),
                (e.prototype.parseStatementListItem = function() {
                  var e;
                  if (
                    ((this.context.isAssignmentTarget = !0),
                    (this.context.isBindingElement = !0),
                    4 === this.lookahead.type)
                  )
                    switch (this.lookahead.value) {
                      case 'export':
                        this.context.isModule ||
                          this.tolerateUnexpectedToken(
                            this.lookahead,
                            a.Messages.IllegalExportDeclaration,
                          ),
                          (e = this.parseExportDeclaration());
                        break;
                      case 'import':
                        this.context.isModule ||
                          this.tolerateUnexpectedToken(
                            this.lookahead,
                            a.Messages.IllegalImportDeclaration,
                          ),
                          (e = this.parseImportDeclaration());
                        break;
                      case 'const':
                        e = this.parseLexicalDeclaration({ inFor: !1 });
                        break;
                      case 'function':
                        e = this.parseFunctionDeclaration();
                        break;
                      case 'class':
                        e = this.parseClassDeclaration();
                        break;
                      case 'let':
                        e = this.isLexicalDeclaration()
                          ? this.parseLexicalDeclaration({ inFor: !1 })
                          : this.parseStatement();
                        break;
                      default:
                        e = this.parseStatement();
                    }
                  else e = this.parseStatement();
                  return e;
                }),
                (e.prototype.parseBlock = function() {
                  var e = this.createNode();
                  this.expect('{');
                  for (var t = []; !this.match('}'); )
                    t.push(this.parseStatementListItem());
                  return (
                    this.expect('}'), this.finalize(e, new o.BlockStatement(t))
                  );
                }),
                (e.prototype.parseLexicalBinding = function(e, t) {
                  var n = this.createNode(),
                    r = this.parsePattern([], e);
                  this.context.strict &&
                    r.type === u.Syntax.Identifier &&
                    this.scanner.isRestrictedWord(r.name) &&
                    this.tolerateError(a.Messages.StrictVarName);
                  var i = null;
                  return (
                    'const' === e
                      ? this.matchKeyword('in') ||
                        this.matchContextualKeyword('of') ||
                        (this.match('=')
                          ? (this.nextToken(),
                            (i = this.isolateCoverGrammar(
                              this.parseAssignmentExpression,
                            )))
                          : this.throwError(
                              a.Messages.DeclarationMissingInitializer,
                              'const',
                            ))
                      : ((!t.inFor && r.type !== u.Syntax.Identifier) ||
                          this.match('=')) &&
                        (this.expect('='),
                        (i = this.isolateCoverGrammar(
                          this.parseAssignmentExpression,
                        ))),
                    this.finalize(n, new o.VariableDeclarator(r, i))
                  );
                }),
                (e.prototype.parseBindingList = function(e, t) {
                  for (
                    var n = [this.parseLexicalBinding(e, t)];
                    this.match(',');

                  )
                    this.nextToken(), n.push(this.parseLexicalBinding(e, t));
                  return n;
                }),
                (e.prototype.isLexicalDeclaration = function() {
                  var e = this.scanner.saveState();
                  this.scanner.scanComments();
                  var t = this.scanner.lex();
                  return (
                    this.scanner.restoreState(e),
                    3 === t.type ||
                      (7 === t.type && '[' === t.value) ||
                      (7 === t.type && '{' === t.value) ||
                      (4 === t.type && 'let' === t.value) ||
                      (4 === t.type && 'yield' === t.value)
                  );
                }),
                (e.prototype.parseLexicalDeclaration = function(e) {
                  var t = this.createNode(),
                    n = this.nextToken().value;
                  r.assert(
                    'let' === n || 'const' === n,
                    'Lexical declaration must be either let or const',
                  );
                  var i = this.parseBindingList(n, e);
                  return (
                    this.consumeSemicolon(),
                    this.finalize(t, new o.VariableDeclaration(i, n))
                  );
                }),
                (e.prototype.parseBindingRestElement = function(e, t) {
                  var n = this.createNode();
                  this.expect('...');
                  var r = this.parsePattern(e, t);
                  return this.finalize(n, new o.RestElement(r));
                }),
                (e.prototype.parseArrayPattern = function(e, t) {
                  var n = this.createNode();
                  this.expect('[');
                  for (var r = []; !this.match(']'); )
                    if (this.match(',')) this.nextToken(), r.push(null);
                    else {
                      if (this.match('...')) {
                        r.push(this.parseBindingRestElement(e, t));
                        break;
                      }
                      r.push(this.parsePatternWithDefault(e, t)),
                        this.match(']') || this.expect(',');
                    }
                  return (
                    this.expect(']'), this.finalize(n, new o.ArrayPattern(r))
                  );
                }),
                (e.prototype.parsePropertyPattern = function(e, t) {
                  var n,
                    r,
                    i = this.createNode(),
                    a = !1,
                    s = !1;
                  if (3 === this.lookahead.type) {
                    var u = this.lookahead;
                    n = this.parseVariableIdentifier();
                    var c = this.finalize(i, new o.Identifier(u.value));
                    if (this.match('=')) {
                      e.push(u), (s = !0), this.nextToken();
                      var l = this.parseAssignmentExpression();
                      r = this.finalize(
                        this.startNode(u),
                        new o.AssignmentPattern(c, l),
                      );
                    } else
                      this.match(':')
                        ? (this.expect(':'),
                          (r = this.parsePatternWithDefault(e, t)))
                        : (e.push(u), (s = !0), (r = c));
                  } else
                    (a = this.match('[')),
                      (n = this.parseObjectPropertyKey()),
                      this.expect(':'),
                      (r = this.parsePatternWithDefault(e, t));
                  return this.finalize(
                    i,
                    new o.Property('init', n, a, r, !1, s),
                  );
                }),
                (e.prototype.parseObjectPattern = function(e, t) {
                  var n = this.createNode(),
                    r = [];
                  for (this.expect('{'); !this.match('}'); )
                    r.push(this.parsePropertyPattern(e, t)),
                      this.match('}') || this.expect(',');
                  return (
                    this.expect('}'), this.finalize(n, new o.ObjectPattern(r))
                  );
                }),
                (e.prototype.parsePattern = function(e, t) {
                  var n;
                  return (
                    this.match('[')
                      ? (n = this.parseArrayPattern(e, t))
                      : this.match('{')
                      ? (n = this.parseObjectPattern(e, t))
                      : (!this.matchKeyword('let') ||
                          ('const' !== t && 'let' !== t) ||
                          this.tolerateUnexpectedToken(
                            this.lookahead,
                            a.Messages.LetInLexicalBinding,
                          ),
                        e.push(this.lookahead),
                        (n = this.parseVariableIdentifier(t))),
                    n
                  );
                }),
                (e.prototype.parsePatternWithDefault = function(e, t) {
                  var n = this.lookahead,
                    r = this.parsePattern(e, t);
                  if (this.match('=')) {
                    this.nextToken();
                    var i = this.context.allowYield;
                    this.context.allowYield = !0;
                    var a = this.isolateCoverGrammar(
                      this.parseAssignmentExpression,
                    );
                    (this.context.allowYield = i),
                      (r = this.finalize(
                        this.startNode(n),
                        new o.AssignmentPattern(r, a),
                      ));
                  }
                  return r;
                }),
                (e.prototype.parseVariableIdentifier = function(e) {
                  var t = this.createNode(),
                    n = this.nextToken();
                  return (
                    4 === n.type && 'yield' === n.value
                      ? this.context.strict
                        ? this.tolerateUnexpectedToken(
                            n,
                            a.Messages.StrictReservedWord,
                          )
                        : this.context.allowYield ||
                          this.throwUnexpectedToken(n)
                      : 3 !== n.type
                      ? this.context.strict &&
                        4 === n.type &&
                        this.scanner.isStrictModeReservedWord(n.value)
                        ? this.tolerateUnexpectedToken(
                            n,
                            a.Messages.StrictReservedWord,
                          )
                        : (this.context.strict ||
                            'let' !== n.value ||
                            'var' !== e) &&
                          this.throwUnexpectedToken(n)
                      : (this.context.isModule || this.context.await) &&
                        3 === n.type &&
                        'await' === n.value &&
                        this.tolerateUnexpectedToken(n),
                    this.finalize(t, new o.Identifier(n.value))
                  );
                }),
                (e.prototype.parseVariableDeclaration = function(e) {
                  var t = this.createNode(),
                    n = this.parsePattern([], 'var');
                  this.context.strict &&
                    n.type === u.Syntax.Identifier &&
                    this.scanner.isRestrictedWord(n.name) &&
                    this.tolerateError(a.Messages.StrictVarName);
                  var r = null;
                  return (
                    this.match('=')
                      ? (this.nextToken(),
                        (r = this.isolateCoverGrammar(
                          this.parseAssignmentExpression,
                        )))
                      : n.type === u.Syntax.Identifier ||
                        e.inFor ||
                        this.expect('='),
                    this.finalize(t, new o.VariableDeclarator(n, r))
                  );
                }),
                (e.prototype.parseVariableDeclarationList = function(e) {
                  var t = { inFor: e.inFor },
                    n = [];
                  for (
                    n.push(this.parseVariableDeclaration(t));
                    this.match(',');

                  )
                    this.nextToken(), n.push(this.parseVariableDeclaration(t));
                  return n;
                }),
                (e.prototype.parseVariableStatement = function() {
                  var e = this.createNode();
                  this.expectKeyword('var');
                  var t = this.parseVariableDeclarationList({ inFor: !1 });
                  return (
                    this.consumeSemicolon(),
                    this.finalize(e, new o.VariableDeclaration(t, 'var'))
                  );
                }),
                (e.prototype.parseEmptyStatement = function() {
                  var e = this.createNode();
                  return (
                    this.expect(';'), this.finalize(e, new o.EmptyStatement())
                  );
                }),
                (e.prototype.parseExpressionStatement = function() {
                  var e = this.createNode(),
                    t = this.parseExpression();
                  return (
                    this.consumeSemicolon(),
                    this.finalize(e, new o.ExpressionStatement(t))
                  );
                }),
                (e.prototype.parseIfClause = function() {
                  return (
                    this.context.strict &&
                      this.matchKeyword('function') &&
                      this.tolerateError(a.Messages.StrictFunction),
                    this.parseStatement()
                  );
                }),
                (e.prototype.parseIfStatement = function() {
                  var e,
                    t = this.createNode(),
                    n = null;
                  this.expectKeyword('if'), this.expect('(');
                  var r = this.parseExpression();
                  return (
                    !this.match(')') && this.config.tolerant
                      ? (this.tolerateUnexpectedToken(this.nextToken()),
                        (e = this.finalize(
                          this.createNode(),
                          new o.EmptyStatement(),
                        )))
                      : (this.expect(')'),
                        (e = this.parseIfClause()),
                        this.matchKeyword('else') &&
                          (this.nextToken(), (n = this.parseIfClause()))),
                    this.finalize(t, new o.IfStatement(r, e, n))
                  );
                }),
                (e.prototype.parseDoWhileStatement = function() {
                  var e = this.createNode();
                  this.expectKeyword('do');
                  var t = this.context.inIteration;
                  this.context.inIteration = !0;
                  var n = this.parseStatement();
                  (this.context.inIteration = t),
                    this.expectKeyword('while'),
                    this.expect('(');
                  var r = this.parseExpression();
                  return (
                    !this.match(')') && this.config.tolerant
                      ? this.tolerateUnexpectedToken(this.nextToken())
                      : (this.expect(')'), this.match(';') && this.nextToken()),
                    this.finalize(e, new o.DoWhileStatement(n, r))
                  );
                }),
                (e.prototype.parseWhileStatement = function() {
                  var e,
                    t = this.createNode();
                  this.expectKeyword('while'), this.expect('(');
                  var n = this.parseExpression();
                  if (!this.match(')') && this.config.tolerant)
                    this.tolerateUnexpectedToken(this.nextToken()),
                      (e = this.finalize(
                        this.createNode(),
                        new o.EmptyStatement(),
                      ));
                  else {
                    this.expect(')');
                    var r = this.context.inIteration;
                    (this.context.inIteration = !0),
                      (e = this.parseStatement()),
                      (this.context.inIteration = r);
                  }
                  return this.finalize(t, new o.WhileStatement(n, e));
                }),
                (e.prototype.parseForStatement = function() {
                  var e,
                    t,
                    n,
                    r = null,
                    i = null,
                    s = null,
                    c = !0,
                    l = this.createNode();
                  if (
                    (this.expectKeyword('for'),
                    this.expect('('),
                    this.match(';'))
                  )
                    this.nextToken();
                  else if (this.matchKeyword('var')) {
                    (r = this.createNode()), this.nextToken();
                    var p = this.context.allowIn;
                    this.context.allowIn = !1;
                    var f = this.parseVariableDeclarationList({ inFor: !0 });
                    if (
                      ((this.context.allowIn = p),
                      1 === f.length && this.matchKeyword('in'))
                    ) {
                      var h = f[0];
                      h.init &&
                        (h.id.type === u.Syntax.ArrayPattern ||
                          h.id.type === u.Syntax.ObjectPattern ||
                          this.context.strict) &&
                        this.tolerateError(
                          a.Messages.ForInOfLoopInitializer,
                          'for-in',
                        ),
                        (r = this.finalize(
                          r,
                          new o.VariableDeclaration(f, 'var'),
                        )),
                        this.nextToken(),
                        (e = r),
                        (t = this.parseExpression()),
                        (r = null);
                    } else
                      1 === f.length &&
                      null === f[0].init &&
                      this.matchContextualKeyword('of')
                        ? ((r = this.finalize(
                            r,
                            new o.VariableDeclaration(f, 'var'),
                          )),
                          this.nextToken(),
                          (e = r),
                          (t = this.parseAssignmentExpression()),
                          (r = null),
                          (c = !1))
                        : ((r = this.finalize(
                            r,
                            new o.VariableDeclaration(f, 'var'),
                          )),
                          this.expect(';'));
                  } else if (
                    this.matchKeyword('const') ||
                    this.matchKeyword('let')
                  ) {
                    r = this.createNode();
                    var d = this.nextToken().value;
                    this.context.strict || 'in' !== this.lookahead.value
                      ? ((p = this.context.allowIn),
                        (this.context.allowIn = !1),
                        (f = this.parseBindingList(d, { inFor: !0 })),
                        (this.context.allowIn = p),
                        1 === f.length &&
                        null === f[0].init &&
                        this.matchKeyword('in')
                          ? ((r = this.finalize(
                              r,
                              new o.VariableDeclaration(f, d),
                            )),
                            this.nextToken(),
                            (e = r),
                            (t = this.parseExpression()),
                            (r = null))
                          : 1 === f.length &&
                            null === f[0].init &&
                            this.matchContextualKeyword('of')
                          ? ((r = this.finalize(
                              r,
                              new o.VariableDeclaration(f, d),
                            )),
                            this.nextToken(),
                            (e = r),
                            (t = this.parseAssignmentExpression()),
                            (r = null),
                            (c = !1))
                          : (this.consumeSemicolon(),
                            (r = this.finalize(
                              r,
                              new o.VariableDeclaration(f, d),
                            ))))
                      : ((r = this.finalize(r, new o.Identifier(d))),
                        this.nextToken(),
                        (e = r),
                        (t = this.parseExpression()),
                        (r = null));
                  } else {
                    var m = this.lookahead;
                    if (
                      ((p = this.context.allowIn),
                      (this.context.allowIn = !1),
                      (r = this.inheritCoverGrammar(
                        this.parseAssignmentExpression,
                      )),
                      (this.context.allowIn = p),
                      this.matchKeyword('in'))
                    )
                      (this.context.isAssignmentTarget &&
                        r.type !== u.Syntax.AssignmentExpression) ||
                        this.tolerateError(a.Messages.InvalidLHSInForIn),
                        this.nextToken(),
                        this.reinterpretExpressionAsPattern(r),
                        (e = r),
                        (t = this.parseExpression()),
                        (r = null);
                    else if (this.matchContextualKeyword('of'))
                      (this.context.isAssignmentTarget &&
                        r.type !== u.Syntax.AssignmentExpression) ||
                        this.tolerateError(a.Messages.InvalidLHSInForLoop),
                        this.nextToken(),
                        this.reinterpretExpressionAsPattern(r),
                        (e = r),
                        (t = this.parseAssignmentExpression()),
                        (r = null),
                        (c = !1);
                    else {
                      if (this.match(',')) {
                        for (var g = [r]; this.match(','); )
                          this.nextToken(),
                            g.push(
                              this.isolateCoverGrammar(
                                this.parseAssignmentExpression,
                              ),
                            );
                        r = this.finalize(
                          this.startNode(m),
                          new o.SequenceExpression(g),
                        );
                      }
                      this.expect(';');
                    }
                  }
                  if (
                    (void 0 === e &&
                      (this.match(';') || (i = this.parseExpression()),
                      this.expect(';'),
                      this.match(')') || (s = this.parseExpression())),
                    !this.match(')') && this.config.tolerant)
                  )
                    this.tolerateUnexpectedToken(this.nextToken()),
                      (n = this.finalize(
                        this.createNode(),
                        new o.EmptyStatement(),
                      ));
                  else {
                    this.expect(')');
                    var y = this.context.inIteration;
                    (this.context.inIteration = !0),
                      (n = this.isolateCoverGrammar(this.parseStatement)),
                      (this.context.inIteration = y);
                  }
                  return void 0 === e
                    ? this.finalize(l, new o.ForStatement(r, i, s, n))
                    : c
                    ? this.finalize(l, new o.ForInStatement(e, t, n))
                    : this.finalize(l, new o.ForOfStatement(e, t, n));
                }),
                (e.prototype.parseContinueStatement = function() {
                  var e = this.createNode();
                  this.expectKeyword('continue');
                  var t = null;
                  if (3 === this.lookahead.type && !this.hasLineTerminator) {
                    var n = this.parseVariableIdentifier();
                    t = n;
                    var r = '$' + n.name;
                    Object.prototype.hasOwnProperty.call(
                      this.context.labelSet,
                      r,
                    ) || this.throwError(a.Messages.UnknownLabel, n.name);
                  }
                  return (
                    this.consumeSemicolon(),
                    null !== t ||
                      this.context.inIteration ||
                      this.throwError(a.Messages.IllegalContinue),
                    this.finalize(e, new o.ContinueStatement(t))
                  );
                }),
                (e.prototype.parseBreakStatement = function() {
                  var e = this.createNode();
                  this.expectKeyword('break');
                  var t = null;
                  if (3 === this.lookahead.type && !this.hasLineTerminator) {
                    var n = this.parseVariableIdentifier(),
                      r = '$' + n.name;
                    Object.prototype.hasOwnProperty.call(
                      this.context.labelSet,
                      r,
                    ) || this.throwError(a.Messages.UnknownLabel, n.name),
                      (t = n);
                  }
                  return (
                    this.consumeSemicolon(),
                    null !== t ||
                      this.context.inIteration ||
                      this.context.inSwitch ||
                      this.throwError(a.Messages.IllegalBreak),
                    this.finalize(e, new o.BreakStatement(t))
                  );
                }),
                (e.prototype.parseReturnStatement = function() {
                  this.context.inFunctionBody ||
                    this.tolerateError(a.Messages.IllegalReturn);
                  var e = this.createNode();
                  this.expectKeyword('return');
                  var t =
                    (this.match(';') ||
                      this.match('}') ||
                      this.hasLineTerminator ||
                      2 === this.lookahead.type) &&
                    8 !== this.lookahead.type &&
                    10 !== this.lookahead.type
                      ? null
                      : this.parseExpression();
                  return (
                    this.consumeSemicolon(),
                    this.finalize(e, new o.ReturnStatement(t))
                  );
                }),
                (e.prototype.parseWithStatement = function() {
                  this.context.strict &&
                    this.tolerateError(a.Messages.StrictModeWith);
                  var e,
                    t = this.createNode();
                  this.expectKeyword('with'), this.expect('(');
                  var n = this.parseExpression();
                  return (
                    !this.match(')') && this.config.tolerant
                      ? (this.tolerateUnexpectedToken(this.nextToken()),
                        (e = this.finalize(
                          this.createNode(),
                          new o.EmptyStatement(),
                        )))
                      : (this.expect(')'), (e = this.parseStatement())),
                    this.finalize(t, new o.WithStatement(n, e))
                  );
                }),
                (e.prototype.parseSwitchCase = function() {
                  var e,
                    t = this.createNode();
                  this.matchKeyword('default')
                    ? (this.nextToken(), (e = null))
                    : (this.expectKeyword('case'),
                      (e = this.parseExpression())),
                    this.expect(':');
                  for (
                    var n = [];
                    !(
                      this.match('}') ||
                      this.matchKeyword('default') ||
                      this.matchKeyword('case')
                    );

                  )
                    n.push(this.parseStatementListItem());
                  return this.finalize(t, new o.SwitchCase(e, n));
                }),
                (e.prototype.parseSwitchStatement = function() {
                  var e = this.createNode();
                  this.expectKeyword('switch'), this.expect('(');
                  var t = this.parseExpression();
                  this.expect(')');
                  var n = this.context.inSwitch;
                  this.context.inSwitch = !0;
                  var r = [],
                    i = !1;
                  for (this.expect('{'); !this.match('}'); ) {
                    var s = this.parseSwitchCase();
                    null === s.test &&
                      (i &&
                        this.throwError(a.Messages.MultipleDefaultsInSwitch),
                      (i = !0)),
                      r.push(s);
                  }
                  return (
                    this.expect('}'),
                    (this.context.inSwitch = n),
                    this.finalize(e, new o.SwitchStatement(t, r))
                  );
                }),
                (e.prototype.parseLabelledStatement = function() {
                  var e,
                    t = this.createNode(),
                    n = this.parseExpression();
                  if (n.type === u.Syntax.Identifier && this.match(':')) {
                    this.nextToken();
                    var r = n,
                      i = '$' + r.name;
                    Object.prototype.hasOwnProperty.call(
                      this.context.labelSet,
                      i,
                    ) &&
                      this.throwError(
                        a.Messages.Redeclaration,
                        'Label',
                        r.name,
                      ),
                      (this.context.labelSet[i] = !0);
                    var s = void 0;
                    if (this.matchKeyword('class'))
                      this.tolerateUnexpectedToken(this.lookahead),
                        (s = this.parseClassDeclaration());
                    else if (this.matchKeyword('function')) {
                      var c = this.lookahead,
                        l = this.parseFunctionDeclaration();
                      this.context.strict
                        ? this.tolerateUnexpectedToken(
                            c,
                            a.Messages.StrictFunction,
                          )
                        : l.generator &&
                          this.tolerateUnexpectedToken(
                            c,
                            a.Messages.GeneratorInLegacyContext,
                          ),
                        (s = l);
                    } else s = this.parseStatement();
                    delete this.context.labelSet[i],
                      (e = new o.LabeledStatement(r, s));
                  } else
                    this.consumeSemicolon(), (e = new o.ExpressionStatement(n));
                  return this.finalize(t, e);
                }),
                (e.prototype.parseThrowStatement = function() {
                  var e = this.createNode();
                  this.expectKeyword('throw'),
                    this.hasLineTerminator &&
                      this.throwError(a.Messages.NewlineAfterThrow);
                  var t = this.parseExpression();
                  return (
                    this.consumeSemicolon(),
                    this.finalize(e, new o.ThrowStatement(t))
                  );
                }),
                (e.prototype.parseCatchClause = function() {
                  var e = this.createNode();
                  this.expectKeyword('catch'),
                    this.expect('('),
                    this.match(')') &&
                      this.throwUnexpectedToken(this.lookahead);
                  for (
                    var t = [], n = this.parsePattern(t), r = {}, i = 0;
                    i < t.length;
                    i++
                  ) {
                    var s = '$' + t[i].value;
                    Object.prototype.hasOwnProperty.call(r, s) &&
                      this.tolerateError(
                        a.Messages.DuplicateBinding,
                        t[i].value,
                      ),
                      (r[s] = !0);
                  }
                  this.context.strict &&
                    n.type === u.Syntax.Identifier &&
                    this.scanner.isRestrictedWord(n.name) &&
                    this.tolerateError(a.Messages.StrictCatchVariable),
                    this.expect(')');
                  var c = this.parseBlock();
                  return this.finalize(e, new o.CatchClause(n, c));
                }),
                (e.prototype.parseFinallyClause = function() {
                  return this.expectKeyword('finally'), this.parseBlock();
                }),
                (e.prototype.parseTryStatement = function() {
                  var e = this.createNode();
                  this.expectKeyword('try');
                  var t = this.parseBlock(),
                    n = this.matchKeyword('catch')
                      ? this.parseCatchClause()
                      : null,
                    r = this.matchKeyword('finally')
                      ? this.parseFinallyClause()
                      : null;
                  return (
                    n || r || this.throwError(a.Messages.NoCatchOrFinally),
                    this.finalize(e, new o.TryStatement(t, n, r))
                  );
                }),
                (e.prototype.parseDebuggerStatement = function() {
                  var e = this.createNode();
                  return (
                    this.expectKeyword('debugger'),
                    this.consumeSemicolon(),
                    this.finalize(e, new o.DebuggerStatement())
                  );
                }),
                (e.prototype.parseStatement = function() {
                  var e;
                  switch (this.lookahead.type) {
                    case 1:
                    case 5:
                    case 6:
                    case 8:
                    case 10:
                    case 9:
                      e = this.parseExpressionStatement();
                      break;
                    case 7:
                      var t = this.lookahead.value;
                      e =
                        '{' === t
                          ? this.parseBlock()
                          : '(' === t
                          ? this.parseExpressionStatement()
                          : ';' === t
                          ? this.parseEmptyStatement()
                          : this.parseExpressionStatement();
                      break;
                    case 3:
                      e = this.matchAsyncFunction()
                        ? this.parseFunctionDeclaration()
                        : this.parseLabelledStatement();
                      break;
                    case 4:
                      switch (this.lookahead.value) {
                        case 'break':
                          e = this.parseBreakStatement();
                          break;
                        case 'continue':
                          e = this.parseContinueStatement();
                          break;
                        case 'debugger':
                          e = this.parseDebuggerStatement();
                          break;
                        case 'do':
                          e = this.parseDoWhileStatement();
                          break;
                        case 'for':
                          e = this.parseForStatement();
                          break;
                        case 'function':
                          e = this.parseFunctionDeclaration();
                          break;
                        case 'if':
                          e = this.parseIfStatement();
                          break;
                        case 'return':
                          e = this.parseReturnStatement();
                          break;
                        case 'switch':
                          e = this.parseSwitchStatement();
                          break;
                        case 'throw':
                          e = this.parseThrowStatement();
                          break;
                        case 'try':
                          e = this.parseTryStatement();
                          break;
                        case 'var':
                          e = this.parseVariableStatement();
                          break;
                        case 'while':
                          e = this.parseWhileStatement();
                          break;
                        case 'with':
                          e = this.parseWithStatement();
                          break;
                        default:
                          e = this.parseExpressionStatement();
                      }
                      break;
                    default:
                      e = this.throwUnexpectedToken(this.lookahead);
                  }
                  return e;
                }),
                (e.prototype.parseFunctionSourceElements = function() {
                  var e = this.createNode();
                  this.expect('{');
                  var t = this.parseDirectivePrologues(),
                    n = this.context.labelSet,
                    r = this.context.inIteration,
                    i = this.context.inSwitch,
                    a = this.context.inFunctionBody;
                  for (
                    this.context.labelSet = {},
                      this.context.inIteration = !1,
                      this.context.inSwitch = !1,
                      this.context.inFunctionBody = !0;
                    2 !== this.lookahead.type && !this.match('}');

                  )
                    t.push(this.parseStatementListItem());
                  return (
                    this.expect('}'),
                    (this.context.labelSet = n),
                    (this.context.inIteration = r),
                    (this.context.inSwitch = i),
                    (this.context.inFunctionBody = a),
                    this.finalize(e, new o.BlockStatement(t))
                  );
                }),
                (e.prototype.validateParam = function(e, t, n) {
                  var r = '$' + n;
                  this.context.strict
                    ? (this.scanner.isRestrictedWord(n) &&
                        ((e.stricted = t),
                        (e.message = a.Messages.StrictParamName)),
                      Object.prototype.hasOwnProperty.call(e.paramSet, r) &&
                        ((e.stricted = t),
                        (e.message = a.Messages.StrictParamDupe)))
                    : e.firstRestricted ||
                      (this.scanner.isRestrictedWord(n)
                        ? ((e.firstRestricted = t),
                          (e.message = a.Messages.StrictParamName))
                        : this.scanner.isStrictModeReservedWord(n)
                        ? ((e.firstRestricted = t),
                          (e.message = a.Messages.StrictReservedWord))
                        : Object.prototype.hasOwnProperty.call(e.paramSet, r) &&
                          ((e.stricted = t),
                          (e.message = a.Messages.StrictParamDupe))),
                    'function' == typeof Object.defineProperty
                      ? Object.defineProperty(e.paramSet, r, {
                          value: !0,
                          enumerable: !0,
                          writable: !0,
                          configurable: !0,
                        })
                      : (e.paramSet[r] = !0);
                }),
                (e.prototype.parseRestElement = function(e) {
                  var t = this.createNode();
                  this.expect('...');
                  var n = this.parsePattern(e);
                  return (
                    this.match('=') &&
                      this.throwError(a.Messages.DefaultRestParameter),
                    this.match(')') ||
                      this.throwError(a.Messages.ParameterAfterRestParameter),
                    this.finalize(t, new o.RestElement(n))
                  );
                }),
                (e.prototype.parseFormalParameter = function(e) {
                  for (
                    var t = [],
                      n = this.match('...')
                        ? this.parseRestElement(t)
                        : this.parsePatternWithDefault(t),
                      r = 0;
                    r < t.length;
                    r++
                  )
                    this.validateParam(e, t[r], t[r].value);
                  (e.simple = e.simple && n instanceof o.Identifier),
                    e.params.push(n);
                }),
                (e.prototype.parseFormalParameters = function(e) {
                  var t;
                  if (
                    ((t = { simple: !0, params: [], firstRestricted: e }),
                    this.expect('('),
                    !this.match(')'))
                  )
                    for (
                      t.paramSet = {};
                      2 !== this.lookahead.type &&
                      (this.parseFormalParameter(t), !this.match(')')) &&
                      (this.expect(','), !this.match(')'));

                    );
                  return (
                    this.expect(')'),
                    {
                      simple: t.simple,
                      params: t.params,
                      stricted: t.stricted,
                      firstRestricted: t.firstRestricted,
                      message: t.message,
                    }
                  );
                }),
                (e.prototype.matchAsyncFunction = function() {
                  var e = this.matchContextualKeyword('async');
                  if (e) {
                    var t = this.scanner.saveState();
                    this.scanner.scanComments();
                    var n = this.scanner.lex();
                    this.scanner.restoreState(t),
                      (e =
                        t.lineNumber === n.lineNumber &&
                        4 === n.type &&
                        'function' === n.value);
                  }
                  return e;
                }),
                (e.prototype.parseFunctionDeclaration = function(e) {
                  var t = this.createNode(),
                    n = this.matchContextualKeyword('async');
                  n && this.nextToken(), this.expectKeyword('function');
                  var r,
                    i = !n && this.match('*');
                  i && this.nextToken();
                  var s = null,
                    u = null;
                  if (!e || !this.match('(')) {
                    var c = this.lookahead;
                    (s = this.parseVariableIdentifier()),
                      this.context.strict
                        ? this.scanner.isRestrictedWord(c.value) &&
                          this.tolerateUnexpectedToken(
                            c,
                            a.Messages.StrictFunctionName,
                          )
                        : this.scanner.isRestrictedWord(c.value)
                        ? ((u = c), (r = a.Messages.StrictFunctionName))
                        : this.scanner.isStrictModeReservedWord(c.value) &&
                          ((u = c), (r = a.Messages.StrictReservedWord));
                  }
                  var l = this.context.await,
                    p = this.context.allowYield;
                  (this.context.await = n), (this.context.allowYield = !i);
                  var f = this.parseFormalParameters(u),
                    h = f.params,
                    d = f.stricted;
                  (u = f.firstRestricted), f.message && (r = f.message);
                  var m = this.context.strict,
                    g = this.context.allowStrictDirective;
                  this.context.allowStrictDirective = f.simple;
                  var y = this.parseFunctionSourceElements();
                  return (
                    this.context.strict && u && this.throwUnexpectedToken(u, r),
                    this.context.strict &&
                      d &&
                      this.tolerateUnexpectedToken(d, r),
                    (this.context.strict = m),
                    (this.context.allowStrictDirective = g),
                    (this.context.await = l),
                    (this.context.allowYield = p),
                    n
                      ? this.finalize(
                          t,
                          new o.AsyncFunctionDeclaration(s, h, y),
                        )
                      : this.finalize(t, new o.FunctionDeclaration(s, h, y, i))
                  );
                }),
                (e.prototype.parseFunctionExpression = function() {
                  var e = this.createNode(),
                    t = this.matchContextualKeyword('async');
                  t && this.nextToken(), this.expectKeyword('function');
                  var n,
                    r = !t && this.match('*');
                  r && this.nextToken();
                  var i,
                    s = null,
                    u = this.context.await,
                    c = this.context.allowYield;
                  if (
                    ((this.context.await = t),
                    (this.context.allowYield = !r),
                    !this.match('('))
                  ) {
                    var l = this.lookahead;
                    (s =
                      this.context.strict || r || !this.matchKeyword('yield')
                        ? this.parseVariableIdentifier()
                        : this.parseIdentifierName()),
                      this.context.strict
                        ? this.scanner.isRestrictedWord(l.value) &&
                          this.tolerateUnexpectedToken(
                            l,
                            a.Messages.StrictFunctionName,
                          )
                        : this.scanner.isRestrictedWord(l.value)
                        ? ((i = l), (n = a.Messages.StrictFunctionName))
                        : this.scanner.isStrictModeReservedWord(l.value) &&
                          ((i = l), (n = a.Messages.StrictReservedWord));
                  }
                  var p = this.parseFormalParameters(i),
                    f = p.params,
                    h = p.stricted;
                  (i = p.firstRestricted), p.message && (n = p.message);
                  var d = this.context.strict,
                    m = this.context.allowStrictDirective;
                  this.context.allowStrictDirective = p.simple;
                  var g = this.parseFunctionSourceElements();
                  return (
                    this.context.strict && i && this.throwUnexpectedToken(i, n),
                    this.context.strict &&
                      h &&
                      this.tolerateUnexpectedToken(h, n),
                    (this.context.strict = d),
                    (this.context.allowStrictDirective = m),
                    (this.context.await = u),
                    (this.context.allowYield = c),
                    t
                      ? this.finalize(e, new o.AsyncFunctionExpression(s, f, g))
                      : this.finalize(e, new o.FunctionExpression(s, f, g, r))
                  );
                }),
                (e.prototype.parseDirective = function() {
                  var e = this.lookahead,
                    t = this.createNode(),
                    n = this.parseExpression(),
                    r =
                      n.type === u.Syntax.Literal
                        ? this.getTokenRaw(e).slice(1, -1)
                        : null;
                  return (
                    this.consumeSemicolon(),
                    this.finalize(
                      t,
                      r ? new o.Directive(n, r) : new o.ExpressionStatement(n),
                    )
                  );
                }),
                (e.prototype.parseDirectivePrologues = function() {
                  for (var e = null, t = []; ; ) {
                    var n = this.lookahead;
                    if (8 !== n.type) break;
                    var r = this.parseDirective();
                    t.push(r);
                    var i = r.directive;
                    if ('string' != typeof i) break;
                    'use strict' === i
                      ? ((this.context.strict = !0),
                        e &&
                          this.tolerateUnexpectedToken(
                            e,
                            a.Messages.StrictOctalLiteral,
                          ),
                        this.context.allowStrictDirective ||
                          this.tolerateUnexpectedToken(
                            n,
                            a.Messages.IllegalLanguageModeDirective,
                          ))
                      : !e && n.octal && (e = n);
                  }
                  return t;
                }),
                (e.prototype.qualifiedPropertyName = function(e) {
                  switch (e.type) {
                    case 3:
                    case 8:
                    case 1:
                    case 5:
                    case 6:
                    case 4:
                      return !0;
                    case 7:
                      return '[' === e.value;
                  }
                  return !1;
                }),
                (e.prototype.parseGetterMethod = function() {
                  var e = this.createNode(),
                    t = this.context.allowYield;
                  this.context.allowYield = !0;
                  var n = this.parseFormalParameters();
                  n.params.length > 0 &&
                    this.tolerateError(a.Messages.BadGetterArity);
                  var r = this.parsePropertyMethod(n);
                  return (
                    (this.context.allowYield = t),
                    this.finalize(
                      e,
                      new o.FunctionExpression(null, n.params, r, !1),
                    )
                  );
                }),
                (e.prototype.parseSetterMethod = function() {
                  var e = this.createNode(),
                    t = this.context.allowYield;
                  this.context.allowYield = !0;
                  var n = this.parseFormalParameters();
                  1 !== n.params.length
                    ? this.tolerateError(a.Messages.BadSetterArity)
                    : n.params[0] instanceof o.RestElement &&
                      this.tolerateError(a.Messages.BadSetterRestParameter);
                  var r = this.parsePropertyMethod(n);
                  return (
                    (this.context.allowYield = t),
                    this.finalize(
                      e,
                      new o.FunctionExpression(null, n.params, r, !1),
                    )
                  );
                }),
                (e.prototype.parseGeneratorMethod = function() {
                  var e = this.createNode(),
                    t = this.context.allowYield;
                  this.context.allowYield = !0;
                  var n = this.parseFormalParameters();
                  this.context.allowYield = !1;
                  var r = this.parsePropertyMethod(n);
                  return (
                    (this.context.allowYield = t),
                    this.finalize(
                      e,
                      new o.FunctionExpression(null, n.params, r, !0),
                    )
                  );
                }),
                (e.prototype.isStartOfExpression = function() {
                  var e = !0,
                    t = this.lookahead.value;
                  switch (this.lookahead.type) {
                    case 7:
                      e =
                        '[' === t ||
                        '(' === t ||
                        '{' === t ||
                        '+' === t ||
                        '-' === t ||
                        '!' === t ||
                        '~' === t ||
                        '++' === t ||
                        '--' === t ||
                        '/' === t ||
                        '/=' === t;
                      break;
                    case 4:
                      e =
                        'class' === t ||
                        'delete' === t ||
                        'function' === t ||
                        'let' === t ||
                        'new' === t ||
                        'super' === t ||
                        'this' === t ||
                        'typeof' === t ||
                        'void' === t ||
                        'yield' === t;
                  }
                  return e;
                }),
                (e.prototype.parseYieldExpression = function() {
                  var e = this.createNode();
                  this.expectKeyword('yield');
                  var t = null,
                    n = !1;
                  if (!this.hasLineTerminator) {
                    var r = this.context.allowYield;
                    (this.context.allowYield = !1),
                      (n = this.match('*'))
                        ? (this.nextToken(),
                          (t = this.parseAssignmentExpression()))
                        : this.isStartOfExpression() &&
                          (t = this.parseAssignmentExpression()),
                      (this.context.allowYield = r);
                  }
                  return this.finalize(e, new o.YieldExpression(t, n));
                }),
                (e.prototype.parseClassElement = function(e) {
                  var t = this.lookahead,
                    n = this.createNode(),
                    r = '',
                    i = null,
                    s = null,
                    u = !1,
                    c = !1,
                    l = !1,
                    p = !1;
                  if (this.match('*')) this.nextToken();
                  else if (
                    ((u = this.match('[')),
                    'static' === (i = this.parseObjectPropertyKey()).name &&
                      (this.qualifiedPropertyName(this.lookahead) ||
                        this.match('*')) &&
                      ((t = this.lookahead),
                      (l = !0),
                      (u = this.match('[')),
                      this.match('*')
                        ? this.nextToken()
                        : (i = this.parseObjectPropertyKey())),
                    3 === t.type &&
                      !this.hasLineTerminator &&
                      'async' === t.value)
                  ) {
                    var f = this.lookahead.value;
                    ':' !== f &&
                      '(' !== f &&
                      '*' !== f &&
                      ((p = !0),
                      (t = this.lookahead),
                      (i = this.parseObjectPropertyKey()),
                      3 === t.type &&
                        'constructor' === t.value &&
                        this.tolerateUnexpectedToken(
                          t,
                          a.Messages.ConstructorIsAsync,
                        ));
                  }
                  var h = this.qualifiedPropertyName(this.lookahead);
                  return (
                    3 === t.type
                      ? 'get' === t.value && h
                        ? ((r = 'get'),
                          (u = this.match('[')),
                          (i = this.parseObjectPropertyKey()),
                          (this.context.allowYield = !1),
                          (s = this.parseGetterMethod()))
                        : 'set' === t.value &&
                          h &&
                          ((r = 'set'),
                          (u = this.match('[')),
                          (i = this.parseObjectPropertyKey()),
                          (s = this.parseSetterMethod()))
                      : 7 === t.type &&
                        '*' === t.value &&
                        h &&
                        ((r = 'init'),
                        (u = this.match('[')),
                        (i = this.parseObjectPropertyKey()),
                        (s = this.parseGeneratorMethod()),
                        (c = !0)),
                    !r &&
                      i &&
                      this.match('(') &&
                      ((r = 'init'),
                      (s = p
                        ? this.parsePropertyMethodAsyncFunction()
                        : this.parsePropertyMethodFunction()),
                      (c = !0)),
                    r || this.throwUnexpectedToken(this.lookahead),
                    'init' === r && (r = 'method'),
                    u ||
                      (l &&
                        this.isPropertyKey(i, 'prototype') &&
                        this.throwUnexpectedToken(
                          t,
                          a.Messages.StaticPrototype,
                        ),
                      !l &&
                        this.isPropertyKey(i, 'constructor') &&
                        (('method' !== r || !c || (s && s.generator)) &&
                          this.throwUnexpectedToken(
                            t,
                            a.Messages.ConstructorSpecialMethod,
                          ),
                        e.value
                          ? this.throwUnexpectedToken(
                              t,
                              a.Messages.DuplicateConstructor,
                            )
                          : (e.value = !0),
                        (r = 'constructor'))),
                    this.finalize(n, new o.MethodDefinition(i, u, s, r, l))
                  );
                }),
                (e.prototype.parseClassElementList = function() {
                  var e = [],
                    t = { value: !1 };
                  for (this.expect('{'); !this.match('}'); )
                    this.match(';')
                      ? this.nextToken()
                      : e.push(this.parseClassElement(t));
                  return this.expect('}'), e;
                }),
                (e.prototype.parseClassBody = function() {
                  var e = this.createNode(),
                    t = this.parseClassElementList();
                  return this.finalize(e, new o.ClassBody(t));
                }),
                (e.prototype.parseClassDeclaration = function(e) {
                  var t = this.createNode(),
                    n = this.context.strict;
                  (this.context.strict = !0), this.expectKeyword('class');
                  var r =
                      e && 3 !== this.lookahead.type
                        ? null
                        : this.parseVariableIdentifier(),
                    i = null;
                  this.matchKeyword('extends') &&
                    (this.nextToken(),
                    (i = this.isolateCoverGrammar(
                      this.parseLeftHandSideExpressionAllowCall,
                    )));
                  var a = this.parseClassBody();
                  return (
                    (this.context.strict = n),
                    this.finalize(t, new o.ClassDeclaration(r, i, a))
                  );
                }),
                (e.prototype.parseClassExpression = function() {
                  var e = this.createNode(),
                    t = this.context.strict;
                  (this.context.strict = !0), this.expectKeyword('class');
                  var n =
                      3 === this.lookahead.type
                        ? this.parseVariableIdentifier()
                        : null,
                    r = null;
                  this.matchKeyword('extends') &&
                    (this.nextToken(),
                    (r = this.isolateCoverGrammar(
                      this.parseLeftHandSideExpressionAllowCall,
                    )));
                  var i = this.parseClassBody();
                  return (
                    (this.context.strict = t),
                    this.finalize(e, new o.ClassExpression(n, r, i))
                  );
                }),
                (e.prototype.parseModule = function() {
                  (this.context.strict = !0),
                    (this.context.isModule = !0),
                    (this.scanner.isModule = !0);
                  for (
                    var e = this.createNode(),
                      t = this.parseDirectivePrologues();
                    2 !== this.lookahead.type;

                  )
                    t.push(this.parseStatementListItem());
                  return this.finalize(e, new o.Module(t));
                }),
                (e.prototype.parseScript = function() {
                  for (
                    var e = this.createNode(),
                      t = this.parseDirectivePrologues();
                    2 !== this.lookahead.type;

                  )
                    t.push(this.parseStatementListItem());
                  return this.finalize(e, new o.Script(t));
                }),
                (e.prototype.parseModuleSpecifier = function() {
                  var e = this.createNode();
                  8 !== this.lookahead.type &&
                    this.throwError(a.Messages.InvalidModuleSpecifier);
                  var t = this.nextToken(),
                    n = this.getTokenRaw(t);
                  return this.finalize(e, new o.Literal(t.value, n));
                }),
                (e.prototype.parseImportSpecifier = function() {
                  var e,
                    t,
                    n = this.createNode();
                  return (
                    3 === this.lookahead.type
                      ? ((t = e = this.parseVariableIdentifier()),
                        this.matchContextualKeyword('as') &&
                          (this.nextToken(),
                          (t = this.parseVariableIdentifier())))
                      : ((t = e = this.parseIdentifierName()),
                        this.matchContextualKeyword('as')
                          ? (this.nextToken(),
                            (t = this.parseVariableIdentifier()))
                          : this.throwUnexpectedToken(this.nextToken())),
                    this.finalize(n, new o.ImportSpecifier(t, e))
                  );
                }),
                (e.prototype.parseNamedImports = function() {
                  this.expect('{');
                  for (var e = []; !this.match('}'); )
                    e.push(this.parseImportSpecifier()),
                      this.match('}') || this.expect(',');
                  return this.expect('}'), e;
                }),
                (e.prototype.parseImportDefaultSpecifier = function() {
                  var e = this.createNode(),
                    t = this.parseIdentifierName();
                  return this.finalize(e, new o.ImportDefaultSpecifier(t));
                }),
                (e.prototype.parseImportNamespaceSpecifier = function() {
                  var e = this.createNode();
                  this.expect('*'),
                    this.matchContextualKeyword('as') ||
                      this.throwError(a.Messages.NoAsAfterImportNamespace),
                    this.nextToken();
                  var t = this.parseIdentifierName();
                  return this.finalize(e, new o.ImportNamespaceSpecifier(t));
                }),
                (e.prototype.parseImportDeclaration = function() {
                  this.context.inFunctionBody &&
                    this.throwError(a.Messages.IllegalImportDeclaration);
                  var e,
                    t = this.createNode();
                  this.expectKeyword('import');
                  var n = [];
                  if (8 === this.lookahead.type)
                    e = this.parseModuleSpecifier();
                  else {
                    if (
                      (this.match('{')
                        ? (n = n.concat(this.parseNamedImports()))
                        : this.match('*')
                        ? n.push(this.parseImportNamespaceSpecifier())
                        : this.isIdentifierName(this.lookahead) &&
                          !this.matchKeyword('default')
                        ? (n.push(this.parseImportDefaultSpecifier()),
                          this.match(',') &&
                            (this.nextToken(),
                            this.match('*')
                              ? n.push(this.parseImportNamespaceSpecifier())
                              : this.match('{')
                              ? (n = n.concat(this.parseNamedImports()))
                              : this.throwUnexpectedToken(this.lookahead)))
                        : this.throwUnexpectedToken(this.nextToken()),
                      !this.matchContextualKeyword('from'))
                    ) {
                      var r = this.lookahead.value
                        ? a.Messages.UnexpectedToken
                        : a.Messages.MissingFromClause;
                      this.throwError(r, this.lookahead.value);
                    }
                    this.nextToken(), (e = this.parseModuleSpecifier());
                  }
                  return (
                    this.consumeSemicolon(),
                    this.finalize(t, new o.ImportDeclaration(n, e))
                  );
                }),
                (e.prototype.parseExportSpecifier = function() {
                  var e = this.createNode(),
                    t = this.parseIdentifierName(),
                    n = t;
                  return (
                    this.matchContextualKeyword('as') &&
                      (this.nextToken(), (n = this.parseIdentifierName())),
                    this.finalize(e, new o.ExportSpecifier(t, n))
                  );
                }),
                (e.prototype.parseExportDeclaration = function() {
                  this.context.inFunctionBody &&
                    this.throwError(a.Messages.IllegalExportDeclaration);
                  var e,
                    t = this.createNode();
                  if (
                    (this.expectKeyword('export'), this.matchKeyword('default'))
                  )
                    if ((this.nextToken(), this.matchKeyword('function'))) {
                      var n = this.parseFunctionDeclaration(!0);
                      e = this.finalize(t, new o.ExportDefaultDeclaration(n));
                    } else
                      this.matchKeyword('class')
                        ? ((n = this.parseClassDeclaration(!0)),
                          (e = this.finalize(
                            t,
                            new o.ExportDefaultDeclaration(n),
                          )))
                        : this.matchContextualKeyword('async')
                        ? ((n = this.matchAsyncFunction()
                            ? this.parseFunctionDeclaration(!0)
                            : this.parseAssignmentExpression()),
                          (e = this.finalize(
                            t,
                            new o.ExportDefaultDeclaration(n),
                          )))
                        : (this.matchContextualKeyword('from') &&
                            this.throwError(
                              a.Messages.UnexpectedToken,
                              this.lookahead.value,
                            ),
                          (n = this.match('{')
                            ? this.parseObjectInitializer()
                            : this.match('[')
                            ? this.parseArrayInitializer()
                            : this.parseAssignmentExpression()),
                          this.consumeSemicolon(),
                          (e = this.finalize(
                            t,
                            new o.ExportDefaultDeclaration(n),
                          )));
                  else if (this.match('*')) {
                    if (
                      (this.nextToken(), !this.matchContextualKeyword('from'))
                    ) {
                      var r = this.lookahead.value
                        ? a.Messages.UnexpectedToken
                        : a.Messages.MissingFromClause;
                      this.throwError(r, this.lookahead.value);
                    }
                    this.nextToken();
                    var i = this.parseModuleSpecifier();
                    this.consumeSemicolon(),
                      (e = this.finalize(t, new o.ExportAllDeclaration(i)));
                  } else if (4 === this.lookahead.type) {
                    switch (((n = void 0), this.lookahead.value)) {
                      case 'let':
                      case 'const':
                        n = this.parseLexicalDeclaration({ inFor: !1 });
                        break;
                      case 'var':
                      case 'class':
                      case 'function':
                        n = this.parseStatementListItem();
                        break;
                      default:
                        this.throwUnexpectedToken(this.lookahead);
                    }
                    e = this.finalize(
                      t,
                      new o.ExportNamedDeclaration(n, [], null),
                    );
                  } else if (this.matchAsyncFunction())
                    (n = this.parseFunctionDeclaration()),
                      (e = this.finalize(
                        t,
                        new o.ExportNamedDeclaration(n, [], null),
                      ));
                  else {
                    var s = [],
                      u = null,
                      c = !1;
                    for (this.expect('{'); !this.match('}'); )
                      (c = c || this.matchKeyword('default')),
                        s.push(this.parseExportSpecifier()),
                        this.match('}') || this.expect(',');
                    this.expect('}'),
                      this.matchContextualKeyword('from')
                        ? (this.nextToken(),
                          (u = this.parseModuleSpecifier()),
                          this.consumeSemicolon())
                        : c
                        ? ((r = this.lookahead.value
                            ? a.Messages.UnexpectedToken
                            : a.Messages.MissingFromClause),
                          this.throwError(r, this.lookahead.value))
                        : this.consumeSemicolon(),
                      (e = this.finalize(
                        t,
                        new o.ExportNamedDeclaration(null, s, u),
                      ));
                  }
                  return e;
                }),
                e
              );
            })();
          t.Parser = l;
        },
        function(e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.assert = function(e, t) {
              if (!e) throw new Error('ASSERT: ' + t);
            });
        },
        function(e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var n = (function() {
            function e() {
              (this.errors = []), (this.tolerant = !1);
            }
            return (
              (e.prototype.recordError = function(e) {
                this.errors.push(e);
              }),
              (e.prototype.tolerate = function(e) {
                if (!this.tolerant) throw e;
                this.recordError(e);
              }),
              (e.prototype.constructError = function(e, t) {
                var n = new Error(e);
                try {
                  throw n;
                } catch (e) {
                  Object.create &&
                    Object.defineProperty &&
                    ((n = Object.create(e)),
                    Object.defineProperty(n, 'column', { value: t }));
                }
                return n;
              }),
              (e.prototype.createError = function(e, t, n, r) {
                var i = 'Line ' + t + ': ' + r,
                  a = this.constructError(i, n);
                return (
                  (a.index = e), (a.lineNumber = t), (a.description = r), a
                );
              }),
              (e.prototype.throwError = function(e, t, n, r) {
                throw this.createError(e, t, n, r);
              }),
              (e.prototype.tolerateError = function(e, t, n, r) {
                var i = this.createError(e, t, n, r);
                if (!this.tolerant) throw i;
                this.recordError(i);
              }),
              e
            );
          })();
          t.ErrorHandler = n;
        },
        function(e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.Messages = {
              BadGetterArity: 'Getter must not have any formal parameters',
              BadSetterArity: 'Setter must have exactly one formal parameter',
              BadSetterRestParameter:
                'Setter function argument must not be a rest parameter',
              ConstructorIsAsync:
                'Class constructor may not be an async method',
              ConstructorSpecialMethod:
                'Class constructor may not be an accessor',
              DeclarationMissingInitializer:
                'Missing initializer in %0 declaration',
              DefaultRestParameter: 'Unexpected token =',
              DuplicateBinding: 'Duplicate binding %0',
              DuplicateConstructor: 'A class may only have one constructor',
              DuplicateProtoProperty:
                'Duplicate __proto__ fields are not allowed in object literals',
              ForInOfLoopInitializer:
                '%0 loop variable declaration may not have an initializer',
              GeneratorInLegacyContext:
                'Generator declarations are not allowed in legacy contexts',
              IllegalBreak: 'Illegal break statement',
              IllegalContinue: 'Illegal continue statement',
              IllegalExportDeclaration: 'Unexpected token',
              IllegalImportDeclaration: 'Unexpected token',
              IllegalLanguageModeDirective:
                "Illegal 'use strict' directive in function with non-simple parameter list",
              IllegalReturn: 'Illegal return statement',
              InvalidEscapedReservedWord:
                'Keyword must not contain escaped characters',
              InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',
              InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
              InvalidLHSInForIn: 'Invalid left-hand side in for-in',
              InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
              InvalidModuleSpecifier: 'Unexpected token',
              InvalidRegExp: 'Invalid regular expression',
              LetInLexicalBinding:
                'let is disallowed as a lexically bound name',
              MissingFromClause: 'Unexpected token',
              MultipleDefaultsInSwitch:
                'More than one default clause in switch statement',
              NewlineAfterThrow: 'Illegal newline after throw',
              NoAsAfterImportNamespace: 'Unexpected token',
              NoCatchOrFinally: 'Missing catch or finally after try',
              ParameterAfterRestParameter:
                'Rest parameter must be last formal parameter',
              Redeclaration: "%0 '%1' has already been declared",
              StaticPrototype:
                'Classes may not have static property named prototype',
              StrictCatchVariable:
                'Catch variable may not be eval or arguments in strict mode',
              StrictDelete:
                'Delete of an unqualified identifier in strict mode.',
              StrictFunction:
                'In strict mode code, functions can only be declared at top level or inside a block',
              StrictFunctionName:
                'Function name may not be eval or arguments in strict mode',
              StrictLHSAssignment:
                'Assignment to eval or arguments is not allowed in strict mode',
              StrictLHSPostfix:
                'Postfix increment/decrement may not have eval or arguments operand in strict mode',
              StrictLHSPrefix:
                'Prefix increment/decrement may not have eval or arguments operand in strict mode',
              StrictModeWith:
                'Strict mode code may not include a with statement',
              StrictOctalLiteral:
                'Octal literals are not allowed in strict mode.',
              StrictParamDupe:
                'Strict mode function may not have duplicate parameter names',
              StrictParamName:
                'Parameter name eval or arguments is not allowed in strict mode',
              StrictReservedWord: 'Use of future reserved word in strict mode',
              StrictVarName:
                'Variable name may not be eval or arguments in strict mode',
              TemplateOctalLiteral:
                'Octal literals are not allowed in template strings.',
              UnexpectedEOS: 'Unexpected end of input',
              UnexpectedIdentifier: 'Unexpected identifier',
              UnexpectedNumber: 'Unexpected number',
              UnexpectedReserved: 'Unexpected reserved word',
              UnexpectedString: 'Unexpected string',
              UnexpectedTemplate: 'Unexpected quasi %0',
              UnexpectedToken: 'Unexpected token %0',
              UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',
              UnknownLabel: "Undefined label '%0'",
              UnterminatedRegExp: 'Invalid regular expression: missing /',
            });
        },
        function(e, t, n) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var r = n(9),
            i = n(4),
            a = n(11);
          function o(e) {
            return '0123456789abcdef'.indexOf(e.toLowerCase());
          }
          function s(e) {
            return '01234567'.indexOf(e);
          }
          var u = (function() {
            function e(e, t) {
              (this.source = e),
                (this.errorHandler = t),
                (this.trackComment = !1),
                (this.isModule = !1),
                (this.length = e.length),
                (this.index = 0),
                (this.lineNumber = e.length > 0 ? 1 : 0),
                (this.lineStart = 0),
                (this.curlyStack = []);
            }
            return (
              (e.prototype.saveState = function() {
                return {
                  index: this.index,
                  lineNumber: this.lineNumber,
                  lineStart: this.lineStart,
                };
              }),
              (e.prototype.restoreState = function(e) {
                (this.index = e.index),
                  (this.lineNumber = e.lineNumber),
                  (this.lineStart = e.lineStart);
              }),
              (e.prototype.eof = function() {
                return this.index >= this.length;
              }),
              (e.prototype.throwUnexpectedToken = function(e) {
                return (
                  void 0 === e && (e = a.Messages.UnexpectedTokenIllegal),
                  this.errorHandler.throwError(
                    this.index,
                    this.lineNumber,
                    this.index - this.lineStart + 1,
                    e,
                  )
                );
              }),
              (e.prototype.tolerateUnexpectedToken = function(e) {
                void 0 === e && (e = a.Messages.UnexpectedTokenIllegal),
                  this.errorHandler.tolerateError(
                    this.index,
                    this.lineNumber,
                    this.index - this.lineStart + 1,
                    e,
                  );
              }),
              (e.prototype.skipSingleLineComment = function(e) {
                var t,
                  n,
                  r = [];
                for (
                  this.trackComment &&
                  ((r = []),
                  (t = this.index - e),
                  (n = {
                    start: {
                      line: this.lineNumber,
                      column: this.index - this.lineStart - e,
                    },
                    end: {},
                  }));
                  !this.eof();

                ) {
                  var a = this.source.charCodeAt(this.index);
                  if ((++this.index, i.Character.isLineTerminator(a))) {
                    if (this.trackComment) {
                      n.end = {
                        line: this.lineNumber,
                        column: this.index - this.lineStart - 1,
                      };
                      var o = {
                        multiLine: !1,
                        slice: [t + e, this.index - 1],
                        range: [t, this.index - 1],
                        loc: n,
                      };
                      r.push(o);
                    }
                    return (
                      13 === a &&
                        10 === this.source.charCodeAt(this.index) &&
                        ++this.index,
                      ++this.lineNumber,
                      (this.lineStart = this.index),
                      r
                    );
                  }
                }
                return (
                  this.trackComment &&
                    ((n.end = {
                      line: this.lineNumber,
                      column: this.index - this.lineStart,
                    }),
                    (o = {
                      multiLine: !1,
                      slice: [t + e, this.index],
                      range: [t, this.index],
                      loc: n,
                    }),
                    r.push(o)),
                  r
                );
              }),
              (e.prototype.skipMultiLineComment = function() {
                var e,
                  t,
                  n = [];
                for (
                  this.trackComment &&
                  ((n = []),
                  (e = this.index - 2),
                  (t = {
                    start: {
                      line: this.lineNumber,
                      column: this.index - this.lineStart - 2,
                    },
                    end: {},
                  }));
                  !this.eof();

                ) {
                  var r = this.source.charCodeAt(this.index);
                  if (i.Character.isLineTerminator(r))
                    13 === r &&
                      10 === this.source.charCodeAt(this.index + 1) &&
                      ++this.index,
                      ++this.lineNumber,
                      ++this.index,
                      (this.lineStart = this.index);
                  else if (42 === r) {
                    if (47 === this.source.charCodeAt(this.index + 1)) {
                      if (((this.index += 2), this.trackComment)) {
                        t.end = {
                          line: this.lineNumber,
                          column: this.index - this.lineStart,
                        };
                        var a = {
                          multiLine: !0,
                          slice: [e + 2, this.index - 2],
                          range: [e, this.index],
                          loc: t,
                        };
                        n.push(a);
                      }
                      return n;
                    }
                    ++this.index;
                  } else ++this.index;
                }
                return (
                  this.trackComment &&
                    ((t.end = {
                      line: this.lineNumber,
                      column: this.index - this.lineStart,
                    }),
                    (a = {
                      multiLine: !0,
                      slice: [e + 2, this.index],
                      range: [e, this.index],
                      loc: t,
                    }),
                    n.push(a)),
                  this.tolerateUnexpectedToken(),
                  n
                );
              }),
              (e.prototype.scanComments = function() {
                var e;
                this.trackComment && (e = []);
                for (var t = 0 === this.index; !this.eof(); ) {
                  var n = this.source.charCodeAt(this.index);
                  if (i.Character.isWhiteSpace(n)) ++this.index;
                  else if (i.Character.isLineTerminator(n))
                    ++this.index,
                      13 === n &&
                        10 === this.source.charCodeAt(this.index) &&
                        ++this.index,
                      ++this.lineNumber,
                      (this.lineStart = this.index),
                      (t = !0);
                  else if (47 === n)
                    if (47 === (n = this.source.charCodeAt(this.index + 1))) {
                      this.index += 2;
                      var r = this.skipSingleLineComment(2);
                      this.trackComment && (e = e.concat(r)), (t = !0);
                    } else {
                      if (42 !== n) break;
                      (this.index += 2),
                        (r = this.skipMultiLineComment()),
                        this.trackComment && (e = e.concat(r));
                    }
                  else if (t && 45 === n) {
                    if (
                      45 !== this.source.charCodeAt(this.index + 1) ||
                      62 !== this.source.charCodeAt(this.index + 2)
                    )
                      break;
                    (this.index += 3),
                      (r = this.skipSingleLineComment(3)),
                      this.trackComment && (e = e.concat(r));
                  } else {
                    if (60 !== n || this.isModule) break;
                    if (
                      '!--' !==
                      this.source.slice(this.index + 1, this.index + 4)
                    )
                      break;
                    (this.index += 4),
                      (r = this.skipSingleLineComment(4)),
                      this.trackComment && (e = e.concat(r));
                  }
                }
                return e;
              }),
              (e.prototype.isFutureReservedWord = function(e) {
                switch (e) {
                  case 'enum':
                  case 'export':
                  case 'import':
                  case 'super':
                    return !0;
                  default:
                    return !1;
                }
              }),
              (e.prototype.isStrictModeReservedWord = function(e) {
                switch (e) {
                  case 'implements':
                  case 'interface':
                  case 'package':
                  case 'private':
                  case 'protected':
                  case 'public':
                  case 'static':
                  case 'yield':
                  case 'let':
                    return !0;
                  default:
                    return !1;
                }
              }),
              (e.prototype.isRestrictedWord = function(e) {
                return 'eval' === e || 'arguments' === e;
              }),
              (e.prototype.isKeyword = function(e) {
                switch (e.length) {
                  case 2:
                    return 'if' === e || 'in' === e || 'do' === e;
                  case 3:
                    return (
                      'var' === e ||
                      'for' === e ||
                      'new' === e ||
                      'try' === e ||
                      'let' === e
                    );
                  case 4:
                    return (
                      'this' === e ||
                      'else' === e ||
                      'case' === e ||
                      'void' === e ||
                      'with' === e ||
                      'enum' === e
                    );
                  case 5:
                    return (
                      'while' === e ||
                      'break' === e ||
                      'catch' === e ||
                      'throw' === e ||
                      'const' === e ||
                      'yield' === e ||
                      'class' === e ||
                      'super' === e
                    );
                  case 6:
                    return (
                      'return' === e ||
                      'typeof' === e ||
                      'delete' === e ||
                      'switch' === e ||
                      'export' === e ||
                      'import' === e
                    );
                  case 7:
                    return (
                      'default' === e || 'finally' === e || 'extends' === e
                    );
                  case 8:
                    return (
                      'function' === e || 'continue' === e || 'debugger' === e
                    );
                  case 10:
                    return 'instanceof' === e;
                  default:
                    return !1;
                }
              }),
              (e.prototype.codePointAt = function(e) {
                var t = this.source.charCodeAt(e);
                if (t >= 55296 && t <= 56319) {
                  var n = this.source.charCodeAt(e + 1);
                  n >= 56320 &&
                    n <= 57343 &&
                    (t = 1024 * (t - 55296) + n - 56320 + 65536);
                }
                return t;
              }),
              (e.prototype.scanHexEscape = function(e) {
                for (var t = 'u' === e ? 4 : 2, n = 0, r = 0; r < t; ++r) {
                  if (
                    this.eof() ||
                    !i.Character.isHexDigit(this.source.charCodeAt(this.index))
                  )
                    return null;
                  n = 16 * n + o(this.source[this.index++]);
                }
                return String.fromCharCode(n);
              }),
              (e.prototype.scanUnicodeCodePointEscape = function() {
                var e = this.source[this.index],
                  t = 0;
                for (
                  '}' === e && this.throwUnexpectedToken();
                  !this.eof() &&
                  ((e = this.source[this.index++]),
                  i.Character.isHexDigit(e.charCodeAt(0)));

                )
                  t = 16 * t + o(e);
                return (
                  (t > 1114111 || '}' !== e) && this.throwUnexpectedToken(),
                  i.Character.fromCodePoint(t)
                );
              }),
              (e.prototype.getIdentifier = function() {
                for (var e = this.index++; !this.eof(); ) {
                  var t = this.source.charCodeAt(this.index);
                  if (92 === t)
                    return (this.index = e), this.getComplexIdentifier();
                  if (t >= 55296 && t < 57343)
                    return (this.index = e), this.getComplexIdentifier();
                  if (!i.Character.isIdentifierPart(t)) break;
                  ++this.index;
                }
                return this.source.slice(e, this.index);
              }),
              (e.prototype.getComplexIdentifier = function() {
                var e,
                  t = this.codePointAt(this.index),
                  n = i.Character.fromCodePoint(t);
                for (
                  this.index += n.length,
                    92 === t &&
                      (117 !== this.source.charCodeAt(this.index) &&
                        this.throwUnexpectedToken(),
                      ++this.index,
                      '{' === this.source[this.index]
                        ? (++this.index,
                          (e = this.scanUnicodeCodePointEscape()))
                        : (null !== (e = this.scanHexEscape('u')) &&
                            '\\' !== e &&
                            i.Character.isIdentifierStart(e.charCodeAt(0))) ||
                          this.throwUnexpectedToken(),
                      (n = e));
                  !this.eof() &&
                  ((t = this.codePointAt(this.index)),
                  i.Character.isIdentifierPart(t));

                )
                  (n += e = i.Character.fromCodePoint(t)),
                    (this.index += e.length),
                    92 === t &&
                      ((n = n.substr(0, n.length - 1)),
                      117 !== this.source.charCodeAt(this.index) &&
                        this.throwUnexpectedToken(),
                      ++this.index,
                      '{' === this.source[this.index]
                        ? (++this.index,
                          (e = this.scanUnicodeCodePointEscape()))
                        : (null !== (e = this.scanHexEscape('u')) &&
                            '\\' !== e &&
                            i.Character.isIdentifierPart(e.charCodeAt(0))) ||
                          this.throwUnexpectedToken(),
                      (n += e));
                return n;
              }),
              (e.prototype.octalToDecimal = function(e) {
                var t = '0' !== e,
                  n = s(e);
                return (
                  !this.eof() &&
                    i.Character.isOctalDigit(
                      this.source.charCodeAt(this.index),
                    ) &&
                    ((t = !0),
                    (n = 8 * n + s(this.source[this.index++])),
                    '0123'.indexOf(e) >= 0 &&
                      !this.eof() &&
                      i.Character.isOctalDigit(
                        this.source.charCodeAt(this.index),
                      ) &&
                      (n = 8 * n + s(this.source[this.index++]))),
                  { code: n, octal: t }
                );
              }),
              (e.prototype.scanIdentifier = function() {
                var e,
                  t = this.index,
                  n =
                    92 === this.source.charCodeAt(t)
                      ? this.getComplexIdentifier()
                      : this.getIdentifier();
                if (
                  3 !=
                    (e =
                      1 === n.length
                        ? 3
                        : this.isKeyword(n)
                        ? 4
                        : 'null' === n
                        ? 5
                        : 'true' === n || 'false' === n
                        ? 1
                        : 3) &&
                  t + n.length !== this.index
                ) {
                  var r = this.index;
                  (this.index = t),
                    this.tolerateUnexpectedToken(
                      a.Messages.InvalidEscapedReservedWord,
                    ),
                    (this.index = r);
                }
                return {
                  type: e,
                  value: n,
                  lineNumber: this.lineNumber,
                  lineStart: this.lineStart,
                  start: t,
                  end: this.index,
                };
              }),
              (e.prototype.scanPunctuator = function() {
                var e = this.index,
                  t = this.source[this.index];
                switch (t) {
                  case '(':
                  case '{':
                    '{' === t && this.curlyStack.push('{'), ++this.index;
                    break;
                  case '.':
                    ++this.index,
                      '.' === this.source[this.index] &&
                        '.' === this.source[this.index + 1] &&
                        ((this.index += 2), (t = '...'));
                    break;
                  case '}':
                    ++this.index, this.curlyStack.pop();
                    break;
                  case ')':
                  case ';':
                  case ',':
                  case '[':
                  case ']':
                  case ':':
                  case '?':
                  case '~':
                    ++this.index;
                    break;
                  default:
                    '>>>=' === (t = this.source.substr(this.index, 4))
                      ? (this.index += 4)
                      : '===' === (t = t.substr(0, 3)) ||
                        '!==' === t ||
                        '>>>' === t ||
                        '<<=' === t ||
                        '>>=' === t ||
                        '**=' === t
                      ? (this.index += 3)
                      : '&&' === (t = t.substr(0, 2)) ||
                        '||' === t ||
                        '==' === t ||
                        '!=' === t ||
                        '+=' === t ||
                        '-=' === t ||
                        '*=' === t ||
                        '/=' === t ||
                        '++' === t ||
                        '--' === t ||
                        '<<' === t ||
                        '>>' === t ||
                        '&=' === t ||
                        '|=' === t ||
                        '^=' === t ||
                        '%=' === t ||
                        '<=' === t ||
                        '>=' === t ||
                        '=>' === t ||
                        '**' === t
                      ? (this.index += 2)
                      : ((t = this.source[this.index]),
                        '<>=!+-*%&|^/'.indexOf(t) >= 0 && ++this.index);
                }
                return (
                  this.index === e && this.throwUnexpectedToken(),
                  {
                    type: 7,
                    value: t,
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: e,
                    end: this.index,
                  }
                );
              }),
              (e.prototype.scanHexLiteral = function(e) {
                for (
                  var t = '';
                  !this.eof() &&
                  i.Character.isHexDigit(this.source.charCodeAt(this.index));

                )
                  t += this.source[this.index++];
                return (
                  0 === t.length && this.throwUnexpectedToken(),
                  i.Character.isIdentifierStart(
                    this.source.charCodeAt(this.index),
                  ) && this.throwUnexpectedToken(),
                  {
                    type: 6,
                    value: parseInt('0x' + t, 16),
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: e,
                    end: this.index,
                  }
                );
              }),
              (e.prototype.scanBinaryLiteral = function(e) {
                for (
                  var t, n = '';
                  !this.eof() &&
                  ('0' === (t = this.source[this.index]) || '1' === t);

                )
                  n += this.source[this.index++];
                return (
                  0 === n.length && this.throwUnexpectedToken(),
                  this.eof() ||
                    ((t = this.source.charCodeAt(this.index)),
                    (i.Character.isIdentifierStart(t) ||
                      i.Character.isDecimalDigit(t)) &&
                      this.throwUnexpectedToken()),
                  {
                    type: 6,
                    value: parseInt(n, 2),
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: e,
                    end: this.index,
                  }
                );
              }),
              (e.prototype.scanOctalLiteral = function(e, t) {
                var n = '',
                  r = !1;
                for (
                  i.Character.isOctalDigit(e.charCodeAt(0))
                    ? ((r = !0), (n = '0' + this.source[this.index++]))
                    : ++this.index;
                  !this.eof() &&
                  i.Character.isOctalDigit(this.source.charCodeAt(this.index));

                )
                  n += this.source[this.index++];
                return (
                  r || 0 !== n.length || this.throwUnexpectedToken(),
                  (i.Character.isIdentifierStart(
                    this.source.charCodeAt(this.index),
                  ) ||
                    i.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index),
                    )) &&
                    this.throwUnexpectedToken(),
                  {
                    type: 6,
                    value: parseInt(n, 8),
                    octal: r,
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: t,
                    end: this.index,
                  }
                );
              }),
              (e.prototype.isImplicitOctalLiteral = function() {
                for (var e = this.index + 1; e < this.length; ++e) {
                  var t = this.source[e];
                  if ('8' === t || '9' === t) return !1;
                  if (!i.Character.isOctalDigit(t.charCodeAt(0))) return !0;
                }
                return !0;
              }),
              (e.prototype.scanNumericLiteral = function() {
                var e = this.index,
                  t = this.source[e];
                r.assert(
                  i.Character.isDecimalDigit(t.charCodeAt(0)) || '.' === t,
                  'Numeric literal must start with a decimal digit or a decimal point',
                );
                var n = '';
                if ('.' !== t) {
                  if (
                    ((n = this.source[this.index++]),
                    (t = this.source[this.index]),
                    '0' === n)
                  ) {
                    if ('x' === t || 'X' === t)
                      return ++this.index, this.scanHexLiteral(e);
                    if ('b' === t || 'B' === t)
                      return ++this.index, this.scanBinaryLiteral(e);
                    if ('o' === t || 'O' === t)
                      return this.scanOctalLiteral(t, e);
                    if (
                      t &&
                      i.Character.isOctalDigit(t.charCodeAt(0)) &&
                      this.isImplicitOctalLiteral()
                    )
                      return this.scanOctalLiteral(t, e);
                  }
                  for (
                    ;
                    i.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index),
                    );

                  )
                    n += this.source[this.index++];
                  t = this.source[this.index];
                }
                if ('.' === t) {
                  for (
                    n += this.source[this.index++];
                    i.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index),
                    );

                  )
                    n += this.source[this.index++];
                  t = this.source[this.index];
                }
                if ('e' === t || 'E' === t)
                  if (
                    ((n += this.source[this.index++]),
                    ('+' !== (t = this.source[this.index]) && '-' !== t) ||
                      (n += this.source[this.index++]),
                    i.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index),
                    ))
                  )
                    for (
                      ;
                      i.Character.isDecimalDigit(
                        this.source.charCodeAt(this.index),
                      );

                    )
                      n += this.source[this.index++];
                  else this.throwUnexpectedToken();
                return (
                  i.Character.isIdentifierStart(
                    this.source.charCodeAt(this.index),
                  ) && this.throwUnexpectedToken(),
                  {
                    type: 6,
                    value: parseFloat(n),
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: e,
                    end: this.index,
                  }
                );
              }),
              (e.prototype.scanStringLiteral = function() {
                var e = this.index,
                  t = this.source[e];
                r.assert(
                  "'" === t || '"' === t,
                  'String literal must starts with a quote',
                ),
                  ++this.index;
                for (var n = !1, o = ''; !this.eof(); ) {
                  var s = this.source[this.index++];
                  if (s === t) {
                    t = '';
                    break;
                  }
                  if ('\\' === s)
                    if (
                      (s = this.source[this.index++]) &&
                      i.Character.isLineTerminator(s.charCodeAt(0))
                    )
                      ++this.lineNumber,
                        '\r' === s &&
                          '\n' === this.source[this.index] &&
                          ++this.index,
                        (this.lineStart = this.index);
                    else
                      switch (s) {
                        case 'u':
                          if ('{' === this.source[this.index])
                            ++this.index,
                              (o += this.scanUnicodeCodePointEscape());
                          else {
                            var u = this.scanHexEscape(s);
                            null === u && this.throwUnexpectedToken(), (o += u);
                          }
                          break;
                        case 'x':
                          var c = this.scanHexEscape(s);
                          null === c &&
                            this.throwUnexpectedToken(
                              a.Messages.InvalidHexEscapeSequence,
                            ),
                            (o += c);
                          break;
                        case 'n':
                          o += '\n';
                          break;
                        case 'r':
                          o += '\r';
                          break;
                        case 't':
                          o += '\t';
                          break;
                        case 'b':
                          o += '\b';
                          break;
                        case 'f':
                          o += '\f';
                          break;
                        case 'v':
                          o += '\v';
                          break;
                        case '8':
                        case '9':
                          (o += s), this.tolerateUnexpectedToken();
                          break;
                        default:
                          if (s && i.Character.isOctalDigit(s.charCodeAt(0))) {
                            var l = this.octalToDecimal(s);
                            (n = l.octal || n),
                              (o += String.fromCharCode(l.code));
                          } else o += s;
                      }
                  else {
                    if (i.Character.isLineTerminator(s.charCodeAt(0))) break;
                    o += s;
                  }
                }
                return (
                  '' !== t && ((this.index = e), this.throwUnexpectedToken()),
                  {
                    type: 8,
                    value: o,
                    octal: n,
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: e,
                    end: this.index,
                  }
                );
              }),
              (e.prototype.scanTemplate = function() {
                var e = '',
                  t = !1,
                  n = this.index,
                  r = '`' === this.source[n],
                  o = !1,
                  s = 2;
                for (++this.index; !this.eof(); ) {
                  var u = this.source[this.index++];
                  if ('`' === u) {
                    (s = 1), (o = !0), (t = !0);
                    break;
                  }
                  if ('$' === u) {
                    if ('{' === this.source[this.index]) {
                      this.curlyStack.push('${'), ++this.index, (t = !0);
                      break;
                    }
                    e += u;
                  } else if ('\\' === u)
                    if (
                      ((u = this.source[this.index++]),
                      i.Character.isLineTerminator(u.charCodeAt(0)))
                    )
                      ++this.lineNumber,
                        '\r' === u &&
                          '\n' === this.source[this.index] &&
                          ++this.index,
                        (this.lineStart = this.index);
                    else
                      switch (u) {
                        case 'n':
                          e += '\n';
                          break;
                        case 'r':
                          e += '\r';
                          break;
                        case 't':
                          e += '\t';
                          break;
                        case 'u':
                          if ('{' === this.source[this.index])
                            ++this.index,
                              (e += this.scanUnicodeCodePointEscape());
                          else {
                            var c = this.index,
                              l = this.scanHexEscape(u);
                            null !== l
                              ? (e += l)
                              : ((this.index = c), (e += u));
                          }
                          break;
                        case 'x':
                          var p = this.scanHexEscape(u);
                          null === p &&
                            this.throwUnexpectedToken(
                              a.Messages.InvalidHexEscapeSequence,
                            ),
                            (e += p);
                          break;
                        case 'b':
                          e += '\b';
                          break;
                        case 'f':
                          e += '\f';
                          break;
                        case 'v':
                          e += '\v';
                          break;
                        default:
                          '0' === u
                            ? (i.Character.isDecimalDigit(
                                this.source.charCodeAt(this.index),
                              ) &&
                                this.throwUnexpectedToken(
                                  a.Messages.TemplateOctalLiteral,
                                ),
                              (e += '\0'))
                            : i.Character.isOctalDigit(u.charCodeAt(0))
                            ? this.throwUnexpectedToken(
                                a.Messages.TemplateOctalLiteral,
                              )
                            : (e += u);
                      }
                  else
                    i.Character.isLineTerminator(u.charCodeAt(0))
                      ? (++this.lineNumber,
                        '\r' === u &&
                          '\n' === this.source[this.index] &&
                          ++this.index,
                        (this.lineStart = this.index),
                        (e += '\n'))
                      : (e += u);
                }
                return (
                  t || this.throwUnexpectedToken(),
                  r || this.curlyStack.pop(),
                  {
                    type: 10,
                    value: this.source.slice(n + 1, this.index - s),
                    cooked: e,
                    head: r,
                    tail: o,
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: n,
                    end: this.index,
                  }
                );
              }),
              (e.prototype.testRegExp = function(e, t) {
                var n = e,
                  r = this;
                t.indexOf('u') >= 0 &&
                  (n = n
                    .replace(
                      /\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g,
                      function(e, t, n) {
                        var i = parseInt(t || n, 16);
                        return (
                          i > 1114111 &&
                            r.throwUnexpectedToken(a.Messages.InvalidRegExp),
                          i <= 65535 ? String.fromCharCode(i) : '￿'
                        );
                      },
                    )
                    .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, '￿'));
                try {
                  RegExp(n);
                } catch (e) {
                  this.throwUnexpectedToken(a.Messages.InvalidRegExp);
                }
                try {
                  return new RegExp(e, t);
                } catch (e) {
                  return null;
                }
              }),
              (e.prototype.scanRegExpBody = function() {
                var e = this.source[this.index];
                r.assert(
                  '/' === e,
                  'Regular expression literal must start with a slash',
                );
                for (
                  var t = this.source[this.index++], n = !1, o = !1;
                  !this.eof();

                )
                  if (((t += e = this.source[this.index++]), '\\' === e))
                    (e = this.source[this.index++]),
                      i.Character.isLineTerminator(e.charCodeAt(0)) &&
                        this.throwUnexpectedToken(
                          a.Messages.UnterminatedRegExp,
                        ),
                      (t += e);
                  else if (i.Character.isLineTerminator(e.charCodeAt(0)))
                    this.throwUnexpectedToken(a.Messages.UnterminatedRegExp);
                  else if (n) ']' === e && (n = !1);
                  else {
                    if ('/' === e) {
                      o = !0;
                      break;
                    }
                    '[' === e && (n = !0);
                  }
                return (
                  o || this.throwUnexpectedToken(a.Messages.UnterminatedRegExp),
                  t.substr(1, t.length - 2)
                );
              }),
              (e.prototype.scanRegExpFlags = function() {
                for (var e = ''; !this.eof(); ) {
                  var t = this.source[this.index];
                  if (!i.Character.isIdentifierPart(t.charCodeAt(0))) break;
                  if ((++this.index, '\\' !== t || this.eof())) e += t;
                  else if ('u' === (t = this.source[this.index])) {
                    ++this.index;
                    var n = this.index,
                      r = this.scanHexEscape('u');
                    if (null !== r)
                      for (e += r; n < this.index; ++n) this.source[n];
                    else (this.index = n), (e += 'u');
                    this.tolerateUnexpectedToken();
                  } else this.tolerateUnexpectedToken();
                }
                return e;
              }),
              (e.prototype.scanRegExp = function() {
                var e = this.index,
                  t = this.scanRegExpBody(),
                  n = this.scanRegExpFlags();
                return {
                  type: 9,
                  value: '',
                  pattern: t,
                  flags: n,
                  regex: this.testRegExp(t, n),
                  lineNumber: this.lineNumber,
                  lineStart: this.lineStart,
                  start: e,
                  end: this.index,
                };
              }),
              (e.prototype.lex = function() {
                if (this.eof())
                  return {
                    type: 2,
                    value: '',
                    lineNumber: this.lineNumber,
                    lineStart: this.lineStart,
                    start: this.index,
                    end: this.index,
                  };
                var e = this.source.charCodeAt(this.index);
                return i.Character.isIdentifierStart(e)
                  ? this.scanIdentifier()
                  : 40 === e || 41 === e || 59 === e
                  ? this.scanPunctuator()
                  : 39 === e || 34 === e
                  ? this.scanStringLiteral()
                  : 46 === e
                  ? i.Character.isDecimalDigit(
                      this.source.charCodeAt(this.index + 1),
                    )
                    ? this.scanNumericLiteral()
                    : this.scanPunctuator()
                  : i.Character.isDecimalDigit(e)
                  ? this.scanNumericLiteral()
                  : 96 === e ||
                    (125 === e &&
                      '${' === this.curlyStack[this.curlyStack.length - 1])
                  ? this.scanTemplate()
                  : e >= 55296 &&
                    e < 57343 &&
                    i.Character.isIdentifierStart(this.codePointAt(this.index))
                  ? this.scanIdentifier()
                  : this.scanPunctuator();
              }),
              e
            );
          })();
          t.Scanner = u;
        },
        function(e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.TokenName = {}),
            (t.TokenName[1] = 'Boolean'),
            (t.TokenName[2] = '<end>'),
            (t.TokenName[3] = 'Identifier'),
            (t.TokenName[4] = 'Keyword'),
            (t.TokenName[5] = 'Null'),
            (t.TokenName[6] = 'Numeric'),
            (t.TokenName[7] = 'Punctuator'),
            (t.TokenName[8] = 'String'),
            (t.TokenName[9] = 'RegularExpression'),
            (t.TokenName[10] = 'Template');
        },
        function(e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 }),
            (t.XHTMLEntities = {
              quot: '"',
              amp: '&',
              apos: "'",
              gt: '>',
              nbsp: ' ',
              iexcl: '¡',
              cent: '¢',
              pound: '£',
              curren: '¤',
              yen: '¥',
              brvbar: '¦',
              sect: '§',
              uml: '¨',
              copy: '©',
              ordf: 'ª',
              laquo: '«',
              not: '¬',
              shy: '­',
              reg: '®',
              macr: '¯',
              deg: '°',
              plusmn: '±',
              sup2: '²',
              sup3: '³',
              acute: '´',
              micro: 'µ',
              para: '¶',
              middot: '·',
              cedil: '¸',
              sup1: '¹',
              ordm: 'º',
              raquo: '»',
              frac14: '¼',
              frac12: '½',
              frac34: '¾',
              iquest: '¿',
              Agrave: 'À',
              Aacute: 'Á',
              Acirc: 'Â',
              Atilde: 'Ã',
              Auml: 'Ä',
              Aring: 'Å',
              AElig: 'Æ',
              Ccedil: 'Ç',
              Egrave: 'È',
              Eacute: 'É',
              Ecirc: 'Ê',
              Euml: 'Ë',
              Igrave: 'Ì',
              Iacute: 'Í',
              Icirc: 'Î',
              Iuml: 'Ï',
              ETH: 'Ð',
              Ntilde: 'Ñ',
              Ograve: 'Ò',
              Oacute: 'Ó',
              Ocirc: 'Ô',
              Otilde: 'Õ',
              Ouml: 'Ö',
              times: '×',
              Oslash: 'Ø',
              Ugrave: 'Ù',
              Uacute: 'Ú',
              Ucirc: 'Û',
              Uuml: 'Ü',
              Yacute: 'Ý',
              THORN: 'Þ',
              szlig: 'ß',
              agrave: 'à',
              aacute: 'á',
              acirc: 'â',
              atilde: 'ã',
              auml: 'ä',
              aring: 'å',
              aelig: 'æ',
              ccedil: 'ç',
              egrave: 'è',
              eacute: 'é',
              ecirc: 'ê',
              euml: 'ë',
              igrave: 'ì',
              iacute: 'í',
              icirc: 'î',
              iuml: 'ï',
              eth: 'ð',
              ntilde: 'ñ',
              ograve: 'ò',
              oacute: 'ó',
              ocirc: 'ô',
              otilde: 'õ',
              ouml: 'ö',
              divide: '÷',
              oslash: 'ø',
              ugrave: 'ù',
              uacute: 'ú',
              ucirc: 'û',
              uuml: 'ü',
              yacute: 'ý',
              thorn: 'þ',
              yuml: 'ÿ',
              OElig: 'Œ',
              oelig: 'œ',
              Scaron: 'Š',
              scaron: 'š',
              Yuml: 'Ÿ',
              fnof: 'ƒ',
              circ: 'ˆ',
              tilde: '˜',
              Alpha: 'Α',
              Beta: 'Β',
              Gamma: 'Γ',
              Delta: 'Δ',
              Epsilon: 'Ε',
              Zeta: 'Ζ',
              Eta: 'Η',
              Theta: 'Θ',
              Iota: 'Ι',
              Kappa: 'Κ',
              Lambda: 'Λ',
              Mu: 'Μ',
              Nu: 'Ν',
              Xi: 'Ξ',
              Omicron: 'Ο',
              Pi: 'Π',
              Rho: 'Ρ',
              Sigma: 'Σ',
              Tau: 'Τ',
              Upsilon: 'Υ',
              Phi: 'Φ',
              Chi: 'Χ',
              Psi: 'Ψ',
              Omega: 'Ω',
              alpha: 'α',
              beta: 'β',
              gamma: 'γ',
              delta: 'δ',
              epsilon: 'ε',
              zeta: 'ζ',
              eta: 'η',
              theta: 'θ',
              iota: 'ι',
              kappa: 'κ',
              lambda: 'λ',
              mu: 'μ',
              nu: 'ν',
              xi: 'ξ',
              omicron: 'ο',
              pi: 'π',
              rho: 'ρ',
              sigmaf: 'ς',
              sigma: 'σ',
              tau: 'τ',
              upsilon: 'υ',
              phi: 'φ',
              chi: 'χ',
              psi: 'ψ',
              omega: 'ω',
              thetasym: 'ϑ',
              upsih: 'ϒ',
              piv: 'ϖ',
              ensp: ' ',
              emsp: ' ',
              thinsp: ' ',
              zwnj: '‌',
              zwj: '‍',
              lrm: '‎',
              rlm: '‏',
              ndash: '–',
              mdash: '—',
              lsquo: '‘',
              rsquo: '’',
              sbquo: '‚',
              ldquo: '“',
              rdquo: '”',
              bdquo: '„',
              dagger: '†',
              Dagger: '‡',
              bull: '•',
              hellip: '…',
              permil: '‰',
              prime: '′',
              Prime: '″',
              lsaquo: '‹',
              rsaquo: '›',
              oline: '‾',
              frasl: '⁄',
              euro: '€',
              image: 'ℑ',
              weierp: '℘',
              real: 'ℜ',
              trade: '™',
              alefsym: 'ℵ',
              larr: '←',
              uarr: '↑',
              rarr: '→',
              darr: '↓',
              harr: '↔',
              crarr: '↵',
              lArr: '⇐',
              uArr: '⇑',
              rArr: '⇒',
              dArr: '⇓',
              hArr: '⇔',
              forall: '∀',
              part: '∂',
              exist: '∃',
              empty: '∅',
              nabla: '∇',
              isin: '∈',
              notin: '∉',
              ni: '∋',
              prod: '∏',
              sum: '∑',
              minus: '−',
              lowast: '∗',
              radic: '√',
              prop: '∝',
              infin: '∞',
              ang: '∠',
              and: '∧',
              or: '∨',
              cap: '∩',
              cup: '∪',
              int: '∫',
              there4: '∴',
              sim: '∼',
              cong: '≅',
              asymp: '≈',
              ne: '≠',
              equiv: '≡',
              le: '≤',
              ge: '≥',
              sub: '⊂',
              sup: '⊃',
              nsub: '⊄',
              sube: '⊆',
              supe: '⊇',
              oplus: '⊕',
              otimes: '⊗',
              perp: '⊥',
              sdot: '⋅',
              lceil: '⌈',
              rceil: '⌉',
              lfloor: '⌊',
              rfloor: '⌋',
              loz: '◊',
              spades: '♠',
              clubs: '♣',
              hearts: '♥',
              diams: '♦',
              lang: '⟨',
              rang: '⟩',
            });
        },
        function(e, t, n) {
          'use strict';
          Object.defineProperty(t, '__esModule', { value: !0 });
          var r = n(10),
            i = n(12),
            a = n(13),
            o = (function() {
              function e() {
                (this.values = []), (this.curly = this.paren = -1);
              }
              return (
                (e.prototype.beforeFunctionExpression = function(e) {
                  return (
                    [
                      '(',
                      '{',
                      '[',
                      'in',
                      'typeof',
                      'instanceof',
                      'new',
                      'return',
                      'case',
                      'delete',
                      'throw',
                      'void',
                      '=',
                      '+=',
                      '-=',
                      '*=',
                      '**=',
                      '/=',
                      '%=',
                      '<<=',
                      '>>=',
                      '>>>=',
                      '&=',
                      '|=',
                      '^=',
                      ',',
                      '+',
                      '-',
                      '*',
                      '**',
                      '/',
                      '%',
                      '++',
                      '--',
                      '<<',
                      '>>',
                      '>>>',
                      '&',
                      '|',
                      '^',
                      '!',
                      '~',
                      '&&',
                      '||',
                      '?',
                      ':',
                      '===',
                      '==',
                      '>=',
                      '<=',
                      '<',
                      '>',
                      '!=',
                      '!==',
                    ].indexOf(e) >= 0
                  );
                }),
                (e.prototype.isRegexStart = function() {
                  var e = this.values[this.values.length - 1],
                    t = null !== e;
                  switch (e) {
                    case 'this':
                    case ']':
                      t = !1;
                      break;
                    case ')':
                      var n = this.values[this.paren - 1];
                      t =
                        'if' === n ||
                        'while' === n ||
                        'for' === n ||
                        'with' === n;
                      break;
                    case '}':
                      if (
                        ((t = !1), 'function' === this.values[this.curly - 3])
                      )
                        t =
                          !!(r = this.values[this.curly - 4]) &&
                          !this.beforeFunctionExpression(r);
                      else if ('function' === this.values[this.curly - 4]) {
                        var r;
                        t =
                          !(r = this.values[this.curly - 5]) ||
                          !this.beforeFunctionExpression(r);
                      }
                  }
                  return t;
                }),
                (e.prototype.push = function(e) {
                  7 === e.type || 4 === e.type
                    ? ('{' === e.value
                        ? (this.curly = this.values.length)
                        : '(' === e.value && (this.paren = this.values.length),
                      this.values.push(e.value))
                    : this.values.push(null);
                }),
                e
              );
            })(),
            s = (function() {
              function e(e, t) {
                (this.errorHandler = new r.ErrorHandler()),
                  (this.errorHandler.tolerant =
                    !!t && 'boolean' == typeof t.tolerant && t.tolerant),
                  (this.scanner = new i.Scanner(e, this.errorHandler)),
                  (this.scanner.trackComment =
                    !!t && 'boolean' == typeof t.comment && t.comment),
                  (this.trackRange =
                    !!t && 'boolean' == typeof t.range && t.range),
                  (this.trackLoc = !!t && 'boolean' == typeof t.loc && t.loc),
                  (this.buffer = []),
                  (this.reader = new o());
              }
              return (
                (e.prototype.errors = function() {
                  return this.errorHandler.errors;
                }),
                (e.prototype.getNextToken = function() {
                  if (0 === this.buffer.length) {
                    var e = this.scanner.scanComments();
                    if (this.scanner.trackComment)
                      for (var t = 0; t < e.length; ++t) {
                        var n = e[t],
                          r = this.scanner.source.slice(n.slice[0], n.slice[1]),
                          i = {
                            type: n.multiLine ? 'BlockComment' : 'LineComment',
                            value: r,
                          };
                        this.trackRange && (i.range = n.range),
                          this.trackLoc && (i.loc = n.loc),
                          this.buffer.push(i);
                      }
                    if (!this.scanner.eof()) {
                      var o = void 0;
                      this.trackLoc &&
                        (o = {
                          start: {
                            line: this.scanner.lineNumber,
                            column: this.scanner.index - this.scanner.lineStart,
                          },
                          end: {},
                        });
                      var s =
                        '/' === this.scanner.source[this.scanner.index] &&
                        this.reader.isRegexStart()
                          ? this.scanner.scanRegExp()
                          : this.scanner.lex();
                      this.reader.push(s);
                      var u = {
                        type: a.TokenName[s.type],
                        value: this.scanner.source.slice(s.start, s.end),
                      };
                      if (
                        (this.trackRange && (u.range = [s.start, s.end]),
                        this.trackLoc &&
                          ((o.end = {
                            line: this.scanner.lineNumber,
                            column: this.scanner.index - this.scanner.lineStart,
                          }),
                          (u.loc = o)),
                        9 === s.type)
                      ) {
                        var c = s.pattern,
                          l = s.flags;
                        u.regex = { pattern: c, flags: l };
                      }
                      this.buffer.push(u);
                    }
                  }
                  return this.buffer.shift();
                }),
                e
              );
            })();
          t.Tokenizer = s;
        },
      ]);
    }),
      (e.exports = r());
  },
  function(e, t, n) {
    'use strict';
    var r = n(13),
      i = n(18),
      a = n(21),
      o = n(19),
      s = Object.prototype.toString,
      u = Object.prototype.hasOwnProperty,
      c = {
        0: '\\0',
        7: '\\a',
        8: '\\b',
        9: '\\t',
        10: '\\n',
        11: '\\v',
        12: '\\f',
        13: '\\r',
        27: '\\e',
        34: '\\"',
        92: '\\\\',
        133: '\\N',
        160: '\\_',
        8232: '\\L',
        8233: '\\P',
      },
      l = [
        'y',
        'Y',
        'yes',
        'Yes',
        'YES',
        'on',
        'On',
        'ON',
        'n',
        'N',
        'no',
        'No',
        'NO',
        'off',
        'Off',
        'OFF',
      ];
    function p(e) {
      var t, n, a;
      if (((t = e.toString(16).toUpperCase()), e <= 255)) (n = 'x'), (a = 2);
      else if (e <= 65535) (n = 'u'), (a = 4);
      else {
        if (!(e <= 4294967295))
          throw new i(
            'code point within a string may not be greater than 0xFFFFFFFF',
          );
        (n = 'U'), (a = 8);
      }
      return '\\' + n + r.repeat('0', a - t.length) + t;
    }
    function f(e) {
      (this.schema = e.schema || a),
        (this.indent = Math.max(1, e.indent || 2)),
        (this.noArrayIndent = e.noArrayIndent || !1),
        (this.skipInvalid = e.skipInvalid || !1),
        (this.flowLevel = r.isNothing(e.flowLevel) ? -1 : e.flowLevel),
        (this.styleMap = (function(e, t) {
          var n, r, i, a, o, s, c;
          if (null === t) return {};
          for (n = {}, i = 0, a = (r = Object.keys(t)).length; i < a; i += 1)
            (o = r[i]),
              (s = String(t[o])),
              '!!' === o.slice(0, 2) && (o = 'tag:yaml.org,2002:' + o.slice(2)),
              (c = e.compiledTypeMap.fallback[o]) &&
                u.call(c.styleAliases, s) &&
                (s = c.styleAliases[s]),
              (n[o] = s);
          return n;
        })(this.schema, e.styles || null)),
        (this.sortKeys = e.sortKeys || !1),
        (this.lineWidth = e.lineWidth || 80),
        (this.noRefs = e.noRefs || !1),
        (this.noCompatMode = e.noCompatMode || !1),
        (this.condenseFlow = e.condenseFlow || !1),
        (this.implicitTypes = this.schema.compiledImplicit),
        (this.explicitTypes = this.schema.compiledExplicit),
        (this.tag = null),
        (this.result = ''),
        (this.duplicates = []),
        (this.usedDuplicates = null);
    }
    function h(e, t) {
      for (
        var n, i = r.repeat(' ', t), a = 0, o = -1, s = '', u = e.length;
        a < u;

      )
        -1 === (o = e.indexOf('\n', a))
          ? ((n = e.slice(a)), (a = u))
          : ((n = e.slice(a, o + 1)), (a = o + 1)),
          n.length && '\n' !== n && (s += i),
          (s += n);
      return s;
    }
    function d(e, t) {
      return '\n' + r.repeat(' ', e.indent * t);
    }
    function m(e) {
      return 32 === e || 9 === e;
    }
    function g(e) {
      return (
        (32 <= e && e <= 126) ||
        (161 <= e && e <= 55295 && 8232 !== e && 8233 !== e) ||
        (57344 <= e && e <= 65533 && 65279 !== e) ||
        (65536 <= e && e <= 1114111)
      );
    }
    function y(e, t) {
      return (
        g(e) &&
        65279 !== e &&
        44 !== e &&
        91 !== e &&
        93 !== e &&
        123 !== e &&
        125 !== e &&
        58 !== e &&
        (35 !== e ||
          (t &&
            (function(e) {
              return g(e) && !m(e) && 65279 !== e && 13 !== e && 10 !== e;
            })(t)))
      );
    }
    function v(e) {
      return /^\n* /.test(e);
    }
    function D(e, t, n, r, i) {
      var a,
        o,
        s,
        u,
        c = !1,
        l = !1,
        p = -1 !== r,
        f = -1,
        h =
          g((u = e.charCodeAt(0))) &&
          65279 !== u &&
          !m(u) &&
          45 !== u &&
          63 !== u &&
          58 !== u &&
          44 !== u &&
          91 !== u &&
          93 !== u &&
          123 !== u &&
          125 !== u &&
          35 !== u &&
          38 !== u &&
          42 !== u &&
          33 !== u &&
          124 !== u &&
          61 !== u &&
          62 !== u &&
          39 !== u &&
          34 !== u &&
          37 !== u &&
          64 !== u &&
          96 !== u &&
          !m(e.charCodeAt(e.length - 1));
      if (t)
        for (a = 0; a < e.length; a++) {
          if (!g((o = e.charCodeAt(a)))) return 5;
          (s = a > 0 ? e.charCodeAt(a - 1) : null), (h = h && y(o, s));
        }
      else {
        for (a = 0; a < e.length; a++) {
          if (10 === (o = e.charCodeAt(a)))
            (c = !0),
              p && ((l = l || (a - f - 1 > r && ' ' !== e[f + 1])), (f = a));
          else if (!g(o)) return 5;
          (s = a > 0 ? e.charCodeAt(a - 1) : null), (h = h && y(o, s));
        }
        l = l || (p && a - f - 1 > r && ' ' !== e[f + 1]);
      }
      return c || l ? (n > 9 && v(e) ? 5 : l ? 4 : 3) : h && !i(e) ? 1 : 2;
    }
    function E(e, t, n, r) {
      e.dump = (function() {
        if (0 === t.length) return "''";
        if (!e.noCompatMode && -1 !== l.indexOf(t)) return "'" + t + "'";
        var a = e.indent * Math.max(1, n),
          o =
            -1 === e.lineWidth
              ? -1
              : Math.max(Math.min(e.lineWidth, 40), e.lineWidth - a),
          s = r || (e.flowLevel > -1 && n >= e.flowLevel);
        switch (
          D(t, s, e.indent, o, function(t) {
            return (function(e, t) {
              var n, r;
              for (n = 0, r = e.implicitTypes.length; n < r; n += 1)
                if (e.implicitTypes[n].resolve(t)) return !0;
              return !1;
            })(e, t);
          })
        ) {
          case 1:
            return t;
          case 2:
            return "'" + t.replace(/'/g, "''") + "'";
          case 3:
            return '|' + C(t, e.indent) + b(h(t, a));
          case 4:
            return (
              '>' +
              C(t, e.indent) +
              b(
                h(
                  (function(e, t) {
                    var n,
                      r,
                      i = /(\n+)([^\n]*)/g,
                      a =
                        ((s = e.indexOf('\n')),
                        (s = -1 !== s ? s : e.length),
                        (i.lastIndex = s),
                        x(e.slice(0, s), t)),
                      o = '\n' === e[0] || ' ' === e[0];
                    var s;
                    for (; (r = i.exec(e)); ) {
                      var u = r[1],
                        c = r[2];
                      (n = ' ' === c[0]),
                        (a += u + (o || n || '' === c ? '' : '\n') + x(c, t)),
                        (o = n);
                    }
                    return a;
                  })(t, o),
                  a,
                ),
              )
            );
          case 5:
            return (
              '"' +
              (function(e) {
                for (var t, n, r, i = '', a = 0; a < e.length; a++)
                  (t = e.charCodeAt(a)) >= 55296 &&
                  t <= 56319 &&
                  (n = e.charCodeAt(a + 1)) >= 56320 &&
                  n <= 57343
                    ? ((i += p(1024 * (t - 55296) + n - 56320 + 65536)), a++)
                    : ((r = c[t]), (i += !r && g(t) ? e[a] : r || p(t)));
                return i;
              })(t) +
              '"'
            );
          default:
            throw new i('impossible error: invalid scalar style');
        }
      })();
    }
    function C(e, t) {
      var n = v(e) ? String(t) : '',
        r = '\n' === e[e.length - 1];
      return (
        n +
        (r && ('\n' === e[e.length - 2] || '\n' === e) ? '+' : r ? '' : '-') +
        '\n'
      );
    }
    function b(e) {
      return '\n' === e[e.length - 1] ? e.slice(0, -1) : e;
    }
    function x(e, t) {
      if ('' === e || ' ' === e[0]) return e;
      for (
        var n, r, i = / [^ ]/g, a = 0, o = 0, s = 0, u = '';
        (n = i.exec(e));

      )
        (s = n.index) - a > t &&
          ((r = o > a ? o : s), (u += '\n' + e.slice(a, r)), (a = r + 1)),
          (o = s);
      return (
        (u += '\n'),
        e.length - a > t && o > a
          ? (u += e.slice(a, o) + '\n' + e.slice(o + 1))
          : (u += e.slice(a)),
        u.slice(1)
      );
    }
    function A(e, t, n) {
      var r, a, o, c, l, p;
      for (
        o = 0, c = (a = n ? e.explicitTypes : e.implicitTypes).length;
        o < c;
        o += 1
      )
        if (
          ((l = a[o]).instanceOf || l.predicate) &&
          (!l.instanceOf ||
            ('object' == typeof t && t instanceof l.instanceOf)) &&
          (!l.predicate || l.predicate(t))
        ) {
          if (((e.tag = n ? l.tag : '?'), l.represent)) {
            if (
              ((p = e.styleMap[l.tag] || l.defaultStyle),
              '[object Function]' === s.call(l.represent))
            )
              r = l.represent(t, p);
            else {
              if (!u.call(l.represent, p))
                throw new i(
                  '!<' + l.tag + '> tag resolver accepts not "' + p + '" style',
                );
              r = l.represent[p](t, p);
            }
            e.dump = r;
          }
          return !0;
        }
      return !1;
    }
    function S(e, t, n, r, a, o) {
      (e.tag = null), (e.dump = n), A(e, n, !1) || A(e, n, !0);
      var u = s.call(e.dump);
      r && (r = e.flowLevel < 0 || e.flowLevel > t);
      var c,
        l,
        p = '[object Object]' === u || '[object Array]' === u;
      if (
        (p && (l = -1 !== (c = e.duplicates.indexOf(n))),
        ((null !== e.tag && '?' !== e.tag) || l || (2 !== e.indent && t > 0)) &&
          (a = !1),
        l && e.usedDuplicates[c])
      )
        e.dump = '*ref_' + c;
      else {
        if (
          (p && l && !e.usedDuplicates[c] && (e.usedDuplicates[c] = !0),
          '[object Object]' === u)
        )
          r && 0 !== Object.keys(e.dump).length
            ? (!(function(e, t, n, r) {
                var a,
                  o,
                  s,
                  u,
                  c,
                  l,
                  p = '',
                  f = e.tag,
                  h = Object.keys(n);
                if (!0 === e.sortKeys) h.sort();
                else if ('function' == typeof e.sortKeys) h.sort(e.sortKeys);
                else if (e.sortKeys)
                  throw new i('sortKeys must be a boolean or a function');
                for (a = 0, o = h.length; a < o; a += 1)
                  (l = ''),
                    (r && 0 === a) || (l += d(e, t)),
                    (u = n[(s = h[a])]),
                    S(e, t + 1, s, !0, !0, !0) &&
                      ((c =
                        (null !== e.tag && '?' !== e.tag) ||
                        (e.dump && e.dump.length > 1024)) &&
                        (e.dump && 10 === e.dump.charCodeAt(0)
                          ? (l += '?')
                          : (l += '? ')),
                      (l += e.dump),
                      c && (l += d(e, t)),
                      S(e, t + 1, u, !0, c) &&
                        (e.dump && 10 === e.dump.charCodeAt(0)
                          ? (l += ':')
                          : (l += ': '),
                        (p += l += e.dump)));
                (e.tag = f), (e.dump = p || '{}');
              })(e, t, e.dump, a),
              l && (e.dump = '&ref_' + c + e.dump))
            : (!(function(e, t, n) {
                var r,
                  i,
                  a,
                  o,
                  s,
                  u = '',
                  c = e.tag,
                  l = Object.keys(n);
                for (r = 0, i = l.length; r < i; r += 1)
                  (s = ''),
                    0 !== r && (s += ', '),
                    e.condenseFlow && (s += '"'),
                    (o = n[(a = l[r])]),
                    S(e, t, a, !1, !1) &&
                      (e.dump.length > 1024 && (s += '? '),
                      (s +=
                        e.dump +
                        (e.condenseFlow ? '"' : '') +
                        ':' +
                        (e.condenseFlow ? '' : ' ')),
                      S(e, t, o, !1, !1) && (u += s += e.dump));
                (e.tag = c), (e.dump = '{' + u + '}');
              })(e, t, e.dump),
              l && (e.dump = '&ref_' + c + ' ' + e.dump));
        else if ('[object Array]' === u) {
          var f = e.noArrayIndent && t > 0 ? t - 1 : t;
          r && 0 !== e.dump.length
            ? (!(function(e, t, n, r) {
                var i,
                  a,
                  o = '',
                  s = e.tag;
                for (i = 0, a = n.length; i < a; i += 1)
                  S(e, t + 1, n[i], !0, !0) &&
                    ((r && 0 === i) || (o += d(e, t)),
                    e.dump && 10 === e.dump.charCodeAt(0)
                      ? (o += '-')
                      : (o += '- '),
                    (o += e.dump));
                (e.tag = s), (e.dump = o || '[]');
              })(e, f, e.dump, a),
              l && (e.dump = '&ref_' + c + e.dump))
            : (!(function(e, t, n) {
                var r,
                  i,
                  a = '',
                  o = e.tag;
                for (r = 0, i = n.length; r < i; r += 1)
                  S(e, t, n[r], !1, !1) &&
                    (0 !== r && (a += ',' + (e.condenseFlow ? '' : ' ')),
                    (a += e.dump));
                (e.tag = o), (e.dump = '[' + a + ']');
              })(e, f, e.dump),
              l && (e.dump = '&ref_' + c + ' ' + e.dump));
        } else {
          if ('[object String]' !== u) {
            if (e.skipInvalid) return !1;
            throw new i('unacceptable kind of an object to dump ' + u);
          }
          '?' !== e.tag && E(e, e.dump, t, o);
        }
        null !== e.tag &&
          '?' !== e.tag &&
          (e.dump = '!<' + e.tag + '> ' + e.dump);
      }
      return !0;
    }
    function w(e, t) {
      var n,
        r,
        i = [],
        a = [];
      for (
        (function e(t, n, r) {
          var i, a, o;
          if (null !== t && 'object' == typeof t)
            if (-1 !== (a = n.indexOf(t))) -1 === r.indexOf(a) && r.push(a);
            else if ((n.push(t), Array.isArray(t)))
              for (a = 0, o = t.length; a < o; a += 1) e(t[a], n, r);
            else
              for (i = Object.keys(t), a = 0, o = i.length; a < o; a += 1)
                e(t[i[a]], n, r);
        })(e, i, a),
          n = 0,
          r = a.length;
        n < r;
        n += 1
      )
        t.duplicates.push(i[a[n]]);
      t.usedDuplicates = new Array(r);
    }
    function F(e, t) {
      var n = new f((t = t || {}));
      return n.noRefs || w(e, n), S(n, 0, e, !0, !0) ? n.dump + '\n' : '';
    }
    (e.exports.dump = F),
      (e.exports.safeDump = function(e, t) {
        return F(e, r.extend({ schema: o }, t));
      });
  },
  function(e, t, n) {
    'use strict';
    n.r(t);
    var r,
      i,
      a,
      o,
      s,
      u,
      c,
      l,
      p,
      f,
      h,
      d,
      m,
      g,
      y,
      v,
      D,
      E,
      C,
      b,
      x = n(6);
    !(function(e) {
      (e.create = function(e, t) {
        return { line: e, character: t };
      }),
        (e.is = function(e) {
          var t = e;
          return (
            Z.objectLiteral(t) && Z.number(t.line) && Z.number(t.character)
          );
        });
    })(r || (r = {})),
      (function(e) {
        (e.create = function(e, t, n, i) {
          if (Z.number(e) && Z.number(t) && Z.number(n) && Z.number(i))
            return { start: r.create(e, t), end: r.create(n, i) };
          if (r.is(e) && r.is(t)) return { start: e, end: t };
          throw new Error(
            'Range#create called with invalid arguments[' +
              e +
              ', ' +
              t +
              ', ' +
              n +
              ', ' +
              i +
              ']',
          );
        }),
          (e.is = function(e) {
            var t = e;
            return Z.objectLiteral(t) && r.is(t.start) && r.is(t.end);
          });
      })(i || (i = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { uri: e, range: t };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) &&
              i.is(t.range) &&
              (Z.string(t.uri) || Z.undefined(t.uri))
            );
          });
      })(a || (a = {})),
      (function(e) {
        (e.create = function(e, t, n, r) {
          return {
            targetUri: e,
            targetRange: t,
            targetSelectionRange: n,
            originSelectionRange: r,
          };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) &&
              i.is(t.targetRange) &&
              Z.string(t.targetUri) &&
              (i.is(t.targetSelectionRange) ||
                Z.undefined(t.targetSelectionRange)) &&
              (i.is(t.originSelectionRange) ||
                Z.undefined(t.originSelectionRange))
            );
          });
      })(o || (o = {})),
      (function(e) {
        (e.create = function(e, t, n, r) {
          return { red: e, green: t, blue: n, alpha: r };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.number(t.red) &&
              Z.number(t.green) &&
              Z.number(t.blue) &&
              Z.number(t.alpha)
            );
          });
      })(s || (s = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { range: e, color: t };
        }),
          (e.is = function(e) {
            var t = e;
            return i.is(t.range) && s.is(t.color);
          });
      })(u || (u = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          return { label: e, textEdit: t, additionalTextEdits: n };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.string(t.label) &&
              (Z.undefined(t.textEdit) || y.is(t)) &&
              (Z.undefined(t.additionalTextEdits) ||
                Z.typedArray(t.additionalTextEdits, y.is))
            );
          });
      })(c || (c = {})),
      (function(e) {
        (e.Comment = 'comment'), (e.Imports = 'imports'), (e.Region = 'region');
      })(l || (l = {})),
      (function(e) {
        (e.create = function(e, t, n, r, i) {
          var a = { startLine: e, endLine: t };
          return (
            Z.defined(n) && (a.startCharacter = n),
            Z.defined(r) && (a.endCharacter = r),
            Z.defined(i) && (a.kind = i),
            a
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.number(t.startLine) &&
              Z.number(t.startLine) &&
              (Z.undefined(t.startCharacter) || Z.number(t.startCharacter)) &&
              (Z.undefined(t.endCharacter) || Z.number(t.endCharacter)) &&
              (Z.undefined(t.kind) || Z.string(t.kind))
            );
          });
      })(p || (p = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { location: e, message: t };
        }),
          (e.is = function(e) {
            var t = e;
            return Z.defined(t) && a.is(t.location) && Z.string(t.message);
          });
      })(f || (f = {})),
      (function(e) {
        (e.Error = 1), (e.Warning = 2), (e.Information = 3), (e.Hint = 4);
      })(h || (h = {})),
      (function(e) {
        (e.Unnecessary = 1), (e.Deprecated = 2);
      })(d || (d = {})),
      (function(e) {
        (e.create = function(e, t, n, r, i, a) {
          var o = { range: e, message: t };
          return (
            Z.defined(n) && (o.severity = n),
            Z.defined(r) && (o.code = r),
            Z.defined(i) && (o.source = i),
            Z.defined(a) && (o.relatedInformation = a),
            o
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) &&
              i.is(t.range) &&
              Z.string(t.message) &&
              (Z.number(t.severity) || Z.undefined(t.severity)) &&
              (Z.number(t.code) || Z.string(t.code) || Z.undefined(t.code)) &&
              (Z.string(t.source) || Z.undefined(t.source)) &&
              (Z.undefined(t.relatedInformation) ||
                Z.typedArray(t.relatedInformation, f.is))
            );
          });
      })(m || (m = {})),
      (function(e) {
        (e.create = function(e, t) {
          for (var n = [], r = 2; r < arguments.length; r++)
            n[r - 2] = arguments[r];
          var i = { title: e, command: t };
          return Z.defined(n) && n.length > 0 && (i.arguments = n), i;
        }),
          (e.is = function(e) {
            var t = e;
            return Z.defined(t) && Z.string(t.title) && Z.string(t.command);
          });
      })(g || (g = {})),
      (function(e) {
        (e.replace = function(e, t) {
          return { range: e, newText: t };
        }),
          (e.insert = function(e, t) {
            return { range: { start: e, end: e }, newText: t };
          }),
          (e.del = function(e) {
            return { range: e, newText: '' };
          }),
          (e.is = function(e) {
            var t = e;
            return Z.objectLiteral(t) && Z.string(t.newText) && i.is(t.range);
          });
      })(y || (y = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { textDocument: e, edits: t };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) && S.is(t.textDocument) && Array.isArray(t.edits)
            );
          });
      })(v || (v = {})),
      (function(e) {
        (e.create = function(e, t) {
          var n = { kind: 'create', uri: e };
          return (
            void 0 === t ||
              (void 0 === t.overwrite && void 0 === t.ignoreIfExists) ||
              (n.options = t),
            n
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              'create' === t.kind &&
              Z.string(t.uri) &&
              (void 0 === t.options ||
                ((void 0 === t.options.overwrite ||
                  Z.boolean(t.options.overwrite)) &&
                  (void 0 === t.options.ignoreIfExists ||
                    Z.boolean(t.options.ignoreIfExists))))
            );
          });
      })(D || (D = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          var r = { kind: 'rename', oldUri: e, newUri: t };
          return (
            void 0 === n ||
              (void 0 === n.overwrite && void 0 === n.ignoreIfExists) ||
              (r.options = n),
            r
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              'rename' === t.kind &&
              Z.string(t.oldUri) &&
              Z.string(t.newUri) &&
              (void 0 === t.options ||
                ((void 0 === t.options.overwrite ||
                  Z.boolean(t.options.overwrite)) &&
                  (void 0 === t.options.ignoreIfExists ||
                    Z.boolean(t.options.ignoreIfExists))))
            );
          });
      })(E || (E = {})),
      (function(e) {
        (e.create = function(e, t) {
          var n = { kind: 'delete', uri: e };
          return (
            void 0 === t ||
              (void 0 === t.recursive && void 0 === t.ignoreIfNotExists) ||
              (n.options = t),
            n
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              'delete' === t.kind &&
              Z.string(t.uri) &&
              (void 0 === t.options ||
                ((void 0 === t.options.recursive ||
                  Z.boolean(t.options.recursive)) &&
                  (void 0 === t.options.ignoreIfNotExists ||
                    Z.boolean(t.options.ignoreIfNotExists))))
            );
          });
      })(C || (C = {})),
      (function(e) {
        e.is = function(e) {
          var t = e;
          return (
            t &&
            (void 0 !== t.changes || void 0 !== t.documentChanges) &&
            (void 0 === t.documentChanges ||
              t.documentChanges.every(function(e) {
                return Z.string(e.kind)
                  ? D.is(e) || E.is(e) || C.is(e)
                  : v.is(e);
              }))
          );
        };
      })(b || (b = {}));
    var A,
      S,
      w,
      F,
      k,
      T,
      _,
      O,
      N,
      B,
      I,
      P,
      M,
      L,
      R,
      j,
      U,
      V,
      W,
      $,
      q,
      Y,
      J,
      K,
      z,
      H,
      X,
      G = (function() {
        function e(e) {
          this.edits = e;
        }
        return (
          (e.prototype.insert = function(e, t) {
            this.edits.push(y.insert(e, t));
          }),
          (e.prototype.replace = function(e, t) {
            this.edits.push(y.replace(e, t));
          }),
          (e.prototype.delete = function(e) {
            this.edits.push(y.del(e));
          }),
          (e.prototype.add = function(e) {
            this.edits.push(e);
          }),
          (e.prototype.all = function() {
            return this.edits;
          }),
          (e.prototype.clear = function() {
            this.edits.splice(0, this.edits.length);
          }),
          e
        );
      })();
    !(function() {
      function e(e) {
        var t = this;
        (this._textEditChanges = Object.create(null)),
          e &&
            ((this._workspaceEdit = e),
            e.documentChanges
              ? e.documentChanges.forEach(function(e) {
                  if (v.is(e)) {
                    var n = new G(e.edits);
                    t._textEditChanges[e.textDocument.uri] = n;
                  }
                })
              : e.changes &&
                Object.keys(e.changes).forEach(function(n) {
                  var r = new G(e.changes[n]);
                  t._textEditChanges[n] = r;
                }));
      }
      Object.defineProperty(e.prototype, 'edit', {
        get: function() {
          return this._workspaceEdit;
        },
        enumerable: !0,
        configurable: !0,
      }),
        (e.prototype.getTextEditChange = function(e) {
          if (S.is(e)) {
            if (
              (this._workspaceEdit ||
                (this._workspaceEdit = { documentChanges: [] }),
              !this._workspaceEdit.documentChanges)
            )
              throw new Error(
                'Workspace edit is not configured for document changes.',
              );
            var t = e;
            if (!(r = this._textEditChanges[t.uri])) {
              var n = { textDocument: t, edits: (i = []) };
              this._workspaceEdit.documentChanges.push(n),
                (r = new G(i)),
                (this._textEditChanges[t.uri] = r);
            }
            return r;
          }
          if (
            (this._workspaceEdit ||
              (this._workspaceEdit = { changes: Object.create(null) }),
            !this._workspaceEdit.changes)
          )
            throw new Error(
              'Workspace edit is not configured for normal text edit changes.',
            );
          var r;
          if (!(r = this._textEditChanges[e])) {
            var i = [];
            (this._workspaceEdit.changes[e] = i),
              (r = new G(i)),
              (this._textEditChanges[e] = r);
          }
          return r;
        }),
        (e.prototype.createFile = function(e, t) {
          this.checkDocumentChanges(),
            this._workspaceEdit.documentChanges.push(D.create(e, t));
        }),
        (e.prototype.renameFile = function(e, t, n) {
          this.checkDocumentChanges(),
            this._workspaceEdit.documentChanges.push(E.create(e, t, n));
        }),
        (e.prototype.deleteFile = function(e, t) {
          this.checkDocumentChanges(),
            this._workspaceEdit.documentChanges.push(C.create(e, t));
        }),
        (e.prototype.checkDocumentChanges = function() {
          if (!this._workspaceEdit || !this._workspaceEdit.documentChanges)
            throw new Error(
              'Workspace edit is not configured for document changes.',
            );
        });
    })();
    !(function(e) {
      (e.create = function(e) {
        return { uri: e };
      }),
        (e.is = function(e) {
          var t = e;
          return Z.defined(t) && Z.string(t.uri);
        });
    })(A || (A = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { uri: e, version: t };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) &&
              Z.string(t.uri) &&
              (null === t.version || Z.number(t.version))
            );
          });
      })(S || (S = {})),
      (function(e) {
        (e.create = function(e, t, n, r) {
          return { uri: e, languageId: t, version: n, text: r };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) &&
              Z.string(t.uri) &&
              Z.string(t.languageId) &&
              Z.number(t.version) &&
              Z.string(t.text)
            );
          });
      })(w || (w = {})),
      (function(e) {
        (e.PlainText = 'plaintext'), (e.Markdown = 'markdown');
      })(F || (F = {})),
      (function(e) {
        e.is = function(t) {
          var n = t;
          return n === e.PlainText || n === e.Markdown;
        };
      })(F || (F = {})),
      (function(e) {
        e.is = function(e) {
          var t = e;
          return Z.objectLiteral(e) && F.is(t.kind) && Z.string(t.value);
        };
      })(k || (k = {})),
      (function(e) {
        (e.Text = 1),
          (e.Method = 2),
          (e.Function = 3),
          (e.Constructor = 4),
          (e.Field = 5),
          (e.Variable = 6),
          (e.Class = 7),
          (e.Interface = 8),
          (e.Module = 9),
          (e.Property = 10),
          (e.Unit = 11),
          (e.Value = 12),
          (e.Enum = 13),
          (e.Keyword = 14),
          (e.Snippet = 15),
          (e.Color = 16),
          (e.File = 17),
          (e.Reference = 18),
          (e.Folder = 19),
          (e.EnumMember = 20),
          (e.Constant = 21),
          (e.Struct = 22),
          (e.Event = 23),
          (e.Operator = 24),
          (e.TypeParameter = 25);
      })(T || (T = {})),
      (function(e) {
        (e.PlainText = 1), (e.Snippet = 2);
      })(_ || (_ = {})),
      (function(e) {
        e.Deprecated = 1;
      })(O || (O = {})),
      (function(e) {
        e.create = function(e) {
          return { label: e };
        };
      })(N || (N = {})),
      (function(e) {
        e.create = function(e, t) {
          return { items: e || [], isIncomplete: !!t };
        };
      })(B || (B = {})),
      (function(e) {
        (e.fromPlainText = function(e) {
          return e.replace(/[\\`*_{}[\]()#+\-.!]/g, '\\$&');
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.string(t) ||
              (Z.objectLiteral(t) && Z.string(t.language) && Z.string(t.value))
            );
          });
      })(I || (I = {})),
      (function(e) {
        e.is = function(e) {
          var t = e;
          return (
            !!t &&
            Z.objectLiteral(t) &&
            (k.is(t.contents) ||
              I.is(t.contents) ||
              Z.typedArray(t.contents, I.is)) &&
            (void 0 === e.range || i.is(e.range))
          );
        };
      })(P || (P = {})),
      (function(e) {
        e.create = function(e, t) {
          return t ? { label: e, documentation: t } : { label: e };
        };
      })(M || (M = {})),
      (function(e) {
        e.create = function(e, t) {
          for (var n = [], r = 2; r < arguments.length; r++)
            n[r - 2] = arguments[r];
          var i = { label: e };
          return (
            Z.defined(t) && (i.documentation = t),
            Z.defined(n) ? (i.parameters = n) : (i.parameters = []),
            i
          );
        };
      })(L || (L = {})),
      (function(e) {
        (e.Text = 1), (e.Read = 2), (e.Write = 3);
      })(R || (R = {})),
      (function(e) {
        e.create = function(e, t) {
          var n = { range: e };
          return Z.number(t) && (n.kind = t), n;
        };
      })(j || (j = {})),
      (function(e) {
        (e.File = 1),
          (e.Module = 2),
          (e.Namespace = 3),
          (e.Package = 4),
          (e.Class = 5),
          (e.Method = 6),
          (e.Property = 7),
          (e.Field = 8),
          (e.Constructor = 9),
          (e.Enum = 10),
          (e.Interface = 11),
          (e.Function = 12),
          (e.Variable = 13),
          (e.Constant = 14),
          (e.String = 15),
          (e.Number = 16),
          (e.Boolean = 17),
          (e.Array = 18),
          (e.Object = 19),
          (e.Key = 20),
          (e.Null = 21),
          (e.EnumMember = 22),
          (e.Struct = 23),
          (e.Event = 24),
          (e.Operator = 25),
          (e.TypeParameter = 26);
      })(U || (U = {})),
      (function(e) {
        e.Deprecated = 1;
      })(V || (V = {})),
      (function(e) {
        e.create = function(e, t, n, r, i) {
          var a = { name: e, kind: t, location: { uri: r, range: n } };
          return i && (a.containerName = i), a;
        };
      })(W || (W = {})),
      (function(e) {
        (e.create = function(e, t, n, r, i, a) {
          var o = { name: e, detail: t, kind: n, range: r, selectionRange: i };
          return void 0 !== a && (o.children = a), o;
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              Z.string(t.name) &&
              Z.number(t.kind) &&
              i.is(t.range) &&
              i.is(t.selectionRange) &&
              (void 0 === t.detail || Z.string(t.detail)) &&
              (void 0 === t.deprecated || Z.boolean(t.deprecated)) &&
              (void 0 === t.children || Array.isArray(t.children))
            );
          });
      })($ || ($ = {})),
      (function(e) {
        (e.Empty = ''),
          (e.QuickFix = 'quickfix'),
          (e.Refactor = 'refactor'),
          (e.RefactorExtract = 'refactor.extract'),
          (e.RefactorInline = 'refactor.inline'),
          (e.RefactorRewrite = 'refactor.rewrite'),
          (e.Source = 'source'),
          (e.SourceOrganizeImports = 'source.organizeImports'),
          (e.SourceFixAll = 'source.fixAll');
      })(q || (q = {})),
      (function(e) {
        (e.create = function(e, t) {
          var n = { diagnostics: e };
          return null != t && (n.only = t), n;
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) &&
              Z.typedArray(t.diagnostics, m.is) &&
              (void 0 === t.only || Z.typedArray(t.only, Z.string))
            );
          });
      })(Y || (Y = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          var r = { title: e };
          return (
            g.is(t) ? (r.command = t) : (r.edit = t),
            void 0 !== n && (r.kind = n),
            r
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              Z.string(t.title) &&
              (void 0 === t.diagnostics || Z.typedArray(t.diagnostics, m.is)) &&
              (void 0 === t.kind || Z.string(t.kind)) &&
              (void 0 !== t.edit || void 0 !== t.command) &&
              (void 0 === t.command || g.is(t.command)) &&
              (void 0 === t.isPreferred || Z.boolean(t.isPreferred)) &&
              (void 0 === t.edit || b.is(t.edit))
            );
          });
      })(J || (J = {})),
      (function(e) {
        (e.create = function(e, t) {
          var n = { range: e };
          return Z.defined(t) && (n.data = t), n;
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) &&
              i.is(t.range) &&
              (Z.undefined(t.command) || g.is(t.command))
            );
          });
      })(K || (K = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { tabSize: e, insertSpaces: t };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) && Z.number(t.tabSize) && Z.boolean(t.insertSpaces)
            );
          });
      })(z || (z = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          return { range: e, target: t, data: n };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              Z.defined(t) &&
              i.is(t.range) &&
              (Z.undefined(t.target) || Z.string(t.target))
            );
          });
      })(H || (H = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { range: e, parent: t };
        }),
          (e.is = function(t) {
            var n = t;
            return (
              void 0 !== n &&
              i.is(n.range) &&
              (void 0 === n.parent || e.is(n.parent))
            );
          });
      })(X || (X = {}));
    var Q;
    !(function(e) {
      (e.create = function(e, t, n, r) {
        return new te(e, t, n, r);
      }),
        (e.is = function(e) {
          var t = e;
          return !!(
            Z.defined(t) &&
            Z.string(t.uri) &&
            (Z.undefined(t.languageId) || Z.string(t.languageId)) &&
            Z.number(t.lineCount) &&
            Z.func(t.getText) &&
            Z.func(t.positionAt) &&
            Z.func(t.offsetAt)
          );
        }),
        (e.applyEdits = function(e, t) {
          for (
            var n = e.getText(),
              r = (function e(t, n) {
                if (t.length <= 1) return t;
                var r = (t.length / 2) | 0,
                  i = t.slice(0, r),
                  a = t.slice(r);
                e(i, n), e(a, n);
                var o = 0,
                  s = 0,
                  u = 0;
                for (; o < i.length && s < a.length; ) {
                  var c = n(i[o], a[s]);
                  t[u++] = c <= 0 ? i[o++] : a[s++];
                }
                for (; o < i.length; ) t[u++] = i[o++];
                for (; s < a.length; ) t[u++] = a[s++];
                return t;
              })(t, function(e, t) {
                var n = e.range.start.line - t.range.start.line;
                return 0 === n
                  ? e.range.start.character - t.range.start.character
                  : n;
              }),
              i = n.length,
              a = r.length - 1;
            a >= 0;
            a--
          ) {
            var o = r[a],
              s = e.offsetAt(o.range.start),
              u = e.offsetAt(o.range.end);
            if (!(u <= i)) throw new Error('Overlapping edit');
            (n = n.substring(0, s) + o.newText + n.substring(u, n.length)),
              (i = s);
          }
          return n;
        });
    })(Q || (Q = {}));
    var Z,
      ee,
      te = (function() {
        function e(e, t, n, r) {
          (this._uri = e),
            (this._languageId = t),
            (this._version = n),
            (this._content = r),
            (this._lineOffsets = void 0);
        }
        return (
          Object.defineProperty(e.prototype, 'uri', {
            get: function() {
              return this._uri;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, 'languageId', {
            get: function() {
              return this._languageId;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, 'version', {
            get: function() {
              return this._version;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.prototype.getText = function(e) {
            if (e) {
              var t = this.offsetAt(e.start),
                n = this.offsetAt(e.end);
              return this._content.substring(t, n);
            }
            return this._content;
          }),
          (e.prototype.update = function(e, t) {
            (this._content = e.text),
              (this._version = t),
              (this._lineOffsets = void 0);
          }),
          (e.prototype.getLineOffsets = function() {
            if (void 0 === this._lineOffsets) {
              for (
                var e = [], t = this._content, n = !0, r = 0;
                r < t.length;
                r++
              ) {
                n && (e.push(r), (n = !1));
                var i = t.charAt(r);
                (n = '\r' === i || '\n' === i),
                  '\r' === i &&
                    r + 1 < t.length &&
                    '\n' === t.charAt(r + 1) &&
                    r++;
              }
              n && t.length > 0 && e.push(t.length), (this._lineOffsets = e);
            }
            return this._lineOffsets;
          }),
          (e.prototype.positionAt = function(e) {
            e = Math.max(Math.min(e, this._content.length), 0);
            var t = this.getLineOffsets(),
              n = 0,
              i = t.length;
            if (0 === i) return r.create(0, e);
            for (; n < i; ) {
              var a = Math.floor((n + i) / 2);
              t[a] > e ? (i = a) : (n = a + 1);
            }
            var o = n - 1;
            return r.create(o, e - t[o]);
          }),
          (e.prototype.offsetAt = function(e) {
            var t = this.getLineOffsets();
            if (e.line >= t.length) return this._content.length;
            if (e.line < 0) return 0;
            var n = t[e.line],
              r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
            return Math.max(Math.min(n + e.character, r), n);
          }),
          Object.defineProperty(e.prototype, 'lineCount', {
            get: function() {
              return this.getLineOffsets().length;
            },
            enumerable: !0,
            configurable: !0,
          }),
          e
        );
      })();
    function ne(e, t) {
      void 0 === t && (t = !1);
      var n = e.length,
        r = 0,
        i = '',
        a = 0,
        o = 16,
        s = 0,
        u = 0,
        c = 0,
        l = 0,
        p = 0;
      function f(t, n) {
        for (var i = 0, a = 0; i < t || !n; ) {
          var o = e.charCodeAt(r);
          if (o >= 48 && o <= 57) a = 16 * a + o - 48;
          else if (o >= 65 && o <= 70) a = 16 * a + o - 65 + 10;
          else {
            if (!(o >= 97 && o <= 102)) break;
            a = 16 * a + o - 97 + 10;
          }
          r++, i++;
        }
        return i < t && (a = -1), a;
      }
      function h() {
        if (((i = ''), (p = 0), (a = r), (u = s), (l = c), r >= n))
          return (a = n), (o = 17);
        var t = e.charCodeAt(r);
        if (re(t)) {
          do {
            r++, (i += String.fromCharCode(t)), (t = e.charCodeAt(r));
          } while (re(t));
          return (o = 15);
        }
        if (ie(t))
          return (
            r++,
            (i += String.fromCharCode(t)),
            13 === t && 10 === e.charCodeAt(r) && (r++, (i += '\n')),
            s++,
            (c = r),
            (o = 14)
          );
        switch (t) {
          case 123:
            return r++, (o = 1);
          case 125:
            return r++, (o = 2);
          case 91:
            return r++, (o = 3);
          case 93:
            return r++, (o = 4);
          case 58:
            return r++, (o = 6);
          case 44:
            return r++, (o = 5);
          case 34:
            return (
              r++,
              (i = (function() {
                for (var t = '', i = r; ; ) {
                  if (r >= n) {
                    (t += e.substring(i, r)), (p = 2);
                    break;
                  }
                  var a = e.charCodeAt(r);
                  if (34 === a) {
                    (t += e.substring(i, r)), r++;
                    break;
                  }
                  if (92 !== a) {
                    if (a >= 0 && a <= 31) {
                      if (ie(a)) {
                        (t += e.substring(i, r)), (p = 2);
                        break;
                      }
                      p = 6;
                    }
                    r++;
                  } else {
                    if (((t += e.substring(i, r)), ++r >= n)) {
                      p = 2;
                      break;
                    }
                    switch (e.charCodeAt(r++)) {
                      case 34:
                        t += '"';
                        break;
                      case 92:
                        t += '\\';
                        break;
                      case 47:
                        t += '/';
                        break;
                      case 98:
                        t += '\b';
                        break;
                      case 102:
                        t += '\f';
                        break;
                      case 110:
                        t += '\n';
                        break;
                      case 114:
                        t += '\r';
                        break;
                      case 116:
                        t += '\t';
                        break;
                      case 117:
                        var o = f(4, !0);
                        o >= 0 ? (t += String.fromCharCode(o)) : (p = 4);
                        break;
                      default:
                        p = 5;
                    }
                    i = r;
                  }
                }
                return t;
              })()),
              (o = 10)
            );
          case 47:
            var h = r - 1;
            if (47 === e.charCodeAt(r + 1)) {
              for (r += 2; r < n && !ie(e.charCodeAt(r)); ) r++;
              return (i = e.substring(h, r)), (o = 12);
            }
            if (42 === e.charCodeAt(r + 1)) {
              r += 2;
              for (var m = n - 1, g = !1; r < m; ) {
                var y = e.charCodeAt(r);
                if (42 === y && 47 === e.charCodeAt(r + 1)) {
                  (r += 2), (g = !0);
                  break;
                }
                r++,
                  ie(y) &&
                    (13 === y && 10 === e.charCodeAt(r) && r++, s++, (c = r));
              }
              return g || (r++, (p = 1)), (i = e.substring(h, r)), (o = 13);
            }
            return (i += String.fromCharCode(t)), r++, (o = 16);
          case 45:
            if (
              ((i += String.fromCharCode(t)), ++r === n || !ae(e.charCodeAt(r)))
            )
              return (o = 16);
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            return (
              (i += (function() {
                var t = r;
                if (48 === e.charCodeAt(r)) r++;
                else for (r++; r < e.length && ae(e.charCodeAt(r)); ) r++;
                if (r < e.length && 46 === e.charCodeAt(r)) {
                  if (!(++r < e.length && ae(e.charCodeAt(r))))
                    return (p = 3), e.substring(t, r);
                  for (r++; r < e.length && ae(e.charCodeAt(r)); ) r++;
                }
                var n = r;
                if (
                  r < e.length &&
                  (69 === e.charCodeAt(r) || 101 === e.charCodeAt(r))
                )
                  if (
                    (((++r < e.length && 43 === e.charCodeAt(r)) ||
                      45 === e.charCodeAt(r)) &&
                      r++,
                    r < e.length && ae(e.charCodeAt(r)))
                  ) {
                    for (r++; r < e.length && ae(e.charCodeAt(r)); ) r++;
                    n = r;
                  } else p = 3;
                return e.substring(t, n);
              })()),
              (o = 11)
            );
          default:
            for (; r < n && d(t); ) r++, (t = e.charCodeAt(r));
            if (a !== r) {
              switch ((i = e.substring(a, r))) {
                case 'true':
                  return (o = 8);
                case 'false':
                  return (o = 9);
                case 'null':
                  return (o = 7);
              }
              return (o = 16);
            }
            return (i += String.fromCharCode(t)), r++, (o = 16);
        }
      }
      function d(e) {
        if (re(e) || ie(e)) return !1;
        switch (e) {
          case 125:
          case 93:
          case 123:
          case 91:
          case 34:
          case 58:
          case 44:
          case 47:
            return !1;
        }
        return !0;
      }
      return {
        setPosition: function(e) {
          (r = e), (i = ''), (a = 0), (o = 16), (p = 0);
        },
        getPosition: function() {
          return r;
        },
        scan: t
          ? function() {
              var e;
              do {
                e = h();
              } while (e >= 12 && e <= 15);
              return e;
            }
          : h,
        getToken: function() {
          return o;
        },
        getTokenValue: function() {
          return i;
        },
        getTokenOffset: function() {
          return a;
        },
        getTokenLength: function() {
          return r - a;
        },
        getTokenStartLine: function() {
          return u;
        },
        getTokenStartCharacter: function() {
          return a - l;
        },
        getTokenError: function() {
          return p;
        },
      };
    }
    function re(e) {
      return (
        32 === e ||
        9 === e ||
        11 === e ||
        12 === e ||
        160 === e ||
        5760 === e ||
        (e >= 8192 && e <= 8203) ||
        8239 === e ||
        8287 === e ||
        12288 === e ||
        65279 === e
      );
    }
    function ie(e) {
      return 10 === e || 13 === e || 8232 === e || 8233 === e;
    }
    function ae(e) {
      return e >= 48 && e <= 57;
    }
    function oe(e, t, n) {
      void 0 === n && (n = ee.DEFAULT);
      var r = ne(e, !1);
      function i(e) {
        return e
          ? function() {
              return e(
                r.getTokenOffset(),
                r.getTokenLength(),
                r.getTokenStartLine(),
                r.getTokenStartCharacter(),
              );
            }
          : function() {
              return !0;
            };
      }
      function a(e) {
        return e
          ? function(t) {
              return e(
                t,
                r.getTokenOffset(),
                r.getTokenLength(),
                r.getTokenStartLine(),
                r.getTokenStartCharacter(),
              );
            }
          : function() {
              return !0;
            };
      }
      var o = i(t.onObjectBegin),
        s = a(t.onObjectProperty),
        u = i(t.onObjectEnd),
        c = i(t.onArrayBegin),
        l = i(t.onArrayEnd),
        p = a(t.onLiteralValue),
        f = a(t.onSeparator),
        h = i(t.onComment),
        d = a(t.onError),
        m = n && n.disallowComments,
        g = n && n.allowTrailingComma;
      function y() {
        for (;;) {
          var e = r.scan();
          switch (r.getTokenError()) {
            case 4:
              v(14);
              break;
            case 5:
              v(15);
              break;
            case 3:
              v(13);
              break;
            case 1:
              m || v(11);
              break;
            case 2:
              v(12);
              break;
            case 6:
              v(16);
          }
          switch (e) {
            case 12:
            case 13:
              m ? v(10) : h();
              break;
            case 16:
              v(1);
              break;
            case 15:
            case 14:
              break;
            default:
              return e;
          }
        }
      }
      function v(e, t, n) {
        if (
          (void 0 === t && (t = []),
          void 0 === n && (n = []),
          d(e),
          t.length + n.length > 0)
        )
          for (var i = r.getToken(); 17 !== i; ) {
            if (-1 !== t.indexOf(i)) {
              y();
              break;
            }
            if (-1 !== n.indexOf(i)) break;
            i = y();
          }
      }
      function D(e) {
        var t = r.getTokenValue();
        return e ? p(t) : s(t), y(), !0;
      }
      function E() {
        switch (r.getToken()) {
          case 3:
            return (function() {
              c(), y();
              for (var e = !1; 4 !== r.getToken() && 17 !== r.getToken(); ) {
                if (5 === r.getToken()) {
                  if ((e || v(4, [], []), f(','), y(), 4 === r.getToken() && g))
                    break;
                } else e && v(6, [], []);
                E() || v(4, [], [4, 5]), (e = !0);
              }
              return l(), 4 !== r.getToken() ? v(8, [4], []) : y(), !0;
            })();
          case 1:
            return (function() {
              o(), y();
              for (var e = !1; 2 !== r.getToken() && 17 !== r.getToken(); ) {
                if (5 === r.getToken()) {
                  if ((e || v(4, [], []), f(','), y(), 2 === r.getToken() && g))
                    break;
                } else e && v(6, [], []);
                (10 !== r.getToken()
                  ? (v(3, [], [2, 5]), 0)
                  : (D(!1),
                    6 === r.getToken()
                      ? (f(':'), y(), E() || v(4, [], [2, 5]))
                      : v(5, [], [2, 5]),
                    1)) || v(4, [], [2, 5]),
                  (e = !0);
              }
              return u(), 2 !== r.getToken() ? v(7, [2], []) : y(), !0;
            })();
          case 10:
            return D(!0);
          default:
            return (function() {
              switch (r.getToken()) {
                case 11:
                  var e = r.getTokenValue(),
                    t = Number(e);
                  isNaN(t) && (v(2), (t = 0)), p(t);
                  break;
                case 7:
                  p(null);
                  break;
                case 8:
                  p(!0);
                  break;
                case 9:
                  p(!1);
                  break;
                default:
                  return !1;
              }
              return y(), !0;
            })();
        }
      }
      return (
        y(),
        17 === r.getToken()
          ? !!n.allowEmptyContent || (v(4, [], []), !1)
          : E()
          ? (17 !== r.getToken() && v(9, [], []), !0)
          : (v(4, [], []), !1)
      );
    }
    !(function(e) {
      var t = Object.prototype.toString;
      (e.defined = function(e) {
        return void 0 !== e;
      }),
        (e.undefined = function(e) {
          return void 0 === e;
        }),
        (e.boolean = function(e) {
          return !0 === e || !1 === e;
        }),
        (e.string = function(e) {
          return '[object String]' === t.call(e);
        }),
        (e.number = function(e) {
          return '[object Number]' === t.call(e);
        }),
        (e.func = function(e) {
          return '[object Function]' === t.call(e);
        }),
        (e.objectLiteral = function(e) {
          return null !== e && 'object' == typeof e;
        }),
        (e.typedArray = function(e, t) {
          return Array.isArray(e) && e.every(t);
        });
    })(Z || (Z = {})),
      (function(e) {
        e.DEFAULT = { allowTrailingComma: !1 };
      })(ee || (ee = {}));
    var se = ne,
      ue = function(e, t, n) {
        void 0 === t && (t = []), void 0 === n && (n = ee.DEFAULT);
        var r = null,
          i = [],
          a = [];
        function o(e) {
          Array.isArray(i) ? i.push(e) : null !== r && (i[r] = e);
        }
        return (
          oe(
            e,
            {
              onObjectBegin: function() {
                var e = {};
                o(e), a.push(i), (i = e), (r = null);
              },
              onObjectProperty: function(e) {
                r = e;
              },
              onObjectEnd: function() {
                i = a.pop();
              },
              onArrayBegin: function() {
                var e = [];
                o(e), a.push(i), (i = e), (r = null);
              },
              onArrayEnd: function() {
                i = a.pop();
              },
              onLiteralValue: o,
              onError: function(e, n, r) {
                t.push({ error: e, offset: n, length: r });
              },
            },
            n,
          ),
          i[0]
        );
      },
      ce = function e(t, n, r) {
        if (
          (void 0 === r && (r = !1),
          (function(e, t, n) {
            return (
              void 0 === n && (n = !1),
              (t >= e.offset && t < e.offset + e.length) ||
                (n && t === e.offset + e.length)
            );
          })(t, n, r))
        ) {
          var i = t.children;
          if (Array.isArray(i))
            for (var a = 0; a < i.length && i[a].offset <= n; a++) {
              var o = e(i[a], n, r);
              if (o) return o;
            }
          return t;
        }
      },
      le = function e(t) {
        if (!t.parent || !t.parent.children) return [];
        var n = e(t.parent);
        if ('property' === t.parent.type) {
          var r = t.parent.children[0].value;
          n.push(r);
        } else if ('array' === t.parent.type) {
          var i = t.parent.children.indexOf(t);
          -1 !== i && n.push(i);
        }
        return n;
      },
      pe = function e(t) {
        switch (t.type) {
          case 'array':
            return t.children.map(e);
          case 'object':
            for (
              var n = Object.create(null), r = 0, i = t.children;
              r < i.length;
              r++
            ) {
              var a = i[r],
                o = a.children[1];
              o && (n[a.children[0].value] = e(o));
            }
            return n;
          case 'null':
          case 'string':
          case 'number':
          case 'boolean':
            return t.value;
          default:
            return;
        }
      };
    var fe,
      he,
      de,
      me,
      ge,
      ye,
      ve,
      De,
      Ee,
      Ce,
      be,
      xe,
      Ae,
      Se,
      we,
      Fe,
      ke,
      Te,
      _e,
      Oe,
      Ne,
      Be = n(8);
    function Ie(e, t) {
      var n = e.length - t.length;
      return n > 0 ? e.lastIndexOf(t) === n : 0 === n && e === t;
    }
    function Pe(e) {
      return e
        .replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, '\\$&')
        .replace(/[\*]/g, '.*');
    }
    function Me(e, t) {
      if (e === t) return !0;
      if (null == e || null == t) return !1;
      if (typeof e != typeof t) return !1;
      if ('object' != typeof e) return !1;
      if (Array.isArray(e) !== Array.isArray(t)) return !1;
      var n, r;
      if (Array.isArray(e)) {
        if (e.length !== t.length) return !1;
        for (n = 0; n < e.length; n++) if (!Me(e[n], t[n])) return !1;
      } else {
        var i = [];
        for (r in e) i.push(r);
        i.sort();
        var a = [];
        for (r in t) a.push(r);
        if ((a.sort(), !Me(i, a))) return !1;
        for (n = 0; n < i.length; n++) if (!Me(e[i[n]], t[i[n]])) return !1;
      }
      return !0;
    }
    function Le(e) {
      return 'number' == typeof e;
    }
    function Re(e) {
      return void 0 !== e;
    }
    function je(e) {
      return 'boolean' == typeof e;
    }
    !(function(e) {
      (e.create = function(e, t) {
        return { line: e, character: t };
      }),
        (e.is = function(e) {
          var t = e;
          return (
            gt.objectLiteral(t) && gt.number(t.line) && gt.number(t.character)
          );
        });
    })(fe || (fe = {})),
      (function(e) {
        (e.create = function(e, t, n, r) {
          if (gt.number(e) && gt.number(t) && gt.number(n) && gt.number(r))
            return { start: fe.create(e, t), end: fe.create(n, r) };
          if (fe.is(e) && fe.is(t)) return { start: e, end: t };
          throw new Error(
            'Range#create called with invalid arguments[' +
              e +
              ', ' +
              t +
              ', ' +
              n +
              ', ' +
              r +
              ']',
          );
        }),
          (e.is = function(e) {
            var t = e;
            return gt.objectLiteral(t) && fe.is(t.start) && fe.is(t.end);
          });
      })(he || (he = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { uri: e, range: t };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              he.is(t.range) &&
              (gt.string(t.uri) || gt.undefined(t.uri))
            );
          });
      })(de || (de = {})),
      (function(e) {
        (e.create = function(e, t, n, r) {
          return {
            targetUri: e,
            targetRange: t,
            targetSelectionRange: n,
            originSelectionRange: r,
          };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              he.is(t.targetRange) &&
              gt.string(t.targetUri) &&
              (he.is(t.targetSelectionRange) ||
                gt.undefined(t.targetSelectionRange)) &&
              (he.is(t.originSelectionRange) ||
                gt.undefined(t.originSelectionRange))
            );
          });
      })(me || (me = {})),
      (function(e) {
        (e.create = function(e, t, n, r) {
          return { red: e, green: t, blue: n, alpha: r };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.number(t.red) &&
              gt.number(t.green) &&
              gt.number(t.blue) &&
              gt.number(t.alpha)
            );
          });
      })(ge || (ge = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { range: e, color: t };
        }),
          (e.is = function(e) {
            var t = e;
            return he.is(t.range) && ge.is(t.color);
          });
      })(ye || (ye = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          return { label: e, textEdit: t, additionalTextEdits: n };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.string(t.label) &&
              (gt.undefined(t.textEdit) || Fe.is(t)) &&
              (gt.undefined(t.additionalTextEdits) ||
                gt.typedArray(t.additionalTextEdits, Fe.is))
            );
          });
      })(ve || (ve = {})),
      (function(e) {
        (e.Comment = 'comment'), (e.Imports = 'imports'), (e.Region = 'region');
      })(De || (De = {})),
      (function(e) {
        (e.create = function(e, t, n, r, i) {
          var a = { startLine: e, endLine: t };
          return (
            gt.defined(n) && (a.startCharacter = n),
            gt.defined(r) && (a.endCharacter = r),
            gt.defined(i) && (a.kind = i),
            a
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.number(t.startLine) &&
              gt.number(t.startLine) &&
              (gt.undefined(t.startCharacter) || gt.number(t.startCharacter)) &&
              (gt.undefined(t.endCharacter) || gt.number(t.endCharacter)) &&
              (gt.undefined(t.kind) || gt.string(t.kind))
            );
          });
      })(Ee || (Ee = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { location: e, message: t };
        }),
          (e.is = function(e) {
            var t = e;
            return gt.defined(t) && de.is(t.location) && gt.string(t.message);
          });
      })(Ce || (Ce = {})),
      (function(e) {
        (e.Error = 1), (e.Warning = 2), (e.Information = 3), (e.Hint = 4);
      })(be || (be = {})),
      (function(e) {
        (e.Unnecessary = 1), (e.Deprecated = 2);
      })(xe || (xe = {})),
      (function(e) {
        e.is = function(e) {
          var t = e;
          return (
            null != t &&
            (gt.number(t.value) || gt.string(t.value)) &&
            gt.string(t.target)
          );
        };
      })(Ae || (Ae = {})),
      (function(e) {
        (e.create = function(e, t, n, r, i, a) {
          var o = { range: e, message: t };
          return (
            gt.defined(n) && (o.severity = n),
            gt.defined(r) && (o.code = r),
            gt.defined(i) && (o.source = i),
            gt.defined(a) && (o.relatedInformation = a),
            o
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              he.is(t.range) &&
              gt.string(t.message) &&
              (gt.number(t.severity) || gt.undefined(t.severity)) &&
              (gt.number(t.code) ||
                gt.string(t.code) ||
                gt.undefined(t.code)) &&
              (gt.string(t.source) || gt.undefined(t.source)) &&
              (gt.undefined(t.relatedInformation) ||
                gt.typedArray(t.relatedInformation, Ce.is))
            );
          });
      })(Se || (Se = {})),
      (function(e) {
        (e.create = function(e, t) {
          for (var n = [], r = 2; r < arguments.length; r++)
            n[r - 2] = arguments[r];
          var i = { title: e, command: t };
          return gt.defined(n) && n.length > 0 && (i.arguments = n), i;
        }),
          (e.is = function(e) {
            var t = e;
            return gt.defined(t) && gt.string(t.title) && gt.string(t.command);
          });
      })(we || (we = {})),
      (function(e) {
        (e.replace = function(e, t) {
          return { range: e, newText: t };
        }),
          (e.insert = function(e, t) {
            return { range: { start: e, end: e }, newText: t };
          }),
          (e.del = function(e) {
            return { range: e, newText: '' };
          }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.objectLiteral(t) && gt.string(t.newText) && he.is(t.range)
            );
          });
      })(Fe || (Fe = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { textDocument: e, edits: t };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) && Ve.is(t.textDocument) && Array.isArray(t.edits)
            );
          });
      })(ke || (ke = {})),
      (function(e) {
        (e.create = function(e, t) {
          var n = { kind: 'create', uri: e };
          return (
            void 0 === t ||
              (void 0 === t.overwrite && void 0 === t.ignoreIfExists) ||
              (n.options = t),
            n
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              'create' === t.kind &&
              gt.string(t.uri) &&
              (void 0 === t.options ||
                ((void 0 === t.options.overwrite ||
                  gt.boolean(t.options.overwrite)) &&
                  (void 0 === t.options.ignoreIfExists ||
                    gt.boolean(t.options.ignoreIfExists))))
            );
          });
      })(Te || (Te = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          var r = { kind: 'rename', oldUri: e, newUri: t };
          return (
            void 0 === n ||
              (void 0 === n.overwrite && void 0 === n.ignoreIfExists) ||
              (r.options = n),
            r
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              'rename' === t.kind &&
              gt.string(t.oldUri) &&
              gt.string(t.newUri) &&
              (void 0 === t.options ||
                ((void 0 === t.options.overwrite ||
                  gt.boolean(t.options.overwrite)) &&
                  (void 0 === t.options.ignoreIfExists ||
                    gt.boolean(t.options.ignoreIfExists))))
            );
          });
      })(_e || (_e = {})),
      (function(e) {
        (e.create = function(e, t) {
          var n = { kind: 'delete', uri: e };
          return (
            void 0 === t ||
              (void 0 === t.recursive && void 0 === t.ignoreIfNotExists) ||
              (n.options = t),
            n
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              'delete' === t.kind &&
              gt.string(t.uri) &&
              (void 0 === t.options ||
                ((void 0 === t.options.recursive ||
                  gt.boolean(t.options.recursive)) &&
                  (void 0 === t.options.ignoreIfNotExists ||
                    gt.boolean(t.options.ignoreIfNotExists))))
            );
          });
      })(Oe || (Oe = {})),
      (function(e) {
        e.is = function(e) {
          var t = e;
          return (
            t &&
            (void 0 !== t.changes || void 0 !== t.documentChanges) &&
            (void 0 === t.documentChanges ||
              t.documentChanges.every(function(e) {
                return gt.string(e.kind)
                  ? Te.is(e) || _e.is(e) || Oe.is(e)
                  : ke.is(e);
              }))
          );
        };
      })(Ne || (Ne = {}));
    var Ue,
      Ve,
      We,
      $e,
      qe,
      Ye,
      Je,
      Ke,
      ze,
      He,
      Xe,
      Ge,
      Qe,
      Ze,
      et,
      tt,
      nt,
      rt,
      it,
      at,
      ot,
      st,
      ut,
      ct,
      lt,
      pt,
      ft,
      ht,
      dt = (function() {
        function e(e) {
          this.edits = e;
        }
        return (
          (e.prototype.insert = function(e, t) {
            this.edits.push(Fe.insert(e, t));
          }),
          (e.prototype.replace = function(e, t) {
            this.edits.push(Fe.replace(e, t));
          }),
          (e.prototype.delete = function(e) {
            this.edits.push(Fe.del(e));
          }),
          (e.prototype.add = function(e) {
            this.edits.push(e);
          }),
          (e.prototype.all = function() {
            return this.edits;
          }),
          (e.prototype.clear = function() {
            this.edits.splice(0, this.edits.length);
          }),
          e
        );
      })();
    !(function() {
      function e(e) {
        var t = this;
        (this._textEditChanges = Object.create(null)),
          e &&
            ((this._workspaceEdit = e),
            e.documentChanges
              ? e.documentChanges.forEach(function(e) {
                  if (ke.is(e)) {
                    var n = new dt(e.edits);
                    t._textEditChanges[e.textDocument.uri] = n;
                  }
                })
              : e.changes &&
                Object.keys(e.changes).forEach(function(n) {
                  var r = new dt(e.changes[n]);
                  t._textEditChanges[n] = r;
                }));
      }
      Object.defineProperty(e.prototype, 'edit', {
        get: function() {
          return void 0 === this._workspaceEdit
            ? { documentChanges: [] }
            : this._workspaceEdit;
        },
        enumerable: !0,
        configurable: !0,
      }),
        (e.prototype.getTextEditChange = function(e) {
          if (Ve.is(e)) {
            if (
              (this._workspaceEdit ||
                (this._workspaceEdit = { documentChanges: [] }),
              !this._workspaceEdit.documentChanges)
            )
              throw new Error(
                'Workspace edit is not configured for document changes.',
              );
            var t = e;
            if (!(r = this._textEditChanges[t.uri])) {
              var n = { textDocument: t, edits: (i = []) };
              this._workspaceEdit.documentChanges.push(n),
                (r = new dt(i)),
                (this._textEditChanges[t.uri] = r);
            }
            return r;
          }
          if (
            (this._workspaceEdit ||
              (this._workspaceEdit = { changes: Object.create(null) }),
            !this._workspaceEdit.changes)
          )
            throw new Error(
              'Workspace edit is not configured for normal text edit changes.',
            );
          var r;
          if (!(r = this._textEditChanges[e])) {
            var i = [];
            (this._workspaceEdit.changes[e] = i),
              (r = new dt(i)),
              (this._textEditChanges[e] = r);
          }
          return r;
        }),
        (e.prototype.createFile = function(e, t) {
          this.checkDocumentChanges(),
            this._workspaceEdit.documentChanges.push(Te.create(e, t));
        }),
        (e.prototype.renameFile = function(e, t, n) {
          this.checkDocumentChanges(),
            this._workspaceEdit.documentChanges.push(_e.create(e, t, n));
        }),
        (e.prototype.deleteFile = function(e, t) {
          this.checkDocumentChanges(),
            this._workspaceEdit.documentChanges.push(Oe.create(e, t));
        }),
        (e.prototype.checkDocumentChanges = function() {
          if (!this._workspaceEdit || !this._workspaceEdit.documentChanges)
            throw new Error(
              'Workspace edit is not configured for document changes.',
            );
        });
    })();
    !(function(e) {
      (e.create = function(e) {
        return { uri: e };
      }),
        (e.is = function(e) {
          var t = e;
          return gt.defined(t) && gt.string(t.uri);
        });
    })(Ue || (Ue = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { uri: e, version: t };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              gt.string(t.uri) &&
              (null === t.version || gt.number(t.version))
            );
          });
      })(Ve || (Ve = {})),
      (function(e) {
        (e.create = function(e, t, n, r) {
          return { uri: e, languageId: t, version: n, text: r };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              gt.string(t.uri) &&
              gt.string(t.languageId) &&
              gt.number(t.version) &&
              gt.string(t.text)
            );
          });
      })(We || (We = {})),
      (function(e) {
        (e.PlainText = 'plaintext'), (e.Markdown = 'markdown');
      })($e || ($e = {})),
      (function(e) {
        e.is = function(t) {
          var n = t;
          return n === e.PlainText || n === e.Markdown;
        };
      })($e || ($e = {})),
      (function(e) {
        e.is = function(e) {
          var t = e;
          return gt.objectLiteral(e) && $e.is(t.kind) && gt.string(t.value);
        };
      })(qe || (qe = {})),
      (function(e) {
        (e.Text = 1),
          (e.Method = 2),
          (e.Function = 3),
          (e.Constructor = 4),
          (e.Field = 5),
          (e.Variable = 6),
          (e.Class = 7),
          (e.Interface = 8),
          (e.Module = 9),
          (e.Property = 10),
          (e.Unit = 11),
          (e.Value = 12),
          (e.Enum = 13),
          (e.Keyword = 14),
          (e.Snippet = 15),
          (e.Color = 16),
          (e.File = 17),
          (e.Reference = 18),
          (e.Folder = 19),
          (e.EnumMember = 20),
          (e.Constant = 21),
          (e.Struct = 22),
          (e.Event = 23),
          (e.Operator = 24),
          (e.TypeParameter = 25);
      })(Ye || (Ye = {})),
      (function(e) {
        (e.PlainText = 1), (e.Snippet = 2);
      })(Je || (Je = {})),
      (function(e) {
        e.Deprecated = 1;
      })(Ke || (Ke = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          return { newText: e, insert: t, replace: n };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t && gt.string(t.newText) && he.is(t.insert) && he.is(t.replace)
            );
          });
      })(ze || (ze = {})),
      (function(e) {
        e.create = function(e) {
          return { label: e };
        };
      })(He || (He = {})),
      (function(e) {
        e.create = function(e, t) {
          return { items: e || [], isIncomplete: !!t };
        };
      })(Xe || (Xe = {})),
      (function(e) {
        (e.fromPlainText = function(e) {
          return e.replace(/[\\`*_{}[\]()#+\-.!]/g, '\\$&');
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.string(t) ||
              (gt.objectLiteral(t) &&
                gt.string(t.language) &&
                gt.string(t.value))
            );
          });
      })(Ge || (Ge = {})),
      (function(e) {
        e.is = function(e) {
          var t = e;
          return (
            !!t &&
            gt.objectLiteral(t) &&
            (qe.is(t.contents) ||
              Ge.is(t.contents) ||
              gt.typedArray(t.contents, Ge.is)) &&
            (void 0 === e.range || he.is(e.range))
          );
        };
      })(Qe || (Qe = {})),
      (function(e) {
        e.create = function(e, t) {
          return t ? { label: e, documentation: t } : { label: e };
        };
      })(Ze || (Ze = {})),
      (function(e) {
        e.create = function(e, t) {
          for (var n = [], r = 2; r < arguments.length; r++)
            n[r - 2] = arguments[r];
          var i = { label: e };
          return (
            gt.defined(t) && (i.documentation = t),
            gt.defined(n) ? (i.parameters = n) : (i.parameters = []),
            i
          );
        };
      })(et || (et = {})),
      (function(e) {
        (e.Text = 1), (e.Read = 2), (e.Write = 3);
      })(tt || (tt = {})),
      (function(e) {
        e.create = function(e, t) {
          var n = { range: e };
          return gt.number(t) && (n.kind = t), n;
        };
      })(nt || (nt = {})),
      (function(e) {
        (e.File = 1),
          (e.Module = 2),
          (e.Namespace = 3),
          (e.Package = 4),
          (e.Class = 5),
          (e.Method = 6),
          (e.Property = 7),
          (e.Field = 8),
          (e.Constructor = 9),
          (e.Enum = 10),
          (e.Interface = 11),
          (e.Function = 12),
          (e.Variable = 13),
          (e.Constant = 14),
          (e.String = 15),
          (e.Number = 16),
          (e.Boolean = 17),
          (e.Array = 18),
          (e.Object = 19),
          (e.Key = 20),
          (e.Null = 21),
          (e.EnumMember = 22),
          (e.Struct = 23),
          (e.Event = 24),
          (e.Operator = 25),
          (e.TypeParameter = 26);
      })(rt || (rt = {})),
      (function(e) {
        e.Deprecated = 1;
      })(it || (it = {})),
      (function(e) {
        e.create = function(e, t, n, r, i) {
          var a = { name: e, kind: t, location: { uri: r, range: n } };
          return i && (a.containerName = i), a;
        };
      })(at || (at = {})),
      (function(e) {
        (e.create = function(e, t, n, r, i, a) {
          var o = { name: e, detail: t, kind: n, range: r, selectionRange: i };
          return void 0 !== a && (o.children = a), o;
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              gt.string(t.name) &&
              gt.number(t.kind) &&
              he.is(t.range) &&
              he.is(t.selectionRange) &&
              (void 0 === t.detail || gt.string(t.detail)) &&
              (void 0 === t.deprecated || gt.boolean(t.deprecated)) &&
              (void 0 === t.children || Array.isArray(t.children)) &&
              (void 0 === t.tags || Array.isArray(t.tags))
            );
          });
      })(ot || (ot = {})),
      (function(e) {
        (e.Empty = ''),
          (e.QuickFix = 'quickfix'),
          (e.Refactor = 'refactor'),
          (e.RefactorExtract = 'refactor.extract'),
          (e.RefactorInline = 'refactor.inline'),
          (e.RefactorRewrite = 'refactor.rewrite'),
          (e.Source = 'source'),
          (e.SourceOrganizeImports = 'source.organizeImports'),
          (e.SourceFixAll = 'source.fixAll');
      })(st || (st = {})),
      (function(e) {
        (e.create = function(e, t) {
          var n = { diagnostics: e };
          return null != t && (n.only = t), n;
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              gt.typedArray(t.diagnostics, Se.is) &&
              (void 0 === t.only || gt.typedArray(t.only, gt.string))
            );
          });
      })(ut || (ut = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          var r = { title: e };
          return (
            we.is(t) ? (r.command = t) : (r.edit = t),
            void 0 !== n && (r.kind = n),
            r
          );
        }),
          (e.is = function(e) {
            var t = e;
            return (
              t &&
              gt.string(t.title) &&
              (void 0 === t.diagnostics ||
                gt.typedArray(t.diagnostics, Se.is)) &&
              (void 0 === t.kind || gt.string(t.kind)) &&
              (void 0 !== t.edit || void 0 !== t.command) &&
              (void 0 === t.command || we.is(t.command)) &&
              (void 0 === t.isPreferred || gt.boolean(t.isPreferred)) &&
              (void 0 === t.edit || Ne.is(t.edit))
            );
          });
      })(ct || (ct = {})),
      (function(e) {
        (e.create = function(e, t) {
          var n = { range: e };
          return gt.defined(t) && (n.data = t), n;
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              he.is(t.range) &&
              (gt.undefined(t.command) || we.is(t.command))
            );
          });
      })(lt || (lt = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { tabSize: e, insertSpaces: t };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              gt.number(t.tabSize) &&
              gt.boolean(t.insertSpaces)
            );
          });
      })(pt || (pt = {})),
      (function(e) {
        (e.create = function(e, t, n) {
          return { range: e, target: t, data: n };
        }),
          (e.is = function(e) {
            var t = e;
            return (
              gt.defined(t) &&
              he.is(t.range) &&
              (gt.undefined(t.target) || gt.string(t.target))
            );
          });
      })(ft || (ft = {})),
      (function(e) {
        (e.create = function(e, t) {
          return { range: e, parent: t };
        }),
          (e.is = function(t) {
            var n = t;
            return (
              void 0 !== n &&
              he.is(n.range) &&
              (void 0 === n.parent || e.is(n.parent))
            );
          });
      })(ht || (ht = {}));
    var mt;
    !(function(e) {
      (e.create = function(e, t, n, r) {
        return new yt(e, t, n, r);
      }),
        (e.is = function(e) {
          var t = e;
          return !!(
            gt.defined(t) &&
            gt.string(t.uri) &&
            (gt.undefined(t.languageId) || gt.string(t.languageId)) &&
            gt.number(t.lineCount) &&
            gt.func(t.getText) &&
            gt.func(t.positionAt) &&
            gt.func(t.offsetAt)
          );
        }),
        (e.applyEdits = function(e, t) {
          for (
            var n = e.getText(),
              r = (function e(t, n) {
                if (t.length <= 1) return t;
                var r = (t.length / 2) | 0,
                  i = t.slice(0, r),
                  a = t.slice(r);
                e(i, n), e(a, n);
                var o = 0,
                  s = 0,
                  u = 0;
                for (; o < i.length && s < a.length; ) {
                  var c = n(i[o], a[s]);
                  t[u++] = c <= 0 ? i[o++] : a[s++];
                }
                for (; o < i.length; ) t[u++] = i[o++];
                for (; s < a.length; ) t[u++] = a[s++];
                return t;
              })(t, function(e, t) {
                var n = e.range.start.line - t.range.start.line;
                return 0 === n
                  ? e.range.start.character - t.range.start.character
                  : n;
              }),
              i = n.length,
              a = r.length - 1;
            a >= 0;
            a--
          ) {
            var o = r[a],
              s = e.offsetAt(o.range.start),
              u = e.offsetAt(o.range.end);
            if (!(u <= i)) throw new Error('Overlapping edit');
            (n = n.substring(0, s) + o.newText + n.substring(u, n.length)),
              (i = s);
          }
          return n;
        });
    })(mt || (mt = {}));
    var gt,
      yt = (function() {
        function e(e, t, n, r) {
          (this._uri = e),
            (this._languageId = t),
            (this._version = n),
            (this._content = r),
            (this._lineOffsets = void 0);
        }
        return (
          Object.defineProperty(e.prototype, 'uri', {
            get: function() {
              return this._uri;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, 'languageId', {
            get: function() {
              return this._languageId;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, 'version', {
            get: function() {
              return this._version;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.prototype.getText = function(e) {
            if (e) {
              var t = this.offsetAt(e.start),
                n = this.offsetAt(e.end);
              return this._content.substring(t, n);
            }
            return this._content;
          }),
          (e.prototype.update = function(e, t) {
            (this._content = e.text),
              (this._version = t),
              (this._lineOffsets = void 0);
          }),
          (e.prototype.getLineOffsets = function() {
            if (void 0 === this._lineOffsets) {
              for (
                var e = [], t = this._content, n = !0, r = 0;
                r < t.length;
                r++
              ) {
                n && (e.push(r), (n = !1));
                var i = t.charAt(r);
                (n = '\r' === i || '\n' === i),
                  '\r' === i &&
                    r + 1 < t.length &&
                    '\n' === t.charAt(r + 1) &&
                    r++;
              }
              n && t.length > 0 && e.push(t.length), (this._lineOffsets = e);
            }
            return this._lineOffsets;
          }),
          (e.prototype.positionAt = function(e) {
            e = Math.max(Math.min(e, this._content.length), 0);
            var t = this.getLineOffsets(),
              n = 0,
              r = t.length;
            if (0 === r) return fe.create(0, e);
            for (; n < r; ) {
              var i = Math.floor((n + r) / 2);
              t[i] > e ? (r = i) : (n = i + 1);
            }
            var a = n - 1;
            return fe.create(a, e - t[a]);
          }),
          (e.prototype.offsetAt = function(e) {
            var t = this.getLineOffsets();
            if (e.line >= t.length) return this._content.length;
            if (e.line < 0) return 0;
            var n = t[e.line],
              r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
            return Math.max(Math.min(n + e.character, r), n);
          }),
          Object.defineProperty(e.prototype, 'lineCount', {
            get: function() {
              return this.getLineOffsets().length;
            },
            enumerable: !0,
            configurable: !0,
          }),
          e
        );
      })();
    !(function(e) {
      var t = Object.prototype.toString;
      (e.defined = function(e) {
        return void 0 !== e;
      }),
        (e.undefined = function(e) {
          return void 0 === e;
        }),
        (e.boolean = function(e) {
          return !0 === e || !1 === e;
        }),
        (e.string = function(e) {
          return '[object String]' === t.call(e);
        }),
        (e.number = function(e) {
          return '[object Number]' === t.call(e);
        }),
        (e.func = function(e) {
          return '[object Function]' === t.call(e);
        }),
        (e.objectLiteral = function(e) {
          return null !== e && 'object' == typeof e;
        }),
        (e.typedArray = function(e, t) {
          return Array.isArray(e) && e.every(t);
        });
    })(gt || (gt = {}));
    var vt,
      Dt,
      Et,
      Ct = (function() {
        function e(e, t, n, r) {
          (this._uri = e),
            (this._languageId = t),
            (this._version = n),
            (this._content = r),
            (this._lineOffsets = void 0);
        }
        return (
          Object.defineProperty(e.prototype, 'uri', {
            get: function() {
              return this._uri;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, 'languageId', {
            get: function() {
              return this._languageId;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, 'version', {
            get: function() {
              return this._version;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.prototype.getText = function(e) {
            if (e) {
              var t = this.offsetAt(e.start),
                n = this.offsetAt(e.end);
              return this._content.substring(t, n);
            }
            return this._content;
          }),
          (e.prototype.update = function(t, n) {
            for (var r = 0, i = t; r < i.length; r++) {
              var a = i[r];
              if (e.isIncremental(a)) {
                var o = xt(a.range),
                  s = this.offsetAt(o.start),
                  u = this.offsetAt(o.end);
                this._content =
                  this._content.substring(0, s) +
                  a.text +
                  this._content.substring(u, this._content.length);
                var c = Math.max(o.start.line, 0),
                  l = Math.max(o.end.line, 0),
                  p = this._lineOffsets,
                  f = bt(a.text, !1, s);
                if (l - c === f.length)
                  for (var h = 0, d = f.length; h < d; h++) p[h + c + 1] = f[h];
                else
                  f.length < 1e4
                    ? p.splice.apply(p, [c + 1, l - c].concat(f))
                    : (this._lineOffsets = p = p
                        .slice(0, c + 1)
                        .concat(f, p.slice(l + 1)));
                var m = a.text.length - (u - s);
                if (0 !== m)
                  for (h = c + 1 + f.length, d = p.length; h < d; h++)
                    p[h] = p[h] + m;
              } else {
                if (!e.isFull(a))
                  throw new Error('Unknown change event received');
                (this._content = a.text), (this._lineOffsets = void 0);
              }
            }
            this._version = n;
          }),
          (e.prototype.getLineOffsets = function() {
            return (
              void 0 === this._lineOffsets &&
                (this._lineOffsets = bt(this._content, !0)),
              this._lineOffsets
            );
          }),
          (e.prototype.positionAt = function(e) {
            e = Math.max(Math.min(e, this._content.length), 0);
            var t = this.getLineOffsets(),
              n = 0,
              r = t.length;
            if (0 === r) return { line: 0, character: e };
            for (; n < r; ) {
              var i = Math.floor((n + r) / 2);
              t[i] > e ? (r = i) : (n = i + 1);
            }
            var a = n - 1;
            return { line: a, character: e - t[a] };
          }),
          (e.prototype.offsetAt = function(e) {
            var t = this.getLineOffsets();
            if (e.line >= t.length) return this._content.length;
            if (e.line < 0) return 0;
            var n = t[e.line],
              r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
            return Math.max(Math.min(n + e.character, r), n);
          }),
          Object.defineProperty(e.prototype, 'lineCount', {
            get: function() {
              return this.getLineOffsets().length;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.isIncremental = function(e) {
            var t = e;
            return (
              null != t &&
              'string' == typeof t.text &&
              void 0 !== t.range &&
              (void 0 === t.rangeLength || 'number' == typeof t.rangeLength)
            );
          }),
          (e.isFull = function(e) {
            var t = e;
            return (
              null != t &&
              'string' == typeof t.text &&
              void 0 === t.range &&
              void 0 === t.rangeLength
            );
          }),
          e
        );
      })();
    function bt(e, t, n) {
      void 0 === n && (n = 0);
      for (var r = t ? [n] : [], i = 0; i < e.length; i++) {
        var a = e.charCodeAt(i);
        (13 !== a && 10 !== a) ||
          (13 === a && i + 1 < e.length && 10 === e.charCodeAt(i + 1) && i++,
          r.push(n + i + 1));
      }
      return r;
    }
    function xt(e) {
      var t = e.start,
        n = e.end;
      return t.line > n.line || (t.line === n.line && t.character > n.character)
        ? { start: n, end: t }
        : e;
    }
    function At(e) {
      var t = xt(e.range);
      return t !== e.range ? { newText: e.newText, range: t } : e;
    }
    function St(e, t, ...n) {
      return (function(e, t) {
        let n;
        return (
          (n =
            0 === t.length
              ? e
              : e.replace(/\{(\d+)\}/g, (e, n) => {
                  const r = n[0];
                  return void 0 !== t[r] ? t[r] : e;
                })),
          n
        );
      })(t, n);
    }
    function wt(e) {
      return St;
    }
    !(function(e) {
      (e.create = function(e, t, n, r) {
        return new Ct(e, t, n, r);
      }),
        (e.update = function(e, t, n) {
          if (e instanceof Ct) return e.update(t, n), e;
          throw new Error(
            'TextDocument.update: document must be created by TextDocument.create',
          );
        }),
        (e.applyEdits = function(e, t) {
          for (
            var n = e.getText(),
              r = 0,
              i = [],
              a = 0,
              o = (function e(t, n) {
                if (t.length <= 1) return t;
                var r = (t.length / 2) | 0,
                  i = t.slice(0, r),
                  a = t.slice(r);
                e(i, n), e(a, n);
                var o = 0,
                  s = 0,
                  u = 0;
                for (; o < i.length && s < a.length; ) {
                  var c = n(i[o], a[s]);
                  t[u++] = c <= 0 ? i[o++] : a[s++];
                }
                for (; o < i.length; ) t[u++] = i[o++];
                for (; s < a.length; ) t[u++] = a[s++];
                return t;
              })(t.map(At), function(e, t) {
                var n = e.range.start.line - t.range.start.line;
                return 0 === n
                  ? e.range.start.character - t.range.start.character
                  : n;
              });
            a < o.length;
            a++
          ) {
            var s = o[a],
              u = e.offsetAt(s.range.start);
            if (u < r) throw new Error('Overlapping edit');
            u > r && i.push(n.substring(r, u)),
              s.newText.length && i.push(s.newText),
              (r = e.offsetAt(s.range.end));
          }
          return i.push(n.substr(r)), i.join('');
        });
    })(vt || (vt = {})),
      (function(e) {
        (e[(e.Undefined = 0)] = 'Undefined'),
          (e[(e.EnumValueMismatch = 1)] = 'EnumValueMismatch'),
          (e[(e.UnexpectedEndOfComment = 257)] = 'UnexpectedEndOfComment'),
          (e[(e.UnexpectedEndOfString = 258)] = 'UnexpectedEndOfString'),
          (e[(e.UnexpectedEndOfNumber = 259)] = 'UnexpectedEndOfNumber'),
          (e[(e.InvalidUnicode = 260)] = 'InvalidUnicode'),
          (e[(e.InvalidEscapeCharacter = 261)] = 'InvalidEscapeCharacter'),
          (e[(e.InvalidCharacter = 262)] = 'InvalidCharacter'),
          (e[(e.PropertyExpected = 513)] = 'PropertyExpected'),
          (e[(e.CommaExpected = 514)] = 'CommaExpected'),
          (e[(e.ColonExpected = 515)] = 'ColonExpected'),
          (e[(e.ValueExpected = 516)] = 'ValueExpected'),
          (e[(e.CommaOrCloseBacketExpected = 517)] =
            'CommaOrCloseBacketExpected'),
          (e[(e.CommaOrCloseBraceExpected = 518)] =
            'CommaOrCloseBraceExpected'),
          (e[(e.TrailingComma = 519)] = 'TrailingComma'),
          (e[(e.DuplicateKey = 520)] = 'DuplicateKey'),
          (e[(e.CommentNotPermitted = 521)] = 'CommentNotPermitted'),
          (e[(e.SchemaResolveError = 768)] = 'SchemaResolveError');
      })(Dt || (Dt = {})),
      ((Et || (Et = {})).LATEST = {
        textDocument: {
          completion: {
            completionItem: {
              documentationFormat: [$e.Markdown, $e.PlainText],
              commitCharactersSupport: !0,
            },
          },
        },
      });
    var Ft,
      kt,
      Tt =
        ((Ft = function(e, t) {
          return (Ft =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(e, t) {
                e.__proto__ = t;
              }) ||
            function(e, t) {
              for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function(e, t) {
          function n() {
            this.constructor = e;
          }
          Ft(e, t),
            (e.prototype =
              null === t
                ? Object.create(t)
                : ((n.prototype = t.prototype), new n()));
        }),
      _t = wt(),
      Ot = {
        'color-hex': {
          errorMessage: _t(
            'colorHexFormatWarning',
            'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.',
          ),
          pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/,
        },
        'date-time': {
          errorMessage: _t(
            'dateTimeFormatWarning',
            'String is not a RFC3339 date-time.',
          ),
          pattern: /^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i,
        },
        date: {
          errorMessage: _t(
            'dateFormatWarning',
            'String is not a RFC3339 date.',
          ),
          pattern: /^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i,
        },
        time: {
          errorMessage: _t(
            'timeFormatWarning',
            'String is not a RFC3339 time.',
          ),
          pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i,
        },
        email: {
          errorMessage: _t(
            'emailFormatWarning',
            'String is not an e-mail address.',
          ),
          pattern: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
        },
      },
      Nt = (function() {
        function e(e, t, n) {
          void 0 === n && (n = 0),
            (this.offset = t),
            (this.length = n),
            (this.parent = e);
        }
        return (
          Object.defineProperty(e.prototype, 'children', {
            get: function() {
              return [];
            },
            enumerable: !1,
            configurable: !0,
          }),
          (e.prototype.toString = function() {
            return (
              'type: ' +
              this.type +
              ' (' +
              this.offset +
              '/' +
              this.length +
              ')' +
              (this.parent ? ' parent: {' + this.parent.toString() + '}' : '')
            );
          }),
          e
        );
      })();
    (function(e) {
      function t(t, n) {
        var r = e.call(this, t, n) || this;
        return (r.type = 'null'), (r.value = null), r;
      }
      Tt(t, e);
    })(Nt),
      (function(e) {
        function t(t, n, r) {
          var i = e.call(this, t, r) || this;
          return (i.type = 'boolean'), (i.value = n), i;
        }
        Tt(t, e);
      })(Nt),
      (function(e) {
        function t(t, n) {
          var r = e.call(this, t, n) || this;
          return (r.type = 'array'), (r.items = []), r;
        }
        Tt(t, e),
          Object.defineProperty(t.prototype, 'children', {
            get: function() {
              return this.items;
            },
            enumerable: !1,
            configurable: !0,
          });
      })(Nt),
      (function(e) {
        function t(t, n) {
          var r = e.call(this, t, n) || this;
          return (
            (r.type = 'number'), (r.isInteger = !0), (r.value = Number.NaN), r
          );
        }
        Tt(t, e);
      })(Nt),
      (function(e) {
        function t(t, n, r) {
          var i = e.call(this, t, n, r) || this;
          return (i.type = 'string'), (i.value = ''), i;
        }
        Tt(t, e);
      })(Nt),
      (function(e) {
        function t(t, n, r) {
          var i = e.call(this, t, n) || this;
          return (
            (i.type = 'property'), (i.colonOffset = -1), (i.keyNode = r), i
          );
        }
        Tt(t, e),
          Object.defineProperty(t.prototype, 'children', {
            get: function() {
              return this.valueNode
                ? [this.keyNode, this.valueNode]
                : [this.keyNode];
            },
            enumerable: !1,
            configurable: !0,
          });
      })(Nt),
      (function(e) {
        function t(t, n) {
          var r = e.call(this, t, n) || this;
          return (r.type = 'object'), (r.properties = []), r;
        }
        Tt(t, e),
          Object.defineProperty(t.prototype, 'children', {
            get: function() {
              return this.properties;
            },
            enumerable: !1,
            configurable: !0,
          });
      })(Nt);
    function Bt(e) {
      return je(e) ? (e ? {} : { not: {} }) : e;
    }
    !(function(e) {
      (e[(e.Key = 0)] = 'Key'), (e[(e.Enum = 1)] = 'Enum');
    })(kt || (kt = {}));
    var It = (function() {
        function e(e, t) {
          void 0 === e && (e = -1),
            (this.focusOffset = e),
            (this.exclude = t),
            (this.schemas = []);
        }
        return (
          (e.prototype.add = function(e) {
            this.schemas.push(e);
          }),
          (e.prototype.merge = function(e) {
            Array.prototype.push.apply(this.schemas, e.schemas);
          }),
          (e.prototype.include = function(e) {
            return (
              (-1 === this.focusOffset || jt(e, this.focusOffset)) &&
              e !== this.exclude
            );
          }),
          (e.prototype.newSub = function() {
            return new e(-1, this.exclude);
          }),
          e
        );
      })(),
      Pt = (function() {
        function e() {}
        return (
          Object.defineProperty(e.prototype, 'schemas', {
            get: function() {
              return [];
            },
            enumerable: !1,
            configurable: !0,
          }),
          (e.prototype.add = function(e) {}),
          (e.prototype.merge = function(e) {}),
          (e.prototype.include = function(e) {
            return !0;
          }),
          (e.prototype.newSub = function() {
            return this;
          }),
          (e.instance = new e()),
          e
        );
      })(),
      Mt = (function() {
        function e() {
          (this.problems = []),
            (this.propertiesMatches = 0),
            (this.propertiesValueMatches = 0),
            (this.primaryValueMatches = 0),
            (this.enumValueMatch = !1),
            (this.enumValues = void 0);
        }
        return (
          (e.prototype.hasProblems = function() {
            return !!this.problems.length;
          }),
          (e.prototype.mergeAll = function(e) {
            for (var t = 0, n = e; t < n.length; t++) {
              var r = n[t];
              this.merge(r);
            }
          }),
          (e.prototype.merge = function(e) {
            this.problems = this.problems.concat(e.problems);
          }),
          (e.prototype.mergeEnumValues = function(e) {
            if (
              !this.enumValueMatch &&
              !e.enumValueMatch &&
              this.enumValues &&
              e.enumValues
            ) {
              this.enumValues = this.enumValues.concat(e.enumValues);
              for (var t = 0, n = this.problems; t < n.length; t++) {
                var r = n[t];
                r.code === Dt.EnumValueMismatch &&
                  (r.message = _t(
                    'enumWarning',
                    'Value is not accepted. Valid values: {0}.',
                    this.enumValues
                      .map(function(e) {
                        return JSON.stringify(e);
                      })
                      .join(', '),
                  ));
              }
            }
          }),
          (e.prototype.mergePropertyMatch = function(e) {
            this.merge(e),
              this.propertiesMatches++,
              (e.enumValueMatch || (!e.hasProblems() && e.propertiesMatches)) &&
                this.propertiesValueMatches++,
              e.enumValueMatch &&
                e.enumValues &&
                1 === e.enumValues.length &&
                this.primaryValueMatches++;
          }),
          (e.prototype.compare = function(e) {
            var t = this.hasProblems();
            return t !== e.hasProblems()
              ? t
                ? -1
                : 1
              : this.enumValueMatch !== e.enumValueMatch
              ? e.enumValueMatch
                ? -1
                : 1
              : this.primaryValueMatches !== e.primaryValueMatches
              ? this.primaryValueMatches - e.primaryValueMatches
              : this.propertiesValueMatches !== e.propertiesValueMatches
              ? this.propertiesValueMatches - e.propertiesValueMatches
              : this.propertiesMatches - e.propertiesMatches;
          }),
          e
        );
      })();
    function Lt(e) {
      return pe(e);
    }
    function Rt(e) {
      return le(e);
    }
    function jt(e, t, n) {
      return (
        void 0 === n && (n = !1),
        (t >= e.offset && t < e.offset + e.length) ||
          (n && t === e.offset + e.length)
      );
    }
    !(function() {
      function e(e, t, n) {
        void 0 === t && (t = []),
          void 0 === n && (n = []),
          (this.root = e),
          (this.syntaxErrors = t),
          (this.comments = n);
      }
      (e.prototype.getNodeFromOffset = function(e, t) {
        if ((void 0 === t && (t = !1), this.root)) return ce(this.root, e, t);
      }),
        (e.prototype.visit = function(e) {
          if (this.root) {
            var t = function(n) {
              var r = e(n),
                i = n.children;
              if (Array.isArray(i))
                for (var a = 0; a < i.length && r; a++) r = t(i[a]);
              return r;
            };
            t(this.root);
          }
        }),
        (e.prototype.validate = function(e, t) {
          if (this.root && t) {
            var n = new Mt();
            return (
              Ut(this.root, t, n, Pt.instance),
              n.problems.map(function(t) {
                var n = he.create(
                  e.positionAt(t.location.offset),
                  e.positionAt(t.location.offset + t.location.length),
                );
                return Se.create(n, t.message, t.severity, t.code);
              })
            );
          }
        }),
        (e.prototype.getMatchingSchemas = function(e, t, n) {
          void 0 === t && (t = -1);
          var r = new It(t, n);
          return this.root && e && Ut(this.root, e, new Mt(), r), r.schemas;
        });
    })();
    function Ut(e, t, n, r) {
      if (e && r.include(e)) {
        var i = e;
        switch (i.type) {
          case 'object':
            !(function(e, t, n, r) {
              for (
                var i = Object.create(null), a = [], o = 0, s = e.properties;
                o < s.length;
                o++
              ) {
                var u = (v = s[o]).keyNode.value;
                (i[u] = v.valueNode), a.push(u);
              }
              if (Array.isArray(t.required))
                for (var c = 0, l = t.required; c < l.length; c++) {
                  var p = l[c];
                  if (!i[p]) {
                    var f =
                        e.parent &&
                        'property' === e.parent.type &&
                        e.parent.keyNode,
                      h = f
                        ? { offset: f.offset, length: f.length }
                        : { offset: e.offset, length: 1 };
                    n.problems.push({
                      location: h,
                      severity: be.Warning,
                      message: _t(
                        'MissingRequiredPropWarning',
                        'Missing property "{0}".',
                        p,
                      ),
                    });
                  }
                }
              var d = function(e) {
                for (var t = a.indexOf(e); t >= 0; )
                  a.splice(t, 1), (t = a.indexOf(e));
              };
              if (t.properties)
                for (
                  var m = 0, g = Object.keys(t.properties);
                  m < g.length;
                  m++
                ) {
                  p = g[m];
                  d(p);
                  var y = t.properties[p];
                  if ((_ = i[p]))
                    if (je(y))
                      if (y) n.propertiesMatches++, n.propertiesValueMatches++;
                      else {
                        var v = _.parent;
                        n.problems.push({
                          location: {
                            offset: v.keyNode.offset,
                            length: v.keyNode.length,
                          },
                          severity: be.Warning,
                          message:
                            t.errorMessage ||
                            _t(
                              'DisallowedExtraPropWarning',
                              'Property {0} is not allowed.',
                              p,
                            ),
                        });
                      }
                    else {
                      var D = new Mt();
                      Ut(_, y, D, r), n.mergePropertyMatch(D);
                    }
                }
              if (t.patternProperties)
                for (
                  var E = 0, C = Object.keys(t.patternProperties);
                  E < C.length;
                  E++
                )
                  for (
                    var b = C[E], x = new RegExp(b), A = 0, S = a.slice(0);
                    A < S.length;
                    A++
                  ) {
                    p = S[A];
                    if (x.test(p))
                      if ((d(p), (_ = i[p])))
                        if (je((y = t.patternProperties[b])))
                          if (y)
                            n.propertiesMatches++, n.propertiesValueMatches++;
                          else {
                            v = _.parent;
                            n.problems.push({
                              location: {
                                offset: v.keyNode.offset,
                                length: v.keyNode.length,
                              },
                              severity: be.Warning,
                              message:
                                t.errorMessage ||
                                _t(
                                  'DisallowedExtraPropWarning',
                                  'Property {0} is not allowed.',
                                  p,
                                ),
                            });
                          }
                        else {
                          D = new Mt();
                          Ut(_, y, D, r), n.mergePropertyMatch(D);
                        }
                  }
              if ('object' == typeof t.additionalProperties)
                for (var w = 0, F = a; w < F.length; w++) {
                  p = F[w];
                  if ((_ = i[p])) {
                    D = new Mt();
                    Ut(_, t.additionalProperties, D, r),
                      n.mergePropertyMatch(D);
                  }
                }
              else if (!1 === t.additionalProperties && a.length > 0)
                for (var k = 0, T = a; k < T.length; k++) {
                  var _;
                  p = T[k];
                  if ((_ = i[p])) {
                    v = _.parent;
                    n.problems.push({
                      location: {
                        offset: v.keyNode.offset,
                        length: v.keyNode.length,
                      },
                      severity: be.Warning,
                      message:
                        t.errorMessage ||
                        _t(
                          'DisallowedExtraPropWarning',
                          'Property {0} is not allowed.',
                          p,
                        ),
                    });
                  }
                }
              Le(t.maxProperties) &&
                e.properties.length > t.maxProperties &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'MaxPropWarning',
                    'Object has more properties than limit of {0}.',
                    t.maxProperties,
                  ),
                });
              Le(t.minProperties) &&
                e.properties.length < t.minProperties &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'MinPropWarning',
                    'Object has fewer properties than the required number of {0}',
                    t.minProperties,
                  ),
                });
              if (t.dependencies)
                for (
                  var O = 0, N = Object.keys(t.dependencies);
                  O < N.length;
                  O++
                ) {
                  u = N[O];
                  if (i[u]) {
                    var B = t.dependencies[u];
                    if (Array.isArray(B))
                      for (var I = 0, P = B; I < P.length; I++) {
                        var M = P[I];
                        i[M]
                          ? n.propertiesValueMatches++
                          : n.problems.push({
                              location: { offset: e.offset, length: e.length },
                              severity: be.Warning,
                              message: _t(
                                'RequiredDependentPropWarning',
                                'Object is missing property {0} required by property {1}.',
                                M,
                                u,
                              ),
                            });
                      }
                    else if ((y = Bt(B))) {
                      D = new Mt();
                      Ut(e, y, D, r), n.mergePropertyMatch(D);
                    }
                  }
                }
              var L = Bt(t.propertyNames);
              if (L)
                for (var R = 0, j = e.properties; R < j.length; R++) {
                  var U = j[R];
                  (u = U.keyNode) && Ut(u, L, n, Pt.instance);
                }
            })(i, t, n, r);
            break;
          case 'array':
            !(function(e, t, n, r) {
              if (Array.isArray(t.items)) {
                for (var i = t.items, a = 0; a < i.length; a++) {
                  var o = Bt(i[a]),
                    s = new Mt();
                  (f = e.items[a])
                    ? (Ut(f, o, s, r), n.mergePropertyMatch(s))
                    : e.items.length >= i.length && n.propertiesValueMatches++;
                }
                if (e.items.length > i.length)
                  if ('object' == typeof t.additionalItems)
                    for (var u = i.length; u < e.items.length; u++) {
                      s = new Mt();
                      Ut(e.items[u], t.additionalItems, s, r),
                        n.mergePropertyMatch(s);
                    }
                  else
                    !1 === t.additionalItems &&
                      n.problems.push({
                        location: { offset: e.offset, length: e.length },
                        severity: be.Warning,
                        message: _t(
                          'additionalItemsWarning',
                          'Array has too many items according to schema. Expected {0} or fewer.',
                          i.length,
                        ),
                      });
              } else {
                var c = Bt(t.items);
                if (c)
                  for (var l = 0, p = e.items; l < p.length; l++) {
                    var f = p[l];
                    s = new Mt();
                    Ut(f, c, s, r), n.mergePropertyMatch(s);
                  }
              }
              var h = Bt(t.contains);
              if (h) {
                e.items.some(function(e) {
                  var t = new Mt();
                  return Ut(e, h, t, Pt.instance), !t.hasProblems();
                }) ||
                  n.problems.push({
                    location: { offset: e.offset, length: e.length },
                    severity: be.Warning,
                    message:
                      t.errorMessage ||
                      _t(
                        'requiredItemMissingWarning',
                        'Array does not contain required item.',
                      ),
                  });
              }
              Le(t.minItems) &&
                e.items.length < t.minItems &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'minItemsWarning',
                    'Array has too few items. Expected {0} or more.',
                    t.minItems,
                  ),
                });
              Le(t.maxItems) &&
                e.items.length > t.maxItems &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'maxItemsWarning',
                    'Array has too many items. Expected {0} or fewer.',
                    t.maxItems,
                  ),
                });
              if (!0 === t.uniqueItems) {
                var d = Lt(e);
                d.some(function(e, t) {
                  return t !== d.lastIndexOf(e);
                }) &&
                  n.problems.push({
                    location: { offset: e.offset, length: e.length },
                    severity: be.Warning,
                    message: _t(
                      'uniqueItemsWarning',
                      'Array has duplicate items.',
                    ),
                  });
              }
            })(i, t, n, r);
            break;
          case 'string':
            !(function(e, t, n, r) {
              Le(t.minLength) &&
                e.value.length < t.minLength &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'minLengthWarning',
                    'String is shorter than the minimum length of {0}.',
                    t.minLength,
                  ),
                });
              Le(t.maxLength) &&
                e.value.length > t.maxLength &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'maxLengthWarning',
                    'String is longer than the maximum length of {0}.',
                    t.maxLength,
                  ),
                });
              if (((i = t.pattern), 'string' == typeof i)) {
                new RegExp(t.pattern).test(e.value) ||
                  n.problems.push({
                    location: { offset: e.offset, length: e.length },
                    severity: be.Warning,
                    message:
                      t.patternErrorMessage ||
                      t.errorMessage ||
                      _t(
                        'patternWarning',
                        'String does not match the pattern of "{0}".',
                        t.pattern,
                      ),
                  });
              }
              var i;
              if (t.format)
                switch (t.format) {
                  case 'uri':
                  case 'uri-reference':
                    var a = void 0;
                    if (e.value) {
                      var o = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/.exec(
                        e.value,
                      );
                      o
                        ? o[2] ||
                          'uri' !== t.format ||
                          (a = _t(
                            'uriSchemeMissing',
                            'URI with a scheme is expected.',
                          ))
                        : (a = _t('uriMissing', 'URI is expected.'));
                    } else a = _t('uriEmpty', 'URI expected.');
                    a &&
                      n.problems.push({
                        location: { offset: e.offset, length: e.length },
                        severity: be.Warning,
                        message:
                          t.patternErrorMessage ||
                          t.errorMessage ||
                          _t('uriFormatWarning', 'String is not a URI: {0}', a),
                      });
                    break;
                  case 'color-hex':
                  case 'date-time':
                  case 'date':
                  case 'time':
                  case 'email':
                    var s = Ot[t.format];
                    (e.value && s.pattern.exec(e.value)) ||
                      n.problems.push({
                        location: { offset: e.offset, length: e.length },
                        severity: be.Warning,
                        message:
                          t.patternErrorMessage ||
                          t.errorMessage ||
                          s.errorMessage,
                      });
                }
            })(i, t, n);
            break;
          case 'number':
            !(function(e, t, n, r) {
              var i = e.value;
              function a(e) {
                var t,
                  n = /^(-?\d+)(?:\.(\d+))?(?:e([-+]\d+))?$/.exec(e.toString());
                return (
                  n && {
                    value: Number(n[1] + (n[2] || '')),
                    multiplier:
                      ((null === (t = n[2]) || void 0 === t
                        ? void 0
                        : t.length) || 0) - (parseInt(n[3]) || 0),
                  }
                );
              }
              if (Le(t.multipleOf)) {
                var o = -1;
                if (Number.isInteger(t.multipleOf)) o = i % t.multipleOf;
                else {
                  var s = a(t.multipleOf),
                    u = a(i);
                  if (s && u) {
                    var c = Math.pow(10, Math.abs(u.multiplier - s.multiplier));
                    u.multiplier < s.multiplier
                      ? (u.value *= c)
                      : (s.value *= c),
                      (o = u.value % s.value);
                  }
                }
                0 !== o &&
                  n.problems.push({
                    location: { offset: e.offset, length: e.length },
                    severity: be.Warning,
                    message: _t(
                      'multipleOfWarning',
                      'Value is not divisible by {0}.',
                      t.multipleOf,
                    ),
                  });
              }
              function l(e, t) {
                return Le(t) ? t : je(t) && t ? e : void 0;
              }
              function p(e, t) {
                if (!je(t) || !t) return e;
              }
              var f = l(t.minimum, t.exclusiveMinimum);
              Le(f) &&
                i <= f &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'exclusiveMinimumWarning',
                    'Value is below the exclusive minimum of {0}.',
                    f,
                  ),
                });
              var h = l(t.maximum, t.exclusiveMaximum);
              Le(h) &&
                i >= h &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'exclusiveMaximumWarning',
                    'Value is above the exclusive maximum of {0}.',
                    h,
                  ),
                });
              var d = p(t.minimum, t.exclusiveMinimum);
              Le(d) &&
                i < d &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'minimumWarning',
                    'Value is below the minimum of {0}.',
                    d,
                  ),
                });
              var m = p(t.maximum, t.exclusiveMaximum);
              Le(m) &&
                i > m &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: be.Warning,
                  message: _t(
                    'maximumWarning',
                    'Value is above the maximum of {0}.',
                    m,
                  ),
                });
            })(i, t, n);
            break;
          case 'property':
            return Ut(i.valueNode, t, n, r);
        }
        !(function() {
          function e(e) {
            return (
              i.type === e ||
              ('integer' === e && 'number' === i.type && i.isInteger)
            );
          }
          Array.isArray(t.type)
            ? t.type.some(e) ||
              n.problems.push({
                location: { offset: i.offset, length: i.length },
                severity: be.Warning,
                message:
                  t.errorMessage ||
                  _t(
                    'typeArrayMismatchWarning',
                    'Incorrect type. Expected one of {0}.',
                    t.type.join(', '),
                  ),
              })
            : t.type &&
              (e(t.type) ||
                n.problems.push({
                  location: { offset: i.offset, length: i.length },
                  severity: be.Warning,
                  message:
                    t.errorMessage ||
                    _t(
                      'typeMismatchWarning',
                      'Incorrect type. Expected "{0}".',
                      t.type,
                    ),
                }));
          if (Array.isArray(t.allOf))
            for (var a = 0, o = t.allOf; a < o.length; a++) {
              var s = o[a];
              Ut(i, Bt(s), n, r);
            }
          var u = Bt(t.not);
          if (u) {
            var c = new Mt(),
              l = r.newSub();
            Ut(i, u, c, l),
              c.hasProblems() ||
                n.problems.push({
                  location: { offset: i.offset, length: i.length },
                  severity: be.Warning,
                  message: _t(
                    'notSchemaWarning',
                    'Matches a schema that is not allowed.',
                  ),
                });
            for (var p = 0, f = l.schemas; p < f.length; p++) {
              var h = f[p];
              (h.inverted = !h.inverted), r.add(h);
            }
          }
          var d = function(e, t) {
            for (var a = [], o = void 0, s = 0, u = e; s < u.length; s++) {
              var c = Bt(u[s]),
                l = new Mt(),
                p = r.newSub();
              if ((Ut(i, c, l, p), l.hasProblems() || a.push(c), o))
                if (t || l.hasProblems() || o.validationResult.hasProblems()) {
                  var f = l.compare(o.validationResult);
                  f > 0
                    ? (o = {
                        schema: c,
                        validationResult: l,
                        matchingSchemas: p,
                      })
                    : 0 === f &&
                      (o.matchingSchemas.merge(p),
                      o.validationResult.mergeEnumValues(l));
                } else
                  o.matchingSchemas.merge(p),
                    (o.validationResult.propertiesMatches +=
                      l.propertiesMatches),
                    (o.validationResult.propertiesValueMatches +=
                      l.propertiesValueMatches);
              else o = { schema: c, validationResult: l, matchingSchemas: p };
            }
            return (
              a.length > 1 &&
                t &&
                n.problems.push({
                  location: { offset: i.offset, length: 1 },
                  severity: be.Warning,
                  message: _t(
                    'oneOfWarning',
                    'Matches multiple schemas when only one must validate.',
                  ),
                }),
              o &&
                (n.merge(o.validationResult),
                (n.propertiesMatches += o.validationResult.propertiesMatches),
                (n.propertiesValueMatches +=
                  o.validationResult.propertiesValueMatches),
                r.merge(o.matchingSchemas)),
              a.length
            );
          };
          Array.isArray(t.anyOf) && d(t.anyOf, !1);
          Array.isArray(t.oneOf) && d(t.oneOf, !0);
          var m = function(e) {
              var t = new Mt(),
                a = r.newSub();
              Ut(i, Bt(e), t, a),
                n.merge(t),
                (n.propertiesMatches += t.propertiesMatches),
                (n.propertiesValueMatches += t.propertiesValueMatches),
                r.merge(a);
            },
            g = Bt(t.if);
          g &&
            (function(e, t, n) {
              var a = Bt(e),
                o = new Mt(),
                s = r.newSub();
              Ut(i, a, o, s),
                r.merge(s),
                o.hasProblems() ? n && m(n) : t && m(t);
            })(g, Bt(t.then), Bt(t.else));
          if (Array.isArray(t.enum)) {
            for (var y = Lt(i), v = !1, D = 0, E = t.enum; D < E.length; D++) {
              var C = E[D];
              if (Me(y, C)) {
                v = !0;
                break;
              }
            }
            (n.enumValues = t.enum),
              (n.enumValueMatch = v),
              v ||
                n.problems.push({
                  location: { offset: i.offset, length: i.length },
                  severity: be.Warning,
                  code: Dt.EnumValueMismatch,
                  message:
                    t.errorMessage ||
                    _t(
                      'enumWarning',
                      'Value is not accepted. Valid values: {0}.',
                      t.enum
                        .map(function(e) {
                          return JSON.stringify(e);
                        })
                        .join(', '),
                    ),
                });
          }
          if (Re(t.const)) {
            Me((y = Lt(i)), t.const)
              ? (n.enumValueMatch = !0)
              : (n.problems.push({
                  location: { offset: i.offset, length: i.length },
                  severity: be.Warning,
                  code: Dt.EnumValueMismatch,
                  message:
                    t.errorMessage ||
                    _t(
                      'constWarning',
                      'Value must be {0}.',
                      JSON.stringify(t.const),
                    ),
                }),
                (n.enumValueMatch = !1)),
              (n.enumValues = [t.const]);
          }
          t.deprecationMessage &&
            i.parent &&
            n.problems.push({
              location: { offset: i.parent.offset, length: i.parent.length },
              severity: be.Warning,
              message: t.deprecationMessage,
            });
        })(),
          r.add({ node: i, schema: t });
      }
    }
    var Vt = wt(),
      Wt = (function() {
        function e(e, t) {
          (this.patternRegExps = []), (this.isInclude = []);
          try {
            for (var n = 0, r = e; n < r.length; n++) {
              var i = r[n],
                a = '!' !== i[0];
              a || (i = i.substring(1)),
                this.patternRegExps.push(new RegExp(Pe(i) + '$')),
                this.isInclude.push(a);
            }
            this.uris = t;
          } catch (e) {
            (this.patternRegExps.length = 0),
              (this.isInclude.length = 0),
              (this.uris = []);
          }
        }
        return (
          (e.prototype.matchesPattern = function(e) {
            for (var t = !1, n = 0; n < this.patternRegExps.length; n++) {
              this.patternRegExps[n].test(e) && (t = this.isInclude[n]);
            }
            return t;
          }),
          (e.prototype.getURIs = function() {
            return this.uris;
          }),
          e
        );
      })(),
      $t = (function() {
        function e(e, t, n) {
          (this.service = e),
            (this.url = t),
            (this.dependencies = {}),
            n &&
              (this.unresolvedSchema = this.service.promise.resolve(new qt(n)));
        }
        return (
          (e.prototype.getUnresolvedSchema = function() {
            return (
              this.unresolvedSchema ||
                (this.unresolvedSchema = this.service.loadSchema(this.url)),
              this.unresolvedSchema
            );
          }),
          (e.prototype.getResolvedSchema = function() {
            var e = this;
            return (
              this.resolvedSchema ||
                (this.resolvedSchema = this.getUnresolvedSchema().then(function(
                  t,
                ) {
                  return e.service.resolveSchemaContent(
                    t,
                    e.url,
                    e.dependencies,
                  );
                })),
              this.resolvedSchema
            );
          }),
          (e.prototype.clearSchema = function() {
            (this.resolvedSchema = void 0),
              (this.unresolvedSchema = void 0),
              (this.dependencies = {});
          }),
          e
        );
      })(),
      qt = function(e, t) {
        void 0 === t && (t = []), (this.schema = e), (this.errors = t);
      },
      Yt = (function() {
        function e(e, t) {
          void 0 === t && (t = []), (this.schema = e), (this.errors = t);
        }
        return (
          (e.prototype.getSection = function(e) {
            var t = this.getSectionRecursive(e, this.schema);
            if (t) return Bt(t);
          }),
          (e.prototype.getSectionRecursive = function(e, t) {
            if (!t || 'boolean' == typeof t || 0 === e.length) return t;
            var n = e.shift();
            if (t.properties && (t.properties[n], 1))
              return this.getSectionRecursive(e, t.properties[n]);
            if (t.patternProperties)
              for (
                var r = 0, i = Object.keys(t.patternProperties);
                r < i.length;
                r++
              ) {
                var a = i[r];
                if (new RegExp(a).test(n))
                  return this.getSectionRecursive(e, t.patternProperties[a]);
              }
            else {
              if ('object' == typeof t.additionalProperties)
                return this.getSectionRecursive(e, t.additionalProperties);
              if (n.match('[0-9]+'))
                if (Array.isArray(t.items)) {
                  var o = parseInt(n, 10);
                  if (!isNaN(o) && t.items[o])
                    return this.getSectionRecursive(e, t.items[o]);
                } else if (t.items) return this.getSectionRecursive(e, t.items);
            }
          }),
          e
        );
      })(),
      Jt = (function() {
        function e(e, t, n) {
          (this.contextService = t),
            (this.requestService = e),
            (this.promiseConstructor = n || Promise),
            (this.callOnDispose = []),
            (this.contributionSchemas = {}),
            (this.contributionAssociations = []),
            (this.schemasById = {}),
            (this.filePatternAssociations = []),
            (this.registeredSchemasIds = {});
        }
        return (
          (e.prototype.getRegisteredSchemaIds = function(e) {
            return Object.keys(this.registeredSchemasIds).filter(function(t) {
              var n = Be.a.parse(t).scheme;
              return 'schemaservice' !== n && (!e || e(n));
            });
          }),
          Object.defineProperty(e.prototype, 'promise', {
            get: function() {
              return this.promiseConstructor;
            },
            enumerable: !1,
            configurable: !0,
          }),
          (e.prototype.dispose = function() {
            for (; this.callOnDispose.length > 0; ) this.callOnDispose.pop()();
          }),
          (e.prototype.onResourceChange = function(e) {
            for (
              var t = this,
                n = !1,
                r = [(e = zt(e))],
                i = Object.keys(this.schemasById).map(function(e) {
                  return t.schemasById[e];
                });
              r.length;

            )
              for (var a = r.pop(), o = 0; o < i.length; o++) {
                var s = i[o];
                s &&
                  (s.url === a || s.dependencies[a]) &&
                  (s.url !== a && r.push(s.url),
                  s.clearSchema(),
                  (i[o] = void 0),
                  (n = !0));
              }
            return n;
          }),
          (e.prototype.setSchemaContributions = function(e) {
            if (e.schemas) {
              var t = e.schemas;
              for (var n in t) {
                var r = zt(n);
                this.contributionSchemas[r] = this.addSchemaHandle(r, t[n]);
              }
            }
            if (Array.isArray(e.schemaAssociations))
              for (var i = 0, a = e.schemaAssociations; i < a.length; i++) {
                var o = a[i],
                  s = o.uris.map(zt),
                  u = this.addFilePatternAssociation(o.pattern, s);
                this.contributionAssociations.push(u);
              }
          }),
          (e.prototype.addSchemaHandle = function(e, t) {
            var n = new $t(this, e, t);
            return (this.schemasById[e] = n), n;
          }),
          (e.prototype.getOrAddSchemaHandle = function(e, t) {
            return this.schemasById[e] || this.addSchemaHandle(e, t);
          }),
          (e.prototype.addFilePatternAssociation = function(e, t) {
            var n = new Wt(e, t);
            return this.filePatternAssociations.push(n), n;
          }),
          (e.prototype.registerExternalSchema = function(e, t, n) {
            var r = zt(e);
            return (
              (this.registeredSchemasIds[r] = !0),
              (this.cachedSchemaForResource = void 0),
              t && this.addFilePatternAssociation(t, [e]),
              n ? this.addSchemaHandle(r, n) : this.getOrAddSchemaHandle(r)
            );
          }),
          (e.prototype.clearExternalSchemas = function() {
            for (var e in ((this.schemasById = {}),
            (this.filePatternAssociations = []),
            (this.registeredSchemasIds = {}),
            (this.cachedSchemaForResource = void 0),
            this.contributionSchemas))
              (this.schemasById[e] = this.contributionSchemas[e]),
                (this.registeredSchemasIds[e] = !0);
            for (
              var t = 0, n = this.contributionAssociations;
              t < n.length;
              t++
            ) {
              var r = n[t];
              this.filePatternAssociations.push(r);
            }
          }),
          (e.prototype.getResolvedSchema = function(e) {
            var t = zt(e),
              n = this.schemasById[t];
            return n ? n.getResolvedSchema() : this.promise.resolve(void 0);
          }),
          (e.prototype.loadSchema = function(e) {
            if (!this.requestService) {
              var t = Vt(
                'json.schema.norequestservice',
                "Unable to load schema from '{0}'. No schema request service available",
                Ht(e),
              );
              return this.promise.resolve(new qt({}, [t]));
            }
            return this.requestService(e).then(
              function(t) {
                if (!t) {
                  var n = Vt(
                    'json.schema.nocontent',
                    "Unable to load schema from '{0}': No content.",
                    Ht(e),
                  );
                  return new qt({}, [n]);
                }
                var r,
                  i = [];
                r = ue(t, i);
                var a = i.length
                  ? [
                      Vt(
                        'json.schema.invalidFormat',
                        "Unable to parse content from '{0}': Parse error at offset {1}.",
                        Ht(e),
                        i[0].offset,
                      ),
                    ]
                  : [];
                return new qt(r, a);
              },
              function(t) {
                var n = t.toString(),
                  r = t.toString().split('Error: ');
                return (
                  r.length > 1 && (n = r[1]),
                  Ie(n, '.') && (n = n.substr(0, n.length - 1)),
                  new qt({}, [
                    Vt(
                      'json.schema.nocontent',
                      "Unable to load schema from '{0}': {1}.",
                      Ht(e),
                      n,
                    ),
                  ])
                );
              },
            );
          }),
          (e.prototype.resolveSchemaContent = function(e, t, n) {
            var r = this,
              i = e.errors.slice(0),
              a = e.schema;
            if (a.$schema) {
              var o = zt(a.$schema);
              if ('http://json-schema.org/draft-03/schema' === o)
                return this.promise.resolve(
                  new Yt({}, [
                    Vt(
                      'json.schema.draft03.notsupported',
                      'Draft-03 schemas are not supported.',
                    ),
                  ]),
                );
              'https://json-schema.org/draft/2019-09/schema' === o &&
                i.push(
                  Vt(
                    'json.schema.draft201909.notsupported',
                    'Draft 2019-09 schemas are not yet fully supported.',
                  ),
                );
            }
            var s = this.contextService,
              u = function(e, t, n, r) {
                var a = r ? decodeURIComponent(r) : void 0,
                  o = (function(e, t) {
                    if (!t) return e;
                    var n = e;
                    return (
                      '/' === t[0] && (t = t.substr(1)),
                      t.split('/').some(function(e) {
                        return !(n = n[e]);
                      }),
                      n
                    );
                  })(t, a);
                if (o)
                  for (var s in o)
                    o.hasOwnProperty(s) &&
                      !e.hasOwnProperty(s) &&
                      (e[s] = o[s]);
                else
                  i.push(
                    Vt(
                      'json.schema.invalidref',
                      "$ref '{0}' in '{1}' can not be resolved.",
                      a,
                      n,
                    ),
                  );
              },
              c = function(e, t, n, a, o) {
                s &&
                  !/^\w+:\/\/.*/.test(t) &&
                  (t = s.resolveRelativePath(t, a)),
                  (t = zt(t));
                var c = r.getOrAddSchemaHandle(t);
                return c.getUnresolvedSchema().then(function(r) {
                  if (((o[t] = !0), r.errors.length)) {
                    var a = n ? t + '#' + n : t;
                    i.push(
                      Vt(
                        'json.schema.problemloadingref',
                        "Problems loading reference '{0}': {1}",
                        a,
                        r.errors[0],
                      ),
                    );
                  }
                  return (
                    u(e, r.schema, t, n), l(e, r.schema, t, c.dependencies)
                  );
                });
              },
              l = function(e, t, n, i) {
                if (!e || 'object' != typeof e) return Promise.resolve(null);
                for (
                  var a = [e],
                    o = [],
                    s = [],
                    l = function(e) {
                      for (var r = []; e.$ref; ) {
                        var o = e.$ref,
                          l = o.split('#', 2);
                        if ((delete e.$ref, l[0].length > 0))
                          return void s.push(c(e, l[0], l[1], n, i));
                        -1 === r.indexOf(o) && (u(e, t, n, l[1]), r.push(o));
                      }
                      !(function() {
                        for (var e = [], t = 0; t < arguments.length; t++)
                          e[t] = arguments[t];
                        for (var n = 0, r = e; n < r.length; n++) {
                          var i = r[n];
                          'object' == typeof i && a.push(i);
                        }
                      })(
                        e.items,
                        e.additionalItems,
                        e.additionalProperties,
                        e.not,
                        e.contains,
                        e.propertyNames,
                        e.if,
                        e.then,
                        e.else,
                      ),
                        (function() {
                          for (var e = [], t = 0; t < arguments.length; t++)
                            e[t] = arguments[t];
                          for (var n = 0, r = e; n < r.length; n++) {
                            var i = r[n];
                            if ('object' == typeof i)
                              for (var o in i) {
                                var s = o,
                                  u = i[s];
                                'object' == typeof u && a.push(u);
                              }
                          }
                        })(
                          e.definitions,
                          e.properties,
                          e.patternProperties,
                          e.dependencies,
                        ),
                        (function() {
                          for (var e = [], t = 0; t < arguments.length; t++)
                            e[t] = arguments[t];
                          for (var n = 0, r = e; n < r.length; n++) {
                            var i = r[n];
                            if (Array.isArray(i))
                              for (var o = 0, s = i; o < s.length; o++) {
                                var u = s[o];
                                'object' == typeof u && a.push(u);
                              }
                          }
                        })(e.anyOf, e.allOf, e.oneOf, e.items);
                    };
                  a.length;

                ) {
                  var p = a.pop();
                  o.indexOf(p) >= 0 || (o.push(p), l(p));
                }
                return r.promise.all(s);
              };
            return l(a, a, t, n).then(function(e) {
              return new Yt(a, i);
            });
          }),
          (e.prototype.getSchemaForResource = function(e, t) {
            if (t && t.root && 'object' === t.root.type) {
              var n = t.root.properties.filter(function(e) {
                return (
                  '$schema' === e.keyNode.value &&
                  e.valueNode &&
                  'string' === e.valueNode.type
                );
              });
              if (n.length > 0) {
                var r = n[0].valueNode;
                if (r && 'string' === r.type) {
                  var i = Lt(r);
                  if (
                    (i &&
                      (function(e, t) {
                        if (e.length < t.length) return !1;
                        for (var n = 0; n < t.length; n++)
                          if (e[n] !== t[n]) return !1;
                        return !0;
                      })(i, '.') &&
                      this.contextService &&
                      (i = this.contextService.resolveRelativePath(i, e)),
                    i)
                  ) {
                    var a = zt(i);
                    return this.getOrAddSchemaHandle(a).getResolvedSchema();
                  }
                }
              }
            }
            if (
              this.cachedSchemaForResource &&
              this.cachedSchemaForResource.resource === e
            )
              return this.cachedSchemaForResource.resolvedSchema;
            for (
              var o = Object.create(null),
                s = [],
                u = 0,
                c = this.filePatternAssociations;
              u < c.length;
              u++
            ) {
              var l = c[u];
              if (l.matchesPattern(e))
                for (var p = 0, f = l.getURIs(); p < f.length; p++) {
                  var h = f[p];
                  o[h] || (s.push(h), (o[h] = !0));
                }
            }
            var d =
              s.length > 0
                ? this.createCombinedSchema(e, s).getResolvedSchema()
                : this.promise.resolve(void 0);
            return (
              (this.cachedSchemaForResource = {
                resource: e,
                resolvedSchema: d,
              }),
              d
            );
          }),
          (e.prototype.createCombinedSchema = function(e, t) {
            if (1 === t.length) return this.getOrAddSchemaHandle(t[0]);
            var n = 'schemaservice://combinedSchema/' + encodeURIComponent(e),
              r = {
                allOf: t.map(function(e) {
                  return { $ref: e };
                }),
              };
            return this.addSchemaHandle(n, r);
          }),
          (e.prototype.getMatchingSchemas = function(e, t, n) {
            if (n) {
              var r =
                n.id || 'schemaservice://untitled/matchingSchemas/' + Kt++;
              return this.resolveSchemaContent(new qt(n), r, {}).then(function(
                e,
              ) {
                return t.getMatchingSchemas(e.schema).filter(function(e) {
                  return !e.inverted;
                });
              });
            }
            return this.getSchemaForResource(e.uri, t).then(function(e) {
              return e
                ? t.getMatchingSchemas(e.schema).filter(function(e) {
                    return !e.inverted;
                  })
                : [];
            });
          }),
          e
        );
      })(),
      Kt = 0;
    function zt(e) {
      try {
        return Be.a.parse(e).toString();
      } catch (t) {
        return e;
      }
    }
    function Ht(e) {
      try {
        var t = Be.a.parse(e);
        if ('file' === t.scheme) return t.fsPath;
      } catch (e) {}
      return e;
    }
    var Xt = n(4);
    function Gt(e, t) {
      if (e === t) return !0;
      if (null == e || null == t) return !1;
      if (typeof e != typeof t) return !1;
      if ('object' != typeof e) return !1;
      if (Array.isArray(e) !== Array.isArray(t)) return !1;
      let n, r;
      if (Array.isArray(e)) {
        if (e.length !== t.length) return !1;
        for (n = 0; n < e.length; n++) if (!Gt(e[n], t[n])) return !1;
      } else {
        const i = [];
        for (r in e) i.push(r);
        i.sort();
        const a = [];
        for (r in t) a.push(r);
        if ((a.sort(), !Gt(i, a))) return !1;
        for (n = 0; n < i.length; n++) if (!Gt(e[i[n]], t[i[n]])) return !1;
      }
      return !0;
    }
    function Qt(e) {
      return 'number' == typeof e;
    }
    function Zt(e) {
      return 'boolean' == typeof e;
    }
    var en = wt(),
      tn = (function() {
        function e(e, t, n, r) {
          void 0 === t && (t = []),
            void 0 === n && (n = Promise),
            void 0 === r && (r = {}),
            (this.schemaService = e),
            (this.contributions = t),
            (this.promiseConstructor = n),
            (this.clientCapabilities = r);
        }
        return (
          (e.prototype.doResolve = function(e) {
            for (var t = this.contributions.length - 1; t >= 0; t--) {
              var n = this.contributions[t].resolveCompletion;
              if (n) {
                var r = n(e);
                if (r) return r;
              }
            }
            return this.promiseConstructor.resolve(e);
          }),
          (e.prototype.doComplete = function(e, t, n) {
            var r = this,
              i = { items: [], isIncomplete: !1 },
              a = e.getText(),
              o = e.offsetAt(t),
              s = n.getNodeFromOffset(o, !0);
            if (this.isInComment(e, s ? s.offset : 0, o))
              return Promise.resolve(i);
            if (s && o === s.offset + s.length && o > 0) {
              var u = a[o - 1];
              (('object' === s.type && '}' === u) ||
                ('array' === s.type && ']' === u)) &&
                (s = s.parent);
            }
            var c,
              l = this.getCurrentWord(e, o);
            if (
              !s ||
              ('string' !== s.type &&
                'number' !== s.type &&
                'boolean' !== s.type &&
                'null' !== s.type)
            ) {
              var p = o - l.length;
              p > 0 && '"' === a[p - 1] && p--,
                (c = he.create(e.positionAt(p), t));
            } else
              c = he.create(
                e.positionAt(s.offset),
                e.positionAt(s.offset + s.length),
              );
            var f = {},
              h = {
                add: function(e) {
                  var t = e.label,
                    n = f[t];
                  if (n) n.documentation || (n.documentation = e.documentation);
                  else {
                    if ((t = t.replace(/[\n]/g, '↵')).length > 60) {
                      var r = t.substr(0, 57).trim() + '...';
                      f[r] || (t = r);
                    }
                    c &&
                      void 0 !== e.insertText &&
                      (e.textEdit = Fe.replace(c, e.insertText)),
                      (e.label = t),
                      (f[t] = e),
                      i.items.push(e);
                  }
                },
                setAsIncomplete: function() {
                  i.isIncomplete = !0;
                },
                error: function(e) {
                  console.error(e);
                },
                log: function(e) {
                  console.log(e);
                },
                getNumberOfProposals: function() {
                  return i.items.length;
                },
              };
            return this.schemaService
              .getSchemaForResource(e.uri, n)
              .then(function(t) {
                var u = [],
                  p = !0,
                  d = '',
                  m = void 0;
                if (s && 'string' === s.type) {
                  var g = s.parent;
                  g &&
                    'property' === g.type &&
                    g.keyNode === s &&
                    ((p = !g.valueNode),
                    (m = g),
                    (d = a.substr(s.offset + 1, s.length - 2)),
                    g && (s = g.parent));
                }
                if (s && 'object' === s.type) {
                  if (s.offset === o) return i;
                  s.properties.forEach(function(e) {
                    (m && m === e) || (f[e.keyNode.value] = He.create('__'));
                  });
                  var y = '';
                  p && (y = r.evaluateSeparatorAfter(e, e.offsetAt(c.end))),
                    t
                      ? r.getPropertyCompletions(t, n, s, p, y, h)
                      : r.getSchemaLessPropertyCompletions(n, s, d, h);
                  var v = Rt(s);
                  r.contributions.forEach(function(t) {
                    var n = t.collectPropertyCompletions(
                      e.uri,
                      v,
                      l,
                      p,
                      '' === y,
                      h,
                    );
                    n && u.push(n);
                  }),
                    !t &&
                      l.length > 0 &&
                      '"' !== a.charAt(o - l.length - 1) &&
                      (h.add({
                        kind: Ye.Property,
                        label: r.getLabelForValue(l),
                        insertText: r.getInsertTextForProperty(
                          l,
                          void 0,
                          !1,
                          y,
                        ),
                        insertTextFormat: Je.Snippet,
                        documentation: '',
                      }),
                      h.setAsIncomplete());
                }
                var D = {};
                return (
                  t
                    ? r.getValueCompletions(t, n, s, o, e, h, D)
                    : r.getSchemaLessValueCompletions(n, s, o, e, h),
                  r.contributions.length > 0 &&
                    r.getContributedValueCompletions(n, s, o, e, h, u),
                  r.promiseConstructor.all(u).then(function() {
                    if (0 === h.getNumberOfProposals()) {
                      var t = o;
                      !s ||
                        ('string' !== s.type &&
                          'number' !== s.type &&
                          'boolean' !== s.type &&
                          'null' !== s.type) ||
                        (t = s.offset + s.length);
                      var n = r.evaluateSeparatorAfter(e, t);
                      r.addFillerValueCompletions(D, n, h);
                    }
                    return i;
                  })
                );
              });
          }),
          (e.prototype.getPropertyCompletions = function(e, t, n, r, i, a) {
            var o = this;
            t.getMatchingSchemas(e.schema, n.offset).forEach(function(e) {
              if (e.node === n && !e.inverted) {
                var t = e.schema.properties;
                t &&
                  Object.keys(t).forEach(function(e) {
                    var n = t[e];
                    if (
                      'object' == typeof n &&
                      !n.deprecationMessage &&
                      !n.doNotSuggest
                    ) {
                      var s = {
                        kind: Ye.Property,
                        label: e,
                        insertText: o.getInsertTextForProperty(e, n, r, i),
                        insertTextFormat: Je.Snippet,
                        filterText: o.getFilterTextForValue(e),
                        documentation:
                          o.fromMarkup(n.markdownDescription) ||
                          n.description ||
                          '',
                      };
                      void 0 !== n.suggestSortText &&
                        (s.sortText = n.suggestSortText),
                        s.insertText &&
                          Ie(s.insertText, '$1' + i) &&
                          (s.command = {
                            title: 'Suggest',
                            command: 'editor.action.triggerSuggest',
                          }),
                        a.add(s);
                    }
                  });
                var s = e.schema.propertyNames;
                if (
                  'object' == typeof s &&
                  !s.deprecationMessage &&
                  !s.doNotSuggest
                ) {
                  var u = function(e, t) {
                    void 0 === t && (t = void 0);
                    var n = {
                      kind: Ye.Property,
                      label: e,
                      insertText: o.getInsertTextForProperty(e, void 0, r, i),
                      insertTextFormat: Je.Snippet,
                      filterText: o.getFilterTextForValue(e),
                      documentation:
                        t ||
                        o.fromMarkup(s.markdownDescription) ||
                        s.description ||
                        '',
                    };
                    void 0 !== s.suggestSortText &&
                      (n.sortText = s.suggestSortText),
                      n.insertText &&
                        Ie(n.insertText, '$1' + i) &&
                        (n.command = {
                          title: 'Suggest',
                          command: 'editor.action.triggerSuggest',
                        }),
                      a.add(n);
                  };
                  if (s.enum)
                    for (var c = 0; c < s.enum.length; c++) {
                      var l = void 0;
                      s.markdownEnumDescriptions &&
                      c < s.markdownEnumDescriptions.length
                        ? (l = o.fromMarkup(s.markdownEnumDescriptions[c]))
                        : s.enumDescriptions &&
                          c < s.enumDescriptions.length &&
                          (l = s.enumDescriptions[c]),
                        u(s.enum[c], l);
                    }
                  s.const && u(s.const);
                }
              }
            });
          }),
          (e.prototype.getSchemaLessPropertyCompletions = function(e, t, n, r) {
            var i = this,
              a = function(e) {
                e.properties.forEach(function(e) {
                  var t = e.keyNode.value;
                  r.add({
                    kind: Ye.Property,
                    label: t,
                    insertText: i.getInsertTextForValue(t, ''),
                    insertTextFormat: Je.Snippet,
                    filterText: i.getFilterTextForValue(t),
                    documentation: '',
                  });
                });
              };
            if (t.parent)
              if ('property' === t.parent.type) {
                var o = t.parent.keyNode.value;
                e.visit(function(e) {
                  return (
                    'property' === e.type &&
                      e !== t.parent &&
                      e.keyNode.value === o &&
                      e.valueNode &&
                      'object' === e.valueNode.type &&
                      a(e.valueNode),
                    !0
                  );
                });
              } else
                'array' === t.parent.type &&
                  t.parent.items.forEach(function(e) {
                    'object' === e.type && e !== t && a(e);
                  });
            else
              'object' === t.type &&
                r.add({
                  kind: Ye.Property,
                  label: '$schema',
                  insertText: this.getInsertTextForProperty(
                    '$schema',
                    void 0,
                    !0,
                    '',
                  ),
                  insertTextFormat: Je.Snippet,
                  documentation: '',
                  filterText: this.getFilterTextForValue('$schema'),
                });
          }),
          (e.prototype.getSchemaLessValueCompletions = function(e, t, n, r, i) {
            var a = this,
              o = n;
            if (
              (!t ||
                ('string' !== t.type &&
                  'number' !== t.type &&
                  'boolean' !== t.type &&
                  'null' !== t.type) ||
                ((o = t.offset + t.length), (t = t.parent)),
              !t)
            )
              return (
                i.add({
                  kind: this.getSuggestionKind('object'),
                  label: 'Empty object',
                  insertText: this.getInsertTextForValue({}, ''),
                  insertTextFormat: Je.Snippet,
                  documentation: '',
                }),
                void i.add({
                  kind: this.getSuggestionKind('array'),
                  label: 'Empty array',
                  insertText: this.getInsertTextForValue([], ''),
                  insertTextFormat: Je.Snippet,
                  documentation: '',
                })
              );
            var s = this.evaluateSeparatorAfter(r, o),
              u = function(e) {
                e.parent &&
                  !jt(e.parent, n, !0) &&
                  i.add({
                    kind: a.getSuggestionKind(e.type),
                    label: a.getLabelTextForMatchingNode(e, r),
                    insertText: a.getInsertTextForMatchingNode(e, r, s),
                    insertTextFormat: Je.Snippet,
                    documentation: '',
                  }),
                  'boolean' === e.type &&
                    a.addBooleanValueCompletion(!e.value, s, i);
              };
            if ('property' === t.type && n > (t.colonOffset || 0)) {
              var c = t.valueNode;
              if (
                c &&
                (n > c.offset + c.length ||
                  'object' === c.type ||
                  'array' === c.type)
              )
                return;
              var l = t.keyNode.value;
              e.visit(function(e) {
                return (
                  'property' === e.type &&
                    e.keyNode.value === l &&
                    e.valueNode &&
                    u(e.valueNode),
                  !0
                );
              }),
                '$schema' === l &&
                  t.parent &&
                  !t.parent.parent &&
                  this.addDollarSchemaCompletions(s, i);
            }
            if ('array' === t.type)
              if (t.parent && 'property' === t.parent.type) {
                var p = t.parent.keyNode.value;
                e.visit(function(e) {
                  return (
                    'property' === e.type &&
                      e.keyNode.value === p &&
                      e.valueNode &&
                      'array' === e.valueNode.type &&
                      e.valueNode.items.forEach(u),
                    !0
                  );
                });
              } else t.items.forEach(u);
          }),
          (e.prototype.getValueCompletions = function(e, t, n, r, i, a, o) {
            var s = r,
              u = void 0,
              c = void 0;
            if (
              (!n ||
                ('string' !== n.type &&
                  'number' !== n.type &&
                  'boolean' !== n.type &&
                  'null' !== n.type) ||
                ((s = n.offset + n.length), (c = n), (n = n.parent)),
              n)
            ) {
              if ('property' === n.type && r > (n.colonOffset || 0)) {
                var l = n.valueNode;
                if (l && r > l.offset + l.length) return;
                (u = n.keyNode.value), (n = n.parent);
              }
              if (n && (void 0 !== u || 'array' === n.type)) {
                for (
                  var p = this.evaluateSeparatorAfter(i, s),
                    f = 0,
                    h = t.getMatchingSchemas(e.schema, n.offset, c);
                  f < h.length;
                  f++
                ) {
                  var d = h[f];
                  if (d.node === n && !d.inverted && d.schema) {
                    if ('array' === n.type && d.schema.items)
                      if (Array.isArray(d.schema.items)) {
                        var m = this.findItemAtOffset(n, i, r);
                        m < d.schema.items.length &&
                          this.addSchemaValueCompletions(
                            d.schema.items[m],
                            p,
                            a,
                            o,
                          );
                      } else
                        this.addSchemaValueCompletions(d.schema.items, p, a, o);
                    if (void 0 !== u) {
                      var g = !1;
                      if (d.schema.properties)
                        (E = d.schema.properties[u]) &&
                          ((g = !0),
                          this.addSchemaValueCompletions(E, p, a, o));
                      if (d.schema.patternProperties && !g)
                        for (
                          var y = 0,
                            v = Object.keys(d.schema.patternProperties);
                          y < v.length;
                          y++
                        ) {
                          var D = v[y];
                          if (new RegExp(D).test(u)) {
                            g = !0;
                            var E = d.schema.patternProperties[D];
                            this.addSchemaValueCompletions(E, p, a, o);
                          }
                        }
                      if (d.schema.additionalProperties && !g) {
                        E = d.schema.additionalProperties;
                        this.addSchemaValueCompletions(E, p, a, o);
                      }
                    }
                  }
                }
                '$schema' !== u ||
                  n.parent ||
                  this.addDollarSchemaCompletions(p, a),
                  o.boolean &&
                    (this.addBooleanValueCompletion(!0, p, a),
                    this.addBooleanValueCompletion(!1, p, a)),
                  o.null && this.addNullValueCompletion(p, a);
              }
            } else this.addSchemaValueCompletions(e.schema, '', a, o);
          }),
          (e.prototype.getContributedValueCompletions = function(
            e,
            t,
            n,
            r,
            i,
            a,
          ) {
            if (t) {
              if (
                (('string' !== t.type &&
                  'number' !== t.type &&
                  'boolean' !== t.type &&
                  'null' !== t.type) ||
                  (t = t.parent),
                t && 'property' === t.type && n > (t.colonOffset || 0))
              ) {
                var o = t.keyNode.value,
                  s = t.valueNode;
                if ((!s || n <= s.offset + s.length) && t.parent) {
                  var u = Rt(t.parent);
                  this.contributions.forEach(function(e) {
                    var t = e.collectValueCompletions(r.uri, u, o, i);
                    t && a.push(t);
                  });
                }
              }
            } else
              this.contributions.forEach(function(e) {
                var t = e.collectDefaultCompletions(r.uri, i);
                t && a.push(t);
              });
          }),
          (e.prototype.addSchemaValueCompletions = function(e, t, n, r) {
            var i = this;
            'object' == typeof e &&
              (this.addEnumValueCompletions(e, t, n),
              this.addDefaultValueCompletions(e, t, n),
              this.collectTypes(e, r),
              Array.isArray(e.allOf) &&
                e.allOf.forEach(function(e) {
                  return i.addSchemaValueCompletions(e, t, n, r);
                }),
              Array.isArray(e.anyOf) &&
                e.anyOf.forEach(function(e) {
                  return i.addSchemaValueCompletions(e, t, n, r);
                }),
              Array.isArray(e.oneOf) &&
                e.oneOf.forEach(function(e) {
                  return i.addSchemaValueCompletions(e, t, n, r);
                }));
          }),
          (e.prototype.addDefaultValueCompletions = function(e, t, n, r) {
            var i = this;
            void 0 === r && (r = 0);
            var a = !1;
            if (Re(e.default)) {
              for (var o = e.type, s = e.default, u = r; u > 0; u--)
                (s = [s]), (o = 'array');
              n.add({
                kind: this.getSuggestionKind(o),
                label: this.getLabelForValue(s),
                insertText: this.getInsertTextForValue(s, t),
                insertTextFormat: Je.Snippet,
                detail: en('json.suggest.default', 'Default value'),
              }),
                (a = !0);
            }
            Array.isArray(e.examples) &&
              e.examples.forEach(function(o) {
                for (var s = e.type, u = o, c = r; c > 0; c--)
                  (u = [u]), (s = 'array');
                n.add({
                  kind: i.getSuggestionKind(s),
                  label: i.getLabelForValue(u),
                  insertText: i.getInsertTextForValue(u, t),
                  insertTextFormat: Je.Snippet,
                }),
                  (a = !0);
              }),
              Array.isArray(e.defaultSnippets) &&
                e.defaultSnippets.forEach(function(o) {
                  var s,
                    u,
                    c = e.type,
                    l = o.body,
                    p = o.label;
                  if (Re(l)) {
                    e.type;
                    for (var f = r; f > 0; f--) (l = [l]), 'array';
                    (s = i.getInsertTextForSnippetValue(l, t)),
                      (u = i.getFilterTextForSnippetValue(l)),
                      (p = p || i.getLabelForSnippetValue(l));
                  } else {
                    if ('string' != typeof o.bodyText) return;
                    var h = '',
                      d = '',
                      m = '';
                    for (f = r; f > 0; f--)
                      (h = h + m + '[\n'),
                        (d = d + '\n' + m + ']'),
                        (m += '\t'),
                        (c = 'array');
                    (s = h + m + o.bodyText.split('\n').join('\n' + m) + d + t),
                      (p = p || s),
                      (u = s.replace(/[\n]/g, ''));
                  }
                  n.add({
                    kind: i.getSuggestionKind(c),
                    label: p,
                    documentation:
                      i.fromMarkup(o.markdownDescription) || o.description,
                    insertText: s,
                    insertTextFormat: Je.Snippet,
                    filterText: u,
                  }),
                    (a = !0);
                }),
              !a &&
                'object' == typeof e.items &&
                !Array.isArray(e.items) &&
                r < 5 &&
                this.addDefaultValueCompletions(e.items, t, n, r + 1);
          }),
          (e.prototype.addEnumValueCompletions = function(e, t, n) {
            if (
              (Re(e.const) &&
                n.add({
                  kind: this.getSuggestionKind(e.type),
                  label: this.getLabelForValue(e.const),
                  insertText: this.getInsertTextForValue(e.const, t),
                  insertTextFormat: Je.Snippet,
                  documentation:
                    this.fromMarkup(e.markdownDescription) || e.description,
                }),
              Array.isArray(e.enum))
            )
              for (var r = 0, i = e.enum.length; r < i; r++) {
                var a = e.enum[r],
                  o = this.fromMarkup(e.markdownDescription) || e.description;
                e.markdownEnumDescriptions &&
                r < e.markdownEnumDescriptions.length &&
                this.doesSupportMarkdown()
                  ? (o = this.fromMarkup(e.markdownEnumDescriptions[r]))
                  : e.enumDescriptions &&
                    r < e.enumDescriptions.length &&
                    (o = e.enumDescriptions[r]),
                  n.add({
                    kind: this.getSuggestionKind(e.type),
                    label: this.getLabelForValue(a),
                    insertText: this.getInsertTextForValue(a, t),
                    insertTextFormat: Je.Snippet,
                    documentation: o,
                  });
              }
          }),
          (e.prototype.collectTypes = function(e, t) {
            if (!Array.isArray(e.enum) && !Re(e.const)) {
              var n = e.type;
              Array.isArray(n)
                ? n.forEach(function(e) {
                    return (t[e] = !0);
                  })
                : n && (t[n] = !0);
            }
          }),
          (e.prototype.addFillerValueCompletions = function(e, t, n) {
            e.object &&
              n.add({
                kind: this.getSuggestionKind('object'),
                label: '{}',
                insertText: this.getInsertTextForGuessedValue({}, t),
                insertTextFormat: Je.Snippet,
                detail: en('defaults.object', 'New object'),
                documentation: '',
              }),
              e.array &&
                n.add({
                  kind: this.getSuggestionKind('array'),
                  label: '[]',
                  insertText: this.getInsertTextForGuessedValue([], t),
                  insertTextFormat: Je.Snippet,
                  detail: en('defaults.array', 'New array'),
                  documentation: '',
                });
          }),
          (e.prototype.addBooleanValueCompletion = function(e, t, n) {
            n.add({
              kind: this.getSuggestionKind('boolean'),
              label: e ? 'true' : 'false',
              insertText: this.getInsertTextForValue(e, t),
              insertTextFormat: Je.Snippet,
              documentation: '',
            });
          }),
          (e.prototype.addNullValueCompletion = function(e, t) {
            t.add({
              kind: this.getSuggestionKind('null'),
              label: 'null',
              insertText: 'null' + e,
              insertTextFormat: Je.Snippet,
              documentation: '',
            });
          }),
          (e.prototype.addDollarSchemaCompletions = function(e, t) {
            var n = this;
            this.schemaService
              .getRegisteredSchemaIds(function(e) {
                return 'http' === e || 'https' === e;
              })
              .forEach(function(r) {
                return t.add({
                  kind: Ye.Module,
                  label: n.getLabelForValue(r),
                  filterText: n.getFilterTextForValue(r),
                  insertText: n.getInsertTextForValue(r, e),
                  insertTextFormat: Je.Snippet,
                  documentation: '',
                });
              });
          }),
          (e.prototype.getLabelForValue = function(e) {
            return JSON.stringify(e);
          }),
          (e.prototype.getFilterTextForValue = function(e) {
            return JSON.stringify(e);
          }),
          (e.prototype.getFilterTextForSnippetValue = function(e) {
            return JSON.stringify(e).replace(/\$\{\d+:([^}]+)\}|\$\d+/g, '$1');
          }),
          (e.prototype.getLabelForSnippetValue = function(e) {
            return JSON.stringify(e).replace(/\$\{\d+:([^}]+)\}|\$\d+/g, '$1');
          }),
          (e.prototype.getInsertTextForPlainText = function(e) {
            return e.replace(/[\\\$\}]/g, '\\$&');
          }),
          (e.prototype.getInsertTextForValue = function(e, t) {
            var n = JSON.stringify(e, null, '\t');
            return '{}' === n
              ? '{$1}' + t
              : '[]' === n
              ? '[$1]' + t
              : this.getInsertTextForPlainText(n + t);
          }),
          (e.prototype.getInsertTextForSnippetValue = function(e, t) {
            return (
              (function e(t, n, r) {
                if (null !== t && 'object' == typeof t) {
                  var i = n + '\t';
                  if (Array.isArray(t)) {
                    if (0 === t.length) return '[]';
                    for (var a = '[\n', o = 0; o < t.length; o++)
                      (a += i + e(t[o], i, r)),
                        o < t.length - 1 && (a += ','),
                        (a += '\n');
                    return (a += n + ']');
                  }
                  var s = Object.keys(t);
                  if (0 === s.length) return '{}';
                  for (a = '{\n', o = 0; o < s.length; o++) {
                    var u = s[o];
                    (a += i + JSON.stringify(u) + ': ' + e(t[u], i, r)),
                      o < s.length - 1 && (a += ','),
                      (a += '\n');
                  }
                  return (a += n + '}');
                }
                return r(t);
              })(e, '', function(e) {
                return 'string' == typeof e && '^' === e[0]
                  ? e.substr(1)
                  : JSON.stringify(e);
              }) + t
            );
          }),
          (e.prototype.getInsertTextForGuessedValue = function(e, t) {
            switch (typeof e) {
              case 'object':
                return null === e
                  ? '${1:null}' + t
                  : this.getInsertTextForValue(e, t);
              case 'string':
                var n = JSON.stringify(e);
                return (
                  (n = n.substr(1, n.length - 2)),
                  '"${1:' + (n = this.getInsertTextForPlainText(n)) + '}"' + t
                );
              case 'number':
              case 'boolean':
                return '${1:' + JSON.stringify(e) + '}' + t;
            }
            return this.getInsertTextForValue(e, t);
          }),
          (e.prototype.getSuggestionKind = function(e) {
            if (Array.isArray(e)) {
              var t = e;
              e = t.length > 0 ? t[0] : void 0;
            }
            if (!e) return Ye.Value;
            switch (e) {
              case 'string':
                return Ye.Value;
              case 'object':
                return Ye.Module;
              case 'property':
                return Ye.Property;
              default:
                return Ye.Value;
            }
          }),
          (e.prototype.getLabelTextForMatchingNode = function(e, t) {
            switch (e.type) {
              case 'array':
                return '[]';
              case 'object':
                return '{}';
              default:
                return t.getText().substr(e.offset, e.length);
            }
          }),
          (e.prototype.getInsertTextForMatchingNode = function(e, t, n) {
            switch (e.type) {
              case 'array':
                return this.getInsertTextForValue([], n);
              case 'object':
                return this.getInsertTextForValue({}, n);
              default:
                var r = t.getText().substr(e.offset, e.length) + n;
                return this.getInsertTextForPlainText(r);
            }
          }),
          (e.prototype.getInsertTextForProperty = function(e, t, n, r) {
            var i = this.getInsertTextForValue(e, '');
            if (!n) return i;
            var a,
              o = i + ': ',
              s = 0;
            if (t) {
              if (Array.isArray(t.defaultSnippets)) {
                if (1 === t.defaultSnippets.length) {
                  var u = t.defaultSnippets[0].body;
                  Re(u) && (a = this.getInsertTextForSnippetValue(u, ''));
                }
                s += t.defaultSnippets.length;
              }
              if (
                (t.enum &&
                  (a ||
                    1 !== t.enum.length ||
                    (a = this.getInsertTextForGuessedValue(t.enum[0], '')),
                  (s += t.enum.length)),
                Re(t.default) &&
                  (a || (a = this.getInsertTextForGuessedValue(t.default, '')),
                  s++),
                Array.isArray(t.examples) &&
                  t.examples.length &&
                  (a ||
                    (a = this.getInsertTextForGuessedValue(t.examples[0], '')),
                  (s += t.examples.length)),
                0 === s)
              ) {
                var c = Array.isArray(t.type) ? t.type[0] : t.type;
                switch (
                  (c ||
                    (t.properties ? (c = 'object') : t.items && (c = 'array')),
                  c)
                ) {
                  case 'boolean':
                    a = '$1';
                    break;
                  case 'string':
                    a = '"$1"';
                    break;
                  case 'object':
                    a = '{$1}';
                    break;
                  case 'array':
                    a = '[$1]';
                    break;
                  case 'number':
                  case 'integer':
                    a = '${1:0}';
                    break;
                  case 'null':
                    a = '${1:null}';
                    break;
                  default:
                    return i;
                }
              }
            }
            return (!a || s > 1) && (a = '$1'), o + a + r;
          }),
          (e.prototype.getCurrentWord = function(e, t) {
            for (
              var n = t - 1, r = e.getText();
              n >= 0 && -1 === ' \t\n\r\v":{[,]}'.indexOf(r.charAt(n));

            )
              n--;
            return r.substring(n + 1, t);
          }),
          (e.prototype.evaluateSeparatorAfter = function(e, t) {
            var n = se(e.getText(), !0);
            switch ((n.setPosition(t), n.scan())) {
              case 5:
              case 2:
              case 4:
              case 17:
                return '';
              default:
                return ',';
            }
          }),
          (e.prototype.findItemAtOffset = function(e, t, n) {
            for (
              var r = se(t.getText(), !0), i = e.items, a = i.length - 1;
              a >= 0;
              a--
            ) {
              var o = i[a];
              if (n > o.offset + o.length)
                return (
                  r.setPosition(o.offset + o.length),
                  5 === r.scan() && n >= r.getTokenOffset() + r.getTokenLength()
                    ? a + 1
                    : a
                );
              if (n >= o.offset) return a;
            }
            return 0;
          }),
          (e.prototype.isInComment = function(e, t, n) {
            var r = se(e.getText(), !1);
            r.setPosition(t);
            for (
              var i = r.scan();
              17 !== i && r.getTokenOffset() + r.getTokenLength() < n;

            )
              i = r.scan();
            return (12 === i || 13 === i) && r.getTokenOffset() <= n;
          }),
          (e.prototype.fromMarkup = function(e) {
            if (e && this.doesSupportMarkdown())
              return { kind: $e.Markdown, value: e };
          }),
          (e.prototype.doesSupportMarkdown = function() {
            if (!Re(this.supportsMarkdown)) {
              var e =
                this.clientCapabilities.textDocument &&
                this.clientCapabilities.textDocument.completion;
              this.supportsMarkdown =
                e &&
                e.completionItem &&
                Array.isArray(e.completionItem.documentationFormat) &&
                -1 !==
                  e.completionItem.documentationFormat.indexOf($e.Markdown);
            }
            return this.supportsMarkdown;
          }),
          (e.prototype.doesSupportsCommitCharacters = function() {
            if (!Re(this.supportsCommitCharacters)) {
              var e =
                this.clientCapabilities.textDocument &&
                this.clientCapabilities.textDocument.completion;
              this.supportsCommitCharacters =
                e &&
                e.completionItem &&
                !!e.completionItem.commitCharactersSupport;
            }
            return this.supportsCommitCharacters;
          }),
          e
        );
      })(),
      nn = (function() {
        function e(e, t, n) {
          void 0 === t && (t = []),
            (this.schemaService = e),
            (this.contributions = t),
            (this.promise = n || Promise);
        }
        return (
          (e.prototype.doHover = function(e, t, n) {
            var r = e.offsetAt(t),
              i = n.getNodeFromOffset(r);
            if (
              !i ||
              (('object' === i.type || 'array' === i.type) &&
                r > i.offset + 1 &&
                r < i.offset + i.length - 1)
            )
              return this.promise.resolve(null);
            var a = i;
            if ('string' === i.type) {
              var o = i.parent;
              if (
                o &&
                'property' === o.type &&
                o.keyNode === i &&
                !(i = o.valueNode)
              )
                return this.promise.resolve(null);
            }
            for (
              var s = he.create(
                  e.positionAt(a.offset),
                  e.positionAt(a.offset + a.length),
                ),
                u = function(e) {
                  return { contents: e, range: s };
                },
                c = Rt(i),
                l = this.contributions.length - 1;
              l >= 0;
              l--
            ) {
              var p = this.contributions[l].getInfoContribution(e.uri, c);
              if (p)
                return p.then(function(e) {
                  return u(e);
                });
            }
            return this.schemaService
              .getSchemaForResource(e.uri, n)
              .then(function(e) {
                if (e && i) {
                  var t = n.getMatchingSchemas(e.schema, i.offset),
                    r = void 0,
                    a = void 0,
                    o = void 0,
                    s = void 0;
                  t.every(function(e) {
                    if (
                      e.node === i &&
                      !e.inverted &&
                      e.schema &&
                      ((r = r || e.schema.title),
                      (a =
                        a ||
                        e.schema.markdownDescription ||
                        rn(e.schema.description)),
                      e.schema.enum)
                    ) {
                      var t = e.schema.enum.indexOf(Lt(i));
                      e.schema.markdownEnumDescriptions
                        ? (o = e.schema.markdownEnumDescriptions[t])
                        : e.schema.enumDescriptions &&
                          (o = rn(e.schema.enumDescriptions[t])),
                        o &&
                          'string' != typeof (s = e.schema.enum[t]) &&
                          (s = JSON.stringify(s));
                    }
                    return !0;
                  });
                  var c = '';
                  return (
                    r && (c = rn(r)),
                    a && (c.length > 0 && (c += '\n\n'), (c += a)),
                    o &&
                      (c.length > 0 && (c += '\n\n'),
                      (c +=
                        '`' +
                        (function(e) {
                          if (-1 !== e.indexOf('`')) return '`` ' + e + ' ``';
                          return e;
                        })(s) +
                        '`: ' +
                        o)),
                    u([c])
                  );
                }
                return null;
              });
          }),
          e
        );
      })();
    function rn(e) {
      if (e)
        return e
          .replace(/([^\n\r])(\r?\n)([^\n\r])/gm, '$1\n\n$3')
          .replace(/[\\`*_{}[\]()#+\-.!]/g, '\\$&');
    }
    var an = wt(),
      on = (function() {
        function e(e, t) {
          (this.jsonSchemaService = e),
            (this.promise = t),
            (this.validationEnabled = !0);
        }
        return (
          (e.prototype.configure = function(e) {
            e &&
              ((this.validationEnabled = e.validate),
              (this.commentSeverity = e.allowComments ? void 0 : be.Error));
          }),
          (e.prototype.doValidation = function(e, t, n, r) {
            var i = this;
            if (!this.validationEnabled) return this.promise.resolve([]);
            var a = [],
              o = {},
              s = function(e) {
                var t =
                  e.range.start.line +
                  ' ' +
                  e.range.start.character +
                  ' ' +
                  e.message;
                o[t] || ((o[t] = !0), a.push(e));
              },
              u = function(r) {
                var o = n ? un(n.trailingCommas) : be.Error,
                  u = n ? un(n.comments) : i.commentSeverity;
                if (r) {
                  if (r.errors.length && t.root) {
                    var c = t.root,
                      l = 'object' === c.type ? c.properties[0] : void 0;
                    if (l && '$schema' === l.keyNode.value) {
                      var p = l.valueNode || l,
                        f = he.create(
                          e.positionAt(p.offset),
                          e.positionAt(p.offset + p.length),
                        );
                      s(
                        Se.create(
                          f,
                          r.errors[0],
                          be.Warning,
                          Dt.SchemaResolveError,
                        ),
                      );
                    } else {
                      f = he.create(
                        e.positionAt(c.offset),
                        e.positionAt(c.offset + 1),
                      );
                      s(
                        Se.create(
                          f,
                          r.errors[0],
                          be.Warning,
                          Dt.SchemaResolveError,
                        ),
                      );
                    }
                  } else {
                    var h = t.validate(e, r.schema);
                    h && h.forEach(s);
                  }
                  (function e(t) {
                    if (t && 'object' == typeof t) {
                      if (je(t.allowComments)) return t.allowComments;
                      if (t.allOf)
                        for (var n = 0, r = t.allOf; n < r.length; n++) {
                          var i = r[n],
                            a = e(i);
                          if (je(a)) return a;
                        }
                    }
                    return;
                  })(r.schema) && (u = void 0),
                    (function e(t) {
                      if (t && 'object' == typeof t) {
                        if (je(t.allowTrailingCommas))
                          return t.allowTrailingCommas;
                        var n = t;
                        if (je(n.allowsTrailingCommas))
                          return n.allowsTrailingCommas;
                        if (t.allOf)
                          for (var r = 0, i = t.allOf; r < i.length; r++) {
                            var a = i[r],
                              o = e(a);
                            if (je(o)) return o;
                          }
                      }
                      return;
                    })(r.schema) && (o = void 0);
                }
                for (var d = 0, m = t.syntaxErrors; d < m.length; d++) {
                  var g = m[d];
                  if (g.code === Dt.TrailingComma) {
                    if ('number' != typeof o) continue;
                    g.severity = o;
                  }
                  s(g);
                }
                if ('number' == typeof u) {
                  var y = an(
                    'InvalidCommentToken',
                    'Comments are not permitted in JSON.',
                  );
                  t.comments.forEach(function(e) {
                    s(Se.create(e, y, u, Dt.CommentNotPermitted));
                  });
                }
                return a;
              };
            if (r) {
              var c = r.id || 'schemaservice://untitled/' + sn++;
              return this.jsonSchemaService
                .resolveSchemaContent(new qt(r), c, {})
                .then(function(e) {
                  return u(e);
                });
            }
            return this.jsonSchemaService
              .getSchemaForResource(e.uri, t)
              .then(function(e) {
                return u(e);
              });
          }),
          e
        );
      })(),
      sn = 0;
    function un(e) {
      switch (e) {
        case 'error':
          return be.Error;
        case 'warning':
          return be.Warning;
        case 'ignore':
          return;
      }
    }
    function cn(e) {
      return e < 48
        ? 0
        : e <= 57
        ? e - 48
        : (e < 97 && (e += 32), e >= 97 && e <= 102 ? e - 97 + 10 : 0);
    }
    function ln(e) {
      if ('#' === e[0])
        switch (e.length) {
          case 4:
            return {
              red: (17 * cn(e.charCodeAt(1))) / 255,
              green: (17 * cn(e.charCodeAt(2))) / 255,
              blue: (17 * cn(e.charCodeAt(3))) / 255,
              alpha: 1,
            };
          case 5:
            return {
              red: (17 * cn(e.charCodeAt(1))) / 255,
              green: (17 * cn(e.charCodeAt(2))) / 255,
              blue: (17 * cn(e.charCodeAt(3))) / 255,
              alpha: (17 * cn(e.charCodeAt(4))) / 255,
            };
          case 7:
            return {
              red: (16 * cn(e.charCodeAt(1)) + cn(e.charCodeAt(2))) / 255,
              green: (16 * cn(e.charCodeAt(3)) + cn(e.charCodeAt(4))) / 255,
              blue: (16 * cn(e.charCodeAt(5)) + cn(e.charCodeAt(6))) / 255,
              alpha: 1,
            };
          case 9:
            return {
              red: (16 * cn(e.charCodeAt(1)) + cn(e.charCodeAt(2))) / 255,
              green: (16 * cn(e.charCodeAt(3)) + cn(e.charCodeAt(4))) / 255,
              blue: (16 * cn(e.charCodeAt(5)) + cn(e.charCodeAt(6))) / 255,
              alpha: (16 * cn(e.charCodeAt(7)) + cn(e.charCodeAt(8))) / 255,
            };
        }
    }
    var pn = (function() {
      function e(e) {
        this.schemaService = e;
      }
      return (
        (e.prototype.findDocumentSymbols = function(e, t, n) {
          var r = this;
          void 0 === n && (n = { resultLimit: Number.MAX_VALUE });
          var i = t.root;
          if (!i) return [];
          var a = n.resultLimit || Number.MAX_VALUE,
            o = e.uri;
          if (
            ('vscode://defaultsettings/keybindings.json' === o ||
              Ie(o.toLowerCase(), '/user/keybindings.json')) &&
            'array' === i.type
          ) {
            for (var s = [], u = 0, c = i.items; u < c.length; u++) {
              var l = c[u];
              if ('object' === l.type)
                for (var p = 0, f = l.properties; p < f.length; p++) {
                  var h = f[p];
                  if ('key' === h.keyNode.value && h.valueNode) {
                    var d = de.create(e.uri, fn(e, l));
                    if (
                      (s.push({
                        name: Lt(h.valueNode),
                        kind: rt.Function,
                        location: d,
                      }),
                      --a <= 0)
                    )
                      return (
                        n &&
                          n.onResultLimitExceeded &&
                          n.onResultLimitExceeded(o),
                        s
                      );
                  }
                }
            }
            return s;
          }
          for (
            var m = [{ node: i, containerName: '' }],
              g = 0,
              y = !1,
              v = [],
              D = function(t, n) {
                'array' === t.type
                  ? t.items.forEach(function(e) {
                      e && m.push({ node: e, containerName: n });
                    })
                  : 'object' === t.type &&
                    t.properties.forEach(function(t) {
                      var i = t.valueNode;
                      if (i)
                        if (a > 0) {
                          a--;
                          var o = de.create(e.uri, fn(e, t)),
                            s = n ? n + '.' + t.keyNode.value : t.keyNode.value;
                          v.push({
                            name: r.getKeyLabel(t),
                            kind: r.getSymbolKind(i.type),
                            location: o,
                            containerName: n,
                          }),
                            m.push({ node: i, containerName: s });
                        } else y = !0;
                    });
              };
            g < m.length;

          ) {
            var E = m[g++];
            D(E.node, E.containerName);
          }
          return (
            y && n && n.onResultLimitExceeded && n.onResultLimitExceeded(o), v
          );
        }),
        (e.prototype.findDocumentSymbols2 = function(e, t, n) {
          var r = this;
          void 0 === n && (n = { resultLimit: Number.MAX_VALUE });
          var i = t.root;
          if (!i) return [];
          var a = n.resultLimit || Number.MAX_VALUE,
            o = e.uri;
          if (
            ('vscode://defaultsettings/keybindings.json' === o ||
              Ie(o.toLowerCase(), '/user/keybindings.json')) &&
            'array' === i.type
          ) {
            for (var s = [], u = 0, c = i.items; u < c.length; u++) {
              var l = c[u];
              if ('object' === l.type)
                for (var p = 0, f = l.properties; p < f.length; p++) {
                  var h = f[p];
                  if ('key' === h.keyNode.value && h.valueNode) {
                    var d = fn(e, l),
                      m = fn(e, h.keyNode);
                    if (
                      (s.push({
                        name: Lt(h.valueNode),
                        kind: rt.Function,
                        range: d,
                        selectionRange: m,
                      }),
                      --a <= 0)
                    )
                      return (
                        n &&
                          n.onResultLimitExceeded &&
                          n.onResultLimitExceeded(o),
                        s
                      );
                  }
                }
            }
            return s;
          }
          for (
            var g = [],
              y = [{ node: i, result: g }],
              v = 0,
              D = !1,
              E = function(t, n) {
                'array' === t.type
                  ? t.items.forEach(function(t, i) {
                      if (t)
                        if (a > 0) {
                          a--;
                          var o = fn(e, t),
                            s = o,
                            u = {
                              name: String(i),
                              kind: r.getSymbolKind(t.type),
                              range: o,
                              selectionRange: s,
                              children: [],
                            };
                          n.push(u), y.push({ result: u.children, node: t });
                        } else D = !0;
                    })
                  : 'object' === t.type &&
                    t.properties.forEach(function(t) {
                      var i = t.valueNode;
                      if (i)
                        if (a > 0) {
                          a--;
                          var o = fn(e, t),
                            s = fn(e, t.keyNode),
                            u = {
                              name: r.getKeyLabel(t),
                              kind: r.getSymbolKind(i.type),
                              range: o,
                              selectionRange: s,
                              children: [],
                            };
                          n.push(u), y.push({ result: u.children, node: i });
                        } else D = !0;
                    });
              };
            v < y.length;

          ) {
            var C = y[v++];
            E(C.node, C.result);
          }
          return (
            D && n && n.onResultLimitExceeded && n.onResultLimitExceeded(o), g
          );
        }),
        (e.prototype.getSymbolKind = function(e) {
          switch (e) {
            case 'object':
              return rt.Module;
            case 'string':
              return rt.String;
            case 'number':
              return rt.Number;
            case 'array':
              return rt.Array;
            case 'boolean':
              return rt.Boolean;
            default:
              return rt.Variable;
          }
        }),
        (e.prototype.getKeyLabel = function(e) {
          var t = e.keyNode.value;
          return (
            t && (t = t.replace(/[\n]/g, '↵')),
            t && t.trim() ? t : '"' + t + '"'
          );
        }),
        (e.prototype.findDocumentColors = function(e, t, n) {
          return this.schemaService
            .getSchemaForResource(e.uri, t)
            .then(function(r) {
              var i = [];
              if (r)
                for (
                  var a =
                      n && 'number' == typeof n.resultLimit
                        ? n.resultLimit
                        : Number.MAX_VALUE,
                    o = {},
                    s = 0,
                    u = t.getMatchingSchemas(r.schema);
                  s < u.length;
                  s++
                ) {
                  var c = u[s];
                  if (
                    !c.inverted &&
                    c.schema &&
                    ('color' === c.schema.format ||
                      'color-hex' === c.schema.format) &&
                    c.node &&
                    'string' === c.node.type
                  ) {
                    var l = String(c.node.offset);
                    if (!o[l]) {
                      var p = ln(Lt(c.node));
                      if (p) {
                        var f = fn(e, c.node);
                        i.push({ color: p, range: f });
                      }
                      if (((o[l] = !0), --a <= 0))
                        return (
                          n &&
                            n.onResultLimitExceeded &&
                            n.onResultLimitExceeded(e.uri),
                          i
                        );
                    }
                  }
                }
              return i;
            });
        }),
        (e.prototype.getColorPresentations = function(e, t, n, r) {
          var i,
            a = [],
            o = Math.round(255 * n.red),
            s = Math.round(255 * n.green),
            u = Math.round(255 * n.blue);
          function c(e) {
            var t = e.toString(16);
            return 2 !== t.length ? '0' + t : t;
          }
          return (
            (i =
              1 === n.alpha
                ? '#' + c(o) + c(s) + c(u)
                : '#' + c(o) + c(s) + c(u) + c(Math.round(255 * n.alpha))),
            a.push({ label: i, textEdit: Fe.replace(r, JSON.stringify(i)) }),
            a
          );
        }),
        e
      );
    })();
    function fn(e, t) {
      return he.create(
        e.positionAt(t.offset),
        e.positionAt(t.offset + t.length),
      );
    }
    var hn = wt(),
      dn = {
        schemaAssociations: [],
        schemas: {
          'http://json-schema.org/schema#': {
            $ref: 'http://json-schema.org/draft-07/schema#',
          },
          'http://json-schema.org/draft-04/schema#': {
            title: hn(
              'schema.json',
              'Describes a JSON file using a schema. See json-schema.org for more info.',
            ),
            $schema: 'http://json-schema.org/draft-04/schema#',
            definitions: {
              schemaArray: { type: 'array', minItems: 1, items: { $ref: '#' } },
              positiveInteger: { type: 'integer', minimum: 0 },
              positiveIntegerDefault0: {
                allOf: [
                  { $ref: '#/definitions/positiveInteger' },
                  { default: 0 },
                ],
              },
              simpleTypes: {
                type: 'string',
                enum: [
                  'array',
                  'boolean',
                  'integer',
                  'null',
                  'number',
                  'object',
                  'string',
                ],
              },
              stringArray: {
                type: 'array',
                items: { type: 'string' },
                minItems: 1,
                uniqueItems: !0,
              },
            },
            type: 'object',
            properties: {
              id: { type: 'string', format: 'uri' },
              $schema: { type: 'string', format: 'uri' },
              title: { type: 'string' },
              description: { type: 'string' },
              default: {},
              multipleOf: { type: 'number', minimum: 0, exclusiveMinimum: !0 },
              maximum: { type: 'number' },
              exclusiveMaximum: { type: 'boolean', default: !1 },
              minimum: { type: 'number' },
              exclusiveMinimum: { type: 'boolean', default: !1 },
              maxLength: { allOf: [{ $ref: '#/definitions/positiveInteger' }] },
              minLength: {
                allOf: [{ $ref: '#/definitions/positiveIntegerDefault0' }],
              },
              pattern: { type: 'string', format: 'regex' },
              additionalItems: {
                anyOf: [{ type: 'boolean' }, { $ref: '#' }],
                default: {},
              },
              items: {
                anyOf: [{ $ref: '#' }, { $ref: '#/definitions/schemaArray' }],
                default: {},
              },
              maxItems: { allOf: [{ $ref: '#/definitions/positiveInteger' }] },
              minItems: {
                allOf: [{ $ref: '#/definitions/positiveIntegerDefault0' }],
              },
              uniqueItems: { type: 'boolean', default: !1 },
              maxProperties: {
                allOf: [{ $ref: '#/definitions/positiveInteger' }],
              },
              minProperties: {
                allOf: [{ $ref: '#/definitions/positiveIntegerDefault0' }],
              },
              required: { allOf: [{ $ref: '#/definitions/stringArray' }] },
              additionalProperties: {
                anyOf: [{ type: 'boolean' }, { $ref: '#' }],
                default: {},
              },
              definitions: {
                type: 'object',
                additionalProperties: { $ref: '#' },
                default: {},
              },
              properties: {
                type: 'object',
                additionalProperties: { $ref: '#' },
                default: {},
              },
              patternProperties: {
                type: 'object',
                additionalProperties: { $ref: '#' },
                default: {},
              },
              dependencies: {
                type: 'object',
                additionalProperties: {
                  anyOf: [{ $ref: '#' }, { $ref: '#/definitions/stringArray' }],
                },
              },
              enum: { type: 'array', minItems: 1, uniqueItems: !0 },
              type: {
                anyOf: [
                  { $ref: '#/definitions/simpleTypes' },
                  {
                    type: 'array',
                    items: { $ref: '#/definitions/simpleTypes' },
                    minItems: 1,
                    uniqueItems: !0,
                  },
                ],
              },
              format: {
                anyOf: [
                  {
                    type: 'string',
                    enum: [
                      'date-time',
                      'uri',
                      'email',
                      'hostname',
                      'ipv4',
                      'ipv6',
                      'regex',
                    ],
                  },
                  { type: 'string' },
                ],
              },
              allOf: { allOf: [{ $ref: '#/definitions/schemaArray' }] },
              anyOf: { allOf: [{ $ref: '#/definitions/schemaArray' }] },
              oneOf: { allOf: [{ $ref: '#/definitions/schemaArray' }] },
              not: { allOf: [{ $ref: '#' }] },
            },
            dependencies: {
              exclusiveMaximum: ['maximum'],
              exclusiveMinimum: ['minimum'],
            },
            default: {},
          },
          'http://json-schema.org/draft-07/schema#': {
            title: hn(
              'schema.json',
              'Describes a JSON file using a schema. See json-schema.org for more info.',
            ),
            definitions: {
              schemaArray: { type: 'array', minItems: 1, items: { $ref: '#' } },
              nonNegativeInteger: { type: 'integer', minimum: 0 },
              nonNegativeIntegerDefault0: {
                allOf: [
                  { $ref: '#/definitions/nonNegativeInteger' },
                  { default: 0 },
                ],
              },
              simpleTypes: {
                enum: [
                  'array',
                  'boolean',
                  'integer',
                  'null',
                  'number',
                  'object',
                  'string',
                ],
              },
              stringArray: {
                type: 'array',
                items: { type: 'string' },
                uniqueItems: !0,
                default: [],
              },
            },
            type: ['object', 'boolean'],
            properties: {
              $id: { type: 'string', format: 'uri-reference' },
              $schema: { type: 'string', format: 'uri' },
              $ref: { type: 'string', format: 'uri-reference' },
              $comment: { type: 'string' },
              title: { type: 'string' },
              description: { type: 'string' },
              default: !0,
              readOnly: { type: 'boolean', default: !1 },
              examples: { type: 'array', items: !0 },
              multipleOf: { type: 'number', exclusiveMinimum: 0 },
              maximum: { type: 'number' },
              exclusiveMaximum: { type: 'number' },
              minimum: { type: 'number' },
              exclusiveMinimum: { type: 'number' },
              maxLength: { $ref: '#/definitions/nonNegativeInteger' },
              minLength: { $ref: '#/definitions/nonNegativeIntegerDefault0' },
              pattern: { type: 'string', format: 'regex' },
              additionalItems: { $ref: '#' },
              items: {
                anyOf: [{ $ref: '#' }, { $ref: '#/definitions/schemaArray' }],
                default: !0,
              },
              maxItems: { $ref: '#/definitions/nonNegativeInteger' },
              minItems: { $ref: '#/definitions/nonNegativeIntegerDefault0' },
              uniqueItems: { type: 'boolean', default: !1 },
              contains: { $ref: '#' },
              maxProperties: { $ref: '#/definitions/nonNegativeInteger' },
              minProperties: {
                $ref: '#/definitions/nonNegativeIntegerDefault0',
              },
              required: { $ref: '#/definitions/stringArray' },
              additionalProperties: { $ref: '#' },
              definitions: {
                type: 'object',
                additionalProperties: { $ref: '#' },
                default: {},
              },
              properties: {
                type: 'object',
                additionalProperties: { $ref: '#' },
                default: {},
              },
              patternProperties: {
                type: 'object',
                additionalProperties: { $ref: '#' },
                propertyNames: { format: 'regex' },
                default: {},
              },
              dependencies: {
                type: 'object',
                additionalProperties: {
                  anyOf: [{ $ref: '#' }, { $ref: '#/definitions/stringArray' }],
                },
              },
              propertyNames: { $ref: '#' },
              const: !0,
              enum: { type: 'array', items: !0, minItems: 1, uniqueItems: !0 },
              type: {
                anyOf: [
                  { $ref: '#/definitions/simpleTypes' },
                  {
                    type: 'array',
                    items: { $ref: '#/definitions/simpleTypes' },
                    minItems: 1,
                    uniqueItems: !0,
                  },
                ],
              },
              format: { type: 'string' },
              contentMediaType: { type: 'string' },
              contentEncoding: { type: 'string' },
              if: { $ref: '#' },
              then: { $ref: '#' },
              else: { $ref: '#' },
              allOf: { $ref: '#/definitions/schemaArray' },
              anyOf: { $ref: '#/definitions/schemaArray' },
              oneOf: { $ref: '#/definitions/schemaArray' },
              not: { $ref: '#' },
            },
            default: !0,
          },
        },
      },
      mn = {
        id: hn('schema.json.id', 'A unique identifier for the schema.'),
        $schema: hn(
          'schema.json.$schema',
          'The schema to verify this document against.',
        ),
        title: hn('schema.json.title', 'A descriptive title of the element.'),
        description: hn(
          'schema.json.description',
          'A long description of the element. Used in hover menus and suggestions.',
        ),
        default: hn(
          'schema.json.default',
          'A default value. Used by suggestions.',
        ),
        multipleOf: hn(
          'schema.json.multipleOf',
          'A number that should cleanly divide the current value (i.e. have no remainder).',
        ),
        maximum: hn(
          'schema.json.maximum',
          'The maximum numerical value, inclusive by default.',
        ),
        exclusiveMaximum: hn(
          'schema.json.exclusiveMaximum',
          'Makes the maximum property exclusive.',
        ),
        minimum: hn(
          'schema.json.minimum',
          'The minimum numerical value, inclusive by default.',
        ),
        exclusiveMinimum: hn(
          'schema.json.exclusiveMininum',
          'Makes the minimum property exclusive.',
        ),
        maxLength: hn(
          'schema.json.maxLength',
          'The maximum length of a string.',
        ),
        minLength: hn(
          'schema.json.minLength',
          'The minimum length of a string.',
        ),
        pattern: hn(
          'schema.json.pattern',
          'A regular expression to match the string against. It is not implicitly anchored.',
        ),
        additionalItems: hn(
          'schema.json.additionalItems',
          'For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.',
        ),
        items: hn(
          'schema.json.items',
          'For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.',
        ),
        maxItems: hn(
          'schema.json.maxItems',
          'The maximum number of items that can be inside an array. Inclusive.',
        ),
        minItems: hn(
          'schema.json.minItems',
          'The minimum number of items that can be inside an array. Inclusive.',
        ),
        uniqueItems: hn(
          'schema.json.uniqueItems',
          'If all of the items in the array must be unique. Defaults to false.',
        ),
        maxProperties: hn(
          'schema.json.maxProperties',
          'The maximum number of properties an object can have. Inclusive.',
        ),
        minProperties: hn(
          'schema.json.minProperties',
          'The minimum number of properties an object can have. Inclusive.',
        ),
        required: hn(
          'schema.json.required',
          'An array of strings that lists the names of all properties required on this object.',
        ),
        additionalProperties: hn(
          'schema.json.additionalProperties',
          "Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail.",
        ),
        definitions: hn(
          'schema.json.definitions',
          'Not used for validation. Place subschemas here that you wish to reference inline with $ref.',
        ),
        properties: hn(
          'schema.json.properties',
          'A map of property names to schemas for each property.',
        ),
        patternProperties: hn(
          'schema.json.patternProperties',
          'A map of regular expressions on property names to schemas for matching properties.',
        ),
        dependencies: hn(
          'schema.json.dependencies',
          'A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.',
        ),
        enum: hn(
          'schema.json.enum',
          'The set of literal values that are valid.',
        ),
        type: hn(
          'schema.json.type',
          'Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.',
        ),
        format: hn(
          'schema.json.format',
          'Describes the format expected for the value.',
        ),
        allOf: hn(
          'schema.json.allOf',
          'An array of schemas, all of which must match.',
        ),
        anyOf: hn(
          'schema.json.anyOf',
          'An array of schemas, where at least one must match.',
        ),
        oneOf: hn(
          'schema.json.oneOf',
          'An array of schemas, exactly one of which must match.',
        ),
        not: hn('schema.json.not', 'A schema which must not match.'),
        $id: hn('schema.json.$id', 'A unique identifier for the schema.'),
        $ref: hn(
          'schema.json.$ref',
          'Reference a definition hosted on any location.',
        ),
        $comment: hn(
          'schema.json.$comment',
          'Comments from schema authors to readers or maintainers of the schema.',
        ),
        readOnly: hn(
          'schema.json.readOnly',
          'Indicates that the value of the instance is managed exclusively by the owning authority.',
        ),
        examples: hn(
          'schema.json.examples',
          'Sample JSON values associated with a particular schema, for the purpose of illustrating usage.',
        ),
        contains: hn(
          'schema.json.contains',
          'An array instance is valid against "contains" if at least one of its elements is valid against the given schema.',
        ),
        propertyNames: hn(
          'schema.json.propertyNames',
          'If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema.',
        ),
        const: hn(
          'schema.json.const',
          'An instance validates successfully against this keyword if its value is equal to the value of the keyword.',
        ),
        contentMediaType: hn(
          'schema.json.contentMediaType',
          'Describes the media type of a string property.',
        ),
        contentEncoding: hn(
          'schema.json.contentEncoding',
          'Describes the content encoding of a string property.',
        ),
        if: hn(
          'schema.json.if',
          'The validation outcome of the "if" subschema controls which of the "then" or "else" keywords are evaluated.',
        ),
        then: hn(
          'schema.json.then',
          'The "if" subschema is used for validation when the "if" subschema succeeds.',
        ),
        else: hn(
          'schema.json.else',
          'The "else" subschema is used for validation when the "if" subschema fails.',
        ),
      };
    for (var gn in dn.schemas) {
      var yn = dn.schemas[gn];
      for (var vn in yn.properties) {
        var Dn = yn.properties[vn];
        'boolean' == typeof Dn && (Dn = yn.properties[vn] = {});
        var En = mn[vn];
        En
          ? (Dn.description = En)
          : console.log(vn + ": localize('schema.json." + vn + '\', "")');
      }
    }
    function Cn(e, t, n) {
      var r = e.offsetAt(t),
        i = n.getNodeFromOffset(r, !0);
      if (
        !i ||
        !(function(e) {
          return (
            ('string' === e.type &&
              e.parent &&
              'property' === e.parent.type &&
              e.parent.valueNode === e &&
              '$ref' === e.parent.keyNode.value) ||
            !1
          );
        })(i)
      )
        return Promise.resolve([]);
      var a = i.parent.valueNode,
        o = (function(e, t) {
          var n = (function(e) {
            if ('#' === e) return [];
            if ('#' !== e[0] || '/' !== e[1]) return null;
            return e
              .substring(2)
              .split(/\//)
              .map(xn);
          })(t);
          if (!n) return null;
          return (function e(t, n) {
            if (!n) return null;
            if (0 === t.length) return n;
            var r = t.shift();
            if (n && 'object' === n.type) {
              var i = n.properties.find(function(e) {
                return e.keyNode.value === r;
              });
              return i ? e(t, i.valueNode) : null;
            }
            if (n && 'array' === n.type && r.match(/^(0|[1-9][0-9]*)$/)) {
              var a = Number.parseInt(r),
                o = n.items[a];
              return o ? e(t, o) : null;
            }
            return null;
          })(n, e.root);
        })(n, a.value);
      if (!o) return Promise.resolve([]);
      var s = {
        targetUri: e.uri,
        originSelectionRange: bn(e, a),
        targetRange: bn(e, o),
        targetSelectionRange: bn(e, o),
      };
      return Promise.resolve([s]);
    }
    function bn(e, t) {
      return he.create(
        e.positionAt(t.offset),
        e.positionAt(t.offset + t.length),
      );
    }
    function xn(e) {
      return e.replace(/~1/g, '/').replace(/~0/g, '~');
    }
    const An = wt(),
      Sn = {
        'color-hex': {
          errorMessage: An(
            'colorHexFormatWarning',
            'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.',
          ),
          pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/,
        },
        'date-time': {
          errorMessage: An(
            'dateTimeFormatWarning',
            'String is not a RFC3339 date-time.',
          ),
          pattern: /^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i,
        },
        date: {
          errorMessage: An(
            'dateFormatWarning',
            'String is not a RFC3339 date.',
          ),
          pattern: /^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i,
        },
        time: {
          errorMessage: An(
            'timeFormatWarning',
            'String is not a RFC3339 time.',
          ),
          pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i,
        },
        email: {
          errorMessage: An(
            'emailFormatWarning',
            'String is not an e-mail address.',
          ),
          pattern: /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
        },
      };
    class wn {
      constructor(e, t, n) {
        (this.offset = t), (this.length = n), (this.parent = e);
      }
      getNodeFromOffsetEndInclusive(e) {
        const t = [],
          n = r => {
            if (e >= r.offset && e <= r.offset + r.length) {
              const i = r.children;
              for (let r = 0; r < i.length && i[r].offset <= e; r++) {
                const e = n(i[r]);
                e && t.push(e);
              }
              return r;
            }
            return null;
          },
          r = n(this);
        let i = Number.MAX_VALUE,
          a = null;
        for (const n in t) {
          const r = t[n],
            o = r.length + r.offset - e + (e - r.offset);
          o < i && ((a = r), (i = o));
        }
        return a || r;
      }
      get children() {
        return [];
      }
      toString() {
        return (
          'type: ' +
          this.type +
          ' (' +
          this.offset +
          '/' +
          this.length +
          ')' +
          (this.parent ? ' parent: {' + this.parent.toString() + '}' : '')
        );
      }
    }
    class Fn extends wn {
      constructor(e, t, n) {
        super(e, t, n), (this.type = 'null'), (this.value = null);
      }
    }
    class kn extends wn {
      constructor(e, t, n, r) {
        super(e, n, r), (this.type = 'boolean'), (this.value = t);
      }
    }
    class Tn extends wn {
      constructor(e, t, n) {
        super(e, t, n), (this.type = 'array'), (this.items = []);
      }
      get children() {
        return this.items;
      }
    }
    class _n extends wn {
      constructor(e, t, n) {
        super(e, t, n),
          (this.type = 'number'),
          (this.isInteger = !0),
          (this.value = Number.NaN);
      }
    }
    class On extends wn {
      constructor(e, t, n) {
        super(e, t, n), (this.type = 'string'), (this.value = '');
      }
    }
    class Nn extends wn {
      constructor(e, t, n) {
        super(e, t, n), (this.type = 'property'), (this.colonOffset = -1);
      }
      get children() {
        return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];
      }
    }
    class Bn extends wn {
      constructor(e, t, n) {
        super(e, t, n), (this.type = 'object'), (this.properties = []);
      }
      get children() {
        return this.properties;
      }
    }
    function In(e) {
      return Zt(e) ? (e ? {} : { not: {} }) : e;
    }
    var Pn;
    !(function(e) {
      (e[(e.Key = 0)] = 'Key'), (e[(e.Enum = 1)] = 'Enum');
    })(Pn || (Pn = {}));
    class Mn {
      constructor(e = -1, t = null) {
        (this.focusOffset = e), (this.exclude = t), (this.schemas = []);
      }
      add(e) {
        this.schemas.push(e);
      }
      merge(e) {
        this.schemas.push(...e.schemas);
      }
      include(e) {
        return (
          (-1 === this.focusOffset ||
            (function(e, t, n = !1) {
              return (
                (t >= e.offset && t < e.offset + e.length) ||
                (n && t === e.offset + e.length)
              );
            })(e, this.focusOffset)) &&
          e !== this.exclude
        );
      }
      newSub() {
        return new Mn(-1, this.exclude);
      }
    }
    class Ln {
      constructor() {}
      get schemas() {
        return [];
      }
      add(e) {}
      merge(e) {}
      include(e) {
        return !0;
      }
      newSub() {
        return this;
      }
    }
    Ln.instance = new Ln();
    class Rn {
      constructor(e) {
        (this.problems = []),
          (this.propertiesMatches = 0),
          (this.propertiesValueMatches = 0),
          (this.primaryValueMatches = 0),
          (this.enumValueMatch = !1),
          (this.enumValues = e ? [] : null);
      }
      hasProblems() {
        return !!this.problems.length;
      }
      mergeAll(e) {
        for (const t of e) this.merge(t);
      }
      merge(e) {
        this.problems = this.problems.concat(e.problems);
      }
      mergeEnumValues(e) {
        if (
          !this.enumValueMatch &&
          !e.enumValueMatch &&
          this.enumValues &&
          e.enumValues
        ) {
          this.enumValues = this.enumValues.concat(e.enumValues);
          for (const e of this.problems)
            e.code === Dt.EnumValueMismatch &&
              (e.message = An(
                'enumWarning',
                'Value is not accepted. Valid values: {0}.',
                [...new Set(this.enumValues)]
                  .map(e => JSON.stringify(e))
                  .join(', '),
              ));
        }
      }
      mergePropertyMatch(e) {
        this.merge(e),
          this.propertiesMatches++,
          (e.enumValueMatch || (!e.hasProblems() && e.propertiesMatches)) &&
            this.propertiesValueMatches++,
          e.enumValueMatch && e.enumValues && this.primaryValueMatches++;
      }
      compareGeneric(e) {
        const t = this.hasProblems();
        return t !== e.hasProblems()
          ? t
            ? -1
            : 1
          : this.enumValueMatch !== e.enumValueMatch
          ? e.enumValueMatch
            ? -1
            : 1
          : this.propertiesValueMatches !== e.propertiesValueMatches
          ? this.propertiesValueMatches - e.propertiesValueMatches
          : this.primaryValueMatches !== e.primaryValueMatches
          ? this.primaryValueMatches - e.primaryValueMatches
          : this.propertiesMatches - e.propertiesMatches;
      }
      compareKubernetes(e) {
        const t = this.hasProblems();
        return this.propertiesMatches !== e.propertiesMatches
          ? this.propertiesMatches - e.propertiesMatches
          : this.enumValueMatch !== e.enumValueMatch
          ? e.enumValueMatch
            ? -1
            : 1
          : this.primaryValueMatches !== e.primaryValueMatches
          ? this.primaryValueMatches - e.primaryValueMatches
          : this.propertiesValueMatches !== e.propertiesValueMatches
          ? this.propertiesValueMatches - e.propertiesValueMatches
          : t !== e.hasProblems()
          ? t
            ? -1
            : 1
          : this.propertiesMatches - e.propertiesMatches;
      }
    }
    function jn(e) {
      return pe(e);
    }
    class Un {
      constructor(e, t = [], n = []) {
        (this.root = e), (this.syntaxErrors = t), (this.comments = n);
      }
      getNodeFromOffset(e, t = !1) {
        if (this.root) return ce(this.root, e, t);
      }
      getNodeFromOffsetEndInclusive(e) {
        return this.root && this.root.getNodeFromOffsetEndInclusive(e);
      }
      visit(e) {
        if (this.root) {
          const t = n => {
            let r = e(n);
            const i = n.children;
            if (Array.isArray(i))
              for (let e = 0; e < i.length && r; e++) r = t(i[e]);
            return r;
          };
          t(this.root);
        }
      }
      validate(e, t) {
        if (this.root && t) {
          const n = new Rn(this.isKubernetes);
          return (
            Vn(this.root, t, n, Ln.instance, this.isKubernetes),
            n.problems.map(t => {
              const n = i.create(
                e.positionAt(t.location.offset),
                e.positionAt(t.location.offset + t.location.length),
              );
              return m.create(n, t.message, t.severity, t.code);
            })
          );
        }
        return null;
      }
      getMatchingSchemas(e, t = -1, n = null) {
        const r = new Mn(t, n);
        return (
          this.root &&
            e &&
            Vn(this.root, e, new Rn(this.isKubernetes), r, this.isKubernetes),
          r.schemas
        );
      }
    }
    function Vn(e, t, n, r, i) {
      if (e && r.include(e)) {
        switch (e.type) {
          case 'object':
            !(function(e, t, n, r) {
              const a = Object.create(null),
                o = [];
              for (const t of e.properties) {
                const e = t.keyNode.value;
                if ('<<' === e && t.valueNode)
                  switch (t.valueNode.type) {
                    case 'object':
                      t.valueNode.properties.forEach(e => {
                        const t = e.keyNode.value;
                        (a[t] = e.valueNode), o.push(t);
                      });
                      break;
                    case 'array':
                      t.valueNode.items.forEach(e => {
                        e.properties.forEach(e => {
                          const t = e.keyNode.value;
                          (a[t] = e.valueNode), o.push(t);
                        });
                      });
                  }
                else (a[e] = t.valueNode), o.push(e);
              }
              if (Array.isArray(t.required))
                for (const r of t.required)
                  if (!a[r]) {
                    const t =
                        e.parent &&
                        'property' === e.parent.type &&
                        e.parent.keyNode,
                      i = t
                        ? { offset: t.offset, length: t.length }
                        : { offset: e.offset, length: 1 };
                    n.problems.push({
                      location: i,
                      severity: h.Warning,
                      message: An(
                        'MissingRequiredPropWarning',
                        'Missing property "{0}".',
                        r,
                      ),
                    });
                  }
              const s = e => {
                let t = o.indexOf(e);
                for (; t >= 0; ) o.splice(t, 1), (t = o.indexOf(e));
              };
              if (t.properties)
                for (const e of Object.keys(t.properties)) {
                  s(e);
                  const o = t.properties[e],
                    u = a[e];
                  if (u)
                    if (Zt(o))
                      if (o) n.propertiesMatches++, n.propertiesValueMatches++;
                      else {
                        const r = u.parent;
                        n.problems.push({
                          location: {
                            offset: r.keyNode.offset,
                            length: r.keyNode.length,
                          },
                          severity: h.Warning,
                          message:
                            t.errorMessage ||
                            An(
                              'DisallowedExtraPropWarning',
                              'Property {0} is not allowed.',
                              e,
                            ),
                        });
                      }
                    else {
                      const e = new Rn(i);
                      Vn(u, o, e, r, i),
                        n.mergePropertyMatch(e),
                        n.mergeEnumValues(e);
                    }
                }
              if (t.patternProperties)
                for (const e of Object.keys(t.patternProperties)) {
                  const u = new RegExp(e);
                  for (const c of o.slice(0))
                    if (u.test(c)) {
                      s(c);
                      const o = a[c];
                      if (o) {
                        const a = t.patternProperties[e];
                        if (Zt(a))
                          if (a)
                            n.propertiesMatches++, n.propertiesValueMatches++;
                          else {
                            const e = o.parent;
                            n.problems.push({
                              location: {
                                offset: e.keyNode.offset,
                                length: e.keyNode.length,
                              },
                              severity: h.Warning,
                              message:
                                t.errorMessage ||
                                An(
                                  'DisallowedExtraPropWarning',
                                  'Property {0} is not allowed.',
                                  c,
                                ),
                            });
                          }
                        else {
                          const e = new Rn(i);
                          Vn(o, a, e, r, i),
                            n.mergePropertyMatch(e),
                            n.mergeEnumValues(e);
                        }
                      }
                    }
                }
              if ('object' == typeof t.additionalProperties)
                for (const e of o) {
                  const o = a[e];
                  if (o) {
                    const e = new Rn(i);
                    Vn(o, t.additionalProperties, e, r, i),
                      n.mergePropertyMatch(e),
                      n.mergeEnumValues(e);
                  }
                }
              else if (!1 === t.additionalProperties && o.length > 0)
                for (const e of o) {
                  const r = a[e];
                  if (r) {
                    let i = null;
                    'property' !== r.type
                      ? ((i = r.parent),
                        'object' === i.type && (i = i.properties[0]))
                      : (i = r),
                      n.problems.push({
                        location: {
                          offset: i.keyNode.offset,
                          length: i.keyNode.length,
                        },
                        severity: h.Warning,
                        message:
                          t.errorMessage ||
                          An(
                            'DisallowedExtraPropWarning',
                            'Property {0} is not allowed.',
                            e,
                          ),
                      });
                  }
                }
              Qt(t.maxProperties) &&
                e.properties.length > t.maxProperties &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'MaxPropWarning',
                    'Object has more properties than limit of {0}.',
                    t.maxProperties,
                  ),
                });
              Qt(t.minProperties) &&
                e.properties.length < t.minProperties &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'MinPropWarning',
                    'Object has fewer properties than the required number of {0}',
                    t.minProperties,
                  ),
                });
              if (t.dependencies)
                for (const o of Object.keys(t.dependencies)) {
                  if (a[o]) {
                    const s = t.dependencies[o];
                    if (Array.isArray(s))
                      for (const t of s)
                        a[t]
                          ? n.propertiesValueMatches++
                          : n.problems.push({
                              location: { offset: e.offset, length: e.length },
                              severity: h.Warning,
                              message: An(
                                'RequiredDependentPropWarning',
                                'Object is missing property {0} required by property {1}.',
                                t,
                                o,
                              ),
                            });
                    else {
                      const t = In(s);
                      if (t) {
                        const a = new Rn(i);
                        Vn(e, t, a, r, i),
                          n.mergePropertyMatch(a),
                          n.mergeEnumValues(a);
                      }
                    }
                  }
                }
              const u = In(t.propertyNames);
              if (u)
                for (const t of e.properties) {
                  const e = t.keyNode;
                  e && Vn(e, u, n, Ln.instance, i);
                }
            })(e, t, n, r);
            break;
          case 'array':
            !(function(e, t, n, r) {
              if (Array.isArray(t.items)) {
                const a = t.items;
                for (let t = 0; t < a.length; t++) {
                  const o = In(a[t]),
                    s = new Rn(i),
                    u = e.items[t];
                  u
                    ? (Vn(u, o, s, r, i),
                      n.mergePropertyMatch(s),
                      n.mergeEnumValues(s))
                    : e.items.length >= a.length && n.propertiesValueMatches++;
                }
                if (e.items.length > a.length)
                  if ('object' == typeof t.additionalItems)
                    for (let o = a.length; o < e.items.length; o++) {
                      const a = new Rn(i);
                      Vn(e.items[o], t.additionalItems, a, r, i),
                        n.mergePropertyMatch(a),
                        n.mergeEnumValues(a);
                    }
                  else
                    !1 === t.additionalItems &&
                      n.problems.push({
                        location: { offset: e.offset, length: e.length },
                        severity: h.Warning,
                        message: An(
                          'additionalItemsWarning',
                          'Array has too many items according to schema. Expected {0} or fewer.',
                          a.length,
                        ),
                      });
              } else {
                const a = In(t.items);
                if (a)
                  for (const t of e.items) {
                    const e = new Rn(i);
                    Vn(t, a, e, r, i),
                      n.mergePropertyMatch(e),
                      n.mergeEnumValues(e);
                  }
              }
              const a = In(t.contains);
              if (a) {
                e.items.some(e => {
                  const t = new Rn(i);
                  return Vn(e, a, t, Ln.instance, i), !t.hasProblems();
                }) ||
                  n.problems.push({
                    location: { offset: e.offset, length: e.length },
                    severity: h.Warning,
                    message:
                      t.errorMessage ||
                      An(
                        'requiredItemMissingWarning',
                        'Array does not contain required item.',
                      ),
                  });
              }
              Qt(t.minItems) &&
                e.items.length < t.minItems &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'minItemsWarning',
                    'Array has too few items. Expected {0} or more.',
                    t.minItems,
                  ),
                });
              Qt(t.maxItems) &&
                e.items.length > t.maxItems &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'maxItemsWarning',
                    'Array has too many items. Expected {0} or fewer.',
                    t.maxItems,
                  ),
                });
              if (!0 === t.uniqueItems) {
                const t = jn(e);
                t.some((e, n) => n !== t.lastIndexOf(e)) &&
                  n.problems.push({
                    location: { offset: e.offset, length: e.length },
                    severity: h.Warning,
                    message: An(
                      'uniqueItemsWarning',
                      'Array has duplicate items.',
                    ),
                  });
              }
            })(e, t, n, r);
            break;
          case 'string':
            !(function(e, t, n) {
              Qt(t.minLength) &&
                e.value.length < t.minLength &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'minLengthWarning',
                    'String is shorter than the minimum length of {0}.',
                    t.minLength,
                  ),
                });
              Qt(t.maxLength) &&
                e.value.length > t.maxLength &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'maxLengthWarning',
                    'String is longer than the maximum length of {0}.',
                    t.maxLength,
                  ),
                });
              if (((r = t.pattern), 'string' == typeof r)) {
                new RegExp(t.pattern).test(e.value) ||
                  n.problems.push({
                    location: { offset: e.offset, length: e.length },
                    severity: h.Warning,
                    message:
                      t.patternErrorMessage ||
                      t.errorMessage ||
                      An(
                        'patternWarning',
                        'String does not match the pattern of "{0}".',
                        t.pattern,
                      ),
                  });
              }
              var r;
              if (t.format)
                switch (t.format) {
                  case 'uri':
                  case 'uri-reference':
                    {
                      let r;
                      if (e.value)
                        try {
                          Be.a.parse(e.value).scheme ||
                            'uri' !== t.format ||
                            (r = An(
                              'uriSchemeMissing',
                              'URI with a scheme is expected.',
                            ));
                        } catch (e) {
                          r = e.message;
                        }
                      else r = An('uriEmpty', 'URI expected.');
                      r &&
                        n.problems.push({
                          location: { offset: e.offset, length: e.length },
                          severity: h.Warning,
                          message:
                            t.patternErrorMessage ||
                            t.errorMessage ||
                            An(
                              'uriFormatWarning',
                              'String is not a URI: {0}',
                              r,
                            ),
                        });
                    }
                    break;
                  case 'color-hex':
                  case 'date-time':
                  case 'date':
                  case 'time':
                  case 'email': {
                    const r = Sn[t.format];
                    (e.value && r.pattern.exec(e.value)) ||
                      n.problems.push({
                        location: { offset: e.offset, length: e.length },
                        severity: h.Warning,
                        message:
                          t.patternErrorMessage ||
                          t.errorMessage ||
                          r.errorMessage,
                      });
                  }
                }
            })(e, t, n);
            break;
          case 'number':
            !(function(e, t, n) {
              const r = e.value;
              Qt(t.multipleOf) &&
                r % t.multipleOf != 0 &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'multipleOfWarning',
                    'Value is not divisible by {0}.',
                    t.multipleOf,
                  ),
                });
              function i(e, t) {
                return Qt(t) ? t : Zt(t) && t ? e : void 0;
              }
              function a(e, t) {
                if (!Zt(t) || !t) return e;
              }
              const o = i(t.minimum, t.exclusiveMinimum);
              Qt(o) &&
                r <= o &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'exclusiveMinimumWarning',
                    'Value is below the exclusive minimum of {0}.',
                    o,
                  ),
                });
              const s = i(t.maximum, t.exclusiveMaximum);
              Qt(s) &&
                r >= s &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'exclusiveMaximumWarning',
                    'Value is above the exclusive maximum of {0}.',
                    s,
                  ),
                });
              const u = a(t.minimum, t.exclusiveMinimum);
              Qt(u) &&
                r < u &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'minimumWarning',
                    'Value is below the minimum of {0}.',
                    u,
                  ),
                });
              const c = a(t.maximum, t.exclusiveMaximum);
              Qt(c) &&
                r > c &&
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'maximumWarning',
                    'Value is above the maximum of {0}.',
                    c,
                  ),
                });
            })(e, t, n);
            break;
          case 'property':
            return Vn(e.valueNode, t, n, r, i);
        }
        !(function() {
          function s(t) {
            return (
              e.type === t ||
              ('integer' === t && 'number' === e.type && e.isInteger)
            );
          }
          Array.isArray(t.type)
            ? t.type.some(s) ||
              n.problems.push({
                location: { offset: e.offset, length: e.length },
                severity: h.Warning,
                message:
                  t.errorMessage ||
                  An(
                    'typeArrayMismatchWarning',
                    'Incorrect type. Expected one of {0}.',
                    t.type.join(', '),
                  ),
              })
            : t.type &&
              (s(t.type) ||
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message:
                    t.errorMessage ||
                    An(
                      'typeMismatchWarning',
                      'Incorrect type. Expected "{0}".',
                      t.type,
                    ),
                }));
          if (Array.isArray(t.allOf))
            for (const a of t.allOf) Vn(e, In(a), n, r, i);
          const u = In(t.not);
          if (u) {
            const t = new Rn(i),
              a = r.newSub();
            Vn(e, u, t, a, i),
              t.hasProblems() ||
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  message: An(
                    'notSchemaWarning',
                    'Matches a schema that is not allowed.',
                  ),
                });
            for (const e of a.schemas) (e.inverted = !e.inverted), r.add(e);
          }
          const c = (t, s) => {
            const u = [];
            let c = null;
            for (const n of t) {
              const t = In(n),
                l = new Rn(i),
                p = r.newSub();
              Vn(e, t, l, p, i),
                l.hasProblems() || u.push(t),
                (c = c
                  ? i
                    ? a(l, c, t, p)
                    : o(s, l, c, t, p)
                  : { schema: t, validationResult: l, matchingSchemas: p });
            }
            return (
              u.length > 1 &&
                s &&
                n.problems.push({
                  location: { offset: e.offset, length: 1 },
                  severity: h.Warning,
                  message: An(
                    'oneOfWarning',
                    'Matches multiple schemas when only one must validate.',
                  ),
                }),
              null !== c &&
                (n.merge(c.validationResult),
                (n.propertiesMatches += c.validationResult.propertiesMatches),
                (n.propertiesValueMatches +=
                  c.validationResult.propertiesValueMatches),
                r.merge(c.matchingSchemas)),
              u.length
            );
          };
          Array.isArray(t.anyOf) && c(t.anyOf, !1);
          Array.isArray(t.oneOf) && c(t.oneOf, !0);
          const l = t => {
              const a = new Rn(i),
                o = r.newSub();
              Vn(e, In(t), a, o, i),
                n.merge(a),
                (n.propertiesMatches += a.propertiesMatches),
                (n.propertiesValueMatches += a.propertiesValueMatches),
                r.merge(o);
            },
            p = In(t.if);
          p &&
            ((t, n, a) => {
              const o = In(t),
                s = new Rn(i),
                u = r.newSub();
              Vn(e, o, s, u, i),
                r.merge(u),
                s.hasProblems() ? a && l(a) : n && l(n);
            })(p, In(t.then), In(t.else));
          if (Array.isArray(t.enum)) {
            const r = jn(e);
            let i = !1;
            for (const e of t.enum)
              if (Gt(r, e)) {
                i = !0;
                break;
              }
            (n.enumValues = t.enum),
              (n.enumValueMatch = i),
              i ||
                n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  code: Dt.EnumValueMismatch,
                  message:
                    t.errorMessage ||
                    An(
                      'enumWarning',
                      'Value is not accepted. Valid values: {0}.',
                      t.enum.map(e => JSON.stringify(e)).join(', '),
                    ),
                });
          }
          if (((f = t.const), void 0 !== f)) {
            Gt(jn(e), t.const)
              ? (n.enumValueMatch = !0)
              : (n.problems.push({
                  location: { offset: e.offset, length: e.length },
                  severity: h.Warning,
                  code: Dt.EnumValueMismatch,
                  message:
                    t.errorMessage ||
                    An(
                      'constWarning',
                      'Value must be {0}.',
                      JSON.stringify(t.const),
                    ),
                }),
                (n.enumValueMatch = !1)),
              (n.enumValues = [t.const]);
          }
          var f;
          t.deprecationMessage &&
            e.parent &&
            n.problems.push({
              location: { offset: e.parent.offset, length: e.parent.length },
              severity: h.Warning,
              message: t.deprecationMessage,
            });
        })(),
          r.add({ node: e, schema: t });
      }
      function a(e, t, n, r) {
        const i = e.compareKubernetes(t.validationResult);
        return (
          i > 0
            ? (t = { schema: n, validationResult: e, matchingSchemas: r })
            : 0 === i &&
              (t.matchingSchemas.merge(r),
              t.validationResult.mergeEnumValues(e)),
          t
        );
      }
      function o(e, t, n, r, i) {
        if (e || t.hasProblems() || n.validationResult.hasProblems()) {
          const e = t.compareGeneric(n.validationResult);
          e > 0
            ? (n = { schema: r, validationResult: t, matchingSchemas: i })
            : 0 === e &&
              (n.matchingSchemas.merge(i),
              n.validationResult.mergeEnumValues(t));
        } else
          n.matchingSchemas.merge(i),
            (n.validationResult.propertiesMatches += t.propertiesMatches),
            (n.validationResult.propertiesValueMatches +=
              t.propertiesValueMatches);
        return n;
      }
    }
    var Wn = n(15);
    function $n(e, t) {
      for (const n of t.documents)
        if (n.root && n.root.offset <= e && n.root.length + n.root.offset >= e)
          return n;
      return null;
    }
    function qn(e) {
      const t = ['mapping', 'scalar', 'sequence'];
      return e.filter(e => {
        if ('string' == typeof e) {
          const n = e.split(' '),
            r = (n[1] && n[1].toLowerCase()) || 'scalar';
          return 'map' !== r && -1 !== t.indexOf(r);
        }
        return !1;
      });
    }
    function Yn(e) {
      return {
        message: '' + e.reason,
        location: {
          start: e.mark.position,
          end: e.mark.position + e.mark.column,
        },
        severity: 2,
      };
    }
    const Jn = wt();
    class Kn extends Un {
      constructor(e) {
        super(null, []),
          (this.lines = e),
          (this.root = null),
          (this.errors = []),
          (this.warnings = []),
          (this.lineComments = []);
      }
      getSchemas(e, t, n) {
        const r = [];
        return t.validate(e, r, n.start), r;
      }
    }
    function zn(e, t, n) {
      const r = new Kn(t);
      (r.root = (function e(t, n) {
        if (n)
          switch (n.kind) {
            case Xt.Kind.MAP: {
              const r = n,
                i = new Bn(t, n.startPosition, n.endPosition - n.startPosition);
              for (const t of r.mappings) i.properties.push(e(i, t));
              return i;
            }
            case Xt.Kind.MAPPING: {
              const r = n,
                i = r.key,
                a = new Nn(t, r.startPosition, r.endPosition - r.startPosition),
                o = new On(a, i.startPosition, i.endPosition - i.startPosition);
              o.value = i.value;
              const s = r.value ? e(a, r.value) : new Fn(t, r.endPosition, 0);
              return (
                (s.location = i.value), (a.keyNode = o), (a.valueNode = s), a
              );
            }
            case Xt.Kind.SEQ: {
              const r = n,
                i = new Tn(t, r.startPosition, r.endPosition - r.startPosition),
                a = 0;
              for (const n of r.items) {
                if (null === n && a === r.items.length - 1) break;
                const o = null === n ? new Fn(t, r.endPosition, 0) : e(i, n);
                i.children.push(o);
              }
              return i;
            }
            case Xt.Kind.SCALAR: {
              const e = n,
                r = Xt.determineScalarType(e),
                i = e.value,
                a = [
                  'y',
                  'Y',
                  'yes',
                  'Yes',
                  'YES',
                  'n',
                  'N',
                  'no',
                  'No',
                  'NO',
                  'on',
                  'On',
                  'ON',
                  'off',
                  'Off',
                  'OFF',
                ];
              if (e.plainScalar && -1 !== a.indexOf(i.toString()))
                return new kn(
                  t,
                  (function(e) {
                    if (
                      [
                        'true',
                        'True',
                        'TRUE',
                        'y',
                        'Y',
                        'yes',
                        'Yes',
                        'YES',
                        'on',
                        'On',
                        'ON',
                      ].lastIndexOf(e) >= 0
                    )
                      return !0;
                    if (
                      [
                        'false',
                        'False',
                        'FALSE',
                        'n',
                        'N',
                        'no',
                        'No',
                        'NO',
                        'off',
                        'Off',
                        'OFF',
                      ].lastIndexOf(e) >= 0
                    )
                      return !1;
                    throw `Invalid boolean "${e}"`;
                  })(i),
                  n.startPosition,
                  n.endPosition - n.startPosition,
                );
              switch (r) {
                case Xt.ScalarType.null:
                  return new Fn(
                    t,
                    n.startPosition,
                    n.endPosition - n.startPosition,
                  );
                case Xt.ScalarType.bool:
                  return new kn(
                    t,
                    Xt.parseYamlBoolean(i),
                    n.startPosition,
                    n.endPosition - n.startPosition,
                  );
                case Xt.ScalarType.int: {
                  const e = new _n(
                    t,
                    n.startPosition,
                    n.endPosition - n.startPosition,
                  );
                  return (
                    (e.value = Xt.parseYamlInteger(i)), (e.isInteger = !0), e
                  );
                }
                case Xt.ScalarType.float: {
                  const e = new _n(
                    t,
                    n.startPosition,
                    n.endPosition - n.startPosition,
                  );
                  return (
                    (e.value = Xt.parseYamlFloat(i)), (e.isInteger = !1), e
                  );
                }
                case Xt.ScalarType.string: {
                  const e = new On(
                    t,
                    n.startPosition,
                    n.endPosition - n.startPosition,
                  );
                  return (e.value = n.value), e;
                }
              }
              break;
            }
            case Xt.Kind.ANCHOR_REF:
              return (
                e(t, n.value) ||
                new Fn(t, n.startPosition, n.endPosition - n.startPosition)
              );
            case Xt.Kind.INCLUDE_REF: {
              const e = new On(
                t,
                n.startPosition,
                n.endPosition - n.startPosition,
              );
              return (e.value = n.value), e;
            }
          }
      })(null, e)),
        r.root ||
          r.errors.push({
            message: Jn(
              'Invalid symbol',
              'Expected a YAML object, array or literal',
            ),
            code: Dt.Undefined,
            location: { start: e.startPosition, end: e.endPosition },
          });
      const i = e.errors
        .filter(e => 'duplicate key' !== e.reason && !e.isWarning)
        .map(e => Yn(e));
      const a = (function(e, t) {
        return e
          .filter(
            e =>
              ('duplicate key' === e.reason &&
                (function(e, t) {
                  const n = e.mark.position,
                    r = e.mark.position + e.mark.column;
                  return (
                    'duplicate key' !== e.reason ||
                    !t.substring(n, r).startsWith('<<')
                  );
                })(e, t)) ||
              e.isWarning,
          )
          .map(e => Yn(e));
      })(e.errors, n);
      return (
        i.forEach(e => r.errors.push(e)), a.forEach(e => r.warnings.push(e)), r
      );
    }
    class Hn {
      constructor(e) {
        (this.documents = e), (this.errors = []), (this.warnings = []);
      }
    }
    function Xn(e, t = []) {
      const n = (function(e) {
          const t = qn(e),
            n = Wn.Schema.create(
              t.map(e => {
                const t = e.split(' ');
                return new Wn.Type(t[0], {
                  kind: (t[1] && t[1].toLowerCase()) || 'scalar',
                });
              }),
            ),
            r = new Map();
          return (
            t.forEach(e => {
              const t = e.split(' '),
                n = t[0],
                i = (t[1] && t[1].toLowerCase()) || 'scalar';
              r.has(n) ? r.set(n, r.get(n).concat([i])) : r.set(n, [i]);
            }),
            r.forEach((e, t) => {
              const r = new Wn.Type(t, { kind: e[0] || 'scalar' });
              (r.additionalKinds = e), (n.compiledTypeMap[t] = r);
            }),
            { schema: n }
          );
        })(t),
        r = [];
      Xt.loadAll(e, e => r.push(e), n);
      const i = (function(e) {
          const t = [0];
          for (let n = 0; n < e.length; n++) {
            const r = e[n];
            '\r' === r
              ? (n + 1 < e.length && '\n' === e[n + 1] && n++, t.push(n + 1))
              : '\n' === r && t.push(n + 1);
          }
          return t;
        })(e),
        a = r.map(t => zn(t, i, e));
      return (
        (function(e, t) {
          const n = e.split(/[\r\n]+/g);
          let r = 0,
            i = !1;
          n.forEach(e => {
            '---' === e && i ? r++ : '---' === e && (i = !0),
              e.startsWith('#') && r < t.length && t[r].lineComments.push(e);
          });
        })(e, a),
        new Hn(a)
      );
    }
    var Gn = function(e, t, n, r) {
      return new (n || (n = Promise))(function(i, a) {
        function o(e) {
          try {
            u(r.next(e));
          } catch (e) {
            a(e);
          }
        }
        function s(e) {
          try {
            u(r.throw(e));
          } catch (e) {
            a(e);
          }
        }
        function u(e) {
          var t;
          e.done
            ? i(e.value)
            : ((t = e.value),
              t instanceof n
                ? t
                : new n(function(e) {
                    e(t);
                  })).then(o, s);
        }
        u((r = r.apply(e, t || [])).next());
      });
    };
    const Qn = wt();
    var Zn;
    !(function(e) {
      (e[(e.delete = 0)] = 'delete'), (e[(e.add = 1)] = 'add');
    })(Zn || (Zn = {}));
    class er extends Jt {
      constructor(e, t, n) {
        super(e, t, n),
          (this.customSchemaProvider = void 0),
          (this.requestService = e);
      }
      registerCustomSchemaProvider(e) {
        this.customSchemaProvider = e;
      }
      resolveSchemaContent(e, t, n) {
        const r = e.errors.slice(0),
          i = e.schema,
          a = this.contextService,
          o = (e, t, n, i) => {
            const a = ((e, t) => {
              if (!t) return e;
              let n = e;
              return (
                '/' === t[0] && (t = t.substr(1)),
                t.split('/').some(e => ((n = n[e]), !n)),
                n
              );
            })(t, i);
            if (a)
              for (const t in a)
                Object.prototype.hasOwnProperty.call(a, t) &&
                  !Object.prototype.hasOwnProperty.call(e, t) &&
                  (e[t] = a[t]);
            else
              r.push(
                Qn(
                  'json.schema.invalidref',
                  "$ref '{0}' in '{1}' can not be resolved.",
                  i,
                  n,
                ),
              );
          },
          s = (e, t, n, i, s) => {
            a && !/^\w+:\/\/.*/.test(t) && (t = a.resolveRelativePath(t, i)),
              (t = this.normalizeId(t));
            const c = this.getOrAddSchemaHandle(t);
            return c.getUnresolvedSchema().then(i => {
              if (((s[t] = !0), i.errors.length)) {
                const e = n ? t + '#' + n : t;
                r.push(
                  Qn(
                    'json.schema.problemloadingref',
                    "Problems loading reference '{0}': {1}",
                    e,
                    i.errors[0],
                  ),
                );
              }
              return o(e, i.schema, t, n), u(e, i.schema, t, c.dependencies);
            });
          },
          u = (e, t, n, r) => {
            if (!e || 'object' != typeof e) return Promise.resolve(null);
            const i = [e],
              a = [],
              u = [],
              c = e => {
                const a = [];
                for (; e.$ref; ) {
                  const i = e.$ref,
                    c = i.split('#', 2);
                  if ((delete e.$ref, c[0].length > 0))
                    return void u.push(s(e, c[0], c[1], n, r));
                  -1 === a.indexOf(i) && (o(e, t, n, c[1]), a.push(i));
                }
                ((...e) => {
                  for (const t of e) 'object' == typeof t && i.push(t);
                })(
                  e.items,
                  e.additionalProperties,
                  e.not,
                  e.contains,
                  e.propertyNames,
                  e.if,
                  e.then,
                  e.else,
                ),
                  ((...e) => {
                    for (const t of e)
                      if ('object' == typeof t)
                        for (const e in t) {
                          const n = t[e];
                          'object' == typeof n && i.push(n);
                        }
                  })(
                    e.definitions,
                    e.properties,
                    e.patternProperties,
                    e.dependencies,
                  ),
                  ((...e) => {
                    for (const t of e)
                      if (Array.isArray(t))
                        for (const e of t) 'object' == typeof e && i.push(e);
                  })(e.anyOf, e.allOf, e.oneOf, e.items, e.schemaSequence);
              };
            for (; i.length; ) {
              const e = i.pop();
              a.indexOf(e) >= 0 || (a.push(e), c(e));
            }
            return Promise.all(u);
          };
        return u(i, i, t, n).then(() => new Yt(i, r));
      }
      getSchemaForResource(e, t) {
        const n = () => {
          const n = Object.create(null),
            r = [],
            i = this.getSchemaFromModeline(t);
          void 0 !== i && (r.push(i), (n[i] = !0));
          for (const t of this.filePatternAssociations)
            if (t.matchesPattern(e))
              for (const e of t.getURIs()) n[e] || (r.push(e), (n[e] = !0));
          const a = this.normalizeId(e);
          return (
            this.schemasById[a] && r.push(a),
            r.length > 0
              ? super
                  .createCombinedSchema(e, r)
                  .getResolvedSchema()
                  .then(e =>
                    e.schema &&
                    e.schema.schemaSequence &&
                    e.schema.schemaSequence[t.currentDocIndex]
                      ? new Yt(e.schema.schemaSequence[t.currentDocIndex])
                      : e,
                  )
              : Promise.resolve(null)
          );
        };
        return this.customSchemaProvider
          ? this.customSchemaProvider(e)
              .then(e =>
                Array.isArray(e)
                  ? 0 === e.length
                    ? n()
                    : Promise.all(
                        e.map(e => this.resolveCustomSchema(e, t)),
                      ).then(
                        e => ({
                          errors: [],
                          schema: { anyOf: e.map(e => e.schema) },
                        }),
                        () => n(),
                      )
                  : e
                  ? this.resolveCustomSchema(e, t)
                  : n(),
              )
              .then(
                e => e,
                () => n(),
              )
          : n();
      }
      getSchemaFromModeline(e) {
        if (e instanceof Kn) {
          const t = e.lineComments.find(e => {
            const t = e.match(/^#\s+yaml-language-server\s*:/g);
            return null !== t && 1 === t.length;
          });
          if (null != t) {
            const e = t.match(/\$schema=\S+/g);
            if (null !== e && e.length >= 1)
              return (
                e.length >= 2 &&
                  console.log(
                    'Several $schema attributes have been found on the yaml-language-server modeline. The first one will be picked.',
                  ),
                e[0].substring('$schema='.length)
              );
          }
        }
      }
      resolveCustomSchema(e, t) {
        return Gn(this, void 0, void 0, function*() {
          const n = yield this.loadSchema(e),
            r = yield this.resolveSchemaContent(n, e, []);
          return r.schema &&
            r.schema.schemaSequence &&
            r.schema.schemaSequence[t.currentDocIndex]
            ? new Yt(r.schema.schemaSequence[t.currentDocIndex])
            : r;
        });
      }
      saveSchema(e, t) {
        return Gn(this, void 0, void 0, function*() {
          const n = this.normalizeId(e);
          return this.getOrAddSchemaHandle(n, t), Promise.resolve(void 0);
        });
      }
      deleteSchema(e) {
        return Gn(this, void 0, void 0, function*() {
          const t = this.normalizeId(e);
          return (
            this.schemasById[t] && delete this.schemasById[t],
            Promise.resolve(void 0)
          );
        });
      }
      addContent(e) {
        return Gn(this, void 0, void 0, function*() {
          const t = yield this.getResolvedSchema(e.schema);
          if (t) {
            const n = this.resolveJSONSchemaToSection(t.schema, e.path);
            'object' == typeof n && (n[e.key] = e.content),
              yield this.saveSchema(e.schema, t.schema);
          }
        });
      }
      deleteContent(e) {
        return Gn(this, void 0, void 0, function*() {
          const t = yield this.getResolvedSchema(e.schema);
          if (t) {
            const n = this.resolveJSONSchemaToSection(t.schema, e.path);
            'object' == typeof n && delete n[e.key],
              yield this.saveSchema(e.schema, t.schema);
          }
        });
      }
      resolveJSONSchemaToSection(e, t) {
        const n = t.split('/');
        let r = e;
        for (const e of n) '' !== e && (this.resolveNext(r, e), (r = r[e]));
        return r;
      }
      resolveNext(e, t) {
        if (Array.isArray(e) && isNaN(t))
          throw new Error('Expected a number after the array object');
        if ('object' == typeof e && 'string' != typeof t)
          throw new Error('Expected a string after the object');
      }
      normalizeId(e) {
        try {
          return Be.a.parse(e).toString();
        } catch (t) {
          return e;
        }
      }
      getOrAddSchemaHandle(e, t) {
        return super.getOrAddSchemaHandle(e, t);
      }
      loadSchema(e) {
        const t = this.requestService;
        return super.loadSchema(e).then(n =>
          n.errors && void 0 === n.schema
            ? t(e).then(
                t => {
                  if (!t) {
                    const t = Qn(
                      'json.schema.nocontent',
                      "Unable to load schema from '{0}': No content.",
                      tr(e),
                    );
                    return new qt({}, [t]);
                  }
                  try {
                    const e = Wn.safeLoad(t);
                    return new qt(e, []);
                  } catch (t) {
                    const n = Qn(
                      'json.schema.invalidFormat',
                      "Unable to parse content from '{0}': {1}.",
                      tr(e),
                      t,
                    );
                    return new qt({}, [n]);
                  }
                },
                e => {
                  let t = e.toString();
                  const n = e.toString().split('Error: ');
                  return n.length > 1 && (t = n[1]), new qt({}, [t]);
                },
              )
            : n,
        );
      }
      registerExternalSchema(e, t, n) {
        return super.registerExternalSchema(e, t, n);
      }
      clearExternalSchemas() {
        super.clearExternalSchemas();
      }
      setSchemaContributions(e) {
        super.setSchemaContributions(e);
      }
      getRegisteredSchemaIds(e) {
        return super.getRegisteredSchemaIds(e);
      }
      getResolvedSchema(e) {
        return super.getResolvedSchema(e);
      }
      onResourceChange(e) {
        return super.onResourceChange(e);
      }
    }
    function tr(e) {
      try {
        const t = Be.a.parse(e);
        if ('file' === t.scheme) return t.fsPath;
      } catch (e) {}
      return e;
    }
    class nr {
      constructor(e) {
        this.jsonDocumentSymbols = new pn(e);
        const t = this.jsonDocumentSymbols.getKeyLabel;
        this.jsonDocumentSymbols.getKeyLabel = e =>
          'object' == typeof e.keyNode.value
            ? e.keyNode.value.value
            : t.call(this.jsonDocumentSymbols, e);
      }
      findDocumentSymbols(e) {
        const t = Xn(e.getText());
        if (!t || 0 === t.documents.length) return null;
        let n = [];
        for (const r of t.documents)
          r.root &&
            (n = n.concat(this.jsonDocumentSymbols.findDocumentSymbols(e, r)));
        return n;
      }
      findHierarchicalDocumentSymbols(e) {
        const t = Xn(e.getText());
        if (!t || 0 === t.documents.length) return null;
        let n = [];
        for (const r of t.documents)
          r.root &&
            (n = n.concat(this.jsonDocumentSymbols.findDocumentSymbols2(e, r)));
        return n;
      }
    }
    function rr(e, t) {
      const n = {};
      for (let r = 0; r < Object.keys(e).length; r++) {
        const i = Object.keys(e)[r];
        0 === r
          ? (n['- '.repeat(t) + i] = e[i])
          : (n['  '.repeat(t) + i] = e[i]);
      }
      return n;
    }
    class ir {
      constructor() {
        (this.spacesDiff = 0), (this.looksLikeAlignment = !1);
      }
    }
    function ar(e, t, n, r, i) {
      let a;
      for (
        i.spacesDiff = 0, i.looksLikeAlignment = !1, a = 0;
        a < t && a < r;
        a++
      ) {
        if (e.charCodeAt(a) !== n.charCodeAt(a)) break;
      }
      let o = 0,
        s = 0;
      for (let n = a; n < t; n++) {
        32 === e.charCodeAt(n) ? o++ : s++;
      }
      let u = 0,
        c = 0;
      for (let e = a; e < r; e++) {
        32 === n.charCodeAt(e) ? u++ : c++;
      }
      if (o > 0 && s > 0) return;
      if (u > 0 && c > 0) return;
      const l = Math.abs(s - c),
        p = Math.abs(o - u);
      if (0 === l)
        return (
          (i.spacesDiff = p),
          void (
            p > 0 &&
            0 <= u - 1 &&
            u - 1 < e.length &&
            u < n.length &&
            32 !== n.charCodeAt(u) &&
            32 === e.charCodeAt(u - 1) &&
            44 === e.charCodeAt(e.length - 1) &&
            (i.looksLikeAlignment = !0)
          )
        );
      p % l != 0 || (i.spacesDiff = p / l);
    }
    class or {
      constructor(e) {
        this.doc = e;
      }
      getLineCount() {
        return this.doc.lineCount;
      }
      getLineLength(e) {
        const t = this.doc.getLineOffsets();
        if (e >= t.length) return this.doc.getText().length;
        if (e < 0) return 0;
        return (e + 1 < t.length ? t[e + 1] : this.doc.getText().length) - t[e];
      }
      getLineContent(e) {
        const t = this.doc.getLineOffsets();
        if (e >= t.length) return this.doc.getText();
        if (e < 0) return '';
        const n = e + 1 < t.length ? t[e + 1] : this.doc.getText().length;
        return this.doc.getText().substring(t[e], n);
      }
      getLineCharCode(e, t) {
        return this.doc.getText(i.create(e - 1, t - 1, e - 1, t)).charCodeAt(0);
      }
    }
    const sr = wt();
    class ur extends tn {
      constructor(e, t = [], n = Promise, r = {}) {
        super(e, t, n),
          (this.clientCapabilities = r),
          (this.schemaService = e),
          (this.contributions = t),
          (this.promise = n || Promise),
          (this.customTags = []),
          (this.completion = !0);
      }
      configure(e, t) {
        e && (this.completion = e.completion),
          (this.customTags = t),
          (this.configuredIndentation = e.indentation);
      }
      doResolve(e) {
        for (let t = this.contributions.length - 1; t >= 0; t--)
          if (this.contributions[t].resolveCompletion) {
            const n = this.contributions[t].resolveCompletion(e);
            if (n) return n;
          }
        return this.promise.resolve(e);
      }
      doComplete(e, t, n = !1) {
        const r = { items: [], isIncomplete: !1 };
        if (!this.completion) return Promise.resolve(r);
        const a = Xn(this.completionHelper(e, t).newText);
        if (this.configuredIndentation)
          this.indentation = this.configuredIndentation;
        else {
          const t = (function(e, t, n) {
            const r = Math.min(e.getLineCount(), 1e4);
            let i = 0,
              a = 0,
              o = '',
              s = 0;
            const u = [2, 4, 6, 8, 3, 5, 7],
              c = [0, 0, 0, 0, 0, 0, 0, 0, 0],
              l = new ir();
            for (let u = 1; u <= r; u++) {
              const r = e.getLineLength(u),
                p = e.getLineContent(u),
                f = r <= 65536;
              let h = !1,
                d = 0,
                m = 0,
                g = 0;
              for (let t = 0, n = r; t < n; t++) {
                const n = f ? p.charCodeAt(t) : e.getLineCharCode(u, t);
                if (9 === n) g++;
                else {
                  if (32 !== n) {
                    (h = !0), (d = t);
                    break;
                  }
                  m++;
                }
              }
              if (!h) continue;
              if (
                (g > 0 ? i++ : m > 1 && a++,
                ar(o, s, p, d, l),
                l.looksLikeAlignment && (!n || t !== l.spacesDiff))
              )
                continue;
              const y = l.spacesDiff;
              y <= 8 && c[y]++, (o = p), (s = d);
            }
            let p = n;
            i !== a && (p = i < a);
            let f = t;
            if (p) {
              let e = p ? 0 : 0.1 * r;
              u.forEach(t => {
                const n = c[t];
                n > e && ((e = n), (f = t));
              }),
                4 === f && c[4] > 0 && c[2] > 0 && c[2] >= c[4] / 2 && (f = 2);
            }
            return { insertSpaces: p, tabSize: f };
          })(new or(e), 2, !0);
          this.indentation = t.insertSpaces ? ' '.repeat(t.tabSize) : '\t';
        }
        this.setKubernetesParserOption(a.documents, n);
        const o = e.offsetAt(t);
        if (':' === e.getText()[o]) return Promise.resolve(r);
        const s = $n(o, a);
        if (null === s) return Promise.resolve(r);
        const u = a.documents.indexOf(s);
        let c = s.getNodeFromOffsetEndInclusive(o);
        const l = super.getCurrentWord(e, o);
        let p = null;
        if (c && 'null' === c.type) {
          const t = e.positionAt(c.offset);
          t.character += 1;
          const n = e.positionAt(c.offset + c.length);
          (n.character += 1), (p = i.create(t, n));
        } else if (
          !c ||
          ('string' !== c.type && 'number' !== c.type && 'boolean' !== c.type)
        ) {
          let n = o - l.length;
          n > 0 && '"' === e.getText()[n - 1] && n--,
            (p = i.create(e.positionAt(n), t));
        } else
          p = i.create(
            e.positionAt(c.offset),
            e.positionAt(c.offset + c.length),
          );
        const f = {},
          h = {
            add: e => {
              let t = e.label;
              const n = f[t];
              if (n) n.documentation || (n.documentation = e.documentation);
              else {
                if (((t = t.replace(/[\n]/g, '↵')), t.length > 60)) {
                  const e = t.substr(0, 57).trim() + '...';
                  f[e] || (t = e);
                }
                p &&
                  p.start.line === p.end.line &&
                  (e.textEdit = y.replace(p, e.insertText)),
                  (e.label = t),
                  (f[t] = e),
                  r.items.push(e);
              }
            },
            setAsIncomplete: () => {
              r.isIncomplete = !0;
            },
            error: e => {
              console.error(e);
            },
            log: e => {
              console.log(e);
            },
            getNumberOfProposals: () => r.items.length,
          };
        return (
          this.customTags.length > 0 && this.getCustomTagValueCompletions(h),
          (s.currentDocIndex = u),
          this.schemaService.getSchemaForResource(e.uri, s).then(t => {
            if (!t) return Promise.resolve(r);
            const n = t,
              i = [];
            let a = !0,
              u = null;
            if (c && 'string' === c.type) {
              const e = c.parent;
              e &&
                'property' === e.type &&
                e.keyNode === c &&
                ((a = !e.valueNode), (u = e), e && (c = e.parent));
            }
            if (c && 'object' === c.type) {
              c.properties.forEach(e => {
                (u && u === e) || (f[e.keyNode.value] = N.create('__'));
              });
              const r = '';
              n && this.getPropertyCompletions(n, s, c, a, r, h, e);
              const p = (function(e) {
                return le(e);
              })(c);
              this.contributions.forEach(t => {
                const n = t.collectPropertyCompletions(e.uri, p, l, a, !1, h);
                n && i.push(n);
              }),
                !t &&
                  l.length > 0 &&
                  '"' !== e.getText().charAt(o - l.length - 1) &&
                  h.add({
                    kind: T.Property,
                    label: l,
                    insertText: this.getInsertTextForProperty(l, null, !1, r),
                    insertTextFormat: _.Snippet,
                    documentation: '',
                  });
            }
            const p = {};
            return (
              n && this.getValueCompletions(n, s, c, o, e, h, p),
              this.contributions.length > 0 &&
                super.getContributedValueCompletions(s, c, o, e, h, i),
              this.promise.all(i).then(() => r)
            );
          })
        );
      }
      getPropertyCompletions(e, t, n, r, i, a, o) {
        t.getMatchingSchemas(e.schema).forEach(e => {
          if (e.node === n && !e.inverted) {
            this.collectDefaultSnippets(e.schema, i, a, {
              newLineFirst: !1,
              indentFirstObject: !1,
              shouldIndentWithTab: !1,
            });
            const t = e.schema.properties;
            if (t) {
              const s = e.schema.maxProperties;
              (void 0 === s ||
                void 0 === n.properties ||
                n.properties.length <= s) &&
                Object.keys(t).forEach(e => {
                  const s = t[e];
                  if (
                    'object' == typeof s &&
                    !s.deprecationMessage &&
                    !s.doNotSuggest
                  ) {
                    let t = '';
                    if (n.parent && 'array' === n.parent.type) {
                      const e = o.getText(),
                        r = e.lastIndexOf('-', n.offset - 1);
                      r >= 0 && (t = ' ' + e.slice(r + 1, n.offset));
                    }
                    a.add({
                      kind: T.Property,
                      label: e,
                      insertText: this.getInsertTextForProperty(
                        e,
                        s,
                        r,
                        i,
                        t + this.indentation,
                      ),
                      insertTextFormat: _.Snippet,
                      documentation: s.description || '',
                    });
                  }
                });
            }
            'object' === n.type &&
              n.parent &&
              'array' === n.parent.type &&
              'object' !== e.schema.type &&
              this.addSchemaValueCompletions(e.schema, i, a, {});
          }
          n.parent &&
            e.node === n.parent &&
            'object' === n.type &&
            e.schema.defaultSnippets &&
            (1 === n.properties.length
              ? this.collectDefaultSnippets(
                  e.schema,
                  i,
                  a,
                  {
                    newLineFirst: !1,
                    indentFirstObject: !1,
                    shouldIndentWithTab: !0,
                  },
                  1,
                )
              : this.collectDefaultSnippets(
                  e.schema,
                  i,
                  a,
                  {
                    newLineFirst: !1,
                    indentFirstObject: !0,
                    shouldIndentWithTab: !1,
                  },
                  1,
                ));
        });
      }
      getValueCompletions(e, t, n, r, i, a, o) {
        let s = null;
        if (
          (!n ||
            ('string' !== n.type &&
              'number' !== n.type &&
              'boolean' !== n.type) ||
            (n = n.parent),
          n && 'null' === n.type)
        ) {
          const e = n.parent;
          if (e && 'object' === e.type)
            for (const t in e.properties) {
              const r = e.properties[t];
              r.keyNode && r.keyNode.value === n.location && (n = r);
            }
        }
        if (n) {
          if ('property' === n.type && r > n.colonOffset) {
            const e = n.valueNode;
            if (e && r > e.offset + e.length) return;
            (s = n.keyNode.value), (n = n.parent);
          }
          if (n && (null !== s || 'array' === n.type)) {
            const u = '';
            t.getMatchingSchemas(e.schema).forEach(e => {
              if (e.node === n && !e.inverted && e.schema) {
                if (e.schema.items)
                  if (Array.isArray(e.schema.items)) {
                    const t = super.findItemAtOffset(n, i, r);
                    t < e.schema.items.length &&
                      this.addSchemaValueCompletions(
                        e.schema.items[t],
                        u,
                        a,
                        o,
                      );
                  } else
                    'object' == typeof e.schema.items &&
                    'object' === e.schema.items.type
                      ? (a.add({
                          kind: super.getSuggestionKind(e.schema.items.type),
                          label: '- (array item)',
                          documentation:
                            'Create an item of an array' +
                            (void 0 === e.schema.description
                              ? ''
                              : '(' + e.schema.description + ')'),
                          insertText:
                            '- ' +
                            this.getInsertTextForObject(
                              e.schema.items,
                              u,
                            ).insertText.trimLeft(),
                          insertTextFormat: _.Snippet,
                        }),
                        this.addSchemaValueCompletions(e.schema.items, u, a, o))
                      : this.addSchemaValueCompletions(e.schema.items, u, a, o);
                if (e.schema.properties) {
                  const t = e.schema.properties[s];
                  t && this.addSchemaValueCompletions(t, u, a, o);
                }
              }
            }),
              o.boolean &&
                (this.addBooleanValueCompletion(!0, u, a),
                this.addBooleanValueCompletion(!1, u, a)),
              o.null && this.addNullValueCompletion(u, a);
          }
        } else this.addSchemaValueCompletions(e.schema, '', a, o);
      }
      getCustomTagValueCompletions(e) {
        qn(this.customTags).forEach(t => {
          const n = t.split(' ')[0];
          this.addCustomTagValueCompletion(e, ' ', n);
        });
      }
      addSchemaValueCompletions(e, t, n, r) {
        super.addSchemaValueCompletions(e, t, n, r);
      }
      addDefaultValueCompletions(e, t, n, r = 0) {
        let i = !1;
        if (cr(e.default)) {
          let a,
            o = e.type,
            s = e.default;
          for (let e = r; e > 0; e--) (s = [s]), (o = 'array');
          (a = 'object' == typeof s ? 'Default value' : s.toString()),
            n.add({
              kind: this.getSuggestionKind(o),
              label: a,
              insertText: this.getInsertTextForValue(s, t),
              insertTextFormat: _.Snippet,
              detail: sr('json.suggest.default', 'Default value'),
            }),
            (i = !0);
        }
        Array.isArray(e.examples) &&
          e.examples.forEach(a => {
            let o = e.type,
              s = a;
            for (let e = r; e > 0; e--) (s = [s]), (o = 'array');
            n.add({
              kind: this.getSuggestionKind(o),
              label: s,
              insertText: this.getInsertTextForValue(s, t),
              insertTextFormat: _.Snippet,
            }),
              (i = !0);
          }),
          this.collectDefaultSnippets(e, t, n, {
            newLineFirst: !0,
            indentFirstObject: !0,
            shouldIndentWithTab: !0,
          }),
          i ||
            'object' != typeof e.items ||
            Array.isArray(e.items) ||
            this.addDefaultValueCompletions(e.items, t, n, r + 1);
      }
      collectDefaultSnippets(e, t, n, r, i = 0) {
        Array.isArray(e.defaultSnippets) &&
          e.defaultSnippets.forEach(a => {
            let o,
              s,
              u = e.type,
              c = a.body,
              l = a.label;
            if (cr(c)) {
              const n = e.type;
              if (0 === i && 'array' === n) {
                const e = {};
                Object.keys(c).forEach((t, n) => {
                  0 !== n || t.startsWith('-')
                    ? (e['  ' + t] = c[t])
                    : (e['- ' + t] = c[t]);
                }),
                  (c = e);
              }
              (o = this.getInsertTextForSnippetValue(c, t, r)),
                (l = l || this.getLabelForSnippetValue(c));
            } else if ('string' == typeof a.bodyText) {
              let e = '',
                n = '',
                r = '';
              for (let t = i; t > 0; t--)
                (e = e + r + '[\n'),
                  (n = n + '\n' + r + ']'),
                  (r += this.indentation),
                  (u = 'array');
              (o = e + r + a.bodyText.split('\n').join('\n' + r) + n + t),
                (l = l || o),
                (s = o.replace(/[\n]/g, ''));
            }
            n.add({
              kind: this.getSuggestionKind(u),
              label: l,
              documentation:
                super.fromMarkup(a.markdownDescription) || a.description,
              insertText: o,
              insertTextFormat: _.Snippet,
              filterText: s,
            });
          });
      }
      getInsertTextForSnippetValue(e, t, n, r) {
        return (
          (function e(t, n, r, i, a = 0, o = 0) {
            if (null !== t && 'object' == typeof t) {
              const s =
                (0 === a && i.shouldIndentWithTab) || a > 0 ? n + '  ' : '';
              if (Array.isArray(t)) {
                if (((o += 1), 0 === t.length)) return '';
                let u = '';
                for (let c = 0; c < t.length; c++) {
                  let l = t[c];
                  Array.isArray(t[c]) || (l = rr(t[c], o)),
                    (u += s + e(l, n, r, i, (a += 1), o)),
                    c < t.length - 1 && (u += '\n');
                }
                return (u += n), u;
              }
              {
                const o = Object.keys(t);
                if (0 === o.length) return '';
                let u = (0 === a && i.newLineFirst) || a > 0 ? '\n' : '';
                for (let c = 0; c < o.length; c++) {
                  const l = o[c];
                  0 !== a || 0 !== c || i.indentFirstObject
                    ? (u += s + l + ': ' + e(t[l], s, r, i, (a += 1), 0))
                    : (u += n + l + ': ' + e(t[l], s, r, i, (a += 1), 0)),
                    c < o.length - 1 && (u += '\n');
                }
                return (u += n), u;
              }
            }
            return r(t);
          })(
            e,
            '',
            e => {
              if ('string' == typeof e) {
                if ('^' === e[0]) return e.substr(1);
                if ('true' === e || 'false' === e) return `"${e}"`;
              }
              return e;
            },
            n,
            r,
          ) + t
        );
      }
      getLabelForSnippetValue(e) {
        return JSON.stringify(e).replace(/\$\{\d+:([^}]+)\}|\$\d+/g, '$1');
      }
      addCustomTagValueCompletion(e, t, n) {
        e.add({
          kind: super.getSuggestionKind('string'),
          label: n,
          insertText: n + t,
          insertTextFormat: _.Snippet,
          documentation: '',
        });
      }
      addBooleanValueCompletion(e, t, n) {
        n.add({
          kind: this.getSuggestionKind('boolean'),
          label: e ? 'true' : 'false',
          insertText: this.getInsertTextForValue(e, t),
          insertTextFormat: _.Snippet,
          documentation: '',
        });
      }
      getSuggestionKind(e) {
        if (Array.isArray(e)) {
          const t = e;
          e = t.length > 0 ? t[0] : null;
        }
        if (!e) return T.Value;
        switch (e) {
          case 'string':
            return T.Value;
          case 'object':
            return T.Module;
          case 'property':
            return T.Property;
          default:
            return T.Value;
        }
      }
      addNullValueCompletion(e, t) {
        t.add({
          kind: this.getSuggestionKind('null'),
          label: 'null',
          insertText: 'null' + e,
          insertTextFormat: _.Snippet,
          documentation: '',
        });
      }
      getInsertTextForValue(e, t) {
        switch (typeof e) {
          case 'object': {
            const n = this.indentation;
            return this.getInsertTemplateForValue(e, n, { index: 1 }, t);
          }
        }
        return this.getInsertTextForPlainText(e + t);
      }
      getInsertTemplateForValue(e, t, n, r) {
        if (Array.isArray(e)) {
          let r = '\n';
          for (const i of e) r += `${t}- \${${n.index++}:${i}}\n`;
          return r;
        }
        if ('object' == typeof e) {
          let i = '\n';
          for (const a in e)
            if (Object.prototype.hasOwnProperty.call(e, a)) {
              const o = e[a];
              let s;
              (i += `${t}\${${n.index++}:${a}}:`),
                (s =
                  'object' == typeof o
                    ? '' +
                      this.getInsertTemplateForValue(
                        o,
                        t + this.indentation,
                        n,
                        r,
                      )
                    : ` \${${n.index++}:${this.getInsertTextForPlainText(
                        o + r,
                      )}}\n`),
                (i += '' + s);
            }
          return i;
        }
        return this.getInsertTextForPlainText(e + r);
      }
      getInsertTextForPlainText(e) {
        return e.replace(/[\\$}]/g, '\\$&');
      }
      getInsertTextForObject(e, t, n = this.indentation, r = 1) {
        let i = '';
        return e.properties
          ? (Object.keys(e.properties).forEach(a => {
              const o = e.properties[a];
              let s = Array.isArray(o.type) ? o.type[0] : o.type;
              if (
                (s ||
                  (o.properties && (s = 'object'), o.items && (s = 'array')),
                e.required && e.required.indexOf(a) > -1)
              )
                switch (s) {
                  case 'boolean':
                  case 'string':
                  case 'number':
                  case 'integer':
                    i += `${n}${a}: $${r++}\n`;
                    break;
                  case 'array':
                    {
                      const e = this.getInsertTextForArray(
                        o.items,
                        t,
                        `${n}${this.indentation}`,
                        r++,
                      );
                      (r = e.insertIndex),
                        (i += `${n}${a}:\n${n}${this.indentation}- ${e.insertText}\n`);
                    }
                    break;
                  case 'object': {
                    const e = this.getInsertTextForObject(
                      o,
                      t,
                      `${n}${this.indentation}`,
                      r++,
                    );
                    (r = e.insertIndex), (i += `${n}${a}:\n${e.insertText}\n`);
                  }
                }
              else if (void 0 !== o.default)
                switch (s) {
                  case 'boolean':
                  case 'string':
                  case 'number':
                  case 'integer':
                    i += `${n}${a}: \${${r++}:${o.default}}\n`;
                }
            }),
            0 === i.trim().length && (i = `${n}$${r++}\n`),
            (i = i.trimRight() + t),
            { insertText: i, insertIndex: r })
          : ((i = `${n}$${r++}\n`), { insertText: i, insertIndex: r });
      }
      getInsertTextForArray(e, t, n = this.indentation, r = 1) {
        let i = '';
        e || (i = '$' + r++);
        let a = Array.isArray(e.type) ? e.type[0] : e.type;
        switch (
          (a || (e.properties && (a = 'object'), e.items && (a = 'array')),
          e.type)
        ) {
          case 'boolean':
            i = `\${${r++}:false}`;
            break;
          case 'number':
          case 'integer':
            i = `\${${r++}:0}`;
            break;
          case 'string':
            i = `\${${r++}:""}`;
            break;
          case 'object': {
            const a = this.getInsertTextForObject(
              e,
              t,
              `${n}${this.indentation}`,
              r++,
            );
            (i = a.insertText.trimLeft()), (r = a.insertIndex);
          }
        }
        return { insertText: i, insertIndex: r };
      }
      getInsertTextForProperty(e, t, n, r, i = this.indentation) {
        const a = this.getInsertTextForValue(e, ''),
          o = a + ':';
        let s,
          u = 0;
        if (t) {
          if (Array.isArray(t.defaultSnippets)) {
            if (1 === t.defaultSnippets.length) {
              const e = t.defaultSnippets[0].body;
              cr(e) &&
                (s = this.getInsertTextForSnippetValue(
                  e,
                  '',
                  {
                    newLineFirst: !0,
                    indentFirstObject: !1,
                    shouldIndentWithTab: !1,
                  },
                  1,
                ));
            }
            u += t.defaultSnippets.length;
          }
          if (
            (t.enum &&
              (s ||
                1 !== t.enum.length ||
                (s = ' ' + this.getInsertTextForGuessedValue(t.enum[0], '')),
              (u += t.enum.length)),
            cr(t.default) &&
              (s ||
                (s = ' ' + this.getInsertTextForGuessedValue(t.default, '')),
              u++),
            Array.isArray(t.examples) &&
              t.examples.length &&
              (s ||
                (s =
                  ' ' + this.getInsertTextForGuessedValue(t.examples[0], '')),
              (u += t.examples.length)),
            t.properties)
          )
            return `${o}\n${this.getInsertTextForObject(t, r, i).insertText}`;
          if (t.items)
            return `${o}\n${this.indentation}- ${
              this.getInsertTextForArray(t.items, r, i).insertText
            }`;
          if (0 === u) {
            let e = Array.isArray(t.type) ? t.type[0] : t.type;
            switch (
              (e || (t.properties ? (e = 'object') : t.items && (e = 'array')),
              e)
            ) {
              case 'boolean':
              case 'string':
                s = ' $1';
                break;
              case 'object':
                s = '\n' + this.indentation;
                break;
              case 'array':
                s = `\n${this.indentation}- `;
                break;
              case 'number':
              case 'integer':
                s = ' ${1:0}';
                break;
              case 'null':
                s = ' ${1:null}';
                break;
              default:
                return a;
            }
          }
        }
        return (!s || u > 1) && (s = ' $1'), o + s + r;
      }
      getInsertTextForGuessedValue(e, t) {
        switch (typeof e) {
          case 'object':
            return null === e
              ? '${1:null}' + t
              : this.getInsertTextForValue(e, t);
          case 'string': {
            let n = JSON.stringify(e);
            return (
              (n = n.substr(1, n.length - 2)),
              (n = this.getInsertTextForPlainText(n)),
              '${1:' + n + '}' + t
            );
          }
          case 'number':
          case 'boolean':
            return '${1:' + e + '}' + t;
        }
        return this.getInsertTextForValue(e, t);
      }
      getLabelForValue(e) {
        return e;
      }
      completionHelper(e, t) {
        const n = t.line,
          r = t,
          i = (function(e) {
            const t = [],
              n = e;
            let r = !0;
            for (let e = 0; e < n.length; e++) {
              r && (t.push(e), (r = !1));
              const i = n.charAt(e);
              (r = '\r' === i || '\n' === i),
                '\r' === i &&
                  e + 1 < n.length &&
                  '\n' === n.charAt(e + 1) &&
                  e++;
            }
            return r && n.length > 0 && t.push(n.length), t;
          })(e.getText()),
          a = i[n];
        let o = 0;
        for (
          o = i[n + 1] ? i[n + 1] : e.getText().length;
          o - 1 >= 0 && this.is_EOL(e.getText().charCodeAt(o - 1));

        )
          o--;
        const s = e.getText().substring(a, o);
        if (-1 === s.indexOf(':')) {
          let r = '';
          const o = s.trim();
          return (
            (r =
              0 === o.length || (1 === o.length && '-' === o[0])
                ? e.getText().substring(0, a + s.length) +
                  ('-' !== o[0] || s.endsWith(' ') ? '' : ' ') +
                  'holder:\r\n' +
                  e.getText().substr(i[n + 1] || e.getText().length)
                : e.getText().substring(0, a + s.length) +
                  ':\r\n' +
                  e.getText().substr(i[n + 1] || e.getText().length)),
            { newText: r, newPosition: t }
          );
        }
        return (
          (r.character = r.character - 1),
          { newText: e.getText(), newPosition: r }
        );
      }
      is_EOL(e) {
        return 10 === e || 13 === e;
      }
      setKubernetesParserOption(e, t) {
        for (const n in e) e[n].isKubernetes = t;
      }
    }
    function cr(e) {
      return void 0 !== e;
    }
    class lr {
      constructor(e, t) {
        (this.promise = t || Promise),
          (this.shouldHover = !0),
          (this.jsonHover = new nn(e, [], Promise));
      }
      configure(e) {
        e && (this.shouldHover = e.hover);
      }
      doHover(e, t) {
        if (!this.shouldHover || !e) return this.promise.resolve(void 0);
        const n = Xn(e.getText()),
          r = $n(e.offsetAt(t), n);
        if (null === r) return this.promise.resolve(void 0);
        const i = n.documents.indexOf(r);
        return (r.currentDocIndex = i), this.jsonHover.doHover(e, t, r);
      }
    }
    var pr = function(e, t, n, r) {
      return new (n || (n = Promise))(function(i, a) {
        function o(e) {
          try {
            u(r.next(e));
          } catch (e) {
            a(e);
          }
        }
        function s(e) {
          try {
            u(r.throw(e));
          } catch (e) {
            a(e);
          }
        }
        function u(e) {
          var t;
          e.done
            ? i(e.value)
            : ((t = e.value),
              t instanceof n
                ? t
                : new n(function(e) {
                    e(t);
                  })).then(o, s);
        }
        u((r = r.apply(e, t || [])).next());
      });
    };
    const fr = (e, t) => {
      const n = {
        start: t.positionAt(e.location.start),
        end: t.positionAt(e.location.end),
      };
      return { message: e.message, range: n, severity: e.severity };
    };
    class hr {
      constructor(e, t) {
        (this.MATCHES_MULTIPLE =
          'Matches multiple schemas when only one must validate.'),
          (this.promise = t || Promise),
          (this.validationEnabled = !0),
          (this.jsonValidation = new on(e, this.promise));
      }
      configure(e) {
        e &&
          ((this.validationEnabled = e.validate),
          (this.customTags = e.customTags));
      }
      doValidation(e, t = !1) {
        return pr(this, void 0, void 0, function*() {
          if (!this.validationEnabled) return this.promise.resolve([]);
          const n = Xn(e.getText(), this.customTags),
            r = [];
          let i = 0;
          for (const a of n.documents) {
            (a.isKubernetes = t), (a.currentDocIndex = i);
            const n = yield this.jsonValidation.doValidation(e, a),
              o = a;
            o.errors.length > 0 && r.push(...o.errors),
              o.warnings.length > 0 && r.push(...o.warnings),
              r.push(...n),
              i++;
          }
          const a = new Set(),
            o = [];
          for (let n of r) {
            if (t && n.message === this.MATCHES_MULTIPLE) continue;
            Object.prototype.hasOwnProperty.call(n, 'location') &&
              (n = fr(n, e));
            const r =
              n.range.start.line +
              ' ' +
              n.range.start.character +
              ' ' +
              n.message;
            a.has(r) || (o.push(n), a.add(r));
          }
          return o;
        });
      }
    }
    var dr = n(29),
      mr = n(30);
    class gr {
      constructor() {
        this.formatterEnabled = !0;
      }
      configure(e) {
        e && (this.formatterEnabled = e.format);
      }
      format(e, t) {
        if (!this.formatterEnabled) return [];
        try {
          const n = e.getText(),
            a = {
              parser: 'yaml',
              plugins: [mr],
              tabWidth: t.tabWidth || t.tabSize,
              singleQuote: t.singleQuote,
              bracketSpacing: t.bracketSpacing,
              proseWrap:
                'always' === t.proseWrap
                  ? 'always'
                  : 'never' === t.proseWrap
                  ? 'never'
                  : 'preserve',
              printWidth: t.printWidth,
            },
            o = dr.format(n, a);
          return [
            y.replace(i.create(r.create(0, 0), e.positionAt(n.length)), o),
          ];
        } catch (e) {
          return [];
        }
      }
    }
    function yr(e, t) {
      const n = Xn(e.getText()),
        r = $n(e.offsetAt(t), n);
      if (null === r) return Promise.resolve([]);
      const i = n.documents.indexOf(r);
      return (r.currentDocIndex = i), Cn(e, t, r);
    }
    let vr;
    'undefined' != typeof fetch &&
      (vr = function(e) {
        return fetch(e).then(e => e.text());
      });
    class Dr {
      constructor(e, t) {
        const n = t.prefix || '';
        (this._ctx = e),
          (this._languageSettings = t.languageSettings),
          (this._languageId = t.languageId),
          (this._languageService = (function(e, t, n, r) {
            const i = r || Promise,
              a = new er(e, t),
              o = new ur(a, n, i),
              s = new lr(a, i),
              u = new nr(a),
              c = new hr(a, i),
              l = new gr();
            return {
              configure: e => {
                a.clearExternalSchemas(),
                  e.schemas &&
                    e.schemas.forEach(e => {
                      a.registerExternalSchema(e.uri, e.fileMatch, e.schema);
                    }),
                  c.configure(e),
                  s.configure(e);
                const t = e && e.customTags ? e.customTags : [];
                o.configure(e, t), l.configure(e);
              },
              registerCustomSchemaProvider: e => {
                a.registerCustomSchemaProvider(e);
              },
              findDefinition: yr,
              doComplete: o.doComplete.bind(o),
              doResolve: o.doResolve.bind(o),
              doValidation: c.doValidation.bind(c),
              doHover: s.doHover.bind(s),
              findDocumentSymbols: u.findDocumentSymbols.bind(u),
              findDocumentSymbols2: u.findHierarchicalDocumentSymbols.bind(u),
              resetSchema: e => a.onResourceChange(e),
              doFormat: l.format.bind(l),
              addSchema: (e, t) => a.saveSchema(e, t),
              deleteSchema: e => a.deleteSchema(e),
              modifySchemaContent: e => a.addContent(e),
              deleteSchemaContent: e => a.deleteContent(e),
            };
          })(t.enableSchemaRequest && (e => vr(`${n}${e}`)), null, [])),
          (this._isKubernetes = t.isKubernetes || !1),
          this._languageService.configure(
            Object.assign(Object.assign({}, this._languageSettings), {
              hover: !0,
              isKubernetes: this._isKubernetes,
            }),
          );
      }
      doValidation(e) {
        const t = this._getTextDocument(e);
        return t
          ? this._languageService.doValidation(t, this._isKubernetes)
          : Promise.resolve([]);
      }
      doComplete(e, t) {
        const n = this._getTextDocument(e);
        return this._languageService.doComplete(n, t, this._isKubernetes);
      }
      doResolve(e) {
        return this._languageService.doResolve(e);
      }
      doHover(e, t) {
        const n = this._getTextDocument(e);
        return this._languageService.doHover(n, t);
      }
      format(e, t, n) {
        const r = this._getTextDocument(e),
          i = this._languageService.doFormat(r, n);
        return Promise.resolve(i);
      }
      resetSchema(e) {
        return Promise.resolve(this._languageService.resetSchema(e));
      }
      findDocumentSymbols(e) {
        const t = this._getTextDocument(e),
          n = this._languageService.findDocumentSymbols2(t);
        return Promise.resolve(n);
      }
      _getTextDocument(e) {
        const t = this._ctx.getMirrorModels();
        for (const n of t)
          if (n.uri.toString() === e)
            return Q.create(e, this._languageId, n.version, n.getValue());
        return null;
      }
    }
    self.onmessage = () => {
      x.initialize((e, t) => new Dr(e, t));
    };
  },
]);
