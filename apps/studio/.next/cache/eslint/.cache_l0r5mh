[{"/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/app/layout.tsx":"1","/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/app/page.tsx":"2","/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/components/Editor/CodeMirror.tsx":"3","/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/components/Editor/Editor.tsx":"4","/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/state/files.state.ts":"5"},{"size":935,"mtime":1710522578771,"results":"6","hashOfConfig":"7"},{"size":186,"mtime":1710393470094,"results":"8","hashOfConfig":"7"},{"size":2468,"mtime":1710393470095,"results":"9","hashOfConfig":"7"},{"size":542,"mtime":1710393470095,"results":"10","hashOfConfig":"7"},{"size":7371,"mtime":1710393470095,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"45wfz2",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/app/layout.tsx",[],["28"],"/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/app/page.tsx",[],[],"/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/components/Editor/CodeMirror.tsx",[],[],"/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/components/Editor/Editor.tsx",["29"],[],"'use client'\n\nimport { useFilesState } from '@/state/files.state';\nimport { CodeMirror } from './CodeMirror';\n\ninterface IEditorProps {}\n\nexport const Editor = (props: IEditorProps) => {\n  const { language, content } = useFilesState(state => state.files['asyncapi']);\n  const handleUpdateFile = useFilesState(state => state.updateFile);\n\n  return (\n    <div className=\"flex flex-1 overflow-hidden\">\n      <CodeMirror language={language} value={content} onChange={value => handleUpdateFile('asyncapi', { content: value })} />\n    </div>\n  );\n}","/Users/tihom4537/Desktop/asyncApi/studio/apps/studio-next/src/state/files.state.ts",[],[],{"ruleId":"30","severity":2,"message":"31","line":18,"column":13,"nodeType":"32","messageId":"33","endLine":18,"endColumn":18,"suppressions":"34"},{"ruleId":"35","severity":1,"message":"36","line":8,"column":24,"nodeType":"32","messageId":"37","endLine":8,"endColumn":43},"no-undef","'React' is not defined.","Identifier","undef",["38"],"@typescript-eslint/no-unused-vars","'props' is defined but never used.","unusedVar",{"kind":"39","justification":"40"},"directive",""]