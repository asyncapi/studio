{"@asyncapi/dotnet-nats-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{},"required":[],"additionalProperties":false},"@asyncapi/go-watermill-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"moduleName":{"type":"string","default":"go-async-api","description":"name of the go module to be generated"}},"required":[],"additionalProperties":false},"@asyncapi/html-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"sidebarOrganization":{"type":"string","description":"Defines how the sidebar should be organized. 'byTags' to categorize operations by tags in the root of the document, `byTagsNoRoot` does the same but for pub/sub tags."},"baseHref":{"type":"string","description":"Sets the base URL for links and forms."},"version":{"type":"string","description":"Override the version of your application provided under `info.version` location in the specification file."},"outFilename":{"type":"string","default":"index.html","description":"The name of the output HTML file"},"pdf":{"type":"boolean","default":false,"description":"Set to `true` to get index.pdf generated next to your index.html"}},"required":[],"additionalProperties":false},"@asyncapi/java-spring-cloud-stream-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"actuator":{"type":"boolean","default":false,"description":"If present, it adds the dependencies for spring-boot-starter-web, spring-boot-starter-actuator and micrometer-registry-prometheus."},"artifactId":{"type":"string","default":"project-name","description":"The Maven artifact id. Alternatively you can set the specification extension info.x-artifact-id"},"artifactType":{"type":"string","default":"application","description":"The type of project to generate, application or library. The default is application. When generating an application, the pom.xml file will contain the complete set of dependencies required to run an app, and it will contain an Application class with a main function. Otherwise the pom file will include only the dependencies required to compile a library."},"binder":{"type":"string","default":"kafka","description":"The name of the binder implementation, one of kafka, rabbit or solace. Default: kafka. If you need other binders to be supported, please let us know!"},"dynamicType":{"type":"string","default":"streamBridge","description":"When using channels with parameters, i.e. dynamic topics where the topic could be different for each message, this determines whether to use the StreamBridge or a message header. StreamBridge can be used with all binders, but some binders such as Solace can use the topic set in a header for better performance. Possible values are streamBridge and header. Default is streamBridge."},"groupId":{"type":"string","default":"com.company","description":"The Maven group id. Alternatively you can set the specification extension info.x-group-id"},"host":{"type":"string","default":"tcp://localhost:55555","description":"The host connection property. Currently this only works with the Solace binder. Example: tcp://myhost.com:55555."},"javaPackage":{"type":"string","description":"The Java package of the generated classes. Alternatively you can set the specification extension info.x-java-package"},"msgVpn":{"type":"string","default":"default","description":"The message vpn connection property. Currently this only works with the Solace binder."},"parametersToHeaders":{"type":"boolean","default":false,"description":"If true, this will create headers on the incoming messages for each channel parameter. Currently this only works with messages originating from Solace (using the solace_destination header) and RabbitMQ (using the amqp_receivedRoutingKey header.)"},"password":{"type":"string","default":"default","description":"The client password connection property. Currently this only works with the Solace binder."},"reactive":{"type":"boolean","default":false,"description":"If true, this will generate reactive style functions using the Flux class. Defalt: false."},"solaceSpringCloudVersion":{"type":"string","default":"2.1.0","description":"The version of the solace-spring-cloud-bom dependency used when generating an application. Alternatively you can set the specification extension info.x-solace-spring-cloud-version."},"springBootVersion":{"type":"string","default":"2.4.7","description":"The version of Spring Boot used when generating an application. Alternatively you can set the specification extension info.x-spring-booot-version. Example: 2.2.6.RELEASE."},"springCloudVersion":{"type":"string","default":"2020.0.3","description":"The version of the spring-cloud-dependencies BOM dependency used when generating an application. Alternatively you can set the specification extension info.x-spring-cloud-version. Example: Hoxton.RELEASE."},"springCloudStreamVersion":{"type":"string","default":"3.1.3","description":"The version of the spring-cloud-stream dependency specified in the Maven file, when generating a library. When generating an application, the spring-cloud-dependencies BOM is used instead. Example: 3.0.1.RELEASE"},"username":{"type":"string","default":"default","description":"The client username connection property. Currently this only works with the Solace binder"},"view":{"type":"string","default":"client","description":"The view that the template uses. By default it is the client view, which means that when the document says publish, we subscribe. In the case of the provider view, when the document says publish, we publish. Values are client or provider. The default is client."},"useServers":{"type":"string","description":"This option works when binder is kafka. By default it is set to false. When set to true, it will concatenate all the urls in the servers section as a list of brokers for kafka."}},"required":[],"additionalProperties":false},"@asyncapi/java-spring-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"inverseOperations":{"type":"boolean","default":false,"description":"Generate application that will publish messages to `publish` operation of channels and read messages from `subscribe` operation of channels. Literally this flag just swap `publish` and `subscribe` operations in channels."},"disableEqualsHashCode":{"type":"boolean","default":false,"description":"Disable generation of equals and hashCode methods for model classes."},"listenerPollTimeout":{"type":"number","default":3000,"description":"Only for Kafka. Timeout to use when polling the consumer."},"listenerConcurrency":{"type":"number","default":3,"description":"Only for Kafka. Number of threads to run in the listener containers."},"connectionTimeout":{"type":"number","default":30,"description":"Only for MQTT. This value, measured in seconds, defines the maximum time interval the client will wait for the network connection to the MQTT server to be established. The default timeout is 30 seconds. A value of 0 disables timeout processing meaning the client will wait until the network connection is made successfully or fails."},"disconnectionTimeout":{"type":"number","default":5000,"description":"Only for MQTT. The completion timeout in milliseconds when disconnecting. The default disconnect completion timeout is 5000 milliseconds."},"completionTimeout":{"type":"number","default":30000,"description":"Only for MQTT. The completion timeout in milliseconds for operations. The default completion timeout is 30000 milliseconds."},"asyncapiFileDir":{"type":"string","default":"src/main/resources/api/","description":"Parameter of @asyncapi/generator-hooks#createAsyncapiFile, allows to specify where original AsyncAPI file will be stored."},"javaPackage":{"type":"string","default":"com.asyncapi","description":"The Java package of the generated classes. Alternatively you can set the specification extension info.x-java-package"},"addTypeInfoHeader":{"type":"boolean","default":true,"description":"Only for Kafka. Add type information to the message header"}},"required":[],"additionalProperties":false},"@asyncapi/java-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"server":{"type":"string","description":"The server you want to use in the code."},"asyncapiFileDir":{"type":"string","description":"Custom location of the AsyncAPI file that you provided as an input in generation. By default it is located in the root of the output directory"},"user":{"type":"string","default":"app","description":"Username for the server to generate code for"},"password":{"type":"string","default":"passw0rd","description":"Password for the server to generate code for"},"package":{"type":"string","default":"com.ibm.mq.samples.jms","description":"Java package name for generated code"},"mqTopicPrefix":{"type":"string","default":"dev//","description":"MQ topic prefix. Used for ibmmq protocols. Default will work with dev MQ instance"}},"required":["server"],"additionalProperties":false},"@asyncapi/markdown-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"frontMatter":{"type":"string","description":"The name of a JSON or YAML formatted file containing values to provide the YAML frontmatter for static-site or documentation generators. The file may contain {{title}} and {{version}} replaceable tags."},"outFilename":{"type":"string","default":"asyncapi.md","description":"The name of the output markdown file"},"toc":{"type":"boolean","default":true,"description":"Include a Table-of-Contents in the output markdown."},"version":{"type":"string","description":"Override the version of your application provided under `info.version` location in the specification file."}},"required":[],"additionalProperties":false},"@asyncapi/nodejs-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"server":{"type":"string","description":"The server you want to use in the code."},"asyncapiFileDir":{"type":"string","description":"Custom location of the AsyncAPI file that you provided as an input in generation. By default it is located in the root of the output directory"},"securityScheme":{"type":"string","description":"Name of the security scheme. Only scheme with X509 and Kafka protocol is supported for now."},"certFilesDir":{"type":"string","default":"./","description":"Directory where application certificates are located. This parameter is needed when you use X509 security scheme and your cert files are not located in the root of your application."}},"required":["server"],"additionalProperties":false},"@asyncapi/nodejs-ws-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"server":{"type":"string","description":"The server you want to use in the code."},"asyncapiFileDir":{"type":"string","description":"Custom location of the AsyncAPI file that you provided as an input in generation. By default it is located in the root of the output directory"}},"required":["server"],"additionalProperties":false},"@asyncapi/python-paho-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"view":{"type":"string","description":"The view that the template uses. By default it is the client view, which means that when the document says publish, we subscribe. In the case of the provider view, when the document says publish, we publish. Values are client or provider. The default is client."}},"required":[],"additionalProperties":false},"@asyncapi/ts-nats-template":{"$schema":"http://json-schema.org/draft-07/schema#","type":"object","properties":{"generateTestClient":{"type":"boolean","default":false,"description":"Generate the test client"},"promisifyReplyCallback":{"type":"boolean","default":false,"description":"Use promises as callbacks for reply operation"}},"required":[],"additionalProperties":false}}